N Planarity.properties_fully_surrounded
C |- (!x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f3 creal_lt cazim f0 f4 f5 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D AZIM_EQ_0_PI_EQ_COPLANAR
A |- (!v0. (!v1. (!w1. (!w2. (((~ (collinear (v0 INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (w2 INSERT EMPTY)))))) ==> (((((((azim v0) v1) w1) w2) = (real_of_num (NUMERAL _0))) \/ (((((azim v0) v1) w1) w2) = pi)) = (coplanar (v0 INSERT (v1 INSERT (w1 INSERT (w2 INSERT EMPTY)))))))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c= c\/ c= cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c= cazim f0 f1 f2 f3 cpi ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D Fan.remark1_fan
A |- (!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (v IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f3 * * * part cset_of_edge f4 f1 f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (w INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)
T * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (((x' = u) \/ (x' = w)) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c==> c\/ c= f0 f3 c= f0 f4 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!u. ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)) ==> ((\u. ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)) u)) = ((\u. ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)) u))
T c= c==> ! c==> c~ ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cF * / c==> c~ ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cF f1 * / c==> c~ ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cF f1
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (u IN V)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f4 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f5
+ (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (~ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))))
T c==> cFAN c, f0 c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f3 f4 f5 c==> creal_lt cazim f0 f3 f4 f5 cpi c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- (x' = x), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (x = w))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c~ c= f1 f4
+ (~ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))))) |- ((~ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))))) /\ F)
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c/\ c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (x = v), (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- ((v = v) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c==> c= f1 f1 cF
- (x' = w) |- ((~ (x' = v)) = (~ (w = v)))
T c==> c= f0 f1 c= c~ c= f0 f2 c~ c= f1 f2
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY)))))) ==> (((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w) v) = pi)) = (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c\/ c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 c= cazim f0 f1 f3 f2 cpi ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (FINITE (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cFINITE * * * part cset_of_edge f4 f1 f2
+ (x' = v), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((x' = v) /\ F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c/\ c= f0 f1 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (v IN (aff (x INSERT (u INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ (x' = w), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((w = w) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c==> c= f1 f1 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (w = w)) ==> (w = w))
T c==> c~ c= f0 f0 c= f0 f0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
- |- (((((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)) ==> (((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F))) = (((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- (x' = v), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (v = w))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c~ c= f1 f4
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- (x = u), (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- (~ (u = v))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c\/ c= f0 f1 c= f0 f2 c~ c= f1 f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (FAN (x , (V , E))), (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi)), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f3 f4 f5 creal_lt cazim f0 f3 f4 f5 cpi c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f3 f4 f5 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c~ ccoplanar * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- ((\v'. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v') V) E)) /\ ((((v' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge v') V) E))) /\ (((v' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) /\ ((~ (x = v')) /\ ((~ (x = v)) /\ ((~ (v' = v)) /\ (((DISJOINT (x INSERT (v' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (v' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (v' INSERT EMPTY))))) /\ ((v' IN V) /\ ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (v' INSERT EMPTY)))))))))))))))))))) u)
T * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f5
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f5
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (x' = x), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (x = u))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c~ c= f1 f3
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (w IN (aff (x INSERT (u INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (FINITE (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cFINITE * * * part cset_of_edge f4 f1 f2
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v INSERT (u INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) = ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (x' = u), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (u = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c~ c= f0 f3 c~ c= f1 f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
+ (x = v), (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- (~ (v = v))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c~ c= f1 f1
+ (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> cFAN c, f0 c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f3 f4 f5 c==> creal_lt cazim f0 f3 f4 f5 cpi c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c~ ccoplanar * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F)))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f5 * * * part cset_of_edge f1 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f1 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f5 f2 cpi cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN f1 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f5 * * * part cset_of_edge f1 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f1 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f5 f2 creal_of_num cNUMERAL c_0 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (x' = u), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f3 c==> c~ cF cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f3
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- ((!v. (!u. (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v)))))) = (!v. (!u. ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F))))
T c= ! ! ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 ! ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (~ ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w) v) = pi)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c~ c\/ c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 c= cazim f0 f1 f3 f2 cpi
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- F
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c/\ cFINITE * * * part cset_of_edge f1 f4 f5 c/\ cIN f3 * * * part cset_of_edge f1 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f1 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c==> creal_lt cazim f0 f1 f2 f3 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 cF
- (x' = w), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (w = v))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f3
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- ((!x. (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) = T)
T c= ! ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cT
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cF
+ (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- ((x = u) ==> F)
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c= f0 f2 cF
+ |- (((~ (((x = v) \/ (x = u)) = ((x = u) \/ (x = v)))) ==> F) = (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))
T c= c==> c~ c= c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f2 c= f0 f1 cF c= c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f2 c= f0 f1
+ |- (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) ==> F)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f5
+ (x = u), (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c\/ c= f0 f1 c= f0 f2 cF
+ (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- F
T c==> cFINITE * * * part cset_of_edge f0 f1 f2 c==> ccoplanar * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cFAN c, f3 c, f1 f2 c==> c/\ cFINITE * * * part cset_of_edge f0 f1 f2 c/\ cIN f5 * * * part cset_of_edge f0 f1 f2 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ c~ c= f3 f0 c/\ c~ c= f3 f5 c/\ c~ c= f0 f5 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f1 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f3 f0 f4 f5 c==> creal_lt cazim f3 f0 f4 f5 cpi c==> cIN * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f2 c==> cIN * * part cINSERT f0 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f0 part cEMPTY f2 cF
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w) v) = pi)), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w) v) = pi)) /\ F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c\/ c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 c= cazim f0 f1 f3 f2 cpi c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c\/ c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 c= cazim f0 f1 f3 f2 cpi cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (((u INSERT (v INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge u) V) E)) ==> ((v IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) ==> ((~ (x = u)) ==> ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F)))))))))))))))))))))))
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c==> creal_lt cazim f0 f1 f2 f3 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f1 f3 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f1 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 cF
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (((v INSERT (u INSERT EMPTY)) IN E) ==> F)
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c==> creal_lt cazim f0 f1 f2 f3 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))), ((x' = x) ==> F), (((x' = v) \/ ((x' = u) \/ (x' = w))) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c==> c==> c= f0 f1 cF c==> c==> c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF cF
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((x' = v) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c==> c= f0 f2 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) |- ((((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ c~ c= f0 f3 c/\ c~ c= f1 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((!x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))), ((x' = v) \/ ((x' = u) \/ (x' = w))) |- (((x' = v) \/ ((x' = u) \/ (x' = w))) /\ F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c==> c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((\x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (~ ((u INSERT (v INSERT EMPTY)) IN E))
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c==> creal_lt cazim f0 f1 f2 f3 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 c~ cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) |- ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) /\ F)
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 c/\ c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ |- (((!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) ==> ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) v)) = ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) v))
T c= c==> ! ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3 * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (FAN (x , (V , E))), ((v INSERT (u INSERT EMPTY)) IN E) |- (((u INSERT (w INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) ==> (((real_lt ((((azim x) u) w) v)) pi) ==> ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) ==> (((u INSERT (v INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge u) V) E)) ==> ((v IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) ==> ((~ (x = u)) ==> ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F)))))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f3 c==> creal_lt cazim f0 f4 f5 f3 cpi c==> ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f4 f1 f2 c==> cIN f3 * * * part cset_of_edge f4 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f4 c==> c~ c= f0 f3 c==> c~ c= f4 f3 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> cIN f4 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> cIN f5 * * * part cset_of_edge f4 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f4 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f3
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- F
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c==> creal_lt cazim f0 f1 f2 f3 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 cF
+ (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- (~ (x = v))
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f0 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (w INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- ((!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))) = T)
T c= ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b0 b1 f3 creal_lt cazim f0 b0 b1 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cT
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) |- ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) = T)
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- (~ (x = v))
T c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c~ c= f0 f1
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (~ F), (x = u), (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c\/ c= f0 f1 c= f0 f2 c/\ c~ cF cF
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c~ c= f1 f3 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 cF
+ |- ((!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))))))) = T)
T c= ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 b1 creal_lt cazim f0 b2 b3 b1 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cT
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ cIN f5 * * * part cset_of_edge f1 f3 f4 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f1 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f1 f3 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cIN f5 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (~ F), (x = u), (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f1 c~ c= f0 f2 c/\ c~ cF cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (collinear (x INSERT (u INSERT (w INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = u))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f4
+ |- (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) ==> F)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- (((!w. (!u. (!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)))) ==> ((\w. (!u. (!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)))) w)) = ((\w. (!u. (!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)))) w))
T c= c==> ! ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 f0 c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 f0 c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1 * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 f0 c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- |- (((!v. (!u. ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F))) ==> ((\v. (!u. ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F))) v)) = ((\v. (!u. ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F))) v))
T c= c==> ! ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF * / ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF f0 * / ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF f0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- ((!w. t) = t)
T c= ! f0 f0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- (((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))))) /\ F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ cIN f5 * * * part cset_of_edge f1 f3 f4 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f1 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f1 f3 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c/\ cIN f5 * * * part cset_of_edge f1 f3 f4 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f1 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (v IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f3 * * * part cset_of_edge f4 f1 f2
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((FINITE (((set_of_edge u) V) E)) ==> ((v IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) ==> ((~ (x = u)) ==> ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F))))))))))))))))))))))
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c==> creal_lt cazim f0 f1 f2 f3 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f1 f3 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f1 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (u IN V)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f4 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (FINITE (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cFINITE * * * part cset_of_edge f4 f1 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (FAN (x , (V , E))), (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi)))) |- (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f3 creal_lt cazim f0 f4 f5 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY
+ (x = v), (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- ((x = v) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c/\ c= f0 f1 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (w IN (aff (x INSERT (u INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))), ((x' = u) \/ ((x' = w) \/ (x' = v))) |- (((x' = u) \/ ((x' = w) \/ (x' = v))) /\ F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c/\ c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f5
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (FINITE (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cFINITE * * * part cset_of_edge f4 f1 f2
+ |- (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) ==> F)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- (((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f1 f3 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ cIN f5 * * * part cset_of_edge f1 f3 f4 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f1 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (v IN (aff (x INSERT (u INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f3
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- ((!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v)))) = T)
T c= ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cT
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (w IN (aff (x INSERT (u INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))))
T c= creal_gt cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (u IN V) |- ((u IN V) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- ((x = u) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c==> c= f0 f2 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) |- (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) /\ (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f3 creal_lt cazim f0 f4 f5 f3 cpi c/\ c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f3 creal_lt cazim f0 f4 f5 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (w IN (aff (x INSERT (u INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (x = u)), (~ (x = v)), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 cF
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (x' = w))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c~ c= f0 f4
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (x' = v), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (v = u))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c~ c= f1 f3
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY
+ (x = u), (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- ((u = u) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c= f1 f1 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (x = v), (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- (~ (v = u))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c~ c= f1 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- ((\u. (!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))) u)
T * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 b0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (v INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 cF
- (x' = w), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (w = v))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f3
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- ((((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))) = T)
T c= c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f3 creal_lt cazim f0 f4 f5 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cT
+ (x' = w), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 cF
- (~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) |- F
T c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) /\ F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (x = u)), (~ (x = v)), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) /\ F)
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f2 f3 f1 c==> creal_lt cazim f0 f2 f3 f1 cpi c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = u))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f4
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (v INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2
+ (x' = u), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f3 cF
+ (FAN (x , (V , E))), ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) |- (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f3 creal_lt cazim f0 f4 f5 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- ((((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 cF
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))), (((x' = u) \/ (x' = w)) ==> F), ((x' = v) \/ ((x' = u) \/ (x' = w))) |- F
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c==> c==> c\/ c= f0 f3 c= f0 f4 cF c==> c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF
+ (x' = w), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (w = w))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f1
+ (FAN (x , (V , E))), (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi)), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f3 f4 f5 creal_lt cazim f0 f3 f4 f5 cpi c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c~ ccoplanar * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v INSERT (u INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f1 f3 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cIN f5 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f1 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f5 f2 cpi cF
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((~ (x' = w)) /\ (~ (x' = v)))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c/\ c~ c= f0 f4 c~ c= f0 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (x' = x), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((x = x) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c==> c= f1 f1 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (x = v), (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f3
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (x' = w), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((x' = w) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c/\ c= f0 f1 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f5
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (u IN V)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f4 f1
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))), ((x' = x) ==> F), (((x' = u) \/ ((x' = w) \/ (x' = v))) ==> F) |- F
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c==> c= f0 f1 cF c==> c==> c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 cF cF
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((FINITE (((set_of_edge u) V) E)) ==> ((v IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) ==> ((~ (x = u)) ==> ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F))))))))))))))))))))))
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c==> creal_lt cazim f0 f1 f2 f3 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f1 f3 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f1 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f2 f3 cpi cF
+ (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (((real_lt ((((azim x) u) w) v)) pi) ==> ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) ==> (((u INSERT (v INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge u) V) E)) ==> ((v IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) ==> ((~ (x = u)) ==> ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F)))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f3 f4 f5 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c==> creal_lt cazim f0 f3 f4 f5 cpi c==> ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cIN f5 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f5 c==> c~ c= f3 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f3 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= cazim f0 f3 f4 f5 creal_of_num cNUMERAL c_0 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (w IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f5 * * * part cset_of_edge f4 f1 f2
+ (x' = w), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((x' = w) /\ F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c/\ c= f0 f1 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (FAN (x , (V , E))), (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi)))), ((v INSERT (u INSERT EMPTY)) IN E) |- (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f3 creal_lt cazim f0 f4 f5 f3 cpi c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f5
+ (~ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))))) |- ((((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) \/ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c\/ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f3
+ (~ (((x = v) \/ (x = u)) = ((x = u) \/ (x = v)))) |- ((((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) \/ (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))))
T c==> c~ c= c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f2 c= f0 f1 c\/ c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- (~ (u = w)) |- (((~ (w = u)) ==> ((w = u) = F)) = ((w = u) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((\x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- (!x'. ((x' IN (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) = (x' IN (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))))
T c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f1 f3 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN f5 * * * part cset_of_edge f1 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f1 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f5 f2 creal_of_num cNUMERAL c_0 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))), (((x' = w) \/ (x' = v)) ==> F), ((x' = u) \/ ((x' = w) \/ (x' = v))) |- F
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c==> c\/ c= f0 f4 c= f0 f2 cF c==> c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 cF
+ |- (((!v'. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v') V) E)) /\ ((((v' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge v') V) E))) /\ (((v' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) /\ ((~ (x = v')) /\ ((~ (x = v)) /\ ((~ (v' = v)) /\ (((DISJOINT (x INSERT (v' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (v' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (v' INSERT EMPTY))))) /\ ((v' IN V) /\ ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (v' INSERT EMPTY)))))))))))))))))))) ==> ((\v'. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v') V) E)) /\ ((((v' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge v') V) E))) /\ (((v' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) /\ ((~ (x = v')) /\ ((~ (x = v)) /\ ((~ (v' = v)) /\ (((DISJOINT (x INSERT (v' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (v' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (v' INSERT EMPTY))))) /\ ((v' IN V) /\ ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (v' INSERT EMPTY)))))))))))))))))))) u)) = ((\v'. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v') V) E)) /\ ((((v' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge v') V) E))) /\ (((v' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) /\ ((~ (x = v')) /\ ((~ (x = v)) /\ ((~ (v' = v)) /\ (((DISJOINT (x INSERT (v' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (v' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (v' INSERT EMPTY))))) /\ ((v' IN V) /\ ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (v' INSERT EMPTY)))))))))))))))))))) u))
T c= c==> ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4 * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (collinear (x INSERT (u INSERT (v INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) ==> F)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cF
- ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F), (((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)) |- ((((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)) /\ ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (x = v), (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- ((x = v) /\ F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c/\ c= f0 f1 cF
+ |- ((~ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))))) ==> F)
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (x = v), (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- (~ (v = v))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f1 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (FINITE (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cFINITE * * * part cset_of_edge f4 f1 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) = ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge u) V) E)) /\ ((((u INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge u) V) E))) /\ (((u INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))))) ==> F)
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c==> creal_lt cazim f0 f1 f2 f3 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 c==> c==> cFAN c, f0 c, f4 f5 c/\ cFINITE * * * part cset_of_edge f1 f4 f5 c/\ c= cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f1 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (!x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (~ F), (x' = x), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c/\ c~ cF cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v INSERT (u INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (x' = x), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (x = v))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c~ c= f1 f2
- (x' = x), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (x = w))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c~ c= f1 f4
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (w IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f5 * * * part cset_of_edge f4 f1 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((!x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (u IN V)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f4 f1
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x' = v), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c==> c~ cF cF
+ (x = u), (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- ((x = u) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c\/ c= f0 f1 c= f0 f2 c/\ c= f0 f1 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (v IN (aff (x INSERT (u INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (FAN (x , (V , E))), (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f3 f4 f5 creal_lt cazim f0 f3 f4 f5 cpi c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c~ ccoplanar * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))), ((x' = v) ==> F), ((x' = w) \/ (x' = v)) |- F
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c==> c= f0 f2 cF c==> c\/ c= f0 f4 c= f0 f2 cF
+ |- (((~ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))))) ==> F) = (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))
T c= c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 cF c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 cF
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (u IN V)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f4 f1
+ |- (((w = w) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) /\ F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c/\ c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((x' = w) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c==> c= f0 f4 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f5
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((x' = v) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c= f0 f2 cF
+ (x' = v), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (v = v))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c~ c= f1 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- (x' = u), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (u = v))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f3 c~ c= f1 f3
+ (x' = w), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 cF
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f1 f3 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (w IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f5 * * * part cset_of_edge f4 f1 f2
- (~ F), (x' = x), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c/\ c~ cF cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- ((\w2. (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (collinear (x INSERT (u INSERT (w2 INSERT EMPTY)))))) ==> (((((((azim x) u) w) w2) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w) w2) = pi)) = (coplanar (x INSERT (u INSERT (w INSERT (w2 INSERT EMPTY)))))))) v)
T * / c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= c\/ c= cazim f0 f1 f2 b0 creal_of_num cNUMERAL c_0 c= cazim f0 f1 f2 b0 cpi ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (w IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f5 * * * part cset_of_edge f4 f1 f2
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f1 f3 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cIN f5 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f1 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f5 f2 creal_of_num cNUMERAL c_0 cF
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = u))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f4
- |- (((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) = (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v)))))
T c= c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f3
+ |- (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) ==> F)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- (((!v0. (!v1. (!w1. (!w2. (((~ (collinear (v0 INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (w2 INSERT EMPTY)))))) ==> (((((((azim v0) v1) w1) w2) = (real_of_num (NUMERAL _0))) \/ (((((azim v0) v1) w1) w2) = pi)) = (coplanar (v0 INSERT (v1 INSERT (w1 INSERT (w2 INSERT EMPTY))))))))))) ==> ((\v0. (!v1. (!w1. (!w2. (((~ (collinear (v0 INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (w2 INSERT EMPTY)))))) ==> (((((((azim v0) v1) w1) w2) = (real_of_num (NUMERAL _0))) \/ (((((azim v0) v1) w1) w2) = pi)) = (coplanar (v0 INSERT (v1 INSERT (w1 INSERT (w2 INSERT EMPTY))))))))))) x)) = ((\v0. (!v1. (!w1. (!w2. (((~ (collinear (v0 INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (w2 INSERT EMPTY)))))) ==> (((((((azim v0) v1) w1) w2) = (real_of_num (NUMERAL _0))) \/ (((((azim v0) v1) w1) w2) = pi)) = (coplanar (v0 INSERT (v1 INSERT (w1 INSERT (w2 INSERT EMPTY))))))))))) x))
T c= c==> ! ! ! ! c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c= c\/ c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 c= cazim b0 b1 b2 b3 cpi ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c= c\/ c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 c= cazim b0 b1 b2 b3 cpi ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / ! ! ! c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c= c\/ c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 c= cazim b0 b1 b2 b3 cpi ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (w INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (u IN V)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f4 f1
+ |- ((!x. ((x IN (v INSERT (u INSERT EMPTY))) = (x IN (u INSERT (v INSERT EMPTY))))) = ((v INSERT (u INSERT EMPTY)) = (u INSERT (v INSERT EMPTY))))
T c= ! c= cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- ((!u. (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) = T)
T c= ! ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cT
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) ==> F)
T c==> cFAN c, f0 c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f3 f4 f5 c==> creal_lt cazim f0 f3 f4 f5 cpi c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 cF
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)) |- ((~ (x = u)) ==> ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F)))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f1 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f5 * * * part cset_of_edge f1 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f1 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f5 f2 cpi cF
+ (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- ((x = v) ==> F)
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c= f0 f1 cF
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ c~ c= f1 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (x' = u), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (u = w))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c~ c= f0 f3 c~ c= f1 f4
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (x = u)), (~ (x = v)), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)) |- ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F)))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> c~ c= f1 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f5 * * * part cset_of_edge f1 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f1 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f5 f2 creal_of_num cNUMERAL c_0 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((\x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = u))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f4
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = u))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f4
- ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F), (((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)) |- (((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) /\ ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- ((x = v) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c==> c= f0 f1 cF
- ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) = T)
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (v IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f3 * * * part cset_of_edge f4 f1 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cF
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (v IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f3 * * * part cset_of_edge f4 f1 f2
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
+ |- (((!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)) = ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V))
T c= c==> ! ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1 * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (x' = w))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c~ c= f0 f4
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (w IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f5 * * * part cset_of_edge f4 f1 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (w INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
+ |- ((((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge u) V) E)) /\ ((((u INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge u) V) E))) /\ (((u INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))))) ==> F) = F)
T c= c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cF cF
+ (~ (x = u)), (FINITE (((set_of_edge u) V) E)), (FAN (x , (V , E))), ((u INSERT (w INSERT EMPTY)) IN E), (u IN V) |- ((~ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))) = (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge u) V) E)) /\ ((((u INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge u) V) E))) /\ (((u INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))))) ==> F))
T c==> c~ c= f0 f1 c==> cFINITE * * * part cset_of_edge f1 f2 f3 c==> cFAN c, f0 c, f2 f3 c==> cIN * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 c==> cIN f1 f2 c= c~ c/\ cIN f4 * * * part cset_of_edge f1 f2 f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f1 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> cFAN c, f0 c, f2 f3 c/\ cFINITE * * * part cset_of_edge f1 f2 f3 c/\ c= cIN * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 cIN f4 * * * part cset_of_edge f1 f2 f3 c==> cIN * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c/\ c~ c= f1 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF
- (w = u) |- (u = w)
T c==> c= f0 f1 c= f1 f0
- (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((((azim x) u) w) v) = pi), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((((azim x) u) w) v) = pi) /\ F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f3 f2 cpi c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c= cazim f0 f1 f3 f2 cpi cF
+ |- ((!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))) = T)
T c= ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 b0 creal_lt cazim f0 b1 b2 b0 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
+ (x' = v), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- ((t = T) = t)
T c= c= f0 cT f0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 cF
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (x' = x))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c~ c= f0 f1
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f1 f3 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f3 f2 cpi cF
+ (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) |- ((~ ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w) v) = pi))) = ((((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY)))))) ==> (((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w) v) = pi)) = (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))))) ==> F))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c~ c\/ c= cazim f1 f2 f3 f0 creal_of_num cNUMERAL c_0 c= cazim f1 f2 f3 f0 cpi c==> c==> c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c= c\/ c= cazim f1 f2 f3 f0 creal_of_num cNUMERAL c_0 c= cazim f1 f2 f3 f0 cpi ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (collinear (x INSERT (u INSERT (v INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
- ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F), (((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)) |- (((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) /\ ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)) |- ((((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)) /\ (((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v INSERT (u INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f3
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((!x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) = ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (x' = u), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((x' = u) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f3 c/\ c= f0 f1 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (((x' = w) \/ (x' = v)) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c\/ c= f0 f4 c= f0 f2 cF
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
- (x' = v), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (v = u))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c~ c= f1 f3
- ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) |- (((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) /\ ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))), ((x = u) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c==> c= f0 f2 cF cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- ((!x'. ((x' IN (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) = (x' IN (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))))) = ((x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))) = (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))))
T c= ! c= cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN f1 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f5 * * * part cset_of_edge f1 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f1 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f5 f2 cpi cF
+ (x' = u), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (u = u))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c~ c= f0 f3 c~ c= f1 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) |- ((((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (x' = v))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c~ c= f0 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))), ((x' = u) \/ (x' = w)) |- (((x' = u) \/ (x' = w)) /\ F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c==> c\/ c= f0 f3 c= f0 f4 c/\ c\/ c= f0 f3 c= f0 f4 cF
- |- ((!u. (!x. (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))))))) = T)
T c= ! ! ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 b0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cT
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (x' = u), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c~ c= f0 f3 c==> c~ cF cF
- |- ((!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))))) = T)
T c= ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cT
+ (x' = u), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c~ c= f0 f3 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (v IN (aff (x INSERT (u INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = u))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f4
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (v INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w) v) = pi)), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c\/ c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 c= cazim f0 f1 f3 f2 cpi c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f3 f2 cpi cF
- (x = u), (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c~ cF cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- ((((x = v) \/ (x = u)) = ((x = u) \/ (x = v))) = T)
T c= c= c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f2 c= f0 f1 cT
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (x' = v), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c==> c~ cF cF
- (x' = w) |- (F = F)
T c==> c= f0 f1 c= cF cF
- |- (((!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)) ==> ((\x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)) x)) = ((\x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)) x))
T c= c==> ! c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cF * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cF f3 * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cF f3
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (x = u)), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)) |- ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> c~ c= f0 f2 c==> c~ c= f1 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f5 * * * part cset_of_edge f1 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f1 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f5 f2 cpi cF
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((x' = u) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c= f0 f3 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((real_lt ((((azim x) u) w) v)) pi) |- (((real_lt ((((azim x) u) w) v)) pi) = T)
T c==> creal_lt cazim f0 f1 f2 f3 cpi c= creal_lt cazim f0 f1 f2 f3 cpi cT
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
+ (x' = x), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (x = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c~ c= f1 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ (FAN (x , (V , E))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) ==> (((real_lt ((((azim x) u) w) v)) pi) ==> ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) ==> (((u INSERT (v INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge u) V) E)) ==> ((v IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) ==> ((~ (x = u)) ==> ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F))))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f3 f4 f5 c==> creal_lt cazim f0 f3 f4 f5 cpi c==> ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cIN f5 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f5 c==> c~ c= f3 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f3 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= cazim f0 f3 f4 f5 cpi cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY
+ |- (((((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY)))))) ==> (((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w) v) = pi)) = (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))))) ==> F) = F)
T c= c==> c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c= c\/ c= cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c= cazim f0 f1 f2 f3 cpi ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- (((!w1. (!w2. (((~ (collinear (x INSERT (u INSERT (w1 INSERT EMPTY))))) /\ (~ (collinear (x INSERT (u INSERT (w2 INSERT EMPTY)))))) ==> (((((((azim x) u) w1) w2) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w1) w2) = pi)) = (coplanar (x INSERT (u INSERT (w1 INSERT (w2 INSERT EMPTY))))))))) ==> ((\w1. (!w2. (((~ (collinear (x INSERT (u INSERT (w1 INSERT EMPTY))))) /\ (~ (collinear (x INSERT (u INSERT (w2 INSERT EMPTY)))))) ==> (((((((azim x) u) w1) w2) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w1) w2) = pi)) = (coplanar (x INSERT (u INSERT (w1 INSERT (w2 INSERT EMPTY))))))))) w)) = ((\w1. (!w2. (((~ (collinear (x INSERT (u INSERT (w1 INSERT EMPTY))))) /\ (~ (collinear (x INSERT (u INSERT (w2 INSERT EMPTY)))))) ==> (((((((azim x) u) w1) w2) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w1) w2) = pi)) = (coplanar (x INSERT (u INSERT (w1 INSERT (w2 INSERT EMPTY))))))))) w))
T c= c==> ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c= c\/ c= cazim f0 f1 b0 b1 creal_of_num cNUMERAL c_0 c= cazim f0 f1 b0 b1 cpi ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c= c\/ c= cazim f0 f1 b0 b1 creal_of_num cNUMERAL c_0 c= cazim f0 f1 b0 b1 cpi ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c= c\/ c= cazim f0 f1 b0 b1 creal_of_num cNUMERAL c_0 c= cazim f0 f1 b0 b1 cpi ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
- |- ((!w. (!u. (!x. (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))))) = T)
T c= ! ! ! ! c= c\/ c= b3 b2 c\/ c= b3 f0 c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cT
- (w IN (((set_of_edge u) V) E)) |- ((w IN (((set_of_edge u) V) E)) = T)
T c==> cIN f0 * * * part cset_of_edge f1 f2 f3 c= cIN f0 * * * part cset_of_edge f1 f2 f3 cT
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f3
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (w IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f5 * * * part cset_of_edge f4 f1 f2
- (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((((azim x) u) w) v) = pi), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f3 f2 cpi c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cF
- |- (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (v IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f3 * * * part cset_of_edge f4 f1 f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (~ F), (x' = w), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c/\ c~ cF cF
+ (~ (((x = v) \/ (x = u)) = ((x = u) \/ (x = v)))), ((((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) ==> F), ((((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) ==> F) |- F
T c==> c~ c= c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f2 c= f0 f1 c==> c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 cF c==> c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 cF cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- ((((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) ==> F)
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (x' = u))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c~ c= f0 f3
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- (x = v), (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c~ cF cF
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- F
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c==> creal_lt cazim f0 f1 f2 f3 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
+ (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))), ((x = u) ==> F), ((x = v) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c==> c= f0 f2 cF c==> c==> c= f0 f1 cF cF
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F)))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f5 * * * part cset_of_edge f1 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f1 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f5 f2 creal_of_num cNUMERAL c_0 cF
- ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) |- (((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) /\ ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY
- (x' = w), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (w = u))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f4
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- (((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (x' = x))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c~ c= f0 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (((u INSERT (v INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge u) V) E)) ==> ((v IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) ==> ((~ (x = u)) ==> ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F)))))))))))))))))))))))
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c==> creal_lt cazim f0 f1 f2 f3 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f1 f3 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f1 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f2 f3 cpi cF
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((((((azim x) u) w) v) = pi) ==> F), ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w) v) = pi)), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> c= cazim f0 f1 f3 f2 cpi cF c==> c\/ c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 c= cazim f0 f1 f3 f2 cpi c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (x' = v), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (v = w))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c~ c= f1 f4
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (x' = v), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (v = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c~ c= f1 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (~ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))))), ((((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) ==> F), ((((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) ==> F) |- F
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 cF c==> c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 cF cF
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v))))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2
+ |- (((!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) ==> ((\x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) x)) = ((\x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) x))
T c= c==> ! ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * / ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY f0 * / ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY f0
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (x' = v))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c~ c= f0 f2
- (x' = x), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c==> c~ cF cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (collinear (x INSERT (u INSERT (v INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (x = v), (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f3
+ |- ((!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b3 b4 b2 creal_lt cazim f0 b3 b4 b2 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cT
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- (~ (x = u))
T c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c~ c= f0 f2
+ (x = u), (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f1 c~ c= f0 f2 cF
- |- ((\v. (!u. ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F))) v)
T * / ! c==> c~ ! c= c\/ c= b2 b0 c= b2 b1 c\/ c= b2 b1 c= b2 b0 cF f0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY
+ |- ((((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (!x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (FINITE (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cFINITE * * * part cset_of_edge f4 f1 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f5
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f5
+ (x' = v), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((v = v) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c==> c= f1 f1 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (x = u), (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c\/ c= f0 f1 c= f0 f2 c==> c~ cF cF
+ (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- ((((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) /\ F)
T c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c/\ c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 cF
+ (~ (w IN (aff (x INSERT (u INSERT EMPTY))))) |- ((w IN (aff (x INSERT (u INSERT EMPTY)))) = F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (x' = x), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (x = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c~ c= f1 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f3
- (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) |- ((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- (((!u. (!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))) ==> ((\u. (!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))) u)) = ((\u. (!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))) u))
T c= c==> ! ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 b0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 b0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF f2 * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c\/ c= b2 b0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((x' = u) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c==> c= f0 f3 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cF
+ |- (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) ==> F)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cF
- |- (((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((x' = w) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c= f0 f4 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ (x = u), (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- ((u = u) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c~ c= f0 f1 c\/ c= f0 f1 c= f0 f2 c==> c= f1 f1 cF
+ |- ((!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) /\ ((real_lt ((((azim x) u) w) v)) pi))))) ==> (~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))))) = T)
T c= ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 b0 f3 creal_lt cazim f0 f4 b0 f3 cpi c~ ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY cT
+ |- ((((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))) /\ F)
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c/\ cFINITE * * * part cset_of_edge f1 f4 f5 c/\ cIN f3 * * * part cset_of_edge f1 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f1 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c==> creal_lt cazim f0 f1 f2 f3 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 c/\ c/\ cFINITE * * * part cset_of_edge f1 f4 f5 c/\ cIN f3 * * * part cset_of_edge f1 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f1 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f5
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (~ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))))
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c==> creal_lt cazim f0 f1 f2 f3 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 c~ c/\ cFINITE * * * part cset_of_edge f1 f4 f5 c/\ cIN f3 * * * part cset_of_edge f1 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f1 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- (((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) = (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))))))
T c= c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (FINITE (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cFINITE * * * part cset_of_edge f4 f1 f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (collinear (x INSERT (u INSERT (w INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) ==> F)
T c==> cFAN c, f0 c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f3 f4 f5 c==> creal_lt cazim f0 f3 f4 f5 cpi c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- F
T c==> cFINITE * * * part cset_of_edge f0 f1 f2 c==> ccoplanar * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cFAN c, f3 c, f1 f2 c==> c/\ cIN f5 * * * part cset_of_edge f0 f1 f2 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ c~ c= f3 f0 c/\ c~ c= f3 f5 c/\ c~ c= f0 f5 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f1 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f3 f0 f4 f5 c==> creal_lt cazim f3 f0 f4 f5 cpi c==> cIN * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f2 c==> cIN * * part cINSERT f0 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f0 part cEMPTY f2 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ |- ((!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))))) = (!x'. ((x' IN (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) = (x' IN (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))))))
T c= ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 ! c= cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (x' = v), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ |- (!x. ((x IN (v INSERT (u INSERT EMPTY))) = (x IN (u INSERT (v INSERT EMPTY)))))
T c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
- (x' = w), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (w = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (FAN (x , (V , E))) |- ((FAN (x , (V , E))) = T)
T c==> cFAN c, f0 c, f1 f2 c= cFAN c, f0 c, f1 f2 cT
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f3
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (x' = w), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (w = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f2
+ (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))), ((x = v) ==> F) |- F
T c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c==> c==> c= f0 f1 cF cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ c~ c= f1 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = u))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f4
- (x = u), (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- (~ (u = v))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f1 f2
+ |- ((\w1. (!w2. (((~ (collinear (x INSERT (u INSERT (w1 INSERT EMPTY))))) /\ (~ (collinear (x INSERT (u INSERT (w2 INSERT EMPTY)))))) ==> (((((((azim x) u) w1) w2) = (real_of_num (NUMERAL _0))) \/ (((((azim x) u) w1) w2) = pi)) = (coplanar (x INSERT (u INSERT (w1 INSERT (w2 INSERT EMPTY))))))))) w)
T * / ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c= c\/ c= cazim f0 f1 b0 b1 creal_of_num cNUMERAL c_0 c= cazim f0 f1 b0 b1 cpi ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f1 f3 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (w INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ cIN f5 * * * part cset_of_edge f1 f3 f4 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f1 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f1 f3 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f5
- (~ F), (x' = v), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c/\ c~ cF cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (~ (u = w)) |- (~ (w = u))
T c==> c~ c= f0 f1 c~ c= f1 f0
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ c~ c= f0 f3 c/\ c~ c= f1 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cF
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (u IN V)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f4 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (w INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
+ |- ((~ ((FAN (x , (V , E))) ==> (((v INSERT (u INSERT EMPTY)) IN E) ==> (((u INSERT (w INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) ==> (((real_lt ((((azim x) u) w) v)) pi) ==> ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) ==> (((u INSERT (v INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge u) V) E)) ==> ((v IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) ==> ((~ (x = u)) ==> ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F)))))))))))))))))))))))))))))) ==> F)
T c==> c~ c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f4 f5 f3 c==> creal_lt cazim f0 f4 f5 f3 cpi c==> ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f4 f1 f2 c==> cIN f3 * * * part cset_of_edge f4 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f4 c==> c~ c= f0 f3 c==> c~ c= f4 f3 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> cIN f4 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> cIN f5 * * * part cset_of_edge f4 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f4 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> c= cazim f0 f4 f5 f3 cpi cF cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (w IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f5 * * * part cset_of_edge f4 f1 f2
+ (x = u), (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- (~ (u = u))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f1 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (FINITE (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cFINITE * * * part cset_of_edge f4 f1 f2
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))), ((x' = w) \/ (x' = v)) |- (((x' = w) \/ (x' = v)) /\ F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c\/ c= f0 f4 c= f0 f2 c/\ c\/ c= f0 f4 c= f0 f2 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f5
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (x' = u), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (u = w))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f3 c~ c= f1 f4
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (v IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f3 * * * part cset_of_edge f4 f1 f2
+ |- ((x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))) = (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))
T c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
+ (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))))))))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)) |- F
T c==> cFINITE * * * part cset_of_edge f0 f1 f2 c==> ccoplanar * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cFAN c, f3 c, f1 f2 c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ c~ c= f3 f0 c/\ c~ c= f3 f5 c/\ c~ c= f0 f5 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f1 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f3 f0 f4 f5 c==> creal_lt cazim f3 f0 f4 f5 cpi c==> cIN * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f2 c==> cIN * * part cINSERT f0 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f0 part cEMPTY f2 c==> cIN f5 * * * part cset_of_edge f0 f1 f2 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)) |- ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) ==> ((~ (x = u)) ==> ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F))))))))))))))))))))
T c==> cFINITE * * * part cset_of_edge f0 f1 f2 c==> ccoplanar * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cFAN c, f3 c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f3 f0 f4 f5 c==> creal_lt cazim f3 f0 f4 f5 cpi c==> cIN * * part cINSERT f0 * * part cINSERT f5 part cEMPTY f2 c==> cIN * * part cINSERT f0 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f0 part cEMPTY f2 c==> cIN f5 * * * part cset_of_edge f0 f1 f2 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> c~ c= f3 f0 c==> c~ c= f3 f5 c==> c~ c= f0 f5 c==> cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY c==> cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c==> cIN f0 f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c==> cIN f4 * * * part cset_of_edge f0 f1 f2 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> c~ c= f3 f4 c==> c~ c= f0 f4 c==> cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c==> cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c==> c= cazim f3 f0 f4 f5 cpi cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ |- (((!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))) ==> ((\E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))) E)) = ((\E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))) E))
T c= c==> ! ! ! c==> cFAN c, f0 c, f1 b0 c/\ cFINITE * * * part cset_of_edge b2 f1 b0 c/\ c= cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cIN b1 * * * part cset_of_edge b2 f1 b0 c==> cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b2 c/\ c~ c= f0 b1 c/\ c~ c= b2 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c/\ cIN b2 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * / ! ! c==> cFAN c, f0 c, f1 b0 c/\ cFINITE * * * part cset_of_edge b2 f1 b0 c/\ c= cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cIN b1 * * * part cset_of_edge b2 f1 b0 c==> cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b2 c/\ c~ c= f0 b1 c/\ c~ c= b2 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c/\ cIN b2 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY f2 * / ! ! c==> cFAN c, f0 c, f1 b0 c/\ cFINITE * * * part cset_of_edge b2 f1 b0 c/\ c= cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cIN b1 * * * part cset_of_edge b2 f1 b0 c==> cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b2 c/\ c~ c= f0 b1 c/\ c~ c= b2 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c/\ cIN b2 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY f2
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F)))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f1 f3 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f5 * * * part cset_of_edge f1 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f1 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f5 f2 creal_of_num cNUMERAL c_0 cF
+ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) /\ F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 cF
- |- ((!v. (!w. (!u. (!x. (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))))))))) = (!v. (!w. (!u. (!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))))))
T c= ! ! ! ! ! c= c\/ c= b4 b3 c\/ c= b4 b0 c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 ! ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b0 c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF
- (x' = x), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c~ cF cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((!x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (x' = w) |- ((~ (x' = w)) = (~ (w = w)))
T c==> c= f0 f1 c= c~ c= f0 f1 c~ c= f1 f1
+ (~ (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v)))))), ((((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) ==> F) |- F
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 cF cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ F)
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c==> creal_lt cazim f0 f1 f2 f3 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f5 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (u = w)) |- ((w = u) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
+ (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (((real_lt ((((azim x) u) w) v)) pi) ==> ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) ==> (((u INSERT (v INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge u) V) E)) ==> ((v IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) ==> ((~ (x = u)) ==> ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F)))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f3 f4 f5 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c==> creal_lt cazim f0 f3 f4 f5 cpi c==> ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cIN f5 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f5 c==> c~ c= f3 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f3 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= cazim f0 f3 f4 f5 cpi cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f1 f3 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0 cF
- (x' = u), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (u = v))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c~ c= f0 f3 c~ c= f1 f3
- (~ F), (x' = w), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c/\ c~ cF cF
- (x = v), (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c==> c~ cF cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (collinear (x INSERT (u INSERT (v INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
+ |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (v INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))), (((x' = u) \/ ((x' = w) \/ (x' = v))) ==> F) |- F
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c==> c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 cF cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((\x. (((real_mul x) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v INSERT (u INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f3
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0)))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (x' = x), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((x' = x) /\ F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f2 c/\ c= f0 f1 cF
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (u = v)), (~ (x = u)), (~ (x = v)), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (v IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f4 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f5 f2 c==> creal_lt cazim f0 f1 f5 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f4 c==> cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f5 * * * part cset_of_edge f1 f3 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f5 c==> c~ c= f1 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f5 f2 creal_of_num cNUMERAL c_0 cF
+ ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
+ (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((x' = x) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c==> c= f0 f1 cF
+ (x' = u), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((u = u) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f3 c==> c= f1 f1 cF
+ (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u = v)), (~ (u = w)), (~ (x = u)), (~ (x = v)), (~ (x = w)), (~ (v IN (aff (x INSERT (u INSERT EMPTY))))), (FINITE (((set_of_edge u) V) E)), (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (v INSERT EMPTY)) IN E), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN V), (v IN (((set_of_edge u) V) E)), (w IN (((set_of_edge u) V) E)), ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = pi) ==> F))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f1 f2 c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFINITE * * * part cset_of_edge f1 f4 f5 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 c==> creal_lt cazim f0 f1 f3 f2 cpi c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f5 c==> cIN f1 f4 c==> cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN f3 * * * part cset_of_edge f1 f4 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cazim f0 f1 f3 f2 cpi cF
+ (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) ==> (((u INSERT (v INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge u) V) E)) ==> ((v IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) ==> ((~ (x = u)) ==> ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f3 f4 f5 c==> creal_lt cazim f0 f3 f4 f5 cpi c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c==> ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cIN f5 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f5 c==> c~ c= f3 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f3 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= cazim f0 f3 f4 f5 creal_of_num cNUMERAL c_0 cF
+ (FAN (x , (V , E))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) ==> (((real_lt ((((azim x) u) w) v)) pi) ==> ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) ==> (((u INSERT (v INSERT EMPTY)) IN E) ==> ((FINITE (((set_of_edge u) V) E)) ==> ((v IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) ==> ((~ (x = u)) ==> ((~ (x = v)) ==> ((~ (u = v)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) ==> ((u IN V) ==> (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((w IN (((set_of_edge u) V) E)) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> ((~ (x = w)) ==> ((~ (u = w)) ==> (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) ==> (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) ==> ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) ==> ((((((azim x) u) w) v) = (real_of_num (NUMERAL _0))) ==> F))))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f2 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f3 f4 f5 c==> creal_lt cazim f0 f3 f4 f5 cpi c==> ccoplanar * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f2 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cIN f5 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f5 c==> c~ c= f3 f5 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f3 f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= cazim f0 f3 f4 f5 creal_of_num cNUMERAL c_0 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f3
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (u IN V)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f4 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- (~ F), (x' = v), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ cF cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (w INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (v INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x'. (P x')) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (x' = v), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- (~ (v = x))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c~ c= f1 f2
- (x' = x), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (x = u))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c~ c= f1 f3
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x' = u), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (u = x))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f3 c~ c= f1 f2
- (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))), (FAN (x , (V , E))), ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)), ((real_lt ((((azim x) u) w) v)) pi), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- F
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f2 f3 f1 c==> creal_lt cazim f0 f2 f3 f1 cpi c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 cF
- (~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) |- ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) /\ F)
T c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 c/\ c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f5
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f3
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((\v. (!w. (!u. (!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))))) v)
T * / ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b0 c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = u))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f4
- ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) = T)
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cT
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- ((((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)) = ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F))
T c= c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (w IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f5 * * * part cset_of_edge f4 f1 f2
- |- (((!v. (!w. (!u. (!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))))) ==> ((\v. (!w. (!u. (!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))))) v)) = ((\v. (!w. (!u. (!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))))) v))
T c= c==> ! ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b0 c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b0 c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ ! c= c\/ c= b4 b3 c\/ c= b4 b0 c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (~ F), (x' = u), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c~ c= f0 f4 c\/ c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f3 c/\ c~ cF cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (collinear (x INSERT (u INSERT (w INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v INSERT (u INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f3
- |- ((((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)) ==> (((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x' = w), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c==> c~ cF cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (v INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2
- (~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) |- F
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
- (x' = x), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (x = v))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 c~ c= f1 f2
- (~ F), (x' = u), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c~ c= f0 f3 c/\ c~ cF cF
- |- (((((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)) ==> (((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))) = (((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- |- ((((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)) ==> (((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY
- |- ((\w. (!u. (!x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)))) w)
T * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 f0 c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((((azim x) u) w) v))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- |- ((\u. ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)) u)
T * / c==> c~ ! c= c\/ c= b1 f0 c= b1 b0 c\/ c= b1 b0 c= b1 f0 cF f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- (x' = w), (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) /\ ((~ (x' = x)) /\ ((~ (x' = u)) /\ ((~ (x' = w)) /\ (~ (x' = v)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f4 c/\ c~ c= f0 f1 c~ c= f0 f3 c==> c~ cF cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY
- (~ (w = w)) |- ((~ (w = w)) /\ (w = w))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- |- ((((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)) = ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F))
T c= c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (u = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f4 f5
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (x' = w), (((~ (x' = x)) /\ ((~ (x' = v)) /\ ((~ (x' = u)) /\ (~ (x' = w))))) /\ ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))) |- (~ (w = u))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f4
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
- (x = v), (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- (~ (v = u))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f1 f2
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (collinear (x INSERT (u INSERT (w INSERT EMPTY))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (~ F), (x = v), (((~ (x = v)) /\ (~ (x = u))) /\ ((x = u) \/ (x = v))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 c\/ c= f0 f2 c= f0 f1 c/\ c~ cF cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v))))) (real_of_num (NUMERAL _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = v))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f3
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v INSERT (u INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (x = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ c= f0 f5
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (v INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)) |- ((((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)) /\ (((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F) ==> ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) |- (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) u) w) v)) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c= creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 cT
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (w INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (v IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f3 * * * part cset_of_edge f4 f1 f2
- |- ((\x. ((~ (!x'. (((x' = x) \/ ((x' = v) \/ ((x' = u) \/ (x' = w)))) = ((x' = x) \/ ((x' = u) \/ ((x' = w) \/ (x' = v))))))) ==> F)) x)
T * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cF f3
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (v IN (((set_of_edge u) V) E))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN f3 * * * part cset_of_edge f4 f1 f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((u INSERT (v INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((collinear (x INSERT (u INSERT (w INSERT EMPTY)))) /\ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ (~ (v IN (aff (x INSERT (u INSERT EMPTY)))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((((azim x) u) w) v) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- ((v INSERT (u INSERT EMPTY)) IN E)
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
- ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F), (((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)) |- ((((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F) ==> ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F)) /\ ((~ (!x. (((x = v) \/ (x = u)) = ((x = u) \/ (x = v))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF c==> c~ ! c= c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f1 c= b0 f0 cF
- ((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_gt ((((azim x) u) w) v)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add pi) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) u) w) v)))) (real_of_num (NUMERAL _0))) /\ ((coplanar (x INSERT (u INSERT (w INSERT (v INSERT EMPTY))))) /\ (((u INSERT (v INSERT EMPTY)) IN E) /\ ((FINITE (((set_of_edge u) V) E)) /\ ((v IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (v INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = v)) /\ ((~ (u = v)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ (((collinear (x INSERT (u INSERT (v INSERT EMPTY)))) /\ (v IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ (((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) pi)) ((((azim x) u) w) v)) = (real_of_num (NUMERAL _0))))))))))))))))))))))))))))))) |- (~ (collinear (x INSERT (u INSERT (v INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ creal_gt cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cpi creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c/\ c/\ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cpi cazim f0 f4 f5 f3 creal_of_num cNUMERAL c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY
- (~ F), (x = v), (((x = v) \/ (x = u)) /\ ((~ (x = u)) /\ (~ (x = v)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f1 c/\ c~ cF cF
