N Tame_list.size_list_update
C |- (!xs. (!i. (!v. ((sizel (((list_update xs) i) v)) = (sizel xs)))))
T c= csizel clist_update f0 f1 f2 csizel f0
D TRUTH
A |- T
T cT
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D Seq.size_cons
A |- (!h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t)))))
T c= csizel cCONS f0 f1 cSUC csizel f1
D Tame_defs2.list_update
A |- (((((list_update NIL) i) v) = NIL) /\ ((((list_update ((CONS x) xs)) i) v) = (((COND (i = (NUMERAL _0))) ((CONS v) xs)) ((CONS x) (((list_update xs) (i - (NUMERAL (BIT1 _0)))) v)))))
T c/\ c= clist_update cNIL f0 f1 cNIL c= clist_update cCONS f2 f3 f0 f1 cCOND c= f0 cNUMERAL c_0 cCONS f1 f3 cCONS f2 clist_update f3 c- f0 cNUMERAL cBIT1 c_0 f1
+ (!i. (!v. ((sizel (((list_update t) i) v)) = (sizel t)))) |- (!i. (!v. ((sizel (((COND (i = (NUMERAL _0))) ((CONS v) t)) ((CONS h) (((list_update t) (i - (NUMERAL (BIT1 _0)))) v)))) = (sizel ((CONS h) t)))))
T c==> ! ! c= csizel clist_update f0 b0 b1 csizel f0 ! ! c= csizel cCOND c= b0 cNUMERAL c_0 cCONS b1 f0 cCONS f1 clist_update f0 c- b0 cNUMERAL cBIT1 c_0 b1 csizel cCONS f1 f0
+ |- ((!h. (!t. ((!i. (!v. ((sizel (((list_update t) i) v)) = (sizel t)))) ==> (!i. (!v. ((sizel (((list_update ((CONS h) t)) i) v)) = (sizel ((CONS h) t)))))))) = ((!i. (!v. ((sizel (((list_update NIL) i) v)) = (sizel NIL)))) /\ (!h. (!t. ((!i. (!v. ((sizel (((list_update t) i) v)) = (sizel t)))) ==> (!i. (!v. ((sizel (((list_update ((CONS h) t)) i) v)) = (sizel ((CONS h) t))))))))))
T c= ! ! c==> ! ! c= csizel clist_update b1 b2 b3 csizel b1 ! ! c= csizel clist_update cCONS b0 b1 b2 b3 csizel cCONS b0 b1 c/\ ! ! c= csizel clist_update cNIL b0 b1 csizel cNIL ! ! c==> ! ! c= csizel clist_update b1 b2 b3 csizel b1 ! ! c= csizel clist_update cCONS b0 b1 b2 b3 csizel cCONS b0 b1
- (~ (i = (NUMERAL _0))) |- (((~ ((NUMERAL _0) = i)) ==> (((NUMERAL _0) = i) = F)) = (((NUMERAL _0) = i) = F))
T c==> c~ c= f0 cNUMERAL c_0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
+ |- (((!h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) ==> ((\h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) h)) = ((\h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) h))
T c= c==> ! ! c= csizel cCONS b0 b1 cSUC csizel b1 * / ! c= csizel cCONS b0 b1 cSUC csizel b1 f0 * / ! c= csizel cCONS b0 b1 cSUC csizel b1 f0
+ |- (((!i. (!v. ((sizel (((list_update t) i) v)) = (sizel t)))) ==> (!i. (!v. ((sizel (((list_update ((CONS h) t)) i) v)) = (sizel ((CONS h) t)))))) = T)
T c= c==> ! ! c= csizel clist_update f0 b0 b1 csizel f0 ! ! c= csizel clist_update cCONS f1 f0 b0 b1 csizel cCONS f1 f0 cT
+ |- ((\h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) h)
T * / ! c= csizel cCONS b0 b1 cSUC csizel b1 f0
+ |- ((i = (NUMERAL _0)) ==> ((sizel ((CONS v) t)) = (sizel ((CONS h) t))))
T c==> c= f0 cNUMERAL c_0 c= csizel cCONS f1 f2 csizel cCONS f3 f2
+ (!i. (!v. ((sizel (((list_update t) i) v)) = (sizel t)))) |- ((sizel (((list_update t) i) v)) = (sizel t))
T c==> ! ! c= csizel clist_update f0 b0 b1 csizel f0 c= csizel clist_update f0 f1 f2 csizel f0
+ |- (T = ((sizel ((CONS v) t)) = (sizel ((CONS h) t))))
T c= cT c= csizel cCONS f0 f1 csizel cCONS f2 f1
+ (!i. (!v. ((sizel (((list_update t) i) v)) = (sizel t)))) |- ((\i. (!v. ((sizel (((list_update t) i) v)) = (sizel t)))) i)
T c==> ! ! c= csizel clist_update f0 b0 b1 csizel f0 * / ! c= csizel clist_update f0 b0 b1 csizel f0 f1
+ |- ((!i. (!v. ((sizel (((COND (i = (NUMERAL _0))) ((CONS v) t)) ((CONS h) (((list_update t) (i - (NUMERAL (BIT1 _0)))) v)))) = (sizel ((CONS h) t))))) = (!i. (!v. ((sizel (((list_update ((CONS h) t)) i) v)) = (sizel ((CONS h) t))))))
T c= ! ! c= csizel cCOND c= b0 cNUMERAL c_0 cCONS b1 f0 cCONS f1 clist_update f0 c- b0 cNUMERAL cBIT1 c_0 b1 csizel cCONS f1 f0 ! ! c= csizel clist_update cCONS f1 f0 b0 b1 csizel cCONS f1 f0
- (~ (i = (NUMERAL _0))) |- (((sizel ((CONS h) (((list_update t) (i - (NUMERAL (BIT1 _0)))) v))) = (sizel ((CONS h) t))) = ((sizel ((CONS h) (((list_update t) (i - (NUMERAL (BIT1 _0)))) v))) = (sizel ((CONS h) t))))
T c==> c~ c= f0 cNUMERAL c_0 c= c= csizel cCONS f1 clist_update f2 c- f0 cNUMERAL cBIT1 c_0 f3 csizel cCONS f1 f2 c= csizel cCONS f1 clist_update f2 c- f0 cNUMERAL cBIT1 c_0 f3 csizel cCONS f1 f2
- (~ (i = (NUMERAL _0))) |- (~ ((NUMERAL _0) = i))
T c==> c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL c_0 f0
- (i = (NUMERAL _0)) |- ((NUMERAL _0) = i)
T c==> c= f0 cNUMERAL c_0 c= cNUMERAL c_0 f0
- (~ (i = (NUMERAL _0))) |- ((i = (NUMERAL _0)) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cF
- (i = (NUMERAL _0)) |- ((i = (NUMERAL _0)) = T)
T c==> c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cT
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- (i = (NUMERAL _0)) |- (((sizel ((CONS v) t)) = (sizel ((CONS h) t))) = ((sizel ((CONS v) t)) = (sizel ((CONS h) t))))
T c==> c= f0 cNUMERAL c_0 c= c= csizel cCONS f1 f2 csizel cCONS f3 f2 c= csizel cCONS f1 f2 csizel cCONS f3 f2
- ((NUMERAL _0) = i) |- (i = (NUMERAL _0))
T c==> c= cNUMERAL c_0 f0 c= f0 cNUMERAL c_0
- (~ (i = (NUMERAL _0))) |- (((NUMERAL _0) = i) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= cNUMERAL c_0 f0 cF
