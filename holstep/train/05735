N Collect_geom.COND_FOR_CIRCUMCENTER_PROPERTIESS
C |- ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?c. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (c = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) , v))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D EXISTS_THM
A |- (? = (\P. (P (@ P))))
T c= part c? / * b0 c@ b0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D SKOLEM_THM
A |- (!P. ((!x. (?y. ((P x) y))) = (?y. (!x. ((P x) (y x))))))
T c= ! c? / * * f0 b0 b1 c? / ! * * f0 b1 * b0 b1
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D Sphere.circumcenter
A |- (!S. ((circumcenter S) = (@v. ((((hull affine) S) v) /\ (?c. (!w. ((S w) ==> (c = (distance (v , w))))))))))
T c= ccircumcenter f0 c@ / c/\ chull part caffine f0 b0 c? / ! c==> * f0 b2 c= b1 cdistance c, b0 b2
D Collect_geom.PROVE_EXISTS_RADV
A |- (!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- (((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) /\ F)
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c/\ c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 cF
- |- ((_2158436 = _2158438) ==> ((~ (_2158437 = _2158439)) \/ (((I _2158438) _2158439) \/ (~ ((I _2158436) _2158437)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- (~ ((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c~ cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))), ((\p. (?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))))) p) |- (((\p. (?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))))) p) /\ F)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> * / c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * b0 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ ! c\/ c~ cIN b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * * b1 b3 b4 b5 cdistance c, * * * b0 b3 b4 b5 b6 ! c\/ c\/ c~ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * * b2 b3 b4 b5 b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ c= * * * b1 b3 b4 b5 cdistance c, b6 * * * * b2 b3 b4 b5 b6 c= * * * b0 b3 b4 b5 b6 f3 c/\ * / c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * b0 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ ! c\/ c~ cIN b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * * b1 b3 b4 b5 cdistance c, * * * b0 b3 b4 b5 b6 ! c\/ c\/ c~ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * * b2 b3 b4 b5 b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ c= * * * b1 b3 b4 b5 cdistance c, b6 * * * * b2 b3 b4 b5 b6 c= * * * b0 b3 b4 b5 b6 f3 cF
+ ((\v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))) v') |- (((((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) ==> F) = F)
T c==> * / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= f4 cdistance c, f3 b1 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b0 b1 b2 c~ c= b2 cdistance c, b1 * * b0 b1 b2 f5 c= c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 cF cF
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- (!w. (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((((p _2158329) _2158330) _2158331) IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) /\ (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((~ (w IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ ((((c _2158329) _2158330) _2158331) = (distance ((((p _2158329) _2158330) _2158331) , w))))) /\ (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ (((((w _2158329) _2158330) _2158331) w) IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ ((((p _2158329) _2158330) _2158331) = w))) /\ ((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ (~ ((((c _2158329) _2158330) _2158331) = (distance (w , ((((w _2158329) _2158330) _2158331) w)))))) \/ ((((p _2158329) _2158330) _2158331) = w)))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 ! c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c~ cIN b0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * * f1 f3 f4 f5 cdistance c, * * * f0 f3 f4 f5 b0 c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * * * f2 f3 f4 f5 b0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * * f0 f3 f4 f5 b0 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * * f1 f3 f4 f5 cdistance c, b0 * * * * f2 f3 f4 f5 b0 c= * * * f0 f3 f4 f5 b0
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((~ ((I collinear) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) /\ (((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p) /\ (!w. ((~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) w)) \/ (c = ((I distance) ((I ((I ,) p)) w)))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c/\ c~ cI part ccollinear * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY c/\ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3 ! c\/ c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 c= f4 cI part cdistance cI * * part cI part c, f3 b0
+ |- (((?w. ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p')) = (?w. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w)))))) \/ (p = p'))))
T c= c\/ c? / c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f0 b0 c= f5 f0 c? / c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f0 b0 c= f5 f0
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (((!c. (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') _2158383)) c))) /\ ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ (~ (c = ((I distance) ((I ((I ,) _2158383)) ((I ((I v') _2158383)) c)))))))) ==> ((\c. (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') _2158383)) c))) /\ ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ (~ (c = ((I distance) ((I ((I ,) _2158383)) ((I ((I v') _2158383)) c)))))))) _2158384)) = ((\c. (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') _2158383)) c))) /\ ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ (~ (c = ((I distance) ((I ((I ,) _2158383)) ((I ((I v') _2158383)) c)))))))) _2158384))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c= c==> ! c/\ c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f6 b0 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 c~ c= b0 cI part cdistance cI * * part cI part c, f6 cI * * part cI f5 f6 b0 * / c/\ c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f6 b0 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 c~ c= b0 cI part cdistance cI * * part cI part c, f6 cI * * part cI f5 f6 b0 f7 * / c/\ c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f6 b0 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 c~ c= b0 cI part cdistance cI * * part cI part c, f6 cI * * part cI f5 f6 b0 f7
+ |- ((!_2158381. ((_2158381 = (\P. (P (@ P)))) ==> ((!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> (~ (? = (\P. (P (@ P)))))))))) = (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = (\P. (P (@ P))))))))))))) ==> ((!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> (~ (? = (\P. (P (@ P)))))))))) = (!_2158381. ((_2158381 = (\P. (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = (\P. (P (@ P))))))))))))))
T c==> ! c==> c= b0 / * b1 c@ b1 c= ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c==> c= part c? / * b4 c@ b4 c~ c= part c? / * b4 c@ b4 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c==> c= part c? b0 c~ c= part c? / * b4 c@ b4 c= ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? / * b3 c@ b3 c~ c= part c? / * b3 c@ b3 ! c==> c= b0 / * b1 c@ b1 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c==> c= part c? b0 c~ c= part c? / * b4 c@ b4
- |- ((~ (_2158368 = _2158370)) \/ ((~ (_2158367 = _2158369)) \/ (((hull _2158367) _2158368) = ((hull _2158369) _2158370))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- ((~ ((((p _2158329) _2158330) _2158331) IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) ==> (collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- (((_2158381 = (\P. (P (@ P)))) ==> ((!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> (~ (? = (\P. (P (@ P)))))))))) = (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = (\P. (P (@ P)))))))))))) = T)
T c= c==> c= f0 / * b0 c@ b0 c= ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? / * b3 c@ b3 c~ c= part c? / * b3 c@ b3 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? f0 c~ c= part c? / * b3 c@ b3 cT
+ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((_2158334 = (distance (_2158333 , ((w' _2158333) _2158334)))) ==> (~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 c==> c= f4 cdistance c, f5 * * f3 f5 f4 c~ cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- ((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (((~ (_2158332 IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ (((((w _2158329) _2158330) _2158331) _2158332) IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ ((((p _2158329) _2158330) _2158331) = _2158332)))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * * * f2 f3 f4 f5 f6 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * * f0 f3 f4 f5 f6
- (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))), (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- ((?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))) /\ F)
T c==> c? / ! ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f1 b1 b2 b3 cdistance c, * * * f0 b1 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * * b0 b1 b2 b3 b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f1 b1 b2 b3 cdistance c, b4 * * * * b0 b1 b2 b3 b4 c= * * * f0 b1 b2 b3 b4 c==> c~ c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= b1 cdistance c, b0 b2 c/\ c? / ! ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f1 b1 b2 b3 cdistance c, * * * f0 b1 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * * b0 b1 b2 b3 b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f1 b1 b2 b3 cdistance c, b4 * * * * b0 b1 b2 b3 b4 c= * * * f0 b1 b2 b3 b4 cF
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- ((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((~ (_2158332 IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ ((~ ((((c _2158329) _2158330) _2158331) = (distance (_2158332 , ((((w _2158329) _2158330) _2158331) _2158332))))) \/ ((((p _2158329) _2158330) _2158331) = _2158332))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c~ c= * * * f1 f3 f4 f5 cdistance c, f6 * * * * f2 f3 f4 f5 f6 c= * * * f0 f3 f4 f5 f6
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (? = _2158381) |- (((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p) = ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p))
T c==> c= part c? f0 c= cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY f4 cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY f4
- |- ((_2158341 = _2158345) ==> ((~ (_2158342 = _2158346)) \/ ((~ (_2158343 = _2158347)) \/ ((~ (_2158344 = _2158348)) \/ (((((w _2158341) _2158342) _2158343) _2158344) = ((((w _2158345) _2158346) _2158347) _2158348))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= * * * * f8 f0 f2 f4 f6 * * * * f8 f1 f3 f5 f7
- |- ((_2158361 = _2158363) ==> ((~ (_2158362 = _2158364)) \/ ((_2158361 , _2158362) = (_2158363 , _2158364))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- (((!c. (((~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' _2158333) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (_2158333 , ((w' _2158333) c)))))))) ==> ((\c. (((~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' _2158333) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (_2158333 , ((w' _2158333) c)))))))) _2158334)) = ((\c. (((~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' _2158333) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (_2158333 , ((w' _2158333) c)))))))) _2158334))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 c= c==> ! c/\ c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * * f3 f4 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, f4 * * f3 f4 b0 * / c/\ c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * * f3 f4 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, f4 * * f3 f4 b0 f5 * / c/\ c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * * f3 f4 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, f4 * * f3 f4 b0 f5
- (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p)) ==> ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c==> c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3 cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3
+ |- (!_2158381. ((_2158381 = (\P. (P (@ P)))) ==> ((!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> (~ (? = (\P. (P (@ P)))))))))) = (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = (\P. (P (@ P)))))))))))))
T c==> c= f0 / * b0 c@ b0 c= ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? / * b3 c@ b3 c~ c= part c? / * b3 c@ b3 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? f0 c~ c= part c? / * b3 c@ b3
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- (T = (((~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' _2158333) _2158334) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) = ((((w' _2158333) _2158334) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))))))
T c= cT c= c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN * * f4 f0 f5 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cIN * * f4 f0 f5 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((\c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))) c) |- (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))
T c==> * / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b0 cdistance c, f3 b2 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b1 b2 b3 c~ c= b3 cdistance c, b2 * * b1 b2 b3 f4 c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= f4 cdistance c, f3 b1 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b0 b1 b2 c~ c= b2 cdistance c, b1 * * b0 b1 b2
- (~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p)), (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p)) /\ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p))
T c==> c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3 c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c/\ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3 cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (c = ((I distance) ((I ((I ,) p)) ((I ((I v') p)) c))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c= f4 cI part cdistance cI * * part cI part c, f3 cI * * part cI f5 f3 f4
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- ((\vc. (!w. (((collinear (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))) \/ ((((p _2158329) _2158330) vc) IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))))) /\ (((collinear (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))) \/ ((~ (w IN (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY))))) \/ ((((c _2158329) _2158330) vc) = (distance ((((p _2158329) _2158330) vc) , w))))) /\ (((collinear (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))))) \/ (((((w _2158329) _2158330) vc) w) IN (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY))))) \/ ((((p _2158329) _2158330) vc) = w))) /\ ((collinear (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))))) \/ (~ ((((c _2158329) _2158330) vc) = (distance (w , ((((w _2158329) _2158330) vc) w)))))) \/ ((((p _2158329) _2158330) vc) = w)))))))) _2158331)
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 * / ! c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY cIN * * * f0 f3 f4 b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c\/ c~ cIN b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c= * * * f1 f3 f4 b0 cdistance c, * * * f0 f3 f4 b0 b1 c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY cIN * * * * f2 f3 f4 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c= * * * f0 f3 f4 b0 b1 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c~ c= * * * f1 f3 f4 b0 cdistance c, b1 * * * * f2 f3 f4 b0 b1 c= * * * f0 f3 f4 b0 b1 f5
+ |- ((((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))))) ==> ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) = ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))))))) = ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) = ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))))
T c= c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2
- (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') p)) c))) ==> ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') p)) c)))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c==> c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f3 f4 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f3 f4
- |- ((?c'. ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c' = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p'))))) = ((?c. (!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w)))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p')))))
T c= c? / c/\ ! c\/ c~ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b1 b2 c= f3 b1 c/\ c? / ! c\/ c~ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 b1 c= f3 b0
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((~ (((w' (((p va) vb) vc)) (((c va) vb) vc)) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (((w' (((p va) vb) vc)) (((c va) vb) vc)) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c==> c~ cIN * * f6 * * * f0 f3 f4 f5 * * * f1 f3 f4 f5 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * f6 * * * f0 f3 f4 f5 * * * f1 f3 f4 f5 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (_2158485 = _2158487) |- ((_2158484 = _2158486) ==> (((I _2158484) _2158485) = ((I _2158486) _2158487)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
- |- ((\va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F))) va)
T * / c==> c~ c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= b2 cdistance c, b1 b3 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF f2
+ |- (((?w. (P w)) \/ Q) = (?w. ((P w) \/ Q)))
T c= c\/ c? / * f0 b0 f1 c? / c\/ * f0 b0 f1
+ |- (((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = _2158382)))) = T)
T c= c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? f3 c~ c= part c? f4 cT
- |- ((_2158485 = _2158487) ==> ((~ (_2158484 = _2158486)) \/ (((I _2158484) _2158485) = ((I _2158486) _2158487))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
- (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) |- ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (((w' _2158333) _2158334) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * * f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (T = (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((~ (_2158332 IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ ((((c _2158329) _2158330) _2158331) = (distance ((((p _2158329) _2158330) _2158331) , _2158332))))) = (((((c _2158329) _2158330) _2158331) = (distance ((((p _2158329) _2158330) _2158331) , _2158332))) \/ ((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (~ (_2158332 IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))))))
T c= cT c= c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * * f4 f0 f1 f2 cdistance c, * * * f5 f0 f1 f2 f3 c\/ c= * * * f4 f0 f1 f2 cdistance c, * * * f5 f0 f1 f2 f3 c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ (!c. (((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') v)) c)) /\ (~ (c = ((I distance) ((I ((I ,) v)) ((I ((I v') v)) c)))))))) = (!c. ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ (((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') v)) c)) /\ (~ (c = ((I distance) ((I ((I ,) v)) ((I ((I v') v)) c)))))))))
T c= c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3 ! c/\ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f4 f3 b0 c~ c= b0 cI part cdistance cI * * part cI part c, f3 cI * * part cI f4 f3 b0 ! c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3 c/\ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f4 f3 b0 c~ c= b0 cI part cdistance cI * * part cI part c, f3 cI * * part cI f4 f3 b0
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- (((w' (((p va) vb) vc)) _2158334) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 cIN * * f6 * * * f0 f3 f4 f5 f7 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (!P. ((_2158382 P) = (P (@ P)))) |- ((\P. ((~ ((I _2158382) P)) \/ ((I P) ((I @) P)))) _2158389)
T c==> ! c= * f0 b0 * b0 c@ b0 * / c\/ c~ cI f0 b0 cI b0 cI part c@ b0 f1
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((\v. (!c. (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') v)) c))) /\ ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ (~ (c = ((I distance) ((I ((I ,) v)) ((I ((I v') v)) c))))))))) _2158383)
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 * / ! c/\ c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 b0 b1 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 c~ c= b1 cI part cdistance cI * * part cI part c, b0 cI * * part cI f5 b0 b1 f6
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((~ F) ==> F)
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c==> c~ cF cF
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- ((?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))) ==> F)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> c? / ! ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f3 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f4 b1 b2 b3 cdistance c, * * * f3 b1 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * * b0 b1 b2 b3 b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f4 b1 b2 b3 cdistance c, b4 * * * * b0 b1 b2 b3 b4 c= * * * f3 b1 b2 b3 b4 cF
- |- ((!P'. ((_2158381 P) \/ (~ (P' (@ P'))))) = ((_2158381 P) \/ (!P. (~ (P (@ P))))))
T c= ! c\/ * f0 f1 c~ * b0 c@ b0 c\/ * f0 f1 ! c~ * b0 c@ b0
- (_2158436 = _2158438) |- ((_2158436 = _2158438) /\ ((~ (_2158437 = _2158439)) \/ (((I _2158438) _2158439) \/ (~ ((I _2158436) _2158437)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ ((\p. (?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))))) p) |- (((\p. (?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))))) p) /\ F)
T c==> * / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 c= b1 cdistance c, b0 b3 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b2 b3 b4 c~ c= b4 cdistance c, b3 * * b2 b3 b4 f3 c/\ * / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 c= b1 cdistance c, b0 b3 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b2 b3 b4 c~ c= b4 cdistance c, b3 * * b2 b3 b4 f3 cF
- |- ((?v. (P v)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
- |- ((!p''. (((~ (p'' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p'' , w))))))) \/ (p = p'))) = ((!p'. ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w)))))))) \/ (p = p')))
T c= ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f3 cdistance c, b0 b1 c= f4 f5 c\/ ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f3 cdistance c, b0 b1 c= f4 f5
- |- ((((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F)) ==> ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F))) = ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F)))
T c= c==> c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF
- (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))), (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- F
T c==> c? / ! ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f1 b1 b2 b3 cdistance c, * * * f0 b1 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * * b0 b1 b2 b3 b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f1 b1 b2 b3 cdistance c, b4 * * * * b0 b1 b2 b3 b4 c= * * * f0 b1 b2 b3 b4 c==> c~ c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= b1 cdistance c, b0 b2 cF
- (_2158336 = _2158338), (_2158335 = _2158337) |- ((((_2158335 IN _2158336) = (_2158337 IN _2158338)) ==> ((_2158337 IN _2158338) \/ (~ (_2158335 IN _2158336)))) = ((_2158337 IN _2158338) \/ (~ (_2158335 IN _2158336))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cIN f2 f0 cIN f3 f1 c\/ cIN f3 f1 c~ cIN f2 f0 c\/ cIN f3 f1 c~ cIN f2 f0
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((((c va) vb) vc) = (distance ((((p va) vb) vc) , ((w' (((p va) vb) vc)) (((c va) vb) vc)))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c= * * * f1 f3 f4 f5 cdistance c, * * * f0 f3 f4 f5 * * f6 * * * f0 f3 f4 f5 * * * f1 f3 f4 f5
- (? = _2158381) |- ((~ ((I collinear) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) = (~ ((I collinear) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))))
T c==> c= part c? f0 c= c~ cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY c~ cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY
+ |- (((?c. (P c)) /\ Q) = (?c. ((P c) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (!P. ((_2158382 P) = (P (@ P)))) |- ((~ ((I _2158382) _2158389)) \/ ((I _2158389) ((I @) _2158389)))
T c==> ! c= * f0 b0 * b0 c@ b0 c\/ c~ cI f0 f1 cI f1 cI part c@ f1
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ (~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) |- (((?p. (?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))))) ==> F) = F)
T c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c= c==> c? / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 c= b1 cdistance c, b0 b3 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b2 b3 b4 c~ c= b4 cdistance c, b3 * * b2 b3 b4 cF cF
- (_2158361 = _2158363), (_2158362 = _2158364) |- ((_2158362 = _2158364) /\ ((_2158361 , _2158362) = (_2158363 , _2158364)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((?c'. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c' = (distance (p' , w)))))) ==> (p = p'))))) = ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (?c. (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))
T c= c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f4 b1 c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c? / ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f4 b1
- (_2158444 = _2158446), (_2158445 = _2158447) |- (((((I _2158444) _2158445) = ((I _2158446) _2158447)) ==> (((I _2158446) _2158447) \/ (~ ((I _2158444) _2158445)))) = (((I _2158446) _2158447) \/ (~ ((I _2158444) _2158445))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cI f0 f2 cI f1 f3 c\/ cI f1 f3 c~ cI f0 f2 c\/ cI f1 f3 c~ cI f0 f2
+ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- (((~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' _2158333) _2158334) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (_2158334 = (distance (_2158333 , ((w' _2158333) _2158334)))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 c/\ c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * * f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f5 cdistance c, f4 * * f3 f4 f5
+ |- (((!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))))) ==> ((\v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))))) v2)) = ((\v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))))) v2))
T c= c==> ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c? / ! c==> cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c= b3 cdistance c, b2 b4 c? / c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c? / ! c==> cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c= b3 cdistance c, b2 b4 c==> c= part c? / * b2 c@ b2 c==> c= part c? / * b2 c@ b2 cF * / ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c? / ! c==> cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c= b3 cdistance c, b2 b4 c? / c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c? / ! c==> cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c= b3 cdistance c, b2 b4 c==> c= part c? / * b2 c@ b2 c==> c= part c? / * b2 c@ b2 cF f1 * / ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c? / ! c==> cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c= b3 cdistance c, b2 b4 c? / c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c? / ! c==> cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c= b3 cdistance c, b2 b4 c==> c= part c? / * b2 c@ b2 c==> c= part c? / * b2 c@ b2 cF f1
+ |- ((!vb. (?w. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((((p vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (((c vb) vc) = (distance (((p vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((w vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (((c vb) vc) = (distance (p' , ((w vc) p'))))))) \/ (((p vb) vc) = p'))))))))) = (?w. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((((p vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (((c vb) vc) = (distance (((p vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((((w vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (((c vb) vc) = (distance (p' , (((w vb) vc) p'))))))) \/ (((p vb) vc) = p'))))))))))
T c= ! c? / ! c\/ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c/\ cIN * * f1 b0 b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c= * * f2 b0 b2 cdistance c, * * f1 b0 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c/\ cIN * * b1 b2 b3 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c~ c= * * f2 b0 b2 cdistance c, b3 * * b1 b2 b3 c= * * f1 b0 b2 b3 c? / ! ! c\/ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * f1 b1 b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * f2 b1 b2 cdistance c, * * f1 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * b0 b1 b2 b3 * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * f2 b1 b2 cdistance c, b3 * * * b0 b1 b2 b3 c= * * f1 b1 b2 b3
+ |- ((P /\ (!w. (Q w))) = (!w. (P /\ (Q w))))
T c= c/\ f0 ! * f1 b0 ! c/\ f0 * f1 b0
- |- ((!w'. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w'))))) = ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (!w. (c = (distance (p , w))))))
T c= ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 cdistance c, f5 b0 c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c= f4 cdistance c, f5 b0
+ |- ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F)))
T c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) (@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w))))))))) /\ (?c. (!v. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v) ==> (c = (distance ((@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w)))))))) , v))))))))) |- ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))
T c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 cdistance c, b2 b2 b1 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF
- |- ((!p'. ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , w))))))))) = ((!p. (~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))))) \/ (!c. (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , w)))))))))
T c= ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c? / c/\ cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, f3 b2 c\/ ! c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c? / c/\ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, f3 b1
+ (~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) |- (~ (? = _2158382))
T c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c~ c= part c? f3
+ |- ((!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = (\P. (P (@ P)))))))))))) = (!_2158382. ((!P. ((_2158382 P) = (P (@ P)))) ==> (!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = _2158382))))))))))))
T c= ! c==> ! c= * b0 b1 * b1 c@ b1 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c==> c= part c? b0 c~ c= part c? / * b4 c@ b4 ! c==> ! c= * b0 b1 * b1 c@ b1 ! c==> ! c= * b1 b2 * b2 c@ b2 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c? / ! c==> cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b7 c= b6 cdistance c, b5 b7 c? / c/\ chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c? / ! c==> cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b7 c= b6 cdistance c, b5 b7 c==> c= part c? b1 c~ c= part c? b0
- ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))), (((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))) ==> ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F)))) |- (((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))) /\ ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))))
T c==> c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c==> c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c/\ c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF
+ |- (((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F) = F)
T c= c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF cF
+ |- (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. (?c. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))))) = (?p. ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?c. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))))))
T c= c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2
+ |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- ((?v'. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v''. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v'') ==> (c = (distance (v' , v'')))))))) = ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?v. (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))
T c= c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c? / c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2
+ |- ((((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. (((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w)))) /\ (((~ (w IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) w) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (w , ((((w va) vb) vc) w))))))) \/ ((((p va) vb) vc) = w))))) = (!w. (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w)))) /\ (((~ (w IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) w) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (w , ((((w va) vb) vc) w))))))) \/ ((((p va) vb) vc) = w))))))
T c= c/\ cIN * * * f0 f1 f2 f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c/\ c\/ c~ cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * * f4 f1 f2 f3 cdistance c, * * * f0 f1 f2 f3 b0 c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * * * * f5 f1 f2 f3 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * * f4 f1 f2 f3 cdistance c, b0 * * * * f5 f1 f2 f3 b0 c= * * * f0 f1 f2 f3 b0 ! c/\ cIN * * * f0 f1 f2 f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c\/ c~ cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * * f4 f1 f2 f3 cdistance c, * * * f0 f1 f2 f3 b0 c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * * * * f5 f1 f2 f3 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * * f4 f1 f2 f3 cdistance c, b0 * * * * f5 f1 f2 f3 b0 c= * * * f0 f1 f2 f3 b0
+ |- (T = ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c= cT c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- (_2158371 = _2158373) |- ((_2158371 = _2158373) /\ ((~ (_2158372 = _2158374)) \/ (((w' _2158371) _2158372) = ((w' _2158373) _2158374))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * f4 f0 f2 * * f4 f1 f3
- (~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) |- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) /\ F)
T c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 c/\ c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- (((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> (~ (!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))))) = T)
T c= c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c~ ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cT
- |- ((!_2158381. t) = t)
T c= ! f0 f0
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- (!p. (((\p. (?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))))) p) ==> F))
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> * / c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * b1 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ ! c\/ c~ cIN b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * * b1 b3 b4 b5 cdistance c, * * * b1 b3 b4 b5 b6 ! c\/ c\/ c~ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * * b2 b3 b4 b5 b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ c= * * * b1 b3 b4 b5 cdistance c, b6 * * * * b2 b3 b4 b5 b6 c= * * * b1 b3 b4 b5 b6 b0 cF
- |- ((~ (_2158436 = _2158438)) \/ ((~ (_2158437 = _2158439)) \/ (((I _2158438) _2158439) \/ (~ ((I _2158436) _2158437)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((((((c va) vb) vc) = (distance ((((p va) vb) vc) , ((w' (((p va) vb) vc)) (((c va) vb) vc))))) ==> (~ ((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))))) = (~ ((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c= c==> c= * * * f1 f3 f4 f5 cdistance c, * * * f0 f3 f4 f5 * * f6 * * * f0 f3 f4 f5 * * * f1 f3 f4 f5 c~ cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (_2158341 = _2158345), (_2158342 = _2158346), (_2158343 = _2158347) |- ((_2158343 = _2158347) /\ ((~ (_2158344 = _2158348)) \/ (((((w _2158341) _2158342) _2158343) _2158344) = ((((w _2158345) _2158346) _2158347) _2158348))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f4 f5 c\/ c~ c= f6 f7 c= * * * * f8 f0 f2 f4 f6 * * * * f8 f1 f3 f5 f7
+ |- (((!x. ((x IN P) = (P x))) ==> ((\x. ((x IN P) = (P x))) x)) = ((\x. ((x IN P) = (P x))) x))
T c= c==> ! c= cIN b0 f0 * f0 b0 * / c= cIN b0 f0 * f0 b0 f1 * / c= cIN b0 f0 * f0 b0 f1
- (? = _2158381) |- (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ (~ (_2158384 = ((I distance) ((I ((I ,) _2158383)) ((I ((I v') _2158383)) _2158384)))))) = ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ (~ (_2158384 = ((I distance) ((I ((I ,) _2158383)) ((I ((I v') _2158383)) _2158384)))))))
T c==> c= part c? f0 c= c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY f4 c~ c= f5 cI part cdistance cI * * part cI part c, f4 cI * * part cI f6 f4 f5 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY f4 c~ c= f5 cI part cdistance cI * * part cI part c, f4 cI * * part cI f6 f4 f5
- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) /\ (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (((((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p) /\ (c = ((I distance) ((I ((I ,) p)) ((I ((I v') p)) c))))) ==> F) = F)
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c= c==> c/\ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3 c= f4 cI part cdistance cI * * part cI part c, f3 cI * * part cI f5 f3 f4 cF cF
+ |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- (!va. (!vb. (!vc. (!w. (((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) /\ (((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((((w va) vb) vc) w) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((p va) vb) vc) = w))) /\ ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ ((((c va) vb) vc) = (distance (w , ((((w va) vb) vc) w)))))) \/ ((((p va) vb) vc) = w))))))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 ! ! ! ! c/\ c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 c/\ c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f0 b0 b1 b2 b3 c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3
- |- ((~ (_2158335 = _2158337)) \/ ((~ (_2158336 = _2158338)) \/ ((_2158337 IN _2158338) \/ (~ (_2158335 IN _2158336)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- ((~ (_2158445 = _2158447)) \/ ((~ (_2158444 = _2158446)) \/ (((I _2158446) _2158447) \/ (~ ((I _2158444) _2158445)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ |- ((F = t) = (~ t))
T c= c= cF f0 c~ f0
- (_2158367 = _2158369), (_2158368 = _2158370) |- ((_2158367 = _2158369) /\ (((hull _2158367) _2158368) = ((hull _2158369) _2158370)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part chull f0 f2 * * part chull f1 f3
+ ((\c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))) c) |- (((?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))) ==> F) = F)
T c==> * / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b0 cdistance c, f3 b2 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b1 b2 b3 c~ c= b3 cdistance c, b2 * * b1 b2 b3 f4 c= c==> c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= f4 cdistance c, f3 b1 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b0 b1 b2 c~ c= b2 cdistance c, b1 * * b0 b1 b2 cF cF
- (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))) |- ((?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))) /\ F)
T c==> c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= f4 cdistance c, f3 b1 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b0 b1 b2 c~ c= b2 cdistance c, b1 * * b0 b1 b2 c/\ c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= f4 cdistance c, f3 b1 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b0 b1 b2 c~ c= b2 cdistance c, b1 * * b0 b1 b2 cF
+ |- ((((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) ==> F)
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 cF
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- ((((\w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))) w) ==> F) = T)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c= c==> * / ! ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f3 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f4 b1 b2 b3 cdistance c, * * * f3 b1 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * * b0 b1 b2 b3 b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f4 b1 b2 b3 cdistance c, b4 * * * * b0 b1 b2 b3 b4 c= * * * f3 b1 b2 b3 b4 f5 cF cT
- (_2158341 = _2158345), (_2158342 = _2158346), (_2158343 = _2158347), (_2158344 = _2158348) |- ((_2158344 = _2158348) /\ (((((w _2158341) _2158342) _2158343) _2158344) = ((((w _2158345) _2158346) _2158347) _2158348)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f6 f7 c= * * * * f8 f0 f2 f4 f6 * * * * f8 f1 f3 f5 f7
+ |- (!c. (((\c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))) c) ==> F))
T c==> * / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b0 cdistance c, f3 b2 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b1 b2 b3 c~ c= b3 cdistance c, b2 * * b1 b2 b3 f4 cF
+ (!P. ((_2158382 P) = (P (@ P)))) |- ((!P. ((_2158382 P) = (P (@ P)))) /\ (!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = _2158382))))))))))
T c==> ! c= * f0 b0 * b0 c@ b0 c/\ ! c= * f0 b0 * b0 c@ b0 ! c==> ! c= * b0 b1 * b1 c@ b1 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c==> c= part c? b0 c~ c= part c? f0
- |- (((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F)) ==> ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F)))
T c==> c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF
- (_2158336 = _2158338), (_2158335 = _2158337) |- ((_2158337 IN _2158338) \/ (~ (_2158335 IN _2158336)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f3 f1 c~ cIN f2 f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- (((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (?v'. (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) (v' c)) /\ (~ (c = (distance (v , (v' c))))))))) = (?v'. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) (v' c)) /\ (~ (c = (distance (v , (v' c))))))))))
T c= c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c? / ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * b0 b1 c~ c= b1 cdistance c, f3 * b0 b1 c? / c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * b0 b1 c~ c= b1 cdistance c, f3 * b0 b1
- |- ((?v'. t) = t)
T c= c? / f0 f0
- (_2158484 = _2158486), (_2158485 = _2158487) |- ((_2158484 = _2158486) /\ (((I _2158484) _2158485) = ((I _2158486) _2158487)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cI f0 f2 * * part cI f1 f3
- (!P. ((_2158382 P) = (P (@ P)))) |- (((!P. (((I _2158382) P) \/ (~ ((I P) ((I @) P))))) ==> ((\P. (((I _2158382) P) \/ (~ ((I P) ((I @) P))))) _2158388)) = ((\P. (((I _2158382) P) \/ (~ ((I P) ((I @) P))))) _2158388))
T c==> ! c= * f0 b0 * b0 c@ b0 c= c==> ! c\/ cI f0 b0 c~ cI b0 cI part c@ b0 * / c\/ cI f0 b0 c~ cI b0 cI part c@ b0 f1 * / c\/ cI f0 b0 c~ cI b0 cI part c@ b0 f1
+ ((\w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))) w) |- (((!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) ==> F) = F)
T c==> * / ! ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f1 b1 b2 b3 cdistance c, * * * f0 b1 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * * b0 b1 b2 b3 b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f1 b1 b2 b3 cdistance c, b4 * * * * b0 b1 b2 b3 b4 c= * * * f0 b1 b2 b3 b4 f2 c= c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 cF cF
- |- ((((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))) ==> ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F)))) = ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))))
T c= c==> c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF
+ |- ((\P. (!x. ((x IN P) = (P x)))) P)
T * / ! c= cIN b1 b0 * b0 b1 f0
- |- ((\vb. (!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F)))) vb)
T * / ! c==> c~ c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c= b3 cdistance c, b2 b4 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF f1
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((_2158365 = _2158366) ==> ((distance _2158365) = (distance _2158366)))
T c==> c= f0 f1 c= cdistance f0 cdistance f1
- (_2158341 = _2158345), (_2158342 = _2158346) |- ((_2158343 = _2158347) ==> ((~ (_2158344 = _2158348)) \/ (((((w _2158341) _2158342) _2158343) _2158344) = ((((w _2158345) _2158346) _2158347) _2158348))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c= * * * * f8 f0 f2 f4 f6 * * * * f8 f1 f3 f5 f7
+ |- ((\v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))))) v2)
T * / ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c? / ! c==> cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c= b3 cdistance c, b2 b4 c? / c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c? / ! c==> cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c= b3 cdistance c, b2 b4 c==> c= part c? / * b2 c@ b2 c==> c= part c? / * b2 c@ b2 cF f1
+ ((\p. (?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))))) p) |- (((?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) ==> F) = F)
T c==> * / c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * b0 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ ! c\/ c~ cIN b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * * b1 b3 b4 b5 cdistance c, * * * b0 b3 b4 b5 b6 ! c\/ c\/ c~ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * * b2 b3 b4 b5 b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ c= * * * b1 b3 b4 b5 cdistance c, b6 * * * * b2 b3 b4 b5 b6 c= * * * b0 b3 b4 b5 b6 f0 c= c==> c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f0 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b2 b3 b4 cdistance c, * * * f0 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f0 b2 b3 b4 b5 cF cF
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (~ (((w' (((p va) vb) vc)) (((c va) vb) vc)) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((~ (((w' (((p va) vb) vc)) (((c va) vb) vc)) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((w' (((p va) vb) vc)) (((c va) vb) vc)) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ cIN * * f6 * * * f0 f3 f4 f5 * * * f1 f3 f4 f5 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c/\ c~ cIN * * f6 * * * f0 f3 f4 f5 * * * f1 f3 f4 f5 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * f6 * * * f0 f3 f4 f5 * * * f1 f3 f4 f5 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (_2158472 = _2158474), (_2158473 = _2158475) |- ((_2158473 = _2158475) /\ (((I _2158472) _2158473) = ((I _2158474) _2158475)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cI f0 f2 cI f1 f3
- |- (!vc. (!vb. (!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> (~ (!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))))))))
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c~ ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5
- |- ((~ (_2158361 = _2158363)) \/ ((~ (_2158362 = _2158364)) \/ ((_2158361 , _2158362) = (_2158363 , _2158364))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((?w'. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w')))))) = ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (?w. (~ (c = (distance (p' , w)))))))
T c= c? / c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f5 b0 c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c~ c= f4 cdistance c, f5 b0
- (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) /\ (~ (!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))))))))
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c/\ c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c~ ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- (!vb. (!vc. (!w. (((collinear (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((((p _2158329) vb) vc) IN ((hull affine) (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))))) /\ (((collinear (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((~ (w IN (_2158329 INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c _2158329) vb) vc) = (distance ((((p _2158329) vb) vc) , w))))) /\ (((collinear (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((((w _2158329) vb) vc) w) IN (_2158329 INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((p _2158329) vb) vc) = w))) /\ ((collinear (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ ((((c _2158329) vb) vc) = (distance (w , ((((w _2158329) vb) vc) w)))))) \/ ((((p _2158329) vb) vc) = w)))))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 ! ! ! c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN * * * f0 f3 b0 b1 * * part chull part caffine * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN b2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * * f1 f3 b0 b1 cdistance c, * * * f0 f3 b0 b1 b2 c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN * * * * f2 f3 b0 b1 b2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * * f0 f3 b0 b1 b2 c\/ ccollinear * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ c= * * * f1 f3 b0 b1 cdistance c, b2 * * * * f2 f3 b0 b1 b2 c= * * * f0 f3 b0 b1 b2
- |- ((!P. (((_2158381 P) \/ (~ (P (@ P)))) /\ ((~ (_2158381 P)) \/ (P (@ P))))) = ((!P. ((_2158381 P) \/ (~ (P (@ P))))) /\ (!P. ((~ (_2158381 P)) \/ (P (@ P))))))
T c= ! c/\ c\/ * f0 b0 c~ * b0 c@ b0 c\/ c~ * f0 b0 * b0 c@ b0 c/\ ! c\/ * f0 b0 c~ * b0 c@ b0 ! c\/ c~ * f0 b0 * b0 c@ b0
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- ((!vc'. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc' INSERT EMPTY))))) /\ (?c. ((!w. ((~ (w IN (va INSERT (vb INSERT (vc' INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc' INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc' INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p'))))))))) = ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (!vc. (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p'))))))))))
T c= ! c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ ! c\/ c~ cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b1 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ c= b2 cdistance c, b3 b4 c= b1 b3 c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ ! c\/ c~ cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b1 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ c= b2 cdistance c, b3 b4 c= b1 b3
+ |- (((?c. ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w)))))))) /\ (?v'. (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))) = (?c. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (?v'. (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))))
T c= c/\ c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, f3 b1 c? / ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b0 b1 b2 c~ c= b2 cdistance c, b1 * * b0 b1 b2 c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, f3 b1 c? / ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b1 b2 b3 c~ c= b3 cdistance c, b2 * * b1 b2 b3
- (_2158368 = _2158370) |- ((_2158367 = _2158369) ==> (((hull _2158367) _2158368) = ((hull _2158369) _2158370)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- (_2158341 = _2158345) |- ((_2158342 = _2158346) ==> ((~ (_2158343 = _2158347)) \/ ((~ (_2158344 = _2158348)) \/ (((((w _2158341) _2158342) _2158343) _2158344) = ((((w _2158345) _2158346) _2158347) _2158348)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= * * * * f8 f0 f2 f4 f6 * * * * f8 f1 f3 f5 f7
+ (~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) |- ((? = _2158382) ==> F)
T c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? f3 cF
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (~ F), (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c/\ c~ cF cF
- |- ((!P'. ((~ (_2158381 P)) \/ (P' (@ P')))) = ((~ (_2158381 P)) \/ (!P. (P (@ P)))))
T c= ! c\/ c~ * f0 f1 * b0 c@ b0 c\/ c~ * f0 f1 ! * b0 c@ b0
- (!P. ((_2158382 P) = (P (@ P)))) |- (((!P. ((~ ((I _2158382) P)) \/ ((I P) ((I @) P)))) ==> ((\P. ((~ ((I _2158382) P)) \/ ((I P) ((I @) P)))) _2158389)) = ((\P. ((~ ((I _2158382) P)) \/ ((I P) ((I @) P)))) _2158389))
T c==> ! c= * f0 b0 * b0 c@ b0 c= c==> ! c\/ c~ cI f0 b0 cI b0 cI part c@ b0 * / c\/ c~ cI f0 b0 cI b0 cI part c@ b0 f1 * / c\/ c~ cI f0 b0 cI b0 cI part c@ b0 f1
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((c = ((I distance) ((I ((I ,) p)) ((I ((I v') p)) c)))) = (((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p) /\ (c = ((I distance) ((I ((I ,) p)) ((I ((I v') p)) c))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c= c= f4 cI part cdistance cI * * part cI part c, f3 cI * * part cI f5 f3 f4 c/\ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3 c= f4 cI part cdistance cI * * part cI part c, f3 cI * * part cI f5 f3 f4
+ |- ((((\c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))) c) ==> F) = T)
T c= c==> * / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b0 cdistance c, f3 b2 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b1 b2 b3 c~ c= b3 cdistance c, b2 * * b1 b2 b3 f4 cF cT
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- (!vc. (!w. (((collinear (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))) \/ ((((p _2158329) _2158330) vc) IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))))) /\ (((collinear (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))) \/ ((~ (w IN (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY))))) \/ ((((c _2158329) _2158330) vc) = (distance ((((p _2158329) _2158330) vc) , w))))) /\ (((collinear (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))))) \/ (((((w _2158329) _2158330) vc) w) IN (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY))))) \/ ((((p _2158329) _2158330) vc) = w))) /\ ((collinear (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (vc INSERT EMPTY)))))) \/ (~ ((((c _2158329) _2158330) vc) = (distance (w , ((((w _2158329) _2158330) vc) w)))))) \/ ((((p _2158329) _2158330) vc) = w))))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 ! ! c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY cIN * * * f0 f3 f4 b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c\/ c~ cIN b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c= * * * f1 f3 f4 b0 cdistance c, * * * f0 f3 f4 b0 b1 c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY cIN * * * * f2 f3 f4 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c= * * * f0 f3 f4 b0 b1 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c~ c= * * * f1 f3 f4 b0 cdistance c, b1 * * * * f2 f3 f4 b0 b1 c= * * * f0 f3 f4 b0 b1
- |- ((!v'. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (?v''. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v'') /\ (~ (c = (distance (v' , v''))))))))) = ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!v. (!c. (?v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') /\ (~ (c = (distance (v , v'))))))))))
T c= ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c? / c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c~ c= b1 cdistance c, b0 b2 c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! ! c? / c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c~ c= b1 cdistance c, b0 b2
+ |- ((!v. (?v'. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) (v' c)) /\ (~ (c = (distance (v , (v' c)))))))))) = (?v'. (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))
T c= ! c? / c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * b1 b2 c~ c= b2 cdistance c, b0 * b1 b2 c? / ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b0 b1 b2 c~ c= b2 cdistance c, b1 * * b0 b1 b2
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- (((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> F) = F)
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c= c==> ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF cF
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- ((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (((~ (_2158332 IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ (~ ((((c _2158329) _2158330) _2158331) = (distance (_2158332 , ((((w _2158329) _2158330) _2158331) _2158332)))))) \/ ((((p _2158329) _2158330) _2158331) = _2158332)))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * * f1 f3 f4 f5 cdistance c, f6 * * * * f2 f3 f4 f5 f6 c= * * * f0 f3 f4 f5 f6
+ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- (((!p. (!c. (((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (p , ((w' p) c))))))))) ==> ((\p. (!c. (((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (p , ((w' p) c))))))))) _2158333)) = ((\p. (!c. (((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (p , ((w' p) c))))))))) _2158333))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 c= c==> ! ! c/\ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 * / ! c/\ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 f4 * / ! c/\ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 f4
+ |- ((!va. (?p. (?c. (?w. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((((p vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (((c vb) vc) = (distance (((p vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((((w vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (((c vb) vc) = (distance (p' , (((w vb) vc) p'))))))) \/ (((p vb) vc) = p')))))))))))) = (?p. (!va. (?c. (?w. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (((c vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((((w vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (((c vb) vc) = (distance (p' , (((w vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))))))
T c= ! c? / c? / c? / ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * b1 b4 b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ ! c\/ c~ cIN b6 * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * b2 b4 b5 cdistance c, * * b1 b4 b5 b6 ! c\/ c\/ c~ cIN b6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * b3 b4 b5 b6 * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ c= * * b2 b4 b5 cdistance c, b6 * * * b3 b4 b5 b6 c= * * b1 b4 b5 b6 c? / ! c? / c? / ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * b0 b1 b4 b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ ! c\/ c~ cIN b6 * * part cINSERT b1 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * b2 b4 b5 cdistance c, * * * b0 b1 b4 b5 b6 ! c\/ c\/ c~ cIN b6 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * b3 b4 b5 b6 * * part cINSERT b1 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ c= * * b2 b4 b5 cdistance c, b6 * * * b3 b4 b5 b6 c= * * * b0 b1 b4 b5 b6
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- (!w'. (((\w. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w p) c))))))))))) w') ==> F))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 ! c==> * / c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * b1 b2 b3 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b3 cdistance c, b2 * * b1 b2 b3 b0 cF
- (!P. ((_2158381 P) = (P (@ P)))) |- ((!P. ((_2158381 P) \/ (~ (P (@ P))))) /\ (!P. ((~ (_2158381 P)) \/ (P (@ P)))))
T c==> ! c= * f0 b0 * b0 c@ b0 c/\ ! c\/ * f0 b0 c~ * b0 c@ b0 ! c\/ c~ * f0 b0 * b0 c@ b0
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((((p _2158329) _2158330) _2158331) IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) /\ (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((~ (_2158332 IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ ((((c _2158329) _2158330) _2158331) = (distance ((((p _2158329) _2158330) _2158331) , _2158332))))) /\ (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (((~ (_2158332 IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ (((((w _2158329) _2158330) _2158331) _2158332) IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ ((((p _2158329) _2158330) _2158331) = _2158332))) /\ ((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (((~ (_2158332 IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ (~ ((((c _2158329) _2158330) _2158331) = (distance (_2158332 , ((((w _2158329) _2158330) _2158331) _2158332)))))) \/ ((((p _2158329) _2158330) _2158331) = _2158332))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c~ cIN f6 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * * f1 f3 f4 f5 cdistance c, * * * f0 f3 f4 f5 f6 c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * * * f2 f3 f4 f5 f6 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * * f0 f3 f4 f5 f6 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * * f1 f3 f4 f5 cdistance c, f6 * * * * f2 f3 f4 f5 f6 c= * * * f0 f3 f4 f5 f6
- (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((~ F) ==> F)
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c==> c~ cF cF
- |- ((?p'. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))))) = ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))
T c= c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / ! c==> cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2
- |- ((_2158371 = _2158373) ==> ((~ (_2158372 = _2158374)) \/ (((w' _2158371) _2158372) = ((w' _2158373) _2158374))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * f4 f0 f2 * * f4 f1 f3
+ |- ((!b. ((F ==> b) ==> (F = (F /\ b)))) = (((F ==> T) ==> (F = (F /\ T))) /\ ((F ==> F) ==> (F = (F /\ F)))))
T c= ! c==> c==> cF b0 c= cF c/\ cF b0 c/\ c==> c==> cF cT c= cF c/\ cF cT c==> c==> cF cF c= cF c/\ cF cF
- |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- ((_2158368 = _2158370) ==> ((~ (_2158367 = _2158369)) \/ (((hull _2158367) _2158368) = ((hull _2158369) _2158370))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p) ==> ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') p)) _2158384))) = ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') p)) _2158384)))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c= c==> cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f3 f6 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f3 f6
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- (((\c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) c) ==> F)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> * / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f3 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b2 b3 b4 cdistance c, * * * f3 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f3 b2 b3 b4 b5 f4 cF
+ |- ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) = ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))))))
T c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2
+ ((\v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))) v') |- (((\v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))) v') /\ F)
T c==> * / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= f4 cdistance c, f3 b1 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b0 b1 b2 c~ c= b2 cdistance c, b1 * * b0 b1 b2 f5 c/\ * / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= f4 cdistance c, f3 b1 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b0 b1 b2 c~ c= b2 cdistance c, b1 * * b0 b1 b2 f5 cF
+ (!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) |- (((?p. (?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))))) ==> F) = F)
T c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 c= c==> c? / c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * b0 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ ! c\/ c~ cIN b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * * b1 b3 b4 b5 cdistance c, * * * b0 b3 b4 b5 b6 ! c\/ c\/ c~ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * * b2 b3 b4 b5 b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ c= * * * b1 b3 b4 b5 cdistance c, b6 * * * * b2 b3 b4 b5 b6 c= * * * b0 b3 b4 b5 b6 cF cF
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- (((\p. (?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))))) p) ==> F)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> * / c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * b0 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ ! c\/ c~ cIN b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * * b1 b3 b4 b5 cdistance c, * * * b0 b3 b4 b5 b6 ! c\/ c\/ c~ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * * b2 b3 b4 b5 b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ c= * * * b1 b3 b4 b5 cdistance c, b6 * * * * b2 b3 b4 b5 b6 c= * * * b0 b3 b4 b5 b6 f3 cF
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- ((\va. (!vb. (!vc. (!w. (((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) /\ (((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((((w va) vb) vc) w) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((p va) vb) vc) = w))) /\ ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ ((((c va) vb) vc) = (distance (w , ((((w va) vb) vc) w)))))) \/ ((((p va) vb) vc) = w)))))))))) _2158329)
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 * / ! ! ! c/\ c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 c/\ c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f0 b0 b1 b2 b3 c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 f3
+ (_2158382 = (\P. (P (@ P)))) |- ((_2158382 = (\P. (P (@ P)))) /\ ((!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = (\P. (P (@ P)))))))))))) = (!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = _2158382)))))))))))
T c==> c= f0 / * b0 c@ b0 c/\ c= f0 / * b0 c@ b0 c= ! c==> ! c= * b0 b1 * b1 c@ b1 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c==> c= part c? b0 c~ c= part c? / * b4 c@ b4 ! c==> ! c= * b0 b1 * b1 c@ b1 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c==> c= part c? b0 c~ c= part c? f0
+ |- (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = _2158382)))))))
T c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? f3 c~ c= part c? f4
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- ((((\w. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w p) c))))))))))) w') ==> F) = T)
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c= c==> * / c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * b0 b1 b2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b2 cdistance c, b1 * * b0 b1 b2 f6 cF cT
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((\w. ((~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) w)) \/ (c = ((I distance) ((I ((I ,) p)) w))))) _2158385)
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 * / c\/ c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 c= f4 cI part cdistance cI * * part cI part c, f3 b0 f6
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- ((!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) /\ F)
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= b1 cdistance c, b0 b2 c/\ ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 cF
- |- ((~ (_2158371 = _2158373)) \/ ((~ (_2158372 = _2158374)) \/ (((w' _2158371) _2158372) = ((w' _2158373) _2158374))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * f4 f0 f2 * * f4 f1 f3
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!v. ((P v) \/ Q)) = ((!v. (P v)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) |- (?p. (?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))))
T c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 c= b1 cdistance c, b0 b3 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b2 b3 b4 c~ c= b4 cdistance c, b3 * * b2 b3 b4
+ |- ((((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!w. (((~ (w IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) w) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (w , ((((w va) vb) vc) w))))))) \/ ((((p va) vb) vc) = w)))) = (!w. (((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w)))) /\ (((~ (w IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) w) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (w , ((((w va) vb) vc) w))))))) \/ ((((p va) vb) vc) = w))))) = (((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))) = (!w. (((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w)))) /\ (((~ (w IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) w) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (w , ((((w va) vb) vc) w))))))) \/ ((((p va) vb) vc) = w))))))
T c= c= c/\ ! c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * * f3 f0 f1 f2 cdistance c, * * * f4 f0 f1 f2 b0 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * * * * f5 f0 f1 f2 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * * f3 f0 f1 f2 cdistance c, b0 * * * * f5 f0 f1 f2 b0 c= * * * f4 f0 f1 f2 b0 ! c/\ c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * * f3 f0 f1 f2 cdistance c, * * * f4 f0 f1 f2 b0 c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * * * * f5 f0 f1 f2 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * * f3 f0 f1 f2 cdistance c, b0 * * * * f5 f0 f1 f2 b0 c= * * * f4 f0 f1 f2 b0 c= c/\ ! c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * * f3 f0 f1 f2 cdistance c, * * * f4 f0 f1 f2 b0 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * * * * f5 f0 f1 f2 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * * f3 f0 f1 f2 cdistance c, b0 * * * * f5 f0 f1 f2 b0 c= * * * f4 f0 f1 f2 b0 ! c/\ c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * * f3 f0 f1 f2 cdistance c, * * * f4 f0 f1 f2 b0 c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * * * * f5 f0 f1 f2 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * * f3 f0 f1 f2 cdistance c, b0 * * * * f5 f0 f1 f2 b0 c= * * * f4 f0 f1 f2 b0
- (? = _2158381) |- ((((I _2158382) _2158388) \/ (~ ((I _2158388) ((I @) _2158388)))) = (((I _2158382) _2158388) \/ (~ ((I _2158388) ((I @) _2158388)))))
T c==> c= part c? f0 c= c\/ cI f1 f2 c~ cI f2 cI part c@ f2 c\/ cI f1 f2 c~ cI f2 cI part c@ f2
- |- ((?p'. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p' , w)))))))) = ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?p. (?c. (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w)))))))))
T c= c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c? / ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c? / c? / ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F), (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- (((\w. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w p) c))))))))))) w') ==> F)
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> * / c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * b0 b1 b2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b2 cdistance c, b1 * * b0 b1 b2 f6 cF
+ |- (((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))))) = (?w. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))))))
T c= c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c/\ cIN * b0 b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b1 cdistance c, f0 * b0 b1 c? / c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c/\ cIN * b0 b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b1 cdistance c, f0 * b0 b1
- |- (((!vc. (!vb. (!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F))))) ==> ((\vc. (!vb. (!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F))))) vc)) = ((\vc. (!vb. (!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F))))) vc))
T c= c==> ! ! ! c==> c~ c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b4 cdistance c, b3 b5 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY ! c==> cIN b6 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF * / ! ! c==> c~ c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b4 cdistance c, b3 b5 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY ! c==> cIN b6 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF f0 * / ! ! c==> c~ c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b4 cdistance c, b3 b5 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY ! c==> cIN b6 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF f0
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (((~ (_2158332 IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ (((((w _2158329) _2158330) _2158331) _2158332) IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ ((((p _2158329) _2158330) _2158331) = _2158332))) /\ ((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (((~ (_2158332 IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ (~ ((((c _2158329) _2158330) _2158331) = (distance (_2158332 , ((((w _2158329) _2158330) _2158331) _2158332)))))) \/ ((((p _2158329) _2158330) _2158331) = _2158332))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * * * f2 f3 f4 f5 f6 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * * f0 f3 f4 f5 f6 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * * f1 f3 f4 f5 cdistance c, f6 * * * * f2 f3 f4 f5 f6 c= * * * f0 f3 f4 f5 f6
- (_2158355 = _2158358), (_2158356 = _2158359) |- ((_2158356 = _2158359) /\ ((~ (_2158357 = _2158360)) \/ ((((p _2158355) _2158356) _2158357) = (((p _2158358) _2158359) _2158360))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c= * * * f6 f0 f2 f4 * * * f6 f1 f3 f5
+ |- (((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (?c. (?w. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p')))))))) = (?c. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (?w. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p')))))))))
T c= c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c? / c/\ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c\/ c~ cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b2 ! c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, b2 * b1 b2 c= f3 b2 c? / c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c\/ c~ cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b2 ! c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, b2 * b1 b2 c= f3 b2
+ |- (((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (?w. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p'))))))) = (?w. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p'))))))))
T c= c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c\/ c~ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b1 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b1 * b0 b1 c= f3 b1 c? / c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c\/ c~ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b1 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b1 * b0 b1 c= f3 b1
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((\c. (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') _2158383)) c))) /\ ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ (~ (c = ((I distance) ((I ((I ,) _2158383)) ((I ((I v') _2158383)) c)))))))) _2158384)
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 * / c/\ c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f6 b0 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 c~ c= b0 cI part cdistance cI * * part cI part c, f6 cI * * part cI f5 f6 b0 f7
- (!P. ((_2158382 P) = (P (@ P)))) |- (!P. (((I _2158382) P) \/ (~ ((I P) ((I @) P)))))
T c==> ! c= * f0 b0 * b0 c@ b0 ! c\/ cI f0 b0 c~ cI b0 cI part c@ b0
+ |- ((!va. (?w. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((((w vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , (((w vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))) = (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))))
T c= ! c? / ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f0 b0 b2 b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f1 b0 b2 b3 cdistance c, * * * f0 b0 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * b1 b2 b3 b4 * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f1 b0 b2 b3 cdistance c, b4 * * * b1 b2 b3 b4 c= * * * f0 b0 b2 b3 b4 c? / ! ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f1 b1 b2 b3 cdistance c, * * * f0 b1 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * * b0 b1 b2 b3 b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f1 b1 b2 b3 cdistance c, b4 * * * * b0 b1 b2 b3 b4 c= * * * f0 b1 b2 b3 b4
- (!P. ((_2158381 P) = (P (@ P)))) |- ((!P. (((I _2158381) P) \/ (~ ((I P) ((I @) P))))) /\ (!P. ((~ ((I _2158381) P)) \/ ((I P) ((I @) P)))))
T c==> ! c= * f0 b0 * b0 c@ b0 c/\ ! c\/ cI f0 b0 c~ cI b0 cI part c@ b0 ! c\/ c~ cI f0 b0 cI b0 cI part c@ b0
+ |- (!v'. (((\v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))) v') ==> F))
T c==> * / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= f4 cdistance c, f3 b1 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b0 b1 b2 c~ c= b2 cdistance c, b1 * * b0 b1 b2 f5 cF
+ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- (!c. (((~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' _2158333) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (_2158333 , ((w' _2158333) c))))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 ! c/\ c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * * f3 f4 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, f4 * * f3 f4 b0
- (? = _2158381) |- (F = F)
T c==> c= part c? f0 c= cF cF
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((~ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , ((w' (((p va) vb) vc)) (((c va) vb) vc)))))) ==> ((((c va) vb) vc) = (distance ((((p va) vb) vc) , ((w' (((p va) vb) vc)) (((c va) vb) vc))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c==> c~ c= * * * f1 f3 f4 f5 cdistance c, * * * f0 f3 f4 f5 * * f6 * * * f0 f3 f4 f5 * * * f1 f3 f4 f5 c= * * * f1 f3 f4 f5 cdistance c, * * * f0 f3 f4 f5 * * f6 * * * f0 f3 f4 f5 * * * f1 f3 f4 f5
+ |- (((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F)) = ((? = (\P. (P (@ P)))) ==> F))
T c= c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c= part c? / * b0 c@ b0 cF
- |- (((!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F))) ==> ((\va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F))) va)) = ((\va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F))) va))
T c= c==> ! c==> c~ c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= b2 cdistance c, b1 b3 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF * / c==> c~ c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= b2 cdistance c, b1 b3 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF f2 * / c==> c~ c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= b2 cdistance c, b1 b3 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF f2
+ |- ((!vc. (?c. (?w. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((p vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance ((p vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ ((p vc) = p'))))))))) = (?c. (!vc. (?w. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((p vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((c vc) = (distance ((p vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((c vc) = (distance (p' , (w p'))))))) \/ ((p vc) = p'))))))))))
T c= ! c? / c? / c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN * f2 b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b1 cdistance c, * f2 b0 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN * b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ c= b1 cdistance c, b3 * b2 b3 c= * f2 b0 b3 c? / ! c? / c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c/\ cIN * f2 b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c= * b0 b1 cdistance c, * f2 b1 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c/\ cIN * b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c~ c= * b0 b1 cdistance c, b3 * b2 b3 c= * f2 b1 b3
+ |- ((_2158382 = (\P. (P (@ P)))) = (!P. ((_2158382 P) = (P (@ P)))))
T c= c= f0 / * b0 c@ b0 ! c= * f0 b0 * b0 c@ b0
- (_2158485 = _2158487) |- ((_2158485 = _2158487) /\ ((~ (_2158484 = _2158486)) \/ (((I _2158484) _2158485) = ((I _2158486) _2158487))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- ((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((~ (_2158332 IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ ((((((w _2158329) _2158330) _2158331) _2158332) IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((((p _2158329) _2158330) _2158331) = _2158332))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ cIN * * * * f2 f3 f4 f5 f6 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * * f0 f3 f4 f5 f6
- (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (~ ((I collinear) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c~ cI part ccollinear * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- (((?w. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w p) c))))))))))) ==> F) = F)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c= c==> c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * b0 b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b2 cdistance c, b1 * * b0 b1 b2 cF cF
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))) ==> ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F)))) ==> (((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))) ==> ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F)))))
T c==> c==> c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ (~ (_2158384 = ((I distance) ((I ((I ,) _2158383)) ((I ((I v') _2158383)) _2158384))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 c~ c= f7 cI part cdistance cI * * part cI part c, f6 cI * * part cI f5 f6 f7
+ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((\p. (!c. (((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (p , ((w' p) c))))))))) _2158333)
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 * / ! c/\ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 f4
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (((~ ((I collinear) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) /\ (((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p) /\ (!w. ((~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) w)) \/ (c = ((I distance) ((I ((I ,) p)) w))))))) /\ (!v. ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ (!c. (((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') v)) c)) /\ (~ (c = ((I distance) ((I ((I ,) v)) ((I ((I v') v)) c))))))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c/\ c/\ c~ cI part ccollinear * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY c/\ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3 ! c\/ c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 c= f4 cI part cdistance cI * * part cI part c, f3 b0 ! c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 ! c/\ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 b0 b1 c~ c= b1 cI part cdistance cI * * part cI part c, b0 cI * * part cI f5 b0 b1
+ |- (((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) = (?c. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))))
T c= c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c? / ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, f3 b1 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, f3 b1
- (_2158341 = _2158345), (_2158342 = _2158346), (_2158343 = _2158347) |- ((_2158344 = _2158348) ==> (((((w _2158341) _2158342) _2158343) _2158344) = ((((w _2158345) _2158346) _2158347) _2158348)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c= * * * * f8 f0 f2 f4 f6 * * * * f8 f1 f3 f5 f7
- |- ((_2158335 = _2158337) ==> ((~ (_2158336 = _2158338)) \/ ((_2158337 IN _2158338) \/ (~ (_2158335 IN _2158336)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ |- ((!p'. (?w. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w)))))) \/ (p = p')))) = (?w. (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p')))))
T c= ! c? / c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f3 cdistance c, b0 b1 c= f4 b0 c? / ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f3 cdistance c, b1 * b0 b1 c= f4 b1
- (?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))), (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- F
T c==> c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f0 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b2 b3 b4 cdistance c, * * * f0 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f0 b2 b3 b4 b5 c==> c~ c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 cF
+ |- ((\b. ((a ==> b) ==> (a = (a /\ b)))) b)
T * / c==> c==> f0 b0 c= f0 c/\ f0 b0 f1
- (?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))) |- ((?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))) /\ F)
T c==> c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b0 cdistance c, f3 b2 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b1 b2 b3 c~ c= b3 cdistance c, b2 * * b1 b2 b3 c/\ c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b0 cdistance c, f3 b2 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b1 b2 b3 c~ c= b3 cdistance c, b2 * * b1 b2 b3 cF
+ |- (((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))) = (!c. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))
T c= c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c/\ cIN * * f4 f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f0 * * f4 f0 b0 ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * * f4 f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f0 * * f4 f0 b0
- (? = _2158381) |- ((((I _2158381) _2158386) \/ (~ ((I _2158386) ((I @) _2158386)))) = (((I _2158381) _2158386) \/ (~ ((I _2158386) ((I @) _2158386)))))
T c==> c= part c? f0 c= c\/ cI f0 f1 c~ cI f1 cI part c@ f1 c\/ cI f0 f1 c~ cI f1 cI part c@ f1
- |- ((?p'. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p') /\ (?c. (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w)))))))) = ((?p. (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p)) /\ (?c. (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))))
T c= c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, f3 b2 c/\ c? / chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, f3 b1
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') _2158383)) _2158384))) /\ ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ (~ (_2158384 = ((I distance) ((I ((I ,) _2158383)) ((I ((I v') _2158383)) _2158384)))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c/\ c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f6 f7 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 c~ c= f7 cI part cdistance cI * * part cI part c, f6 cI * * part cI f5 f6 f7
+ |- (((!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F)))))) ==> ((\v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F)))))) v3)) = ((\v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F)))))) v3))
T c= c==> ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? / * b3 c@ b3 c==> c= part c? / * b3 c@ b3 cF * / ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? / * b3 c@ b3 c==> c= part c? / * b3 c@ b3 cF f0 * / ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? / * b3 c@ b3 c==> c= part c? / * b3 c@ b3 cF f0
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))), ((\w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))) w) |- (((\w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))) w) /\ F)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> * / ! ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f3 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f4 b1 b2 b3 cdistance c, * * * f3 b1 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * * b0 b1 b2 b3 b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f4 b1 b2 b3 cdistance c, b4 * * * * b0 b1 b2 b3 b4 c= * * * f3 b1 b2 b3 b4 f5 c/\ * / ! ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f3 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f4 b1 b2 b3 cdistance c, * * * f3 b1 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * * b0 b1 b2 b3 b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f4 b1 b2 b3 cdistance c, b4 * * * * b0 b1 b2 b3 b4 c= * * * f3 b1 b2 b3 b4 f5 cF
- |- (T = (((~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) _2158385)) \/ (c = ((I distance) ((I ((I ,) p)) _2158385)))) = ((c = ((I distance) ((I ((I ,) p)) _2158385))) \/ (~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) _2158385)))))
T c= cT c= c\/ c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3 c= f4 cI part cdistance cI * * part cI part c, f5 f3 c\/ c= f4 cI part cdistance cI * * part cI part c, f5 f3 c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3
- |- ((?p'. ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p'))))))) = ((?p. (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) /\ (?c. ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p')))))))
T c= c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c\/ c~ cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, f3 b2 ! c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b2 b2 c= f3 b2 c/\ c? / cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c\/ c~ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, b1 b2 c= f3 b1
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) _2158385) ==> (c = ((I distance) ((I ((I ,) p)) _2158385))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c==> cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 c= f4 cI part cdistance cI * * part cI part c, f3 f6
+ |- (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) = (?w. ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))))
T c= c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f0 b0 c? / c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f0 b0
- (? = _2158381) |- (((~ ((I _2158381) _2158387)) \/ ((I _2158387) ((I @) _2158387))) = ((~ ((I _2158381) _2158387)) \/ ((I _2158387) ((I @) _2158387))))
T c==> c= part c? f0 c= c\/ c~ cI f0 f1 cI f1 cI part c@ f1 c\/ c~ cI f0 f1 cI f1 cI part c@ f1
- |- ((_2158375 = _2158377) ==> ((~ (_2158376 = _2158378)) \/ ((_2158375 INSERT _2158376) = (_2158377 INSERT _2158378))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_2158376 = _2158378), (_2158375 = _2158377) |- ((_2158376 = _2158378) /\ ((_2158375 INSERT _2158376) = (_2158377 INSERT _2158378)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((~ (_2158332 IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ ((((c _2158329) _2158330) _2158331) = (distance ((((p _2158329) _2158330) _2158331) , _2158332))))) /\ (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (((~ (_2158332 IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ (((((w _2158329) _2158330) _2158331) _2158332) IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ ((((p _2158329) _2158330) _2158331) = _2158332))) /\ ((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (((~ (_2158332 IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ (~ ((((c _2158329) _2158330) _2158331) = (distance (_2158332 , ((((w _2158329) _2158330) _2158331) _2158332)))))) \/ ((((p _2158329) _2158330) _2158331) = _2158332)))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c~ cIN f6 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * * f1 f3 f4 f5 cdistance c, * * * f0 f3 f4 f5 f6 c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * * * f2 f3 f4 f5 f6 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * * f0 f3 f4 f5 f6 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * * f1 f3 f4 f5 cdistance c, f6 * * * * f2 f3 f4 f5 f6 c= * * * f0 f3 f4 f5 f6
+ ((\w. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w p) c))))))))))) w') |- ((((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) ==> F) = F)
T c==> * / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * b0 b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b2 cdistance c, b1 * * b0 b1 b2 f3 c= c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 cF cF
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (~ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , ((w' (((p va) vb) vc)) (((c va) vb) vc)))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((~ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , ((w' (((p va) vb) vc)) (((c va) vb) vc)))))) /\ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , ((w' (((p va) vb) vc)) (((c va) vb) vc))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ c= * * * f1 f3 f4 f5 cdistance c, * * * f0 f3 f4 f5 * * f6 * * * f0 f3 f4 f5 * * * f1 f3 f4 f5 c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c/\ c~ c= * * * f1 f3 f4 f5 cdistance c, * * * f0 f3 f4 f5 * * f6 * * * f0 f3 f4 f5 * * * f1 f3 f4 f5 c= * * * f1 f3 f4 f5 cdistance c, * * * f0 f3 f4 f5 * * f6 * * * f0 f3 f4 f5 * * * f1 f3 f4 f5
+ |- ((?p. (?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))))) ==> F)
T c==> c? / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 c= b1 cdistance c, b0 b3 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b2 b3 b4 c~ c= b4 cdistance c, b3 * * b2 b3 b4 cF
- |- ((_2158472 = _2158474) ==> ((~ (_2158473 = _2158475)) \/ (((I _2158472) _2158473) = ((I _2158474) _2158475))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((a ==> b) ==> (a = (a /\ b)))
T c==> c==> f0 f1 c= f0 c/\ f0 f1
- (_2158444 = _2158446), (_2158445 = _2158447) |- ((_2158444 = _2158446) /\ (((I _2158446) _2158447) \/ (~ ((I _2158444) _2158445))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cI f1 f3 c~ cI f0 f2
+ |- ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) (@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w))))))))) /\ (?c. (!v. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v) ==> (c = (distance ((@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w)))))))) , v))))))))) ==> F)
T c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 cdistance c, b2 b2 b1 cF
- ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))) |- (((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))) /\ ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))))
T c==> c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c/\ c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- (?w. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w p) c)))))))))))
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * b0 b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b2 cdistance c, b1 * * b0 b1 b2
+ (_2158382 = (\P. (P (@ P)))) |- ((\P. (P (@ P))) = _2158382)
T c==> c= f0 / * b0 c@ b0 c= / * b0 c@ b0 f0
+ |- (((!x. (((\c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))) x) ==> F)) ==> ((?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))) ==> F)) = ((?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 c= b1 cdistance c, f3 b3 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b2 b3 b4 c~ c= b4 cdistance c, b3 * * b2 b3 b4 b0 cF c==> c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b0 cdistance c, f3 b2 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b1 b2 b3 c~ c= b3 cdistance c, b2 * * b1 b2 b3 cF c==> c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b0 cdistance c, f3 b2 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b1 b2 b3 c~ c= b3 cdistance c, b2 * * b1 b2 b3 cF
+ (_2158381 = (\P. (P (@ P)))) |- ((_2158381 = (\P. (P (@ P)))) /\ ((!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> (~ (? = (\P. (P (@ P)))))))))) = (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = (\P. (P (@ P))))))))))))
T c==> c= f0 / * b0 c@ b0 c/\ c= f0 / * b0 c@ b0 c= ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? / * b3 c@ b3 c~ c= part c? / * b3 c@ b3 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? f0 c~ c= part c? / * b3 c@ b3
- |- ((?v''. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v'') /\ (~ (c = (distance (v , v')))))) = ((?v'. ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v')) /\ (~ (c = (distance (v , v'))))))
T c= c? / c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c~ c= f3 cdistance c, f4 f5 c/\ c? / cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c~ c= f3 cdistance c, f4 f5
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- |- ((!w'. ((~ (w' IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) = ((!w. (~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (c = (distance (p , w)))))
T c= ! c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 f5 c\/ ! c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 f5
- |- ((?w'. ((w' IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w)))))) = ((?w. (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (~ (c = (distance (p' , w))))))
T c= c? / c/\ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f3 cdistance c, f4 f5 c/\ c? / cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f3 cdistance c, f4 f5
+ |- ((!va. (?c. (?w. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (((c vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((((w vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (((c vb) vc) = (distance (p' , (((w vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) = (?c. (!va. (?w. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((((w vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , (((w vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))))
T c= ! c? / c? / ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f0 b0 b3 b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * b1 b3 b4 cdistance c, * * * f0 b0 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * b2 b3 b4 b5 * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * b1 b3 b4 cdistance c, b5 * * * b2 b3 b4 b5 c= * * * f0 b0 b3 b4 b5 c? / ! c? / ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f0 b1 b3 b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b1 b3 b4 cdistance c, * * * f0 b1 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * b2 b3 b4 b5 * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b1 b3 b4 cdistance c, b5 * * * b2 b3 b4 b5 c= * * * f0 b1 b3 b4 b5
- |- ((!p''. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p''))) = (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (!p'. (p = p'))))
T c= ! c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f0 b1 c= f5 b0 c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f0 b0 ! c= f5 b0
- (_2158468 = _2158470), (_2158469 = _2158471) |- ((_2158468 = _2158470) /\ (((I _2158468) _2158469) = ((I _2158470) _2158471)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cI f0 f2 cI f1 f3
- (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((~ (c = ((I distance) ((I ((I ,) p)) ((I ((I v') p)) c))))) ==> (c = ((I distance) ((I ((I ,) p)) ((I ((I v') p)) c)))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c==> c~ c= f4 cI part cdistance cI * * part cI part c, f3 cI * * part cI f5 f3 f4 c= f4 cI part cdistance cI * * part cI part c, f3 cI * * part cI f5 f3 f4
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- (((!x. (((\p. (?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))))) x) ==> F)) ==> ((?p. (?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))))) ==> F)) = ((?p. (?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))))) ==> F))
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c= c==> ! c==> * / c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN * * * b1 b4 b5 b6 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ ! c\/ c~ cIN b7 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c= * * * b2 b4 b5 b6 cdistance c, * * * b1 b4 b5 b6 b7 ! c\/ c\/ c~ cIN b7 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN * * * * b3 b4 b5 b6 b7 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c~ c= * * * b2 b4 b5 b6 cdistance c, b7 * * * * b3 b4 b5 b6 b7 c= * * * b1 b4 b5 b6 b7 b0 cF c==> c? / c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * b0 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ ! c\/ c~ cIN b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * * b1 b3 b4 b5 cdistance c, * * * b0 b3 b4 b5 b6 ! c\/ c\/ c~ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * * b2 b3 b4 b5 b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ c= * * * b1 b3 b4 b5 cdistance c, b6 * * * * b2 b3 b4 b5 b6 c= * * * b0 b3 b4 b5 b6 cF c==> c? / c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * b0 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ ! c\/ c~ cIN b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * * b1 b3 b4 b5 cdistance c, * * * b0 b3 b4 b5 b6 ! c\/ c\/ c~ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * * b2 b3 b4 b5 b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ c= * * * b1 b3 b4 b5 cdistance c, b6 * * * * b2 b3 b4 b5 b6 c= * * * b0 b3 b4 b5 b6 cF
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p)
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3
+ |- ((((\p. (?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))))) p) ==> F) = T)
T c= c==> * / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 c= b1 cdistance c, b0 b3 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b2 b3 b4 c~ c= b4 cdistance c, b3 * * b2 b3 b4 f3 cF cT
+ |- (((!P. (!x. ((x IN P) = (P x)))) ==> ((\P. (!x. ((x IN P) = (P x)))) P)) = ((\P. (!x. ((x IN P) = (P x)))) P))
T c= c==> ! ! c= cIN b1 b0 * b0 b1 * / ! c= cIN b1 b0 * b0 b1 f0 * / ! c= cIN b1 b0 * b0 b1 f0
+ |- (!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = _2158382)))))))))
T c==> ! c= * f0 b0 * b0 c@ b0 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? f0 c~ c= part c? f1
- |- ((~ (_2158365 = _2158366)) \/ ((distance _2158365) = (distance _2158366)))
T c\/ c~ c= f0 f1 c= cdistance f0 cdistance f1
- |- ((_2158469 = _2158471) ==> ((~ (_2158468 = _2158470)) \/ (((I _2158468) _2158469) = ((I _2158470) _2158471))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cI f2 f0 cI f3 f1
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) /\ F)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c/\ c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 cF
- |- ((~ (_2158375 = _2158377)) \/ ((~ (_2158376 = _2158378)) \/ ((_2158375 INSERT _2158376) = (_2158377 INSERT _2158378))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (((!v. (!c. (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') v)) c))) /\ ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ (~ (c = ((I distance) ((I ((I ,) v)) ((I ((I v') v)) c))))))))) ==> ((\v. (!c. (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') v)) c))) /\ ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ (~ (c = ((I distance) ((I ((I ,) v)) ((I ((I v') v)) c))))))))) _2158383)) = ((\v. (!c. (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') v)) c))) /\ ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ (~ (c = ((I distance) ((I ((I ,) v)) ((I ((I v') v)) c))))))))) _2158383))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c= c==> ! ! c/\ c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 b0 b1 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 c~ c= b1 cI part cdistance cI * * part cI part c, b0 cI * * part cI f5 b0 b1 * / ! c/\ c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 b0 b1 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 c~ c= b1 cI part cdistance cI * * part cI part c, b0 cI * * part cI f5 b0 b1 f6 * / ! c/\ c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 b0 b1 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 c~ c= b1 cI part cdistance cI * * part cI part c, b0 cI * * part cI f5 b0 b1 f6
- |- ((\vc. (!vb. (!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F))))) vc)
T * / ! ! c==> c~ c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b4 cdistance c, b3 b5 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY ! c==> cIN b6 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF f0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ |- (((!a. (!b. ((a ==> b) ==> (a = (a /\ b))))) ==> ((\a. (!b. ((a ==> b) ==> (a = (a /\ b))))) a)) = ((\a. (!b. ((a ==> b) ==> (a = (a /\ b))))) a))
T c= c==> ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 * / ! c==> c==> b0 b1 c= b0 c/\ b0 b1 f0 * / ! c==> c==> b0 b1 c= b0 c/\ b0 b1 f0
- |- ((p ==> (~ p)) = (~ p))
T c= c==> f0 c~ f0 c~ f0
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- ((\vb. (!vc. (!w. (((collinear (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((((p _2158329) vb) vc) IN ((hull affine) (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))))) /\ (((collinear (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((~ (w IN (_2158329 INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c _2158329) vb) vc) = (distance ((((p _2158329) vb) vc) , w))))) /\ (((collinear (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((((w _2158329) vb) vc) w) IN (_2158329 INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((p _2158329) vb) vc) = w))) /\ ((collinear (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (_2158329 INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ ((((c _2158329) vb) vc) = (distance (w , ((((w _2158329) vb) vc) w)))))) \/ ((((p _2158329) vb) vc) = w))))))))) _2158330)
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 * / ! ! c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN * * * f0 f3 b0 b1 * * part chull part caffine * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN b2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * * f1 f3 b0 b1 cdistance c, * * * f0 f3 b0 b1 b2 c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN * * * * f2 f3 b0 b1 b2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * * f0 f3 b0 b1 b2 c\/ ccollinear * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ c= * * * f1 f3 b0 b1 cdistance c, b2 * * * * f2 f3 b0 b1 b2 c= * * * f0 f3 b0 b1 b2 f4
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383) /\ (_2158384 = ((I distance) ((I ((I ,) _2158383)) ((I ((I v') _2158383)) _2158384))))) ==> F)
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c==> c/\ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 c= f7 cI part cdistance cI * * part cI part c, f6 cI * * part cI f5 f6 f7 cF
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((((w' _2158333) _2158334) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 c\/ cIN * * f3 f4 f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?c. (!w. ((w IN (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (c = (distance (p , w))))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?c. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (c = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) , v))))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- ((\w. (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((((p _2158329) _2158330) _2158331) IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) /\ (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((~ (w IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ ((((c _2158329) _2158330) _2158331) = (distance ((((p _2158329) _2158330) _2158331) , w))))) /\ (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ (((((w _2158329) _2158330) _2158331) w) IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ ((((p _2158329) _2158330) _2158331) = w))) /\ ((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (((~ (w IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) \/ (~ ((((c _2158329) _2158330) _2158331) = (distance (w , ((((w _2158329) _2158330) _2158331) w)))))) \/ ((((p _2158329) _2158330) _2158331) = w))))))) _2158332)
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 * / c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c~ cIN b0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * * f1 f3 f4 f5 cdistance c, * * * f0 f3 f4 f5 b0 c/\ c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * * * f2 f3 f4 f5 b0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * * f0 f3 f4 f5 b0 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * * f1 f3 f4 f5 cdistance c, b0 * * * * f2 f3 f4 f5 b0 c= * * * f0 f3 f4 f5 b0 f6
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F), (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (?w. ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p'))))))) = (?c. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?w. ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p'))))))))
T c= c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c/\ ! c\/ c~ cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, f0 b2 ! c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, b2 * b1 b2 c= f0 b2 c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ ! c\/ c~ cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, f0 b2 ! c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, b2 * b1 b2 c= f0 b2
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))), ((\c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) c) |- (((\c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) c) /\ F)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> * / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f3 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b2 b3 b4 cdistance c, * * * f3 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f3 b2 b3 b4 b5 f4 c/\ * / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f3 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b2 b3 b4 cdistance c, * * * f3 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f3 b2 b3 b4 b5 f4 cF
- (_2158445 = _2158447) |- ((_2158445 = _2158447) /\ ((~ (_2158444 = _2158446)) \/ (((I _2158446) _2158447) \/ (~ ((I _2158444) _2158445)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') _2158383)) _2158384)))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f6 f7
+ |- ((!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = _2158382))))) = T)
T c= ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c? / ! c==> cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c= b2 cdistance c, b1 b3 c? / c/\ chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c? / ! c==> cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c= b2 cdistance c, b1 b3 c==> c= part c? f2 c~ c= part c? f3 cT
- |- ((!w'. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w'))))) = ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (!w. (c = (distance (p , w))))))
T c= ! c\/ c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 cdistance c, f5 b0 c\/ c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c= f4 cdistance c, f5 b0
- ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F)) |- (((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F)) /\ ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F)))
T c==> c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF c/\ c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF
+ (~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) (@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w))))))))) /\ (?c. (!v. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v) ==> (c = (distance ((@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w)))))))) , v))))))))) |- ((? = (\P. (P (@ P)))) ==> F)
T c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 cdistance c, b2 b2 b1 c==> c= part c? / * b0 c@ b0 cF
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((c = ((I distance) ((I ((I ,) p)) _2158385))) \/ (~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) _2158385)))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c\/ c= f4 cI part cdistance cI * * part cI part c, f3 f6 c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6
+ (~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) |- F
T c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 cF
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- ((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((~ (_2158332 IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ ((((c _2158329) _2158330) _2158331) = (distance ((((p _2158329) _2158330) _2158331) , _2158332)))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ c~ cIN f6 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * * f1 f3 f4 f5 cdistance c, * * * f0 f3 f4 f5 f6
+ |- ((!vc. (?w. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((p vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((c vc) = (distance ((p vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((c vc) = (distance (p' , (w p'))))))) \/ ((p vc) = p')))))))) = (?w. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((p vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((c vc) = (distance ((p vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((w vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((c vc) = (distance (p' , ((w vc) p'))))))) \/ ((p vc) = p')))))))))
T c= ! c? / c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN * f2 b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ ! c\/ c~ cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * f3 b0 cdistance c, * f2 b0 b2 ! c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN * b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ c= * f3 b0 cdistance c, b2 * b1 b2 c= * f2 b0 b2 c? / ! c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c/\ cIN * f2 b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c/\ ! c\/ c~ cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c= * f3 b1 cdistance c, * f2 b1 b2 ! c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c/\ cIN * * b0 b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c~ c= * f3 b1 cdistance c, b2 * * b0 b1 b2 c= * f2 b1 b2
+ |- ((!_2158382. ((_2158382 = (\P. (P (@ P)))) ==> ((!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = (\P. (P (@ P)))))))))))) = (!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = _2158382)))))))))))) ==> ((!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = (\P. (P (@ P)))))))))))) = (!_2158382. ((_2158382 = (\P. (P (@ P)))) ==> (!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = _2158382)))))))))))))
T c==> ! c==> c= b0 / * b1 c@ b1 c= ! c==> ! c= * b1 b2 * b2 c@ b2 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c? / ! c==> cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b7 c= b6 cdistance c, b5 b7 c? / c/\ chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c? / ! c==> cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b7 c= b6 cdistance c, b5 b7 c==> c= part c? b1 c~ c= part c? / * b5 c@ b5 ! c==> ! c= * b1 b2 * b2 c@ b2 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c? / ! c==> cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b7 c= b6 cdistance c, b5 b7 c? / c/\ chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c? / ! c==> cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b7 c= b6 cdistance c, b5 b7 c==> c= part c? b1 c~ c= part c? b0 c= ! c==> ! c= * b0 b1 * b1 c@ b1 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c==> c= part c? b0 c~ c= part c? / * b4 c@ b4 ! c==> c= b0 / * b1 c@ b1 ! c==> ! c= * b1 b2 * b2 c@ b2 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c? / ! c==> cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b7 c= b6 cdistance c, b5 b7 c? / c/\ chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c? / ! c==> cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b7 c= b6 cdistance c, b5 b7 c==> c= part c? b1 c~ c= part c? b0
+ |- ((!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = _2158382)))))) = T)
T c= ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c? / ! c==> cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c= b3 cdistance c, b2 b4 c? / c/\ chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c? / ! c==> cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b4 c= b3 cdistance c, b2 b4 c==> c= part c? f1 c~ c= part c? f2 cT
+ |- (!_2158382. ((_2158382 = (\P. (P (@ P)))) ==> ((!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = (\P. (P (@ P)))))))))))) = (!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = _2158382))))))))))))
T c==> c= f0 / * b0 c@ b0 c= ! c==> ! c= * b0 b1 * b1 c@ b1 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c==> c= part c? b0 c~ c= part c? / * b4 c@ b4 ! c==> ! c= * b0 b1 * b1 c@ b1 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c==> c= part c? b0 c~ c= part c? f0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
- (? = _2158381) |- (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') _2158383)) _2158384))) = ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') _2158383)) _2158384))))
T c==> c= part c? f0 c= c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY f4 cI * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY cI * * part cI f5 f4 f6 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY f4 cI * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY cI * * part cI f5 f4 f6
- |- ((?p'. ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))) = ((?p. (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))))
T c= c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, f3 b2 c/\ c? / cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1
- |- ((?p'. ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))) = ((?p. (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))
T c= c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, f3 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b2 c= f3 b2 c/\ c? / cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1
+ |- ((!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> (~ (? = (\P. (P (@ P)))))))))) = (!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = (\P. (P (@ P)))))))))))))
T c= ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? / * b3 c@ b3 c~ c= part c? / * b3 c@ b3 ! c==> ! c= * b0 b1 * b1 c@ b1 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c==> c= part c? b0 c~ c= part c? / * b4 c@ b4
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- (!c. (((\c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) c) ==> F))
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> * / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f3 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b1 b2 b3 b4 cdistance c, * * * f3 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b1 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f3 b2 b3 b4 b5 b0 cF
+ |- (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?c. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w)))))))) = (?c. ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w)))))))))
T c= c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, f3 b1 c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, f3 b1
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- ((?w. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w p) c))))))))))) ==> F)
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c? / c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * b0 b1 b2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b2 cdistance c, b1 * * b0 b1 b2 cF
- (?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))), (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- ((?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) /\ F)
T c==> c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f0 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b2 b3 b4 cdistance c, * * * f0 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f0 b2 b3 b4 b5 c==> c~ c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c/\ c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f0 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b2 b3 b4 cdistance c, * * * f0 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f0 b2 b3 b4 b5 cF
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- (((((c _2158329) _2158330) _2158331) = (distance ((((p _2158329) _2158330) _2158331) , _2158332))) \/ ((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ (~ (_2158332 IN (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c\/ c= * * * f1 f3 f4 f5 cdistance c, * * * f0 f3 f4 f5 f6 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f6 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((~ (_2158469 = _2158471)) \/ ((~ (_2158468 = _2158470)) \/ (((I _2158468) _2158469) = ((I _2158470) _2158471))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cI f2 f0 cI f3 f1
+ |- (((!w. (P w)) /\ (!w. (Q w))) = (!w. ((P w) /\ (Q w))))
T c= c/\ ! * f0 b0 ! * f1 b0 ! c/\ * f0 b0 * f1 b0
+ |- ((!c. (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , w))))))) = (?w. (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c)))))))))
T c= ! c? / c/\ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, f3 b1 c? / ! c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, f3 * b0 b1
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (((!w. ((~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) w)) \/ (c = ((I distance) ((I ((I ,) p)) w))))) ==> ((\w. ((~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) w)) \/ (c = ((I distance) ((I ((I ,) p)) w))))) _2158385)) = ((\w. ((~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) w)) \/ (c = ((I distance) ((I ((I ,) p)) w))))) _2158385))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c= c==> ! c\/ c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 c= f4 cI part cdistance cI * * part cI part c, f3 b0 * / c\/ c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 c= f4 cI part cdistance cI * * part cI part c, f3 b0 f6 * / c\/ c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 c= f4 cI part cdistance cI * * part cI part c, f3 b0 f6
+ (~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) |- ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) /\ ((? = _2158381) ==> (~ (? = _2158382))))
T c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c/\ c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? f3 c~ c= part c? f4
- (_2158335 = _2158337) |- ((_2158335 = _2158337) /\ ((~ (_2158336 = _2158338)) \/ ((_2158337 IN _2158338) \/ (~ (_2158335 IN _2158336)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (!v. ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ (!c. (((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') v)) c)) /\ (~ (c = ((I distance) ((I ((I ,) v)) ((I ((I v') v)) c)))))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 ! c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 ! c/\ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 b0 b1 c~ c= b1 cI part cdistance cI * * part cI part c, b0 cI * * part cI f5 b0 b1
- (_2158355 = _2158358), (_2158356 = _2158359), (_2158357 = _2158360) |- ((_2158357 = _2158360) /\ ((((p _2158355) _2158356) _2158357) = (((p _2158358) _2158359) _2158360)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f4 f5 c= * * * f6 f0 f2 f4 * * * f6 f1 f3 f5
+ ((\w. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w p) c))))))))))) w') |- ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c))))))))))
T c==> * / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * b0 b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b2 cdistance c, b1 * * b0 b1 b2 f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1
- |- ((~ (_2158339 = _2158340)) \/ ((collinear _2158340) \/ (~ (collinear _2158339))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ (~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) (@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w))))))))) /\ (?c. (!v. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v) ==> (c = (distance ((@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w)))))))) , v))))))))) |- ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) (@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w))))))))) /\ (?c. (!v. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v) ==> (c = (distance ((@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w)))))))) , v))))))))) /\ F)
T c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 cdistance c, b2 b2 b1 c/\ c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 cdistance c, b2 b2 b1 cF
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))), ((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (~ ((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c==> cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (!v. (!c. (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') v)) c))) /\ ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) v)) \/ (~ (c = ((I distance) ((I ((I ,) v)) ((I ((I v') v)) c)))))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 ! ! c/\ c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 b0 b1 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 c~ c= b1 cI part cdistance cI * * part cI part c, b0 cI * * part cI f5 b0 b1
+ (!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))), (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- F
T c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 cF
+ |- ((!b. ((T ==> b) ==> (T = (T /\ b)))) = (((T ==> T) ==> (T = (T /\ T))) /\ ((T ==> F) ==> (T = (T /\ F)))))
T c= ! c==> c==> cT b0 c= cT c/\ cT b0 c/\ c==> c==> cT cT c= cT c/\ cT cT c==> c==> cT cF c= cT c/\ cT cF
+ ((\c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))) c) |- (((\c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))))) c) /\ F)
T c==> * / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b0 cdistance c, f3 b2 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b1 b2 b3 c~ c= b3 cdistance c, b2 * * b1 b2 b3 f4 c/\ * / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b0 cdistance c, f3 b2 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b1 b2 b3 c~ c= b3 cdistance c, b2 * * b1 b2 b3 f4 cF
- (_2158372 = _2158374), (_2158371 = _2158373) |- ((_2158372 = _2158374) /\ (((w' _2158371) _2158372) = ((w' _2158373) _2158374)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * f4 f2 f0 * * f4 f3 f1
+ |- (((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) (@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w))))))))) /\ (?c. (!v. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v) ==> (c = (distance ((@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w)))))))) , v))))))) = (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))
T c= c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 cdistance c, b2 b2 b1 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2
+ |- ((\v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F)))) v1)
T * / c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c? / ! c==> cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c= b2 cdistance c, b1 b3 c? / c/\ chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c? / ! c==> cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b3 c= b2 cdistance c, b1 b3 c==> c= part c? / * b1 c@ b1 c==> c= part c? / * b1 c@ b1 cF f2
- (_2158336 = _2158338), (_2158335 = _2158337) |- ((_2158336 = _2158338) /\ ((_2158337 IN _2158338) \/ (~ (_2158335 IN _2158336))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cIN f3 f1 c~ cIN f2 f0
+ |- ((!vc. (?p. (?c. (?w. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p')))))))))) = (?p. (!vc. (?c. (?w. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((p vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance ((p vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ ((p vc) = p')))))))))))
T c= ! c? / c? / c? / c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b1 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN * b3 b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ c= b2 cdistance c, b4 * b3 b4 c= b1 b4 c? / ! c? / c? / c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c/\ cIN * b0 b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c= b2 cdistance c, * b0 b1 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c/\ cIN * b3 b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c~ c= b2 cdistance c, b4 * b3 b4 c= * b0 b1 b4
- (~ (c = ((I distance) ((I ((I ,) p)) ((I ((I v') p)) c))))), (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((~ (c = ((I distance) ((I ((I ,) p)) ((I ((I v') p)) c))))) /\ (c = ((I distance) ((I ((I ,) p)) ((I ((I v') p)) c)))))
T c==> c~ c= f0 cI part cdistance cI * * part cI part c, f1 cI * * part cI f2 f1 f0 c==> c/\ c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 ! c\/ c~ cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c= f0 cdistance c, f1 b0 ! c\/ c~ chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 ! c/\ cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * f2 b0 b1 c~ c= b1 cdistance c, b0 * * f2 b0 b1 c/\ c~ c= f0 cI part cdistance cI * * part cI part c, f1 cI * * part cI f2 f1 f0 c= f0 cI part cdistance cI * * part cI part c, f1 cI * * part cI f2 f1 f0
- (_2158375 = _2158377) |- ((_2158376 = _2158378) ==> ((_2158375 INSERT _2158376) = (_2158377 INSERT _2158378)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- (!_2158382. ((!P. ((_2158382 P) = (P (@ P)))) ==> (!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = _2158382)))))))))))
T c==> ! c= * f0 b0 * b0 c@ b0 ! c==> ! c= * b0 b1 * b1 c@ b1 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c==> c= part c? b0 c~ c= part c? f0
+ |- ((!vb. (?p. (?c. (?w. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((p vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((c vc) = (distance ((p vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((w vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((c vc) = (distance (p' , ((w vc) p'))))))) \/ ((p vc) = p'))))))))))) = (?p. (!vb. (?c. (?w. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ ((((p vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((c vc) = (distance (((p vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((w vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((c vc) = (distance (p' , ((w vc) p'))))))) \/ (((p vb) vc) = p'))))))))))))
T c= ! c? / c? / c? / ! c\/ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN * b1 b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c= * b2 b4 cdistance c, * b1 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN * * b3 b4 b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c~ c= * b2 b4 cdistance c, b5 * * b3 b4 b5 c= * b1 b4 b5 c? / ! c? / c? / ! c\/ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b4 part cEMPTY c/\ cIN * * b0 b1 b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b4 part cEMPTY c= * b2 b4 cdistance c, * * b0 b1 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b4 part cEMPTY c/\ cIN * * b3 b4 b5 * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b4 part cEMPTY c~ c= * b2 b4 cdistance c, b5 * * b3 b4 b5 c= * * b0 b1 b4 b5
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) p) /\ (!w. ((~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) w)) \/ (c = ((I distance) ((I ((I ,) p)) w))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c/\ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3 ! c\/ c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY b0 c= f4 cI part cdistance cI * * part cI part c, f3 b0
+ |- ((s = (\P. (t P))) = (!P. ((s P) = (t P))))
T c= c= f0 / * f1 b0 ! c= * f0 b0 * f1 b0
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (((w' (((p va) vb) vc)) _2158334) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) = (((w' (((p va) vb) vc)) _2158334) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c==> cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * f6 * * * f0 f3 f4 f5 f7 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * f6 * * * f0 f3 f4 f5 f7 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((!v. (P \/ (Q v))) = (P \/ (!v. (Q v))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ |- ((F ==> t) = T)
T c= c==> cF f0 cT
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- (((!x. (((\c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) x) ==> F)) ==> ((?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) ==> F)) = ((?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) ==> F))
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c= c==> ! c==> * / c? / ! ! ! c\/ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * f3 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ ! c\/ c~ cIN b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * * b1 b3 b4 b5 cdistance c, * * * f3 b3 b4 b5 b6 ! c\/ c\/ c~ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * * b2 b3 b4 b5 b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ c= * * * b1 b3 b4 b5 cdistance c, b6 * * * * b2 b3 b4 b5 b6 c= * * * f3 b3 b4 b5 b6 b0 cF c==> c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f3 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b2 b3 b4 cdistance c, * * * f3 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f3 b2 b3 b4 b5 cF c==> c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f3 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b2 b3 b4 cdistance c, * * * f3 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f3 b2 b3 b4 b5 cF
+ |- (((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?w. (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w p) c))))))))))) = (?w. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w p) c))))))))))))
T c= c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * b0 b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b2 cdistance c, b1 * * b0 b1 b2 c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * b0 b1 b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b2 cdistance c, b1 * * b0 b1 b2
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((!vb. (!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F)))) ==> ((\vb. (!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F)))) vb)) = ((\vb. (!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F)))) vb))
T c= c==> ! ! c==> c~ c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c= b3 cdistance c, b2 b4 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF * / ! c==> c~ c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c= b3 cdistance c, b2 b4 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF f1 * / ! c==> c~ c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c= b3 cdistance c, b2 b4 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF f1
+ |- ((((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) (@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w))))))))) /\ (?c. (!v. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v) ==> (c = (distance ((@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w)))))))) , v)))))))) = (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?c. (!w. ((w IN (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (c = (distance (p , w))))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?c. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (c = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) , v)))))))))
T c= c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 cdistance c, b2 b2 b1 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- ((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((((p _2158329) _2158330) _2158331) IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c\/ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ |- ((F /\ t) = F)
T c= c/\ cF f0 cF
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ |- ((((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) (@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v'))))))))) /\ (?c. (!v. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v) ==> (c = (distance ((@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w)))))))) , v))))))) = (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v'))))))))) = (((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) (@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w))))))))) /\ (?c. (!v. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v) ==> (c = (distance ((@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w)))))))) , v))))))) = (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v'))))))))))
T c= c= c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 cdistance c, b2 b2 b1 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c= c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 cdistance c, b2 b2 b1 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2
- |- ((!p'. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))))) = ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!p. (!c. (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , w))))))))))
T c= ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c? / c/\ cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b1 cdistance c, b0 b2 c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c? / c/\ cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b1 cdistance c, b0 b2
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) _2158385)) \/ (c = ((I distance) ((I ((I ,) p)) _2158385))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c\/ c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 c= f4 cI part cdistance cI * * part cI part c, f3 f6
- |- ((?c'. ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c' = (distance (p' , w))))))) \/ (p = p'))))) = ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (?c. (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p'))))))
T c= c? / c/\ ! c\/ c~ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b1 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, b1 b2 c= f4 b1 c/\ ! c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c? / ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, b1 b2 c= f4 b1
+ |- (((!x. (((\v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))) x) ==> F)) ==> ((?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))) ==> F)) = ((?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))) ==> F))
T c= c==> ! c==> * / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= f4 cdistance c, f3 b2 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b1 b2 b3 c~ c= b3 cdistance c, b2 * * b1 b2 b3 b0 cF c==> c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= f4 cdistance c, f3 b1 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b0 b1 b2 c~ c= b2 cdistance c, b1 * * b0 b1 b2 cF c==> c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= f4 cdistance c, f3 b1 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b0 b1 b2 c~ c= b2 cdistance c, b1 * * b0 b1 b2 cF
- (_2158444 = _2158446), (_2158445 = _2158447) |- (((I _2158446) _2158447) \/ (~ ((I _2158444) _2158445)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
- |- ((?v'. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v') /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))) = ((?v. (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v'))))))))
T c= c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, f3 b2 c/\ c? / chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, f3 b1
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- (((\w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))) w) ==> F)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> * / ! ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f3 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f4 b1 b2 b3 cdistance c, * * * f3 b1 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * * b0 b1 b2 b3 b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f4 b1 b2 b3 cdistance c, b4 * * * * b0 b1 b2 b3 b4 c= * * * f3 b1 b2 b3 b4 f5 cF
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (~ ((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c==> cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?w. ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p')))))) = (?w. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p')))))))
T c= c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ ! c\/ c~ cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 cdistance c, f0 b1 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * b0 b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, b1 * b0 b1 c= f0 b1 c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! c\/ c~ cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 cdistance c, f0 b1 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * b0 b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, b1 * b0 b1 c= f0 b1
- |- ((_2158339 = _2158340) ==> ((collinear _2158340) \/ (~ (collinear _2158339))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- (_2158355 = _2158358) |- ((_2158356 = _2158359) ==> ((~ (_2158357 = _2158360)) \/ ((((p _2158355) _2158356) _2158357) = (((p _2158358) _2158359) _2158360))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c= * * * f6 f0 f2 f4 * * * f6 f1 f3 f5
- (_2158355 = _2158358), (_2158356 = _2158359) |- ((_2158357 = _2158360) ==> ((((p _2158355) _2158356) _2158357) = (((p _2158358) _2158359) _2158360)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= * * * f6 f0 f2 f4 * * * f6 f1 f3 f5
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- ((?p. (?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))))) ==> F)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> c? / c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * b0 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ ! c\/ c~ cIN b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * * b1 b3 b4 b5 cdistance c, * * * b0 b3 b4 b5 b6 ! c\/ c\/ c~ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * * b2 b3 b4 b5 b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ c= * * * b1 b3 b4 b5 cdistance c, b6 * * * * b2 b3 b4 b5 b6 c= * * * b0 b3 b4 b5 b6 cF
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383) ==> ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') _2158383)) _2158384)))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c==> cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f6 f7
+ |- (((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (!w. (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w)))) /\ (((~ (w IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) w) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (w , ((((w va) vb) vc) w))))))) \/ ((((p va) vb) vc) = w)))))) = (!w. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w)))) /\ (((~ (w IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) w) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (w , ((((w va) vb) vc) w))))))) \/ ((((p va) vb) vc) = w)))))))
T c= c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * * f3 f0 f1 f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * * f4 f0 f1 f2 cdistance c, * * * f3 f0 f1 f2 b0 c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * * * * f5 f0 f1 f2 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * * f4 f0 f1 f2 cdistance c, b0 * * * * f5 f0 f1 f2 b0 c= * * * f3 f0 f1 f2 b0 ! c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * * * f3 f0 f1 f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * * f4 f0 f1 f2 cdistance c, * * * f3 f0 f1 f2 b0 c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * * * * f5 f0 f1 f2 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * * f4 f0 f1 f2 cdistance c, b0 * * * * f5 f0 f1 f2 b0 c= * * * f3 f0 f1 f2 b0
- (_2158361 = _2158363) |- ((_2158361 = _2158363) /\ ((~ (_2158362 = _2158364)) \/ ((_2158361 , _2158362) = (_2158363 , _2158364))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((?v''. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') /\ (~ (c = (distance (v , v'')))))) = (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') /\ (?v'. (~ (c = (distance (v , v')))))))
T c= c? / c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ c= f4 cdistance c, f5 b0 c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c? / c~ c= f4 cdistance c, f5 b0
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') p)) c)) ==> (c = ((I distance) ((I ((I ,) p)) ((I ((I v') p)) c))))) = (c = ((I distance) ((I ((I ,) p)) ((I ((I v') p)) c)))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c= c==> cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f3 f4 c= f4 cI part cdistance cI * * part cI part c, f3 cI * * part cI f5 f3 f4 c= f4 cI part cdistance cI * * part cI part c, f3 cI * * part cI f5 f3 f4
+ |- ((((\v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))) v') ==> F) = T)
T c= c==> * / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= f4 cdistance c, f3 b1 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b0 b1 b2 c~ c= b2 cdistance c, b1 * * b0 b1 b2 f5 cF cT
+ |- (((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) (@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w))))))))) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance ((@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w)))))))) , w))))))) = (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w)))))))))
T c= c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 c= b3 cdistance c, b2 b3 b1 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2
- |- (((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))) = (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c= c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- ((!_2158382. ((_2158382 = c) ==> (P = (Q _2158382)))) ==> (P = (!_2158382. ((_2158382 = c) ==> (Q _2158382)))))
T c==> ! c==> c= b0 f0 c= f1 * f2 b0 c= f1 ! c==> c= b0 f0 * f2 b0
+ |- (((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> F) = ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))))))
T c= c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 cF c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2
- |- ((?p'. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))) /\ (!p''. (((p'' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p'' , w)))))) ==> (p' = p''))))))) = ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))
T c= c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c/\ ! c==> cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2
+ |- ((!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> (~ (? = (\P. (P (@ P)))))))))) = (!_2158381. ((_2158381 = (\P. (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = (\P. (P (@ P)))))))))))))
T c= ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? / * b3 c@ b3 c~ c= part c? / * b3 c@ b3 ! c==> c= b0 / * b1 c@ b1 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c? / c/\ chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c? / ! c==> cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b6 c= b5 cdistance c, b4 b6 c==> c= part c? b0 c~ c= part c? / * b4 c@ b4
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))) |- ((((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))) ==> ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F)))) ==> ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))))
T c==> c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c==> c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF
+ |- ((!_2158382. ((!P. ((_2158382 P) = (P (@ P)))) ==> (!_2158381. ((!P. ((_2158381 P) = (P (@ P)))) ==> (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = _2158381) ==> (~ (? = _2158382))))))))))) = (!v3. (!v2. (!v1. ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F)))))))
T c= ! c==> ! c= * b0 b1 * b1 c@ b1 ! c==> ! c= * b1 b2 * b2 c@ b2 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c? / ! c==> cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b7 c= b6 cdistance c, b5 b7 c? / c/\ chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c? / ! c==> cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b7 c= b6 cdistance c, b5 b7 c==> c= part c? b1 c~ c= part c? b0 ! ! ! c==> c~ c==> c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c? / c/\ chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c? / ! c==> cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b5 c= b4 cdistance c, b3 b5 c==> c= part c? / * b3 c@ b3 c==> c= part c? / * b3 c@ b3 cF
- |- ((!vc. (!vb. (!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> (~ (!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))))))))))) = (!vc. (!vb. (!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> ((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> F))))))
T c= ! ! ! c==> c~ c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b4 cdistance c, b3 b5 c~ ! ! ! c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY ! c==> cIN b6 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 ! ! ! c==> c~ c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b4 cdistance c, b3 b5 c==> ! ! ! c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY ! c==> cIN b6 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cF
+ |- (((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (?p. (?c. (?w. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p'))))))))) = (?p. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (?c. (?w. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p'))))))))))
T c= c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c? / c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b3 * b2 b3 c= b0 b3 c? / c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * b2 b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b3 * b2 b3 c= b0 b3
- (_2158365 = _2158366) |- ((_2158365 = _2158366) /\ ((distance _2158365) = (distance _2158366)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cdistance f0 cdistance f1
+ ((\c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) c) |- (((?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))) ==> F) = F)
T c==> * / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f0 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b2 b3 b4 cdistance c, * * * f0 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f0 b2 b3 b4 b5 f1 c= c==> c? / ! ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f1 b1 b2 b3 cdistance c, * * * f0 b1 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * * b0 b1 b2 b3 b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f1 b1 b2 b3 cdistance c, b4 * * * * b0 b1 b2 b3 b4 c= * * * f0 b1 b2 b3 b4 cF cF
+ |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) = (!a. (!b. ((a ==> b) ==> (a = (a /\ b))))))
T c= c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1
- (_2158436 = _2158438), (_2158437 = _2158439) |- ((_2158437 = _2158439) /\ (((I _2158438) _2158439) \/ (~ ((I _2158436) _2158437))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- ((((\c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) c) ==> F) = T)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c= c==> * / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f3 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b2 b3 b4 cdistance c, * * * f3 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f3 b2 b3 b4 b5 f4 cF cT
- |- ((_2158445 = _2158447) ==> ((~ (_2158444 = _2158446)) \/ (((I _2158446) _2158447) \/ (~ ((I _2158444) _2158445)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- (_2158472 = _2158474) |- ((_2158472 = _2158474) /\ ((~ (_2158473 = _2158475)) \/ (((I _2158472) _2158473) = ((I _2158474) _2158475))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- ((?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) ==> F)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c==> c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f3 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b2 b3 b4 cdistance c, * * * f3 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f3 b2 b3 b4 b5 cF
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (!c. (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') _2158383)) c))) /\ ((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ (~ (c = ((I distance) ((I ((I ,) _2158383)) ((I ((I v') _2158383)) c))))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 ! c/\ c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f6 b0 c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6 c~ c= b0 cI part cdistance cI * * part cI part c, f6 cI * * part cI f5 f6 b0
+ |- ((\S. ((circumcenter S) = (@v. ((((hull affine) S) v) /\ (?c. (!w. ((S w) ==> (c = (distance (v , w)))))))))) S)
T * / c= ccircumcenter b0 c@ / c/\ chull part caffine b0 b1 c? / ! c==> * b0 b3 c= b2 cdistance c, b1 b3 f0
- (_2158339 = _2158340) |- ((((collinear _2158339) = (collinear _2158340)) ==> ((collinear _2158340) \/ (~ (collinear _2158339)))) = ((collinear _2158340) \/ (~ (collinear _2158339))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
+ |- (!p. (((\p. (?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))))) p) ==> F))
T c==> * / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 c= b1 cdistance c, b0 b3 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b2 b3 b4 c~ c= b4 cdistance c, b3 * * b2 b3 b4 f3 cF
+ |- (((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))) = ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) (@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w))))))))) /\ (?c. (!v. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v) ==> (c = (distance ((@v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (v , w)))))))) , v))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))))
T c= c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= b0 cdistance c, c@ / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 cdistance c, b2 b2 b1 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF
+ ((\c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))) c) |- (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))))
T c==> * / c? / ! ! ! c\/ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * f0 b2 b3 b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ ! c\/ c~ cIN b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * * b0 b2 b3 b4 cdistance c, * * * f0 b2 b3 b4 b5 ! c\/ c\/ c~ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN * * * * b1 b2 b3 b4 b5 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ c= * * * b0 b2 b3 b4 cdistance c, b5 * * * * b1 b2 b3 b4 b5 c= * * * f0 b2 b3 b4 b5 f1 c? / ! ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f0 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f1 b1 b2 b3 cdistance c, * * * f0 b1 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * * b0 b1 b2 b3 b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f1 b1 b2 b3 cdistance c, b4 * * * * b0 b1 b2 b3 b4 c= * * * f0 b1 b2 b3 b4
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((~ ((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) ==> ((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- ((~ F) = T)
T c= c~ cF cT
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))) |- (((((p _2158329) _2158330) _2158331) IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ (collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c\/ cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((~ (_2158472 = _2158474)) \/ ((~ (_2158473 = _2158475)) \/ (((I _2158472) _2158473) = ((I _2158474) _2158475))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- (!P. ((_2158382 P) = (P (@ P)))) |- ((\P. (((I _2158382) P) \/ (~ ((I P) ((I @) P))))) _2158388)
T c==> ! c= * f0 b0 * b0 c@ b0 * / c\/ cI f0 b0 c~ cI b0 cI part c@ b0 f1
+ ((\p. (?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))))) p) |- (?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))))
T c==> * / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 c= b1 cdistance c, b0 b3 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b2 b3 b4 c~ c= b4 cdistance c, b3 * * b2 b3 b4 f3 c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b0 cdistance c, f3 b2 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b1 b2 b3 c~ c= b3 cdistance c, b2 * * b1 b2 b3
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- (!w. (((\w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))) w) ==> F))
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> * / ! ! ! c\/ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * f3 b1 b2 b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! c\/ c~ cIN b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * * f4 b1 b2 b3 cdistance c, * * * f3 b1 b2 b3 b4 ! c\/ c\/ c~ cIN b4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN * * * * b1 b1 b2 b3 b4 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ c= * * * f4 b1 b2 b3 cdistance c, b4 * * * * b1 b1 b2 b3 b4 c= * * * f3 b1 b2 b3 b4 b0 cF
- (_2158445 = _2158447) |- ((_2158444 = _2158446) ==> (((I _2158446) _2158447) \/ (~ ((I _2158444) _2158445))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) /\ F)
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 cF
+ (~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) |- ((((\p. (?c. (?w. (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p')))))))))))) p) ==> F) = T)
T c==> c~ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c= c==> * / c? / c? / ! ! ! c\/ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * b0 b3 b4 b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ ! c\/ c~ cIN b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * * b1 b3 b4 b5 cdistance c, * * * b0 b3 b4 b5 b6 ! c\/ c\/ c~ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN * * * * b2 b3 b4 b5 b6 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ c= * * * b1 b3 b4 b5 cdistance c, b6 * * * * b2 b3 b4 b5 b6 c= * * * b0 b3 b4 b5 b6 f3 cF cT
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), ((\w. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w p) c))))))))))) w') |- (((\w. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w p) c))))))))))) w') /\ F)
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> * / c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * b0 b1 b2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b2 cdistance c, b1 * * b0 b1 b2 f6 c/\ * / c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * b0 b1 b2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b2 cdistance c, b1 * * b0 b1 b2 f6 cF
- |- (T = (((collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))) \/ ((((p _2158329) _2158330) _2158331) IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))) = (((((p _2158329) _2158330) _2158331) IN ((hull affine) (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY))))) \/ (collinear (_2158329 INSERT (_2158330 INSERT (_2158331 INSERT EMPTY)))))))
T c= cT c= c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * * * f3 f0 f1 f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ cIN * * * f3 f0 f1 f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') p)) _2158384))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f3 f6
- (_2158472 = _2158474) |- ((_2158473 = _2158475) ==> (((I _2158472) _2158473) = ((I _2158474) _2158475)))
T c==> c= f0 f1 c==> c= f2 f3 c= cI f0 f2 cI f1 f3
+ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((\c. (((~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' _2158333) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((~ (_2158333 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (_2158333 , ((w' _2158333) c)))))))) _2158334)
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ cIN * * f3 b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b0 * * f3 b0 b1 * / c/\ c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * * f3 f4 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, f4 * * f3 f4 b0 f5
+ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- (((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') _2158383)) _2158384)) \/ (~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f4 cdistance c, f3 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f5 b0 b1 c~ c= b1 cdistance c, b0 * * f5 b0 b1 c\/ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f5 f6 f7 c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f6
- |- (T = (((~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)) \/ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') _2158383)) _2158384))) = (((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') _2158383)) _2158384)) \/ (~ ((I ((I ((I hull) affine)) ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY))))) _2158383)))))
T c= cT c= c\/ c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f4 f3 f5 c\/ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f4 f3 f5 c~ cI * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY f3
+ |- (((!S. ((circumcenter S) = (@v. ((((hull affine) S) v) /\ (?c. (!w. ((S w) ==> (c = (distance (v , w)))))))))) ==> ((\S. ((circumcenter S) = (@v. ((((hull affine) S) v) /\ (?c. (!w. ((S w) ==> (c = (distance (v , w)))))))))) S)) = ((\S. ((circumcenter S) = (@v. ((((hull affine) S) v) /\ (?c. (!w. ((S w) ==> (c = (distance (v , w)))))))))) S))
T c= c==> ! c= ccircumcenter b0 c@ / c/\ chull part caffine b0 b1 c? / ! c==> * b0 b3 c= b2 cdistance c, b1 b3 * / c= ccircumcenter b0 c@ / c/\ chull part caffine b0 b1 c? / ! c==> * b0 b3 c= b2 cdistance c, b1 b3 f0 * / c= ccircumcenter b0 c@ / c/\ chull part caffine b0 b1 c? / ! c==> * b0 b3 c= b2 cdistance c, b1 b3 f0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (_2158469 = _2158471) |- ((_2158468 = _2158470) ==> (((I _2158468) _2158469) = ((I _2158470) _2158471)))
T c==> c= f0 f1 c==> c= f2 f3 c= cI f2 f0 cI f3 f1
+ |- (((!x. (((\p. (?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))))) x) ==> F)) ==> ((?p. (?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))))) ==> F)) = ((?p. (?c. (?v'. (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c))))))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 c= b2 cdistance c, b1 b4 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b4 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b3 b4 b5 c~ c= b5 cdistance c, b4 * * b3 b4 b5 b0 cF c==> c? / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 c= b1 cdistance c, b0 b3 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b2 b3 b4 c~ c= b4 cdistance c, b3 * * b2 b3 b4 cF c==> c? / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 c= b1 cdistance c, b0 b3 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b3 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * b2 b3 b4 c~ c= b4 cdistance c, b3 * * b2 b3 b4 cF
- (? = _2158381) |- (((~ ((I _2158382) _2158389)) \/ ((I _2158389) ((I @) _2158389))) = ((~ ((I _2158382) _2158389)) \/ ((I _2158389) ((I @) _2158389))))
T c==> c= part c? f0 c= c\/ c~ cI f1 f2 cI f2 cI part c@ f2 c\/ c~ cI f1 f2 cI f2 cI part c@ f2
- (_2158368 = _2158370) |- ((_2158368 = _2158370) /\ ((~ (_2158367 = _2158369)) \/ (((hull _2158367) _2158368) = ((hull _2158369) _2158370))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- (_2158375 = _2158377) |- ((_2158375 = _2158377) /\ ((~ (_2158376 = _2158378)) \/ ((_2158375 INSERT _2158376) = (_2158377 INSERT _2158378))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((~ (_2158341 = _2158345)) \/ ((~ (_2158342 = _2158346)) \/ ((~ (_2158343 = _2158347)) \/ ((~ (_2158344 = _2158348)) \/ (((((w _2158341) _2158342) _2158343) _2158344) = ((((w _2158345) _2158346) _2158347) _2158348))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= * * * * f8 f0 f2 f4 f6 * * * * f8 f1 f3 f5 f7
+ (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((w' (((p va) vb) vc)) (((c va) vb) vc)) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * f6 * * * f0 f3 f4 f5 * * * f1 f3 f4 f5 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((?c'. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c' = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))) = ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))
T c= c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b1 b2 c= f3 b1 c/\ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0
- |- ((!P. ((P P) /\ (Q P))) = ((!P. (P P)) /\ (!P. (Q P))))
T c= ! c/\ * f0 b0 * f1 b0 c/\ ! * f0 b0 ! * f1 b0
- (!P. ((_2158382 P) = (P (@ P)))) |- (((I _2158382) _2158388) \/ (~ ((I _2158388) ((I @) _2158388))))
T c==> ! c= * f0 b0 * b0 c@ b0 c\/ cI f0 f1 c~ cI f1 cI part c@ f1
- (!P. ((_2158382 P) = (P (@ P)))) |- (!P. ((~ ((I _2158382) P)) \/ ((I P) ((I @) P))))
T c==> ! c= * f0 b0 * b0 c@ b0 ! c\/ c~ cI f0 b0 cI b0 cI part c@ b0
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ F), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!p. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (!c. ((((w' p) c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , ((w' p) c)))))))))) |- ((~ F) /\ F)
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ cF c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c/\ cIN * * f6 b0 b1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= b1 cdistance c, b0 * * f6 b0 b1 c/\ c~ cF cF
- (_2158341 = _2158345) |- ((_2158341 = _2158345) /\ ((~ (_2158342 = _2158346)) \/ ((~ (_2158343 = _2158347)) \/ ((~ (_2158344 = _2158348)) \/ (((((w _2158341) _2158342) _2158343) _2158344) = ((((w _2158345) _2158346) _2158347) _2158348))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= * * * * f8 f0 f2 f4 f6 * * * * f8 f1 f3 f5 f7
- |- ((?p'. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p' , w))))) /\ (!p''. (((~ (p'' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p'' , w))))))) \/ (p' = p''))))))) = ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. (?c. ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p'))))))))
T c= c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ ! c\/ c~ cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 ! c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ cIN b3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b1 cdistance c, b2 b3 c= b0 b2 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c/\ ! c\/ c~ cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 ! c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ cIN b3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b1 cdistance c, b2 b3 c= b0 b2
- |- ((?v'. (P /\ (Q v'))) = (P /\ (?v'. (Q v'))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- (~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') p)) c))), (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (!w. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w)) \/ (c = (distance (p , w))))))) /\ (!v. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v)) \/ (!c. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) ((v' v) c)) /\ (~ (c = (distance (v , ((v' v) c)))))))))) |- ((~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') p)) c))) /\ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) ((I ((I v') p)) c)))
T c==> c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f3 f4 f5 c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f5 cdistance c, f4 b0 ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * f3 b0 b1 c~ c= b1 cdistance c, b0 * * f3 b0 b1 c/\ c~ cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f3 f4 f5 cI * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI f3 f4 f5
- (_2158355 = _2158358) |- ((_2158355 = _2158358) /\ ((~ (_2158356 = _2158359)) \/ ((~ (_2158357 = _2158360)) \/ ((((p _2158355) _2158356) _2158357) = (((p _2158358) _2158359) _2158360)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= * * * f6 f0 f2 f4 * * * f6 f1 f3 f5
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- (!va. (!vb. (!vc. ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ ((((c va) vb) vc) = (distance ((((p va) vb) vc) , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((((((w va) vb) vc) p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ ((((c va) vb) vc) = (distance (p' , ((((w va) vb) vc) p'))))))) \/ ((((p va) vb) vc) = p'))))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (~ ((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) |- ((~ ((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) /\ ((((p va) vb) vc) IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))))
T c==> ! ! ! c\/ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * f0 b0 b1 b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ ! c\/ c~ cIN b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * * f1 b0 b1 b2 cdistance c, * * * f0 b0 b1 b2 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN * * * * f2 b0 b1 b2 b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= * * * f1 b0 b1 b2 cdistance c, b3 * * * * f2 b0 b1 b2 b3 c= * * * f0 b0 b1 b2 b3 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN * * * f0 f3 f4 f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (_2158339 = _2158340) |- ((_2158339 = _2158340) /\ ((collinear _2158340) \/ (~ (collinear _2158339))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- |- (((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))) ==> ((~ (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (?p. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) p) /\ (?c. (!w. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w) ==> (c = (distance (p , w))))))))) ==> (?v. ((((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v) /\ (?c. (!v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') ==> (c = (distance (v , v')))))))))) ==> ((? = (\P. (P (@ P)))) ==> ((? = (\P. (P (@ P)))) ==> F))))
T c==> c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF c==> c~ c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c? / c/\ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c? / ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b1 cdistance c, b0 b2 c==> c= part c? / * b0 c@ b0 c==> c= part c? / * b0 c@ b0 cF
- |- ((!P'. ((~ (_2158381 P')) \/ (P (@ P)))) = ((!P. (~ (_2158381 P))) \/ (P (@ P))))
T c= ! c\/ c~ * f0 b0 * f1 c@ f1 c\/ ! c~ * f0 b0 * f1 c@ f1
- |- ((_2158355 = _2158358) ==> ((~ (_2158356 = _2158359)) \/ ((~ (_2158357 = _2158360)) \/ ((((p _2158355) _2158356) _2158357) = (((p _2158358) _2158359) _2158360)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= * * * f6 f0 f2 f4 * * * f6 f1 f3 f5
- |- ((!vb. (!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> (~ (!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))))))) = T)
T c= ! ! c==> c~ c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c= b3 cdistance c, b2 b4 c~ ! ! ! c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cT
- |- ((!w'. ((~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w')) \/ (c = (distance (p , w))))) = ((!w. (~ ((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) w))) \/ (c = (distance (p , w)))))
T c= ! c\/ c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f3 cdistance c, f4 f5 c\/ ! c~ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= f3 cdistance c, f4 f5
- (_2158361 = _2158363) |- ((_2158362 = _2158364) ==> ((_2158361 , _2158362) = (_2158363 , _2158364)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- (? = _2158381) |- (((~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) _2158385)) \/ (c = ((I distance) ((I ((I ,) p)) _2158385)))) = ((~ ((I ((I ((I INSERT) v1)) ((I ((I INSERT) v2)) ((I ((I INSERT) v3)) EMPTY)))) _2158385)) \/ (c = ((I distance) ((I ((I ,) p)) _2158385)))))
T c==> c= part c? f0 c= c\/ c~ cI * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY f4 c= f5 cI part cdistance cI * * part cI part c, f6 f4 c\/ c~ cI * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY f4 c= f5 cI part cdistance cI * * part cI part c, f6 f4
- |- ((!v'. ((~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v')) \/ (!c. (?v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') /\ (~ (c = (distance (v , v'))))))))) = ((!v. (~ (((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) v))) \/ (!c. (?v'. (((v1 INSERT (v2 INSERT (v3 INSERT EMPTY))) v') /\ (~ (c = (distance (v , v')))))))))
T c= ! c\/ c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c? / c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c~ c= b1 cdistance c, f3 b2 c\/ ! c~ chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c? / c/\ cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c~ c= b0 cdistance c, f3 b1
- |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) = ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c= c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- ((~ (_2158355 = _2158358)) \/ ((~ (_2158356 = _2158359)) \/ ((~ (_2158357 = _2158360)) \/ ((((p _2158355) _2158356) _2158357) = (((p _2158358) _2158359) _2158360)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= * * * f6 f0 f2 f4 * * * f6 f1 f3 f5
- (_2158371 = _2158373) |- ((_2158372 = _2158374) ==> (((w' _2158371) _2158372) = ((w' _2158373) _2158374)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * f4 f0 f2 * * f4 f1 f3
- |- ((!vc'. ((collinear (va INSERT (vb INSERT (vc' INSERT EMPTY)))) \/ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p'))))))))) = ((!vc. (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p')))))))))
T c= ! c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c\/ c~ cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 ! c\/ c\/ c~ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b2 cdistance c, b3 b4 c= b1 b3 c\/ ! ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c\/ c~ cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, b2 b3 c= b0 b2
- |- ((!va. ((~ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))) ==> (~ (!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))))))))) = T)
T c= ! c==> c~ c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= b2 cdistance c, b1 b3 c~ ! ! ! c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 cT
- (? = _2158382) |- ((? = _2158381) = (? = _2158381))
T c==> c= part c? f0 c= c= part c? f1 c= part c? f1
- (_2158341 = _2158345), (_2158342 = _2158346) |- ((_2158342 = _2158346) /\ ((~ (_2158343 = _2158347)) \/ ((~ (_2158344 = _2158348)) \/ (((((w _2158341) _2158342) _2158343) _2158344) = ((((w _2158345) _2158346) _2158347) _2158348)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c= * * * * f8 f0 f2 f4 f6 * * * * f8 f1 f3 f5 f7
- |- ((?v'. ((P v') /\ Q)) = ((?v'. (P v')) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((~ (_2158485 = _2158487)) \/ ((~ (_2158484 = _2158486)) \/ (((I _2158484) _2158485) = ((I _2158486) _2158487))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
- (_2158335 = _2158337) |- ((_2158336 = _2158338) ==> ((_2158337 IN _2158338) \/ (~ (_2158335 IN _2158336))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- (_2158469 = _2158471) |- ((_2158469 = _2158471) /\ ((~ (_2158468 = _2158470)) \/ (((I _2158468) _2158469) = ((I _2158470) _2158471))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cI f2 f0 cI f3 f1
