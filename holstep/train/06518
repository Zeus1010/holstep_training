N LEBESGUE_MEASURABLE_ON_SUBINTERVALS
C |- (!s. ((lebesgue_measurable s) = (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL))))))))
T c= clebesgue_measurable f0 ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D real_abs
A |- (!x. ((real_abs x) = (((COND ((real_le (real_of_num (NUMERAL _0))) x)) x) (real_neg x))))
T c= creal_abs f0 cCOND creal_le creal_of_num cNUMERAL c_0 f0 f0 creal_neg f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D NORM_REAL
A |- (!x. ((vector_norm x) = (real_abs (x $ (NUMERAL (BIT1 _0))))))
T c= cvector_norm f0 creal_abs c$ f0 cNUMERAL cBIT1 c_0
D drop
A |- (!x. ((drop x) = (x $ (NUMERAL (BIT1 _0)))))
T c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0
D DROP_VEC
A |- (!n. ((drop (vec n)) = (real_of_num n)))
T c= cdrop cvec f0 creal_of_num f0
D INTEGRABLE_CONST
A |- (!a. (!b. (!c. ((integrable_on (\x. c)) (closed_interval ((CONS (a , b)) NIL))))))
T cintegrable_on / f0 * part cclosed_interval cCONS c, f1 f2 cNIL
D indicator
A |- (!s. ((indicator s) = (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))
T c= * part cindicator f0 / cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
D MEASURABLE_ON_UNIV
A |- (((measurable_on (\x. (((COND (x IN s)) (f x)) (vec (NUMERAL _0))))) UNIV) = ((measurable_on f) s))
T c= cmeasurable_on / cCOND cIN b0 f0 * f1 b0 cvec cNUMERAL c_0 part cUNIV cmeasurable_on f1 f0
D lebesgue_measurable
A |- (!s. ((lebesgue_measurable s) = ((measurable_on (indicator s)) UNIV)))
T c= clebesgue_measurable f0 cmeasurable_on * part cindicator f0 part cUNIV
D MEASURABLE_BOUNDED_BY_INTEGRABLE_IMP_INTEGRABLE
A |- (!f. (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s)))))
T c==> c/\ cmeasurable_on f0 f1 c/\ cintegrable_on f2 f1 ! c==> cIN b0 f1 creal_le cvector_norm * f0 b0 cdrop * f2 b0 cintegrable_on f0 f1
D INTEGRABLE_SUBINTERVALS_IMP_MEASURABLE
A |- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV)))
T c==> ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL cmeasurable_on f0 part cUNIV
D LEBESGUE_MEASURABLE_INTERVAL
A |- ((!a. (!b. (lebesgue_measurable (closed_interval ((CONS (a , b)) NIL))))) /\ (!a. (!b. (lebesgue_measurable (open_interval (a , b))))))
T c/\ ! ! clebesgue_measurable * part cclosed_interval cCONS c, b0 b1 cNIL ! ! clebesgue_measurable * part copen_interval c, b0 b1
D LEBESGUE_MEASURABLE_INTER
A |- (!s. (!t. (((lebesgue_measurable s) /\ (lebesgue_measurable t)) ==> (lebesgue_measurable (s INTER t)))))
T c==> c/\ clebesgue_measurable f0 clebesgue_measurable f1 clebesgue_measurable * * part cINTER f0 f1
+ |- ((real_le (vector_norm (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (drop (vec (NUMERAL (BIT1 _0)))))
T creal_le cvector_norm cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ |- (((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) = (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0))))))
T c= c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ |- (((!a. (!b. ((measurable_on (indicator (s INTER (closed_interval ((CONS (a , b)) NIL))))) UNIV))) ==> ((measurable_on (indicator s)) UNIV)) = ((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) ==> (lebesgue_measurable s)))
T c= c==> ! ! cmeasurable_on * part cindicator * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL part cUNIV cmeasurable_on * part cindicator f0 part cUNIV c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL clebesgue_measurable f0
- (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) |- ((lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))) = T)
T c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL c= clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, f1 f2 cNIL cT
- |- (((((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)) ==> (((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F))) = (((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)))
T c= c==> c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF
+ (~ (x IN s)) |- ((~ (x IN s)) /\ ((real_le (vector_norm (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))
T c==> c~ cIN f0 f1 c/\ c~ cIN f0 f1 creal_le cvector_norm cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (!f. (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))))), (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) |- ((integrable_on f) s)
T c==> ! ! ! c==> c/\ cmeasurable_on b0 b2 c/\ cintegrable_on b1 b2 ! c==> cIN b3 b2 creal_le cvector_norm * b0 b3 cdrop * b1 b3 cintegrable_on b0 b2 c==> c/\ cmeasurable_on f0 f1 c/\ cintegrable_on f2 f1 ! c==> cIN b0 f1 creal_le cvector_norm * f0 b0 cdrop * f2 b0 cintegrable_on f0 f1
+ |- ((\x. ((vector_norm x) = (real_abs (x $ (NUMERAL (BIT1 _0)))))) x)
T * / c= cvector_norm b0 creal_abs c$ b0 cNUMERAL cBIT1 c_0 f0
- |- (((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F))
T c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF
+ |- ((\q'. (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) = p') ==> ((p' ==> ((lebesgue_measurable s) = q')) ==> (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) ==> (lebesgue_measurable s)) = (p' ==> q'))))) q')
T * / c==> c= ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b1 b2 cNIL f1 c==> c==> f1 c= clebesgue_measurable f0 b0 c= c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b1 b2 cNIL clebesgue_measurable f0 c==> f1 b0 f2
+ ((\g. (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x)))))))) g) |- (((\g. (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x)))))))) g) /\ ((!f. (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))))) ==> ((integrable_on f) s)))
T c==> * / c/\ cmeasurable_on f0 f1 c/\ cintegrable_on b0 f1 ! c==> cIN b1 f1 creal_le cvector_norm * f0 b1 cdrop * b0 b1 f2 c/\ * / c/\ cmeasurable_on f0 f1 c/\ cintegrable_on b0 f1 ! c==> cIN b1 f1 creal_le cvector_norm * f0 b1 cdrop * b0 b1 f2 c==> ! ! ! c==> c/\ cmeasurable_on b0 b2 c/\ cintegrable_on b1 b2 ! c==> cIN b3 b2 creal_le cvector_norm * b0 b3 cdrop * b1 b3 cintegrable_on b0 b2 cintegrable_on f0 f1
- (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) |- (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))
T c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, f1 b0 cNIL
- |- (lebesgue_measurable (open_interval (a , b)))
T clebesgue_measurable * part copen_interval c, f0 f1
+ ((x IN s) = T) |- (((x IN s) = T) /\ (((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) \/ (((~ (x IN s)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ ((x IN s) \/ ((vec (NUMERAL _0)) = (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = T))
T c==> c= cIN f0 f1 cT c/\ c= cIN f0 f1 cT c= c\/ c~ cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL c/\ c\/ c~ cIN f0 f1 c= cvec cNUMERAL cBIT1 c_0 cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ cIN f0 f1 c= cvec cNUMERAL c_0 cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- (((real_gt ((real_add (real_abs (real_of_num (NUMERAL (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = ((((real_ge (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) \/ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ ((real_gt ((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))))
T c= creal_gt creal_add creal_abs creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_gt creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL)))) = T) |- ((((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL)))) = T) /\ (((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))) = ((vec (NUMERAL (BIT1 _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0))))))
T c==> c= c/\ cIN f0 f1 cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL cT c/\ c= c/\ cIN f0 f1 cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL cT c= c= cCOND c/\ cIN f0 f1 cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 c= cvec cNUMERAL cBIT1 c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ |- (((!a. (!b. (!c. ((integrable_on (\x. c)) (closed_interval ((CONS (a , b)) NIL)))))) ==> ((\a. (!b. (!c. ((integrable_on (\x. c)) (closed_interval ((CONS (a , b)) NIL)))))) a)) = ((\a. (!b. (!c. ((integrable_on (\x. c)) (closed_interval ((CONS (a , b)) NIL)))))) a))
T c= c==> ! ! ! cintegrable_on / b2 * part cclosed_interval cCONS c, b0 b1 cNIL * / ! ! cintegrable_on / b2 * part cclosed_interval cCONS c, b0 b1 cNIL f0 * / ! ! cintegrable_on / b2 * part cclosed_interval cCONS c, b0 b1 cNIL f0
+ |- (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) ==> (lebesgue_measurable s)) = (((lebesgue_measurable s) ==> (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL))))))) /\ ((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) ==> (lebesgue_measurable s))))
T c= c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL clebesgue_measurable f0 c/\ c==> clebesgue_measurable f0 ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL clebesgue_measurable f0
+ (!f. (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))))) |- (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))))
T c==> ! ! ! c==> c/\ cmeasurable_on b0 b2 c/\ cintegrable_on b1 b2 ! c==> cIN b3 b2 creal_le cvector_norm * b0 b3 cdrop * b1 b3 cintegrable_on b0 b2 ! ! c==> c/\ cmeasurable_on f0 b1 c/\ cintegrable_on b0 b1 ! c==> cIN b2 b1 creal_le cvector_norm * f0 b2 cdrop * b0 b2 cintegrable_on f0 b1
- |- ((\b. (lebesgue_measurable (open_interval (a , b)))) b)
T * / clebesgue_measurable * part copen_interval c, f0 b0 f1
+ ((((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ ((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) ==> F), ((((real_ge (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ ((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) \/ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ ((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((\s. ((indicator s) = (\x. (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))) s)
T * / c= * part cindicator b0 / cCOND cIN b1 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f0
+ |- ((((\g. (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x)))))))) g) ==> ((!f. (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))))) ==> ((integrable_on f) s))) = T)
T c= c==> * / c/\ cmeasurable_on f0 f1 c/\ cintegrable_on b0 f1 ! c==> cIN b1 f1 creal_le cvector_norm * f0 b1 cdrop * b0 b1 f2 c==> ! ! ! c==> c/\ cmeasurable_on b0 b2 c/\ cintegrable_on b1 b2 ! c==> cIN b3 b2 creal_le cvector_norm * b0 b3 cdrop * b1 b3 cintegrable_on b0 b2 cintegrable_on f0 f1 cT
+ |- ((\a. ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)) a)
T * / c==> c~ ! c= cCOND c/\ cIN b1 f0 cIN b1 * part cclosed_interval cCONS c, b0 f1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b1 * part cclosed_interval cCONS c, b0 f1 cNIL cCOND cIN b1 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF f2
+ |- (((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) \/ (((~ (x IN s)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ ((x IN s) \/ ((vec (NUMERAL _0)) = (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = (((~ (x IN s)) \/ T) /\ ((x IN s) \/ T)))
T c= c\/ c~ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c/\ c\/ c~ cIN f0 f3 c= cvec cNUMERAL cBIT1 c_0 cCOND cIN f0 f3 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ cIN f0 f3 c= cvec cNUMERAL c_0 cCOND cIN f0 f3 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c\/ c~ cIN f0 f3 cT c\/ cIN f0 f3 cT
+ |- ((((~ ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0))))) /\ (((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL)))) \/ ((vec (NUMERAL _0)) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) = T)
T c= c/\ c\/ c~ c/\ cIN f0 f1 cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL c= cvec cNUMERAL cBIT1 c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 c\/ c/\ cIN f0 f1 cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL c= cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cT
+ |- ((\f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) f)
T * / c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV f0
+ (!a. (!b. ((measurable_on (indicator (s INTER (closed_interval ((CONS (a , b)) NIL))))) UNIV))) |- (((measurable_on (indicator s)) (closed_interval ((CONS (a , b)) NIL))) /\ (((integrable_on (\x. (vec (NUMERAL (BIT1 _0))))) (closed_interval ((CONS (a , b)) NIL))) /\ (!x. ((x IN (closed_interval ((CONS (a , b)) NIL))) ==> ((real_le (vector_norm ((indicator s) x))) (drop ((\x. (vec (NUMERAL (BIT1 _0)))) x)))))))
T c==> ! ! cmeasurable_on * part cindicator * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL part cUNIV c/\ cmeasurable_on * part cindicator f0 * part cclosed_interval cCONS c, f1 f2 cNIL c/\ cintegrable_on / cvec cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, f1 f2 cNIL ! c==> cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL creal_le cvector_norm cindicator f0 b0 cdrop * / cvec cNUMERAL cBIT1 c_0 b0
+ (lebesgue_measurable s) |- ((((lebesgue_measurable s) /\ (lebesgue_measurable (closed_interval ((CONS (a , b)) NIL)))) ==> ((lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))) = T)) = ((lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))) = T))
T c==> clebesgue_measurable f0 c= c==> c/\ clebesgue_measurable f0 clebesgue_measurable * part cclosed_interval cCONS c, f1 f2 cNIL c= clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, f1 f2 cNIL cT c= clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, f1 f2 cNIL cT
- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) |- ((!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) /\ (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))))
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV c/\ ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))), (!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) |- ((measurable_on f) UNIV)
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV c==> ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL cmeasurable_on f0 part cUNIV
+ |- (((!p'. (!q'. (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) = p') ==> ((p' ==> ((lebesgue_measurable s) = q')) ==> (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) ==> (lebesgue_measurable s)) = (p' ==> q')))))) ==> ((\p'. (!q'. (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) = p') ==> ((p' ==> ((lebesgue_measurable s) = q')) ==> (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) ==> (lebesgue_measurable s)) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) = p') ==> ((p' ==> ((lebesgue_measurable s) = q')) ==> (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) ==> (lebesgue_measurable s)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL b0 c==> c==> b0 c= clebesgue_measurable f0 b1 c= c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL clebesgue_measurable f0 c==> b0 b1 * / ! c==> c= ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL b0 c==> c==> b0 c= clebesgue_measurable f0 b1 c= c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL clebesgue_measurable f0 c==> b0 b1 f1 * / ! c==> c= ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL b0 c==> c==> b0 c= clebesgue_measurable f0 b1 c= c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL clebesgue_measurable f0 c==> b0 b1 f1
+ |- (((real_le (real_abs (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_le (vector_norm (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))
T c= creal_le creal_abs creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le cvector_norm cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!p'. (!q'. (((lebesgue_measurable s) = p') ==> ((p' ==> ((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) = q')) ==> (((lebesgue_measurable s) ==> (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((lebesgue_measurable s) = p') ==> ((p' ==> ((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) = q')) ==> (((lebesgue_measurable s) ==> (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((lebesgue_measurable s) = p') ==> ((p' ==> ((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) = q')) ==> (((lebesgue_measurable s) ==> (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= clebesgue_measurable f0 b0 c==> c==> b0 c= ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL b1 c= c==> clebesgue_measurable f0 ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL c==> b0 b1 * / ! c==> c= clebesgue_measurable f0 b0 c==> c==> b0 c= ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL b1 c= c==> clebesgue_measurable f0 ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL c==> b0 b1 f1 * / ! c==> c= clebesgue_measurable f0 b0 c==> c==> b0 c= ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL b1 c= c==> clebesgue_measurable f0 ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL c==> b0 b1 f1
+ (lebesgue_measurable s) |- ((lebesgue_measurable s) = T)
T c==> clebesgue_measurable f0 c= clebesgue_measurable f0 cT
+ |- (((measurable_on f) s) = ((measurable_on (\x. (((COND (x IN s)) (f x)) (vec (NUMERAL _0))))) UNIV))
T c= cmeasurable_on f0 f1 cmeasurable_on / cCOND cIN b0 f1 * f0 b0 cvec cNUMERAL c_0 part cUNIV
+ |- ((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) ==> (lebesgue_measurable s))
T c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL clebesgue_measurable f0
+ (!a. (!b. ((measurable_on (indicator (s INTER (closed_interval ((CONS (a , b)) NIL))))) UNIV))) |- ((measurable_on (indicator (s INTER (closed_interval ((CONS (a , b)) NIL))))) UNIV)
T c==> ! ! cmeasurable_on * part cindicator * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL part cUNIV cmeasurable_on * part cindicator * * part cINTER f0 * part cclosed_interval cCONS c, f1 f2 cNIL part cUNIV
+ |- ((\s. (!b. (!a. ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)))) s)
T * / ! ! c==> c~ ! c= cCOND c/\ cIN b3 b0 cIN b3 * part cclosed_interval cCONS c, b2 b1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b3 * part cclosed_interval cCONS c, b2 b1 cNIL cCOND cIN b3 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF f0
+ ((real_gt ((real_add (real_abs (real_of_num (NUMERAL (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) |- ((((real_ge (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) \/ (((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c==> creal_gt creal_add creal_abs creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) |- ((\f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) f)
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV * / c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV f0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))) = (((~ ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0))))) /\ (((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL)))) \/ ((vec (NUMERAL _0)) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))))
T c= c= cCOND c/\ cIN f0 f1 cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 c/\ c\/ c~ c/\ cIN f0 f1 cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL c= cvec cNUMERAL cBIT1 c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 c\/ c/\ cIN f0 f1 cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL c= cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ |- ((((x IN (closed_interval ((CONS (a , b)) NIL))) = F) ==> ((((~ ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0))))) /\ (((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL)))) \/ ((vec (NUMERAL _0)) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) = T)) /\ (((x IN (closed_interval ((CONS (a , b)) NIL))) = T) ==> ((((~ ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0))))) /\ (((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL)))) \/ ((vec (NUMERAL _0)) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) = (((~ (x IN s)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ ((x IN s) \/ ((vec (NUMERAL _0)) = (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))))))))
T c/\ c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cF c= c/\ c\/ c~ c/\ cIN f0 f3 cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL cBIT1 c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN f0 f3 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 c\/ c/\ cIN f0 f3 cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN f0 f3 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cT c==> c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cT c= c/\ c\/ c~ c/\ cIN f0 f3 cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL cBIT1 c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN f0 f3 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 c\/ c/\ cIN f0 f3 cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c= cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN f0 f3 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 c/\ c\/ c~ cIN f0 f3 c= cvec cNUMERAL cBIT1 c_0 cCOND cIN f0 f3 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ cIN f0 f3 c= cvec cNUMERAL c_0 cCOND cIN f0 f3 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (((!s. (!t. (((lebesgue_measurable s) /\ (lebesgue_measurable t)) ==> (lebesgue_measurable (s INTER t))))) ==> ((\s. (!t. (((lebesgue_measurable s) /\ (lebesgue_measurable t)) ==> (lebesgue_measurable (s INTER t))))) s)) = ((\s. (!t. (((lebesgue_measurable s) /\ (lebesgue_measurable t)) ==> (lebesgue_measurable (s INTER t))))) s))
T c= c==> ! ! c==> c/\ clebesgue_measurable b0 clebesgue_measurable b1 clebesgue_measurable * * part cINTER b0 b1 * / ! c==> c/\ clebesgue_measurable b0 clebesgue_measurable b1 clebesgue_measurable * * part cINTER b0 b1 f0 * / ! c==> c/\ clebesgue_measurable b0 clebesgue_measurable b1 clebesgue_measurable * * part cINTER b0 b1 f0
+ |- ((x IN s) ==> ((real_le (vector_norm (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))
T c==> cIN f0 f1 creal_le cvector_norm cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))) = T)
T c= c= cCOND c/\ cIN f0 f1 cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cT
+ (x IN (closed_interval ((CONS (a , b)) NIL))) |- ((x IN (closed_interval ((CONS (a , b)) NIL))) /\ ((real_le (vector_norm ((indicator s) x))) (drop (vec (NUMERAL (BIT1 _0))))))
T c==> cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c/\ cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL creal_le cvector_norm cindicator f3 f0 cdrop cvec cNUMERAL cBIT1 c_0
+ (!a. (!b. ((measurable_on (indicator (s INTER (closed_interval ((CONS (a , b)) NIL))))) UNIV))) |- ((!b. ((integrable_on (indicator s)) (closed_interval ((CONS (a , b)) NIL)))) = T)
T c==> ! ! cmeasurable_on * part cindicator * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL part cUNIV c= ! cintegrable_on * part cindicator f0 * part cclosed_interval cCONS c, f1 b0 cNIL cT
+ |- ((!s. t) = t)
T c= ! f0 f0
+ |- ((lebesgue_measurable (closed_interval ((CONS (a , b)) NIL))) = T)
T c= clebesgue_measurable * part cclosed_interval cCONS c, f0 f1 cNIL cT
+ |- ((\s. (!t. (((lebesgue_measurable s) /\ (lebesgue_measurable t)) ==> (lebesgue_measurable (s INTER t))))) s)
T * / ! c==> c/\ clebesgue_measurable b0 clebesgue_measurable b1 clebesgue_measurable * * part cINTER b0 b1 f0
+ ((drop x) = (x $ (NUMERAL (BIT1 _0)))) |- ((x $ (NUMERAL (BIT1 _0))) = (drop x))
T c==> c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0 c= c$ f0 cNUMERAL cBIT1 c_0 cdrop f0
+ |- ((?g. (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x)))))))) ==> ((integrable_on f) s))
T c==> c? / c/\ cmeasurable_on f0 f1 c/\ cintegrable_on b0 f1 ! c==> cIN b1 f1 creal_le cvector_norm * f0 b1 cdrop * b0 b1 cintegrable_on f0 f1
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\f. (!s. ((?g. (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x)))))))) ==> ((integrable_on f) s)))) f)
T * / ! c==> c? / c/\ cmeasurable_on b0 b1 c/\ cintegrable_on b2 b1 ! c==> cIN b3 b1 creal_le cvector_norm * b0 b3 cdrop * b2 b3 cintegrable_on b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((real_le (real_abs (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))
T creal_le creal_abs creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (lebesgue_measurable s) |- (T = ((lebesgue_measurable s) /\ (lebesgue_measurable (closed_interval ((CONS (a , b)) NIL)))))
T c==> clebesgue_measurable f0 c= cT c/\ clebesgue_measurable f0 clebesgue_measurable * part cclosed_interval cCONS c, f1 f2 cNIL
+ |- (((~ (x IN s)) ==> ((real_le (vector_norm (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0)))))) = (((x IN s) ==> ((real_le (vector_norm (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0)))))) /\ ((~ (x IN s)) ==> ((real_le (vector_norm (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))))
T c= c==> c~ cIN f0 f1 creal_le cvector_norm cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 c/\ c==> cIN f0 f1 creal_le cvector_norm cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 c==> c~ cIN f0 f1 creal_le cvector_norm cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ |- ((\b. (!c. ((integrable_on (\x. c)) (closed_interval ((CONS (a , b)) NIL))))) b)
T * / ! cintegrable_on / b1 * part cclosed_interval cCONS c, f0 b0 cNIL f1
- ((a = b) ==> (a ==> b)) |- (((a = b) ==> (a ==> b)) /\ ((a = b) ==> (a ==> b)))
T c==> c==> c= f0 f1 c==> f0 f1 c/\ c==> c= f0 f1 c==> f0 f1 c==> c= f0 f1 c==> f0 f1
+ |- (((!b. (!a. ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F))) ==> ((\b. (!a. ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F))) b)) = ((\b. (!a. ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F))) b))
T c= c==> ! ! c==> c~ ! c= cCOND c/\ cIN b2 f0 cIN b2 * part cclosed_interval cCONS c, b1 b0 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b2 * part cclosed_interval cCONS c, b1 b0 cNIL cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF * / ! c==> c~ ! c= cCOND c/\ cIN b2 f0 cIN b2 * part cclosed_interval cCONS c, b1 b0 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b2 * part cclosed_interval cCONS c, b1 b0 cNIL cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF f1 * / ! c==> c~ ! c= cCOND c/\ cIN b2 f0 cIN b2 * part cclosed_interval cCONS c, b1 b0 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b2 * part cclosed_interval cCONS c, b1 b0 cNIL cCOND cIN b2 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF f1
+ |- ((\a. (!b. (lebesgue_measurable (closed_interval ((CONS (a , b)) NIL))))) a)
T * / ! clebesgue_measurable * part cclosed_interval cCONS c, b0 b1 cNIL f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (!a. (!b. ((measurable_on (indicator (s INTER (closed_interval ((CONS (a , b)) NIL))))) UNIV))) |- (((?g. (((measurable_on (indicator s)) (closed_interval ((CONS (a , b)) NIL))) /\ (((integrable_on g) (closed_interval ((CONS (a , b)) NIL))) /\ (!x. ((x IN (closed_interval ((CONS (a , b)) NIL))) ==> ((real_le (vector_norm ((indicator s) x))) (drop (g x)))))))) ==> ((integrable_on (indicator s)) (closed_interval ((CONS (a , b)) NIL)))) = ((integrable_on (indicator s)) (closed_interval ((CONS (a , b)) NIL))))
T c==> ! ! cmeasurable_on * part cindicator * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL part cUNIV c= c==> c? / c/\ cmeasurable_on * part cindicator f0 * part cclosed_interval cCONS c, f1 f2 cNIL c/\ cintegrable_on b0 * part cclosed_interval cCONS c, f1 f2 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, f1 f2 cNIL creal_le cvector_norm cindicator f0 b1 cdrop * b0 b1 cintegrable_on * part cindicator f0 * part cclosed_interval cCONS c, f1 f2 cNIL cintegrable_on * part cindicator f0 * part cclosed_interval cCONS c, f1 f2 cNIL
- (x IN s) |- ((x IN s) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((x IN (closed_interval ((CONS (a , b)) NIL))) ==> ((real_le (vector_norm ((indicator s) x))) (drop (vec (NUMERAL (BIT1 _0)))))) = T)
T c= c==> cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL creal_le cvector_norm cindicator f3 f0 cdrop cvec cNUMERAL cBIT1 c_0 cT
+ |- (((!x. (((\g. (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x)))))))) x) ==> ((!f. (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))))) ==> ((integrable_on f) s)))) ==> ((?g. (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x)))))))) ==> ((!f. (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))))) ==> ((integrable_on f) s)))) = ((?g. (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x)))))))) ==> ((!f. (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))))) ==> ((integrable_on f) s))))
T c= c==> ! c==> * / c/\ cmeasurable_on f0 f1 c/\ cintegrable_on b1 f1 ! c==> cIN b2 f1 creal_le cvector_norm * f0 b2 cdrop * b1 b2 b0 c==> ! ! ! c==> c/\ cmeasurable_on b1 b3 c/\ cintegrable_on b2 b3 ! c==> cIN b4 b3 creal_le cvector_norm * b1 b4 cdrop * b2 b4 cintegrable_on b1 b3 cintegrable_on f0 f1 c==> c? / c/\ cmeasurable_on f0 f1 c/\ cintegrable_on b0 f1 ! c==> cIN b1 f1 creal_le cvector_norm * f0 b1 cdrop * b0 b1 c==> ! ! ! c==> c/\ cmeasurable_on b0 b2 c/\ cintegrable_on b1 b2 ! c==> cIN b3 b2 creal_le cvector_norm * b0 b3 cdrop * b1 b3 cintegrable_on b0 b2 cintegrable_on f0 f1 c==> c? / c/\ cmeasurable_on f0 f1 c/\ cintegrable_on b0 f1 ! c==> cIN b1 f1 creal_le cvector_norm * f0 b1 cdrop * b0 b1 c==> ! ! ! c==> c/\ cmeasurable_on b0 b2 c/\ cintegrable_on b1 b2 ! c==> cIN b3 b2 creal_le cvector_norm * b0 b3 cdrop * b1 b3 cintegrable_on b0 b2 cintegrable_on f0 f1
+ (!f. (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))))) |- (((!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))) ==> ((\s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))) s)) = ((\s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))) s))
T c==> ! ! ! c==> c/\ cmeasurable_on b0 b2 c/\ cintegrable_on b1 b2 ! c==> cIN b3 b2 creal_le cvector_norm * b0 b3 cdrop * b1 b3 cintegrable_on b0 b2 c= c==> ! c==> c/\ cmeasurable_on f0 b0 c/\ cintegrable_on f1 b0 ! c==> cIN b1 b0 creal_le cvector_norm * f0 b1 cdrop * f1 b1 cintegrable_on f0 b0 * / c==> c/\ cmeasurable_on f0 b0 c/\ cintegrable_on f1 b0 ! c==> cIN b1 b0 creal_le cvector_norm * f0 b1 cdrop * f1 b1 cintegrable_on f0 b0 f2 * / c==> c/\ cmeasurable_on f0 b0 c/\ cintegrable_on f1 b0 ! c==> cIN b1 b0 creal_le cvector_norm * f0 b1 cdrop * f1 b1 cintegrable_on f0 b0 f2
+ ((((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> F), ((((real_ge (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) \/ (((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((x $ (NUMERAL (BIT1 _0))) = (drop x))
T c= c$ f0 cNUMERAL cBIT1 c_0 cdrop f0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) |- ((\a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) a)
T c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL * / ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL f1
+ |- ((((x IN s) = T) ==> (((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) \/ (((~ (x IN s)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ ((x IN s) \/ ((vec (NUMERAL _0)) = (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = T)) = ((((x IN s) = F) ==> (((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) \/ (((~ (x IN s)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ ((x IN s) \/ ((vec (NUMERAL _0)) = (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = T)) /\ (((x IN s) = T) ==> (((~ (x IN (closed_interval ((CONS (a , b)) NIL)))) \/ (((~ (x IN s)) \/ ((vec (NUMERAL (BIT1 _0))) = (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) /\ ((x IN s) \/ ((vec (NUMERAL _0)) = (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))))) = T))))
T c= c==> c= cIN f0 f1 cT c= c\/ c~ cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL c/\ c\/ c~ cIN f0 f1 c= cvec cNUMERAL cBIT1 c_0 cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ cIN f0 f1 c= cvec cNUMERAL c_0 cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT c/\ c==> c= cIN f0 f1 cF c= c\/ c~ cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL c/\ c\/ c~ cIN f0 f1 c= cvec cNUMERAL cBIT1 c_0 cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ cIN f0 f1 c= cvec cNUMERAL c_0 cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT c==> c= cIN f0 f1 cT c= c\/ c~ cIN f0 * part cclosed_interval cCONS c, f2 f3 cNIL c/\ c\/ c~ cIN f0 f1 c= cvec cNUMERAL cBIT1 c_0 cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c\/ cIN f0 f1 c= cvec cNUMERAL c_0 cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT
+ |- ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)
T * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
+ |- (((real_le (vector_norm (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))))) (drop (vec (NUMERAL (BIT1 _0))))) = ((real_le (vector_norm ((indicator s) x))) (drop (vec (NUMERAL (BIT1 _0))))))
T c= creal_le cvector_norm cCOND cIN f0 f1 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cvector_norm cindicator f1 f0 cdrop cvec cNUMERAL cBIT1 c_0
+ (!f. (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))))) |- (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s)))
T c==> ! ! ! c==> c/\ cmeasurable_on b0 b2 c/\ cintegrable_on b1 b2 ! c==> cIN b3 b2 creal_le cvector_norm * b0 b3 cdrop * b1 b3 cintegrable_on b0 b2 ! c==> c/\ cmeasurable_on f0 b0 c/\ cintegrable_on f1 b0 ! c==> cIN b1 b0 creal_le cvector_norm * f0 b1 cdrop * f1 b1 cintegrable_on f0 b0
- |- ((((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)) ==> (((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)))
T c==> c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((real_le (real_abs (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) |- ((real_gt ((real_add (real_abs (real_of_num (NUMERAL (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c~ creal_le creal_abs creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_gt creal_add creal_abs creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (lebesgue_measurable s) |- ((lebesgue_measurable s) /\ (lebesgue_measurable (closed_interval ((CONS (a , b)) NIL))))
T c==> clebesgue_measurable f0 c/\ clebesgue_measurable f0 clebesgue_measurable * part cclosed_interval cCONS c, f1 f2 cNIL
+ |- (((real_gt ((real_add (real_abs (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = ((((real_ge (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (real_of_num (NUMERAL _0))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) \/ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (real_neg (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))))
T c= creal_gt creal_add creal_abs creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_neg creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((!q'. (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) = p') ==> ((p' ==> ((lebesgue_measurable s) = q')) ==> (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) ==> (lebesgue_measurable s)) = (p' ==> q'))))) ==> ((\q'. (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) = p') ==> ((p' ==> ((lebesgue_measurable s) = q')) ==> (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) ==> (lebesgue_measurable s)) = (p' ==> q'))))) q')) = ((\q'. (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) = p') ==> ((p' ==> ((lebesgue_measurable s) = q')) ==> (((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) ==> (lebesgue_measurable s)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b1 b2 cNIL f1 c==> c==> f1 c= clebesgue_measurable f0 b0 c= c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b1 b2 cNIL clebesgue_measurable f0 c==> f1 b0 * / c==> c= ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b1 b2 cNIL f1 c==> c==> f1 c= clebesgue_measurable f0 b0 c= c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b1 b2 cNIL clebesgue_measurable f0 c==> f1 b0 f2 * / c==> c= ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b1 b2 cNIL f1 c==> c==> f1 c= clebesgue_measurable f0 b0 c= c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b1 b2 cNIL clebesgue_measurable f0 c==> f1 b0 f2
+ |- (((!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) ==> ((\f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) f)) = ((\f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) f))
T c= c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV * / c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV f0 * / c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV f0
+ (?g. (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x)))))))) |- ((!f. (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))))) ==> ((integrable_on f) s))
T c==> c? / c/\ cmeasurable_on f0 f1 c/\ cintegrable_on b0 f1 ! c==> cIN b1 f1 creal_le cvector_norm * f0 b1 cdrop * b0 b1 c==> ! ! ! c==> c/\ cmeasurable_on b0 b2 c/\ cintegrable_on b1 b2 ! c==> cIN b3 b2 creal_le cvector_norm * b0 b3 cdrop * b1 b3 cintegrable_on b0 b2 cintegrable_on f0 f1
+ (!a. (!b. ((measurable_on (indicator (s INTER (closed_interval ((CONS (a , b)) NIL))))) UNIV))) |- (((!a. (!b. ((integrable_on (indicator s)) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on (indicator s)) UNIV)) = ((measurable_on (indicator s)) UNIV))
T c==> ! ! cmeasurable_on * part cindicator * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL part cUNIV c= c==> ! ! cintegrable_on * part cindicator f0 * part cclosed_interval cCONS c, b0 b1 cNIL cmeasurable_on * part cindicator f0 part cUNIV cmeasurable_on * part cindicator f0 part cUNIV
+ |- (((real_gt ((real_add (real_abs (real_of_num (NUMERAL (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = ((\_1855752. ((real_gt ((real_add _1855752) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) (real_abs (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_gt creal_add creal_abs creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / creal_gt creal_add b0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_abs creal_of_num cNUMERAL cBIT1 c_0
+ |- ((lebesgue_measurable s) ==> (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))))
T c==> clebesgue_measurable f0 ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL
+ |- ((\x. ((x $ (NUMERAL (BIT1 _0))) = (drop x))) x)
T * / c= c$ b0 cNUMERAL cBIT1 c_0 cdrop b0 f0
+ |- (((!f. (!s. ((?g. (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x)))))))) ==> ((integrable_on f) s)))) ==> ((\f. (!s. ((?g. (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x)))))))) ==> ((integrable_on f) s)))) f)) = ((\f. (!s. ((?g. (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x)))))))) ==> ((integrable_on f) s)))) f))
T c= c==> ! ! c==> c? / c/\ cmeasurable_on b0 b1 c/\ cintegrable_on b2 b1 ! c==> cIN b3 b1 creal_le cvector_norm * b0 b3 cdrop * b2 b3 cintegrable_on b0 b1 * / ! c==> c? / c/\ cmeasurable_on b0 b1 c/\ cintegrable_on b2 b1 ! c==> cIN b3 b1 creal_le cvector_norm * b0 b3 cdrop * b2 b3 cintegrable_on b0 b1 f0 * / ! c==> c? / c/\ cmeasurable_on b0 b1 c/\ cintegrable_on b2 b1 ! c==> cIN b3 b1 creal_le cvector_norm * b0 b3 cdrop * b2 b3 cintegrable_on b0 b1 f0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (((measurable_on (\x. (((COND (x IN s)) (f x)) (vec (NUMERAL _0))))) UNIV) = ((measurable_on f) s)) |- (((measurable_on f) s) = ((measurable_on (\x. (((COND (x IN s)) (f x)) (vec (NUMERAL _0))))) UNIV))
T c==> c= cmeasurable_on / cCOND cIN b0 f0 * f1 b0 cvec cNUMERAL c_0 part cUNIV cmeasurable_on f1 f0 c= cmeasurable_on f1 f0 cmeasurable_on / cCOND cIN b0 f0 * f1 b0 cvec cNUMERAL c_0 part cUNIV
+ |- (T = (!s. (!b. (!a. ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)))))
T c= cT ! ! ! c==> c~ ! c= cCOND c/\ cIN b3 b0 cIN b3 * part cclosed_interval cCONS c, b2 b1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b3 * part cclosed_interval cCONS c, b2 b1 cNIL cCOND cIN b3 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF
+ (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) |- ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) /\ ((!f. (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))))) ==> ((integrable_on f) s)))
T c==> c/\ cmeasurable_on f0 f1 c/\ cintegrable_on f2 f1 ! c==> cIN b0 f1 creal_le cvector_norm * f0 b0 cdrop * f2 b0 c/\ c/\ cmeasurable_on f0 f1 c/\ cintegrable_on f2 f1 ! c==> cIN b0 f1 creal_le cvector_norm * f0 b0 cdrop * f2 b0 c==> ! ! ! c==> c/\ cmeasurable_on b0 b2 c/\ cintegrable_on b1 b2 ! c==> cIN b3 b2 creal_le cvector_norm * b0 b3 cdrop * b1 b3 cintegrable_on b0 b2 cintegrable_on f0 f1
+ |- ((\p'. (!q'. (((lebesgue_measurable s) = p') ==> ((p' ==> ((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) = q')) ==> (((lebesgue_measurable s) ==> (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL))))))) = (p' ==> q')))))) p')
T * / ! c==> c= clebesgue_measurable f0 b0 c==> c==> b0 c= ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL b1 c= c==> clebesgue_measurable f0 ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b2 b3 cNIL c==> b0 b1 f1
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((\s. ((?g. (((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x)))))))) ==> ((integrable_on f) s))) s)
T * / c==> c? / c/\ cmeasurable_on f0 b0 c/\ cintegrable_on b1 b0 ! c==> cIN b2 b0 creal_le cvector_norm * f0 b2 cdrop * b1 b2 cintegrable_on f0 b0 f1
+ |- ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((!f. (!g. (!s. ((((measurable_on f) s) /\ (((integrable_on g) s) /\ (!x. ((x IN s) ==> ((real_le (vector_norm (f x))) (drop (g x))))))) ==> ((integrable_on f) s))))) ==> ((integrable_on f) s)))
T c==> c/\ cmeasurable_on f0 f1 c/\ cintegrable_on f2 f1 ! c==> cIN b0 f1 creal_le cvector_norm * f0 b0 cdrop * f2 b0 c==> ! ! ! c==> c/\ cmeasurable_on b0 b2 c/\ cintegrable_on b1 b2 ! c==> cIN b3 b2 creal_le cvector_norm * b0 b3 cdrop * b1 b3 cintegrable_on b0 b2 cintegrable_on f0 f1
+ |- (((!s. ((lebesgue_measurable s) = ((measurable_on (indicator s)) UNIV))) ==> ((\s. ((lebesgue_measurable s) = ((measurable_on (indicator s)) UNIV))) s)) = ((\s. ((lebesgue_measurable s) = ((measurable_on (indicator s)) UNIV))) s))
T c= c==> ! c= clebesgue_measurable b0 cmeasurable_on * part cindicator b0 part cUNIV * / c= clebesgue_measurable b0 cmeasurable_on * part cindicator b0 part cUNIV f0 * / c= clebesgue_measurable b0 cmeasurable_on * part cindicator b0 part cUNIV f0
+ |- (((!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) ==> ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)) = ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x))
T c= c==> ! c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
- |- (((!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) ==> (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV)))) = (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))))
T c= c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV
+ |- (((!g. ((f = g) = (!x. ((f x) = (g x))))) ==> ((\g. ((f = g) = (!x. ((f x) = (g x))))) g)) = ((\g. ((f = g) = (!x. ((f x) = (g x))))) g))
T c= c==> ! c= c= f0 b0 ! c= * f0 b1 * b0 b1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- (x IN s) |- (((real_le (vector_norm (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))) = ((real_le (vector_norm (vec (NUMERAL (BIT1 _0))))) (drop (vec (NUMERAL (BIT1 _0))))))
T c==> cIN f0 f1 c= creal_le cvector_norm cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cvector_norm cvec cNUMERAL cBIT1 c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ |- ((real_le (vector_norm ((indicator s) x))) (drop (vec (NUMERAL (BIT1 _0)))))
T creal_le cvector_norm cindicator f0 f1 cdrop cvec cNUMERAL cBIT1 c_0
+ |- (((real_le (real_abs (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_le (vector_norm (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))
T c= creal_le creal_abs creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le cvector_norm cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0
+ |- (((lebesgue_measurable s) = p') ==> ((p' ==> ((!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) = q')) ==> (((lebesgue_measurable s) ==> (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL))))))) = (p' ==> q'))))
T c==> c= clebesgue_measurable f0 f1 c==> c==> f1 c= ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL f2 c= c==> clebesgue_measurable f0 ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL c==> f1 f2
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((!s. (!b. (!a. ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)))) ==> ((\s. (!b. (!a. ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)))) s)) = ((\s. (!b. (!a. ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)))) s))
T c= c==> ! ! ! c==> c~ ! c= cCOND c/\ cIN b3 b0 cIN b3 * part cclosed_interval cCONS c, b2 b1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b3 * part cclosed_interval cCONS c, b2 b1 cNIL cCOND cIN b3 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF * / ! ! c==> c~ ! c= cCOND c/\ cIN b3 b0 cIN b3 * part cclosed_interval cCONS c, b2 b1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b3 * part cclosed_interval cCONS c, b2 b1 cNIL cCOND cIN b3 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF f0 * / ! ! c==> c~ ! c= cCOND c/\ cIN b3 b0 cIN b3 * part cclosed_interval cCONS c, b2 b1 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b3 * part cclosed_interval cCONS c, b2 b1 cNIL cCOND cIN b3 b0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF f0
+ (!a. (!b. ((measurable_on (indicator (s INTER (closed_interval ((CONS (a , b)) NIL))))) UNIV))) |- (((!b. ((measurable_on (indicator (s INTER (closed_interval ((CONS (a , b)) NIL))))) UNIV)) ==> ((\b. ((measurable_on (indicator (s INTER (closed_interval ((CONS (a , b)) NIL))))) UNIV)) b)) = ((\b. ((measurable_on (indicator (s INTER (closed_interval ((CONS (a , b)) NIL))))) UNIV)) b))
T c==> ! ! cmeasurable_on * part cindicator * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL part cUNIV c= c==> ! cmeasurable_on * part cindicator * * part cINTER f0 * part cclosed_interval cCONS c, f1 b0 cNIL part cUNIV * / cmeasurable_on * part cindicator * * part cINTER f0 * part cclosed_interval cCONS c, f1 b0 cNIL part cUNIV f2 * / cmeasurable_on * part cindicator * * part cINTER f0 * part cclosed_interval cCONS c, f1 b0 cNIL part cUNIV f2
- ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) |- (((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) /\ ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F))
T c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c/\ c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)) |- ((((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)) /\ (((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)))
T c==> c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c/\ c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF
- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))), (!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) |- ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) /\ ((measurable_on f) UNIV))
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV c==> ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL c/\ ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL cmeasurable_on f0 part cUNIV
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (a = b), ((a = b) ==> (a ==> b)) |- (((a = b) ==> (a ==> b)) /\ (a ==> b))
T c==> c= f0 f1 c==> c==> c= f0 f1 c==> f0 f1 c/\ c==> c= f0 f1 c==> f0 f1 c==> f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (x IN s)) |- ((x IN s) = F)
T c==> c~ cIN f0 f1 c= cIN f0 f1 cF
- ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F), (((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)) |- ((((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)) /\ ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F))
T c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c/\ c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF
- (a = b), ((a = b) ==> (a ==> b)) |- ((a = b) /\ (a ==> b))
T c==> c= f0 f1 c==> c==> c= f0 f1 c==> f0 f1 c/\ c= f0 f1 c==> f0 f1
- ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F), (((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)) |- (((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) /\ ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F))
T c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c/\ c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF
- |- ((((a = b) ==> (a ==> b)) ==> ((a = b) ==> (a ==> b))) = ((a = b) ==> (a ==> b)))
T c= c==> c==> c= f0 f1 c==> f0 f1 c==> c= f0 f1 c==> f0 f1 c==> c= f0 f1 c==> f0 f1
- (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) |- ((\b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL))))) b)
T c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL * / clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, f1 b0 cNIL f2
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) |- ((((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F))
T c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF
- (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) |- (((!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL))))) ==> ((\b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL))))) b)) = ((\b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL))))) b))
T c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL c= c==> ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, f1 b0 cNIL * / clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, f1 b0 cNIL f2 * / clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, f1 b0 cNIL f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) |- (((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV)) = T)
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV c= c==> ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL cmeasurable_on f0 part cUNIV cT
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((lebesgue_measurable (open_interval (a , b))) = T)
T c= clebesgue_measurable * part copen_interval c, f0 f1 cT
- (a = b) |- (((a = b) ==> (a ==> b)) ==> (a ==> b))
T c==> c= f0 f1 c==> c==> c= f0 f1 c==> f0 f1 c==> f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) ==> (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))))
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((a = b) ==> (a ==> b)) ==> ((a = b) ==> (a ==> b)))
T c==> c==> c= f0 f1 c==> f0 f1 c==> c= f0 f1 c==> f0 f1
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) |- ((!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) ==> ((measurable_on f) UNIV))
T c==> ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV cmeasurable_on f0 part cUNIV
- |- ((lebesgue_measurable s) = ((lebesgue_measurable s) /\ (lebesgue_measurable (closed_interval ((CONS (a , b)) NIL)))))
T c= clebesgue_measurable f0 c/\ clebesgue_measurable f0 clebesgue_measurable * part cclosed_interval cCONS c, f1 f2 cNIL
- |- ((\a. (!b. (lebesgue_measurable (open_interval (a , b))))) a)
T * / ! clebesgue_measurable * part copen_interval c, b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) |- ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) /\ F)
T c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 c/\ c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF
- |- (((!b. (lebesgue_measurable (open_interval (a , b)))) ==> ((\b. (lebesgue_measurable (open_interval (a , b)))) b)) = ((\b. (lebesgue_measurable (open_interval (a , b)))) b))
T c= c==> ! clebesgue_measurable * part copen_interval c, f0 b0 * / clebesgue_measurable * part copen_interval c, f0 b0 f1 * / clebesgue_measurable * part copen_interval c, f0 b0 f1
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!a. (!b. (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL)))))) |- (lebesgue_measurable (s INTER (closed_interval ((CONS (a , b)) NIL))))
T c==> ! ! clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, b0 b1 cNIL clebesgue_measurable * * part cINTER f0 * part cclosed_interval cCONS c, f1 f2 cNIL
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))), (!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) |- ((!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) /\ ((measurable_on f) UNIV))
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV c==> ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL c/\ ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV cmeasurable_on f0 part cUNIV
- (~ (x IN s)) |- (((real_le (vector_norm (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))) = ((real_le (vector_norm (vec (NUMERAL _0)))) (drop (vec (NUMERAL (BIT1 _0))))))
T c==> c~ cIN f0 f1 c= creal_le cvector_norm cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0 creal_le cvector_norm cvec cNUMERAL c_0 cdrop cvec cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!a. (!b. (lebesgue_measurable (open_interval (a , b))))) ==> ((\a. (!b. (lebesgue_measurable (open_interval (a , b))))) a)) = ((\a. (!b. (lebesgue_measurable (open_interval (a , b))))) a))
T c= c==> ! ! clebesgue_measurable * part copen_interval c, b0 b1 * / ! clebesgue_measurable * part copen_interval c, b0 b1 f0 * / ! clebesgue_measurable * part copen_interval c, b0 b1 f0
- |- ((((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F) ==> ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F)) = ((~ (!x. ((((COND ((x IN s) /\ (x IN (closed_interval ((CONS (a , b)) NIL))))) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0))) = (((COND (x IN (closed_interval ((CONS (a , b)) NIL)))) (((COND (x IN s)) (vec (NUMERAL (BIT1 _0)))) (vec (NUMERAL _0)))) (vec (NUMERAL _0)))))) ==> F))
T c= c==> c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF c==> c~ ! c= cCOND c/\ cIN b0 f0 cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cIN b0 * part cclosed_interval cCONS c, f1 f2 cNIL cCOND cIN b0 f0 cvec cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvec cNUMERAL c_0 cF
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
