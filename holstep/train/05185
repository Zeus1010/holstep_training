N Hypermap.edge_degenerate_walkup_second_eq
C |- (!H. (!x. (((x IN (dart H)) /\ (((edge_map H) x) = x)) ==> (((face_walkup H) x) = ((edge_walkup H) x)))))
T c==> c/\ cIN f0 * part cdart f1 c= cedge_map f1 f0 f0 c= cface_walkup f1 f0 cedge_walkup f1 f0
D TRUTH
A |- T
T cT
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D Hypermap.lemma_hypermap_eq
A |- (!H. (!H'. ((H = H') = (((dart H) = (dart H')) /\ (((edge_map H) = (edge_map H')) /\ (((node_map H) = (node_map H')) /\ ((face_map H) = (face_map H'))))))))
T c= c= f0 f1 c/\ c= * part cdart f0 * part cdart f1 c/\ c= * part cedge_map f0 * part cedge_map f1 c/\ c= * part cnode_map f0 * part cnode_map f1 c= * part cface_map f0 * part cface_map f1
D Hypermap.shift_lemma
A |- (!H. (((dart H) = (dart (shift H))) /\ (((edge_map H) = (face_map (shift H))) /\ (((node_map H) = (edge_map (shift H))) /\ ((face_map H) = (node_map (shift H)))))))
T c/\ c= * part cdart f0 * part cdart cshift f0 c/\ c= * part cedge_map f0 * part cface_map cshift f0 c/\ c= * part cnode_map f0 * part cedge_map cshift f0 c= * part cface_map f0 * part cnode_map cshift f0
D Hypermap.double_shift_lemma
A |- (!H. (((dart H) = (dart (shift (shift H)))) /\ (((edge_map H) = (node_map (shift (shift H)))) /\ (((node_map H) = (face_map (shift (shift H)))) /\ ((face_map H) = (edge_map (shift (shift H))))))))
T c/\ c= * part cdart f0 * part cdart cshift cshift f0 c/\ c= * part cedge_map f0 * part cnode_map cshift cshift f0 c/\ c= * part cnode_map f0 * part cface_map cshift cshift f0 c= * part cface_map f0 * part cedge_map cshift cshift f0
D Hypermap.face_walkup
A |- (!H. (!x. (((face_walkup H) x) = (shift ((edge_walkup (shift (shift H))) x)))))
T c= cface_walkup f0 f1 cshift cedge_walkup cshift cshift f0 f1
D Hypermap.lemma_edge_walkup
A |- (!H. (!x. (((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) /\ (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H))))))))
T c/\ c= * part cdart cedge_walkup f0 f1 * * part cDELETE * part cdart f0 f1 c/\ c= * part cedge_map cedge_walkup f0 f1 * * part co * part cinverse * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0 * part cinverse * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c/\ c= * part cnode_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c= * part cface_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0
D Hypermap.node_map_walkup
A |- (!H. (!x. (!y. ((((node_map ((edge_walkup H) x)) x) = x) /\ ((((node_map ((edge_walkup H) x)) ((inverse (node_map H)) x)) = ((node_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (node_map H)) x)))) ==> (((node_map ((edge_walkup H) x)) y) = ((node_map H) y))))))))
T c/\ c= cnode_map cedge_walkup f0 f1 f1 f1 c/\ c= cnode_map cedge_walkup f0 f1 cinverse * part cnode_map f0 f1 cnode_map f0 f1 c==> c/\ c~ c= f2 f1 c~ c= f2 cinverse * part cnode_map f0 f1 c= cnode_map cedge_walkup f0 f1 f2 cnode_map f0 f2
D Hypermap.face_map_walkup
A |- (!H. (!x. (!y. ((((face_map ((edge_walkup H) x)) x) = x) /\ ((((face_map ((edge_walkup H) x)) ((inverse (face_map H)) x)) = ((face_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (face_map H)) x)))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y))))))))
T c/\ c= cface_map cedge_walkup f0 f1 f1 f1 c/\ c= cface_map cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cface_map f0 f1 c==> c/\ c~ c= f2 f1 c~ c= f2 cinverse * part cface_map f0 f1 c= cface_map cedge_walkup f0 f1 f2 cface_map f0 f2
D Hypermap.edge_map_walkup
A |- (!H. (!x. (!y. ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))))))))
T c/\ c= cedge_map cedge_walkup f0 f1 f1 f1 c/\ c==> c/\ c~ c= cnode_map f0 f1 f1 c~ c= cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cnode_map f0 f1 cedge_map f0 f1 c/\ c==> c/\ c~ c= cinverse * part cface_map f0 f1 f1 c~ c= cinverse * part cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 cinverse * part cface_map f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 cinverse * part cedge_map f0 f1 c~ c= f2 cnode_map f0 f1 c= cedge_map cedge_walkup f0 f1 f2 cedge_map f0 f2
D Hypermap.edge_degenerate_walkup_edge_map
A |- (!H. (!x. (!y. (((x IN (dart H)) /\ (((edge_map H) x) = x)) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y))))))
T c==> c/\ cIN f0 * part cdart f1 c= cedge_map f1 f0 f0 c= cedge_map cedge_walkup f1 f0 f2 cedge_map f1 f2
D Hypermap.node_degenerate_walkup_node_map
A |- (!H. (!x. (!y. (((x IN (dart H)) /\ (((node_map H) x) = x)) ==> (((node_map ((edge_walkup H) x)) y) = ((node_map H) y))))))
T c==> c/\ cIN f0 * part cdart f1 c= cnode_map f1 f0 f0 c= cnode_map cedge_walkup f1 f0 f2 cnode_map f1 f2
D Hypermap.node_degenerate_walkup_edge_map
A |- (!H. (!x. (((x IN (dart H)) /\ (((node_map H) x) = x)) ==> ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((edge_map H) x)) /\ (!y. (((~ (y = x)) /\ (~ (y = ((inverse (edge_map H)) x)))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))))))))
T c==> c/\ cIN f0 * part cdart f1 c= cnode_map f1 f0 f0 c/\ c= cedge_map cedge_walkup f1 f0 f0 f0 c/\ c= cedge_map cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 cedge_map f1 f0 ! c==> c/\ c~ c= b0 f0 c~ c= b0 cinverse * part cedge_map f1 f0 c= cedge_map cedge_walkup f1 f0 b0 cedge_map f1 b0
+ ((dart H) = (dart (shift (shift H)))) |- (((x IN (dart (shift (shift H)))) ==> (((face_walkup H) x) = ((edge_walkup H) x))) = ((x IN (dart H)) ==> (((face_walkup H) x) = ((edge_walkup H) x))))
T c==> c= * part cdart f0 * part cdart cshift cshift f0 c= c==> cIN f1 * part cdart cshift cshift f0 c= cface_walkup f0 f1 cedge_walkup f0 f1 c==> cIN f1 * part cdart f0 c= cface_walkup f0 f1 cedge_walkup f0 f1
+ |- ((\H. (!x. (!y. ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y))))))))) H)
T * / ! ! c/\ c= cedge_map cedge_walkup b0 b1 b1 b1 c/\ c==> c/\ c~ c= cnode_map b0 b1 b1 c~ c= cedge_map b0 b1 b1 c= cedge_map cedge_walkup b0 b1 cnode_map b0 b1 cedge_map b0 b1 c/\ c==> c/\ c~ c= cinverse * part cface_map b0 b1 b1 c~ c= cinverse * part cedge_map b0 b1 b1 c= cedge_map cedge_walkup b0 b1 cinverse * part cedge_map b0 b1 cinverse * part cface_map b0 b1 c==> c/\ c~ c= b2 b1 c/\ c~ c= b2 cinverse * part cedge_map b0 b1 c~ c= b2 cnode_map b0 b1 c= cedge_map cedge_walkup b0 b1 b2 cedge_map b0 b2 f0
- (x' = ((inverse (face_map H)) x)) |- (((inverse (face_map H)) x) = x')
T c==> c= f0 cinverse * part cface_map f1 f2 c= cinverse * part cface_map f1 f2 f0
+ |- ((\x. (((x IN (dart H)) /\ (((node_map H) x) = x)) ==> ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((edge_map H) x)) /\ (!y. (((~ (y = x)) /\ (~ (y = ((inverse (edge_map H)) x)))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))))))) x)
T * / c==> c/\ cIN b0 * part cdart f0 c= cnode_map f0 b0 b0 c/\ c= cedge_map cedge_walkup f0 b0 b0 b0 c/\ c= cedge_map cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 cedge_map f0 b0 ! c==> c/\ c~ c= b1 b0 c~ c= b1 cinverse * part cedge_map f0 b0 c= cedge_map cedge_walkup f0 b0 b1 cedge_map f0 b1 f1
+ |- ((((node_map ((edge_walkup H) x)) ((inverse (node_map H)) x)) = ((node_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (node_map H)) x)))) ==> (((node_map ((edge_walkup H) x)) y) = ((node_map H) y))))
T c/\ c= cnode_map cedge_walkup f0 f1 cinverse * part cnode_map f0 f1 cnode_map f0 f1 c==> c/\ c~ c= f2 f1 c~ c= f2 cinverse * part cnode_map f0 f1 c= cnode_map cedge_walkup f0 f1 f2 cnode_map f0 f2
+ (!y. (((~ (y = x)) /\ (~ (y = ((inverse (edge_map (shift (shift H)))) x)))) ==> (((edge_map ((edge_walkup (shift (shift H))) x)) y) = ((edge_map (shift (shift H))) y)))), (~ (x' = x)), (~ (x' = ((inverse (edge_map (shift (shift H)))) x))), ((face_map H) = (edge_map (shift (shift H)))) |- (((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((face_map ((edge_walkup H) x)) x'))
T c==> ! c==> c/\ c~ c= b0 f0 c~ c= b0 cinverse * part cedge_map cshift cshift f1 f0 c= cedge_map cedge_walkup cshift cshift f1 f0 b0 cedge_map cshift cshift f1 b0 c==> c~ c= f2 f0 c==> c~ c= f2 cinverse * part cedge_map cshift cshift f1 f0 c==> c= * part cface_map f1 * part cedge_map cshift cshift f1 c= cedge_map cedge_walkup cshift cshift f1 f0 f2 cface_map cedge_walkup f1 f0 f2
+ |- (((!x. (!y. (((x IN (dart (shift (shift H)))) /\ (((node_map (shift (shift H))) x) = x)) ==> (((node_map ((edge_walkup (shift (shift H))) x)) y) = ((node_map (shift (shift H))) y))))) ==> ((\x. (!y. (((x IN (dart (shift (shift H)))) /\ (((node_map (shift (shift H))) x) = x)) ==> (((node_map ((edge_walkup (shift (shift H))) x)) y) = ((node_map (shift (shift H))) y))))) x)) = ((\x. (!y. (((x IN (dart (shift (shift H)))) /\ (((node_map (shift (shift H))) x) = x)) ==> (((node_map ((edge_walkup (shift (shift H))) x)) y) = ((node_map (shift (shift H))) y))))) x))
T c= c==> ! ! c==> c/\ cIN b0 * part cdart cshift cshift f0 c= cnode_map cshift cshift f0 b0 b0 c= cnode_map cedge_walkup cshift cshift f0 b0 b1 cnode_map cshift cshift f0 b1 * / ! c==> c/\ cIN b0 * part cdart cshift cshift f0 c= cnode_map cshift cshift f0 b0 b0 c= cnode_map cedge_walkup cshift cshift f0 b0 b1 cnode_map cshift cshift f0 b1 f1 * / ! c==> c/\ cIN b0 * part cdart cshift cshift f0 c= cnode_map cshift cshift f0 b0 b0 c= cnode_map cedge_walkup cshift cshift f0 b0 b1 cnode_map cshift cshift f0 b1 f1
- |- (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H)))))
T c/\ c= * part cedge_map cedge_walkup f0 f1 * * part co * part cinverse * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0 * part cinverse * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c/\ c= * part cnode_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c= * part cface_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0
+ (((edge_map H) x) = x), (((node_map (shift (shift H))) x) = x), ((edge_map H) = (node_map (shift (shift H)))), ((node_map H) = (face_map (shift (shift H)))), ((face_map H) = (edge_map (shift (shift H)))), ((dart H) = (dart (shift (shift H)))), (x IN (dart H)), (x IN (dart (shift (shift H)))) |- (((face_walkup H) x) = ((edge_walkup H) x))
T c==> c= cedge_map f0 f1 f1 c==> c= cnode_map cshift cshift f0 f1 f1 c==> c= * part cedge_map f0 * part cnode_map cshift cshift f0 c==> c= * part cnode_map f0 * part cface_map cshift cshift f0 c==> c= * part cface_map f0 * part cedge_map cshift cshift f0 c==> c= * part cdart f0 * part cdart cshift cshift f0 c==> cIN f1 * part cdart f0 c==> cIN f1 * part cdart cshift cshift f0 c= cface_walkup f0 f1 cedge_walkup f0 f1
+ (~ (x' = x)), (~ (x' = ((inverse (node_map H)) x))), ((node_map H) = (face_map (shift (shift H)))) |- (((((node_map ((edge_walkup H) x)) x') = ((face_map (shift (shift H))) x')) ==> (((face_map ((edge_walkup (shift (shift H))) x)) x') = ((node_map ((edge_walkup H) x)) x'))) = ((((~ (x' = x)) /\ (~ (x' = ((inverse (node_map H)) x)))) ==> (((node_map ((edge_walkup H) x)) x') = ((node_map H) x'))) ==> (((face_map ((edge_walkup (shift (shift H))) x)) x') = ((node_map ((edge_walkup H) x)) x'))))
T c==> c~ c= f0 f1 c==> c~ c= f0 cinverse * part cnode_map f2 f1 c==> c= * part cnode_map f2 * part cface_map cshift cshift f2 c= c==> c= cnode_map cedge_walkup f2 f1 f0 cface_map cshift cshift f2 f0 c= cface_map cedge_walkup cshift cshift f2 f1 f0 cnode_map cedge_walkup f2 f1 f0 c==> c==> c/\ c~ c= f0 f1 c~ c= f0 cinverse * part cnode_map f2 f1 c= cnode_map cedge_walkup f2 f1 f0 cnode_map f2 f0 c= cface_map cedge_walkup cshift cshift f2 f1 f0 cnode_map cedge_walkup f2 f1 f0
- (~ (x' = ((inverse (face_map H)) x))) |- ((((inverse (face_map H)) x) = x') = F)
T c==> c~ c= f0 cinverse * part cface_map f1 f2 c= c= cinverse * part cface_map f1 f2 f0 cF
+ ((node_map H) = (face_map (shift (shift H)))) |- ((((~ (x' = ((inverse (node_map H)) x))) ==> (((face_map ((edge_walkup (shift (shift H))) x)) x') = ((node_map H) x'))) ==> (((face_map ((edge_walkup (shift (shift H))) x)) x') = ((node_map H) x'))) = (((~ (x' = ((inverse (face_map (shift (shift H)))) x))) ==> (((face_map ((edge_walkup (shift (shift H))) x)) x') = ((face_map (shift (shift H))) x'))) ==> (((face_map ((edge_walkup (shift (shift H))) x)) x') = ((face_map (shift (shift H))) x'))))
T c==> c= * part cnode_map f0 * part cface_map cshift cshift f0 c= c==> c==> c~ c= f1 cinverse * part cnode_map f0 f2 c= cface_map cedge_walkup cshift cshift f0 f2 f1 cnode_map f0 f1 c= cface_map cedge_walkup cshift cshift f0 f2 f1 cnode_map f0 f1 c==> c==> c~ c= f1 cinverse * part cface_map cshift cshift f0 f2 c= cface_map cedge_walkup cshift cshift f0 f2 f1 cface_map cshift cshift f0 f1 c= cface_map cedge_walkup cshift cshift f0 f2 f1 cface_map cshift cshift f0 f1
+ ((edge_map H) = (node_map (shift (shift H)))), ((node_map H) = (face_map (shift (shift H)))), ((face_map H) = (edge_map (shift (shift H)))), ((dart H) = (dart (shift (shift H)))), ((x IN (dart H)) /\ (((edge_map H) x) = x)) |- (((x IN (dart H)) /\ (((edge_map H) x) = x)) /\ (((face_walkup H) x) = ((edge_walkup H) x)))
T c==> c= * part cedge_map f0 * part cnode_map cshift cshift f0 c==> c= * part cnode_map f0 * part cface_map cshift cshift f0 c==> c= * part cface_map f0 * part cedge_map cshift cshift f0 c==> c= * part cdart f0 * part cdart cshift cshift f0 c==> c/\ cIN f1 * part cdart f0 c= cedge_map f0 f1 f1 c/\ c/\ cIN f1 * part cdart f0 c= cedge_map f0 f1 f1 c= cface_walkup f0 f1 cedge_walkup f0 f1
+ (!y. (((~ (y = x)) /\ (~ (y = ((inverse (edge_map (shift (shift H)))) x)))) ==> (((edge_map ((edge_walkup (shift (shift H))) x)) y) = ((edge_map (shift (shift H))) y)))) |- (((~ (x' = x)) /\ (~ (x' = ((inverse (edge_map (shift (shift H)))) x)))) ==> (((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((edge_map (shift (shift H))) x')))
T c==> ! c==> c/\ c~ c= b0 f0 c~ c= b0 cinverse * part cedge_map cshift cshift f1 f0 c= cedge_map cedge_walkup cshift cshift f1 f0 b0 cedge_map cshift cshift f1 b0 c==> c/\ c~ c= f2 f0 c~ c= f2 cinverse * part cedge_map cshift cshift f1 f0 c= cedge_map cedge_walkup cshift cshift f1 f0 f2 cedge_map cshift cshift f1 f2
+ ((node_map H) = (face_map (shift (shift H)))) |- ((face_map (shift (shift H))) = (node_map H))
T c==> c= * part cnode_map f0 * part cface_map cshift cshift f0 c= * part cface_map cshift cshift f0 * part cnode_map f0
+ ((node_map H) = (face_map (shift (shift H)))) |- ((((face_map ((edge_walkup (shift (shift H))) x)) x') = ((node_map ((edge_walkup H) x)) x')) = T)
T c==> c= * part cnode_map f0 * part cface_map cshift cshift f0 c= c= cface_map cedge_walkup cshift cshift f0 f1 f2 cnode_map cedge_walkup f0 f1 f2 cT
+ (((edge_map H) x) = x), (((node_map (shift (shift H))) x) = x), ((edge_map H) = (node_map (shift (shift H)))), ((node_map H) = (face_map (shift (shift H)))), ((face_map H) = (edge_map (shift (shift H)))), ((dart H) = (dart (shift (shift H)))), (x IN (dart H)), (x IN (dart (shift (shift H)))) |- (((dart ((edge_walkup (shift (shift H))) x)) = (dart ((edge_walkup H) x))) /\ (((node_map ((edge_walkup (shift (shift H))) x)) = (edge_map ((edge_walkup H) x))) /\ (((face_map ((edge_walkup (shift (shift H))) x)) = (node_map ((edge_walkup H) x))) /\ ((edge_map ((edge_walkup (shift (shift H))) x)) = (face_map ((edge_walkup H) x))))))
T c==> c= cedge_map f0 f1 f1 c==> c= cnode_map cshift cshift f0 f1 f1 c==> c= * part cedge_map f0 * part cnode_map cshift cshift f0 c==> c= * part cnode_map f0 * part cface_map cshift cshift f0 c==> c= * part cface_map f0 * part cedge_map cshift cshift f0 c==> c= * part cdart f0 * part cdart cshift cshift f0 c==> cIN f1 * part cdart f0 c==> cIN f1 * part cdart cshift cshift f0 c/\ c= * part cdart cedge_walkup cshift cshift f0 f1 * part cdart cedge_walkup f0 f1 c/\ c= * part cnode_map cedge_walkup cshift cshift f0 f1 * part cedge_map cedge_walkup f0 f1 c/\ c= * part cface_map cedge_walkup cshift cshift f0 f1 * part cnode_map cedge_walkup f0 f1 c= * part cedge_map cedge_walkup cshift cshift f0 f1 * part cface_map cedge_walkup f0 f1
+ |- (((((x IN (dart H)) /\ (((edge_map H) x) = x)) ==> (((edge_map ((edge_walkup H) x)) x') = ((edge_map H) x'))) ==> (((node_map ((edge_walkup (shift (shift H))) x)) x') = ((edge_map ((edge_walkup H) x)) x'))) = (((node_map ((edge_walkup (shift (shift H))) x)) x') = ((edge_map ((edge_walkup H) x)) x')))
T c= c==> c==> c/\ cIN f0 * part cdart f1 c= cedge_map f1 f0 f0 c= cedge_map cedge_walkup f1 f0 f2 cedge_map f1 f2 c= cnode_map cedge_walkup cshift cshift f1 f0 f2 cedge_map cedge_walkup f1 f0 f2 c= cnode_map cedge_walkup cshift cshift f1 f0 f2 cedge_map cedge_walkup f1 f0 f2
+ (((edge_map H) x) = x), (((node_map (shift (shift H))) x) = x), ((edge_map H) = (node_map (shift (shift H)))), ((node_map H) = (face_map (shift (shift H)))), ((face_map H) = (edge_map (shift (shift H)))), (x IN (dart H)), (x IN (dart (shift (shift H)))) |- (((node_map ((edge_walkup (shift (shift H))) x)) = (edge_map ((edge_walkup H) x))) /\ (((face_map ((edge_walkup (shift (shift H))) x)) = (node_map ((edge_walkup H) x))) /\ ((edge_map ((edge_walkup (shift (shift H))) x)) = (face_map ((edge_walkup H) x)))))
T c==> c= cedge_map f0 f1 f1 c==> c= cnode_map cshift cshift f0 f1 f1 c==> c= * part cedge_map f0 * part cnode_map cshift cshift f0 c==> c= * part cnode_map f0 * part cface_map cshift cshift f0 c==> c= * part cface_map f0 * part cedge_map cshift cshift f0 c==> cIN f1 * part cdart f0 c==> cIN f1 * part cdart cshift cshift f0 c/\ c= * part cnode_map cedge_walkup cshift cshift f0 f1 * part cedge_map cedge_walkup f0 f1 c/\ c= * part cface_map cedge_walkup cshift cshift f0 f1 * part cnode_map cedge_walkup f0 f1 c= * part cedge_map cedge_walkup cshift cshift f0 f1 * part cface_map cedge_walkup f0 f1
+ (x' = ((inverse (edge_map (shift (shift H)))) x)) |- ((((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((edge_map (shift (shift H))) x)) = (((edge_map ((edge_walkup (shift (shift H))) x)) ((inverse (edge_map (shift (shift H)))) x)) = ((edge_map (shift (shift H))) x)))
T c==> c= f0 cinverse * part cedge_map cshift cshift f1 f2 c= c= cedge_map cedge_walkup cshift cshift f1 f2 f0 cedge_map cshift cshift f1 f2 c= cedge_map cedge_walkup cshift cshift f1 f2 cinverse * part cedge_map cshift cshift f1 f2 cedge_map cshift cshift f1 f2
+ |- (((!H'. ((H = H') = (((dart H) = (dart H')) /\ (((edge_map H) = (edge_map H')) /\ (((node_map H) = (node_map H')) /\ ((face_map H) = (face_map H'))))))) ==> ((\H'. ((H = H') = (((dart H) = (dart H')) /\ (((edge_map H) = (edge_map H')) /\ (((node_map H) = (node_map H')) /\ ((face_map H) = (face_map H'))))))) H')) = ((\H'. ((H = H') = (((dart H) = (dart H')) /\ (((edge_map H) = (edge_map H')) /\ (((node_map H) = (node_map H')) /\ ((face_map H) = (face_map H'))))))) H'))
T c= c==> ! c= c= f0 b0 c/\ c= * part cdart f0 * part cdart b0 c/\ c= * part cedge_map f0 * part cedge_map b0 c/\ c= * part cnode_map f0 * part cnode_map b0 c= * part cface_map f0 * part cface_map b0 * / c= c= f0 b0 c/\ c= * part cdart f0 * part cdart b0 c/\ c= * part cedge_map f0 * part cedge_map b0 c/\ c= * part cnode_map f0 * part cnode_map b0 c= * part cface_map f0 * part cface_map b0 f1 * / c= c= f0 b0 c/\ c= * part cdart f0 * part cdart b0 c/\ c= * part cedge_map f0 * part cedge_map b0 c/\ c= * part cnode_map f0 * part cnode_map b0 c= * part cface_map f0 * part cface_map b0 f1
+ |- ((\x. (!y. ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))))))) x)
T * / ! c/\ c= cedge_map cedge_walkup f0 b0 b0 b0 c/\ c==> c/\ c~ c= cnode_map f0 b0 b0 c~ c= cedge_map f0 b0 b0 c= cedge_map cedge_walkup f0 b0 cnode_map f0 b0 cedge_map f0 b0 c/\ c==> c/\ c~ c= cinverse * part cface_map f0 b0 b0 c~ c= cinverse * part cedge_map f0 b0 b0 c= cedge_map cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 cinverse * part cface_map f0 b0 c==> c/\ c~ c= b1 b0 c/\ c~ c= b1 cinverse * part cedge_map f0 b0 c~ c= b1 cnode_map f0 b0 c= cedge_map cedge_walkup f0 b0 b1 cedge_map f0 b1 f1
+ |- (T = (((edge_map ((edge_walkup (shift (shift H))) x)) x) = ((face_map ((edge_walkup H) x)) x)))
T c= cT c= cedge_map cedge_walkup cshift cshift f0 f1 f1 cface_map cedge_walkup f0 f1 f1
- (~ (x' = x)), (~ (x' = ((inverse (face_map H)) x))), (((node_map (shift (shift H))) x) = x), ((face_map H) = (edge_map (shift (shift H)))), (x IN (dart (shift (shift H)))) |- (((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((face_map ((edge_walkup H) x)) x'))
T c==> c~ c= f0 f1 c==> c~ c= f0 cinverse * part cface_map f2 f1 c==> c= cnode_map cshift cshift f2 f1 f1 c==> c= * part cface_map f2 * part cedge_map cshift cshift f2 c==> cIN f1 * part cdart cshift cshift f2 c= cedge_map cedge_walkup cshift cshift f2 f1 f0 cface_map cedge_walkup f2 f1 f0
+ ((edge_map H) = (node_map (shift (shift H)))), ((dart H) = (dart (shift (shift H)))), (((edge_map H) = (node_map (shift (shift H)))) /\ (((node_map H) = (face_map (shift (shift H)))) /\ ((face_map H) = (edge_map (shift (shift H)))))) |- (((x IN (dart H)) /\ (((edge_map H) x) = x)) ==> (((face_walkup H) x) = ((edge_walkup H) x)))
T c==> c= * part cedge_map f0 * part cnode_map cshift cshift f0 c==> c= * part cdart f0 * part cdart cshift cshift f0 c==> c/\ c= * part cedge_map f0 * part cnode_map cshift cshift f0 c/\ c= * part cnode_map f0 * part cface_map cshift cshift f0 c= * part cface_map f0 * part cedge_map cshift cshift f0 c==> c/\ cIN f1 * part cdart f0 c= cedge_map f0 f1 f1 c= cface_walkup f0 f1 cedge_walkup f0 f1
+ |- (((x IN (dart (shift (shift H)))) /\ (((node_map (shift (shift H))) x) = x)) ==> (((node_map ((edge_walkup (shift (shift H))) x)) x') = ((node_map (shift (shift H))) x')))
T c==> c/\ cIN f0 * part cdart cshift cshift f1 c= cnode_map cshift cshift f1 f0 f0 c= cnode_map cedge_walkup cshift cshift f1 f0 f2 cnode_map cshift cshift f1 f2
+ |- ((\y. (((x IN (dart H)) /\ (((edge_map H) x) = x)) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))) x')
T * / c==> c/\ cIN f0 * part cdart f1 c= cedge_map f1 f0 f0 c= cedge_map cedge_walkup f1 f0 b0 cedge_map f1 b0 f2
+ |- (((!y. ((((node_map ((edge_walkup H) x)) x) = x) /\ ((((node_map ((edge_walkup H) x)) ((inverse (node_map H)) x)) = ((node_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (node_map H)) x)))) ==> (((node_map ((edge_walkup H) x)) y) = ((node_map H) y)))))) ==> ((\y. ((((node_map ((edge_walkup H) x)) x) = x) /\ ((((node_map ((edge_walkup H) x)) ((inverse (node_map H)) x)) = ((node_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (node_map H)) x)))) ==> (((node_map ((edge_walkup H) x)) y) = ((node_map H) y)))))) y)) = ((\y. ((((node_map ((edge_walkup H) x)) x) = x) /\ ((((node_map ((edge_walkup H) x)) ((inverse (node_map H)) x)) = ((node_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (node_map H)) x)))) ==> (((node_map ((edge_walkup H) x)) y) = ((node_map H) y)))))) y))
T c= c==> ! c/\ c= cnode_map cedge_walkup f0 f1 f1 f1 c/\ c= cnode_map cedge_walkup f0 f1 cinverse * part cnode_map f0 f1 cnode_map f0 f1 c==> c/\ c~ c= b0 f1 c~ c= b0 cinverse * part cnode_map f0 f1 c= cnode_map cedge_walkup f0 f1 b0 cnode_map f0 b0 * / c/\ c= cnode_map cedge_walkup f0 f1 f1 f1 c/\ c= cnode_map cedge_walkup f0 f1 cinverse * part cnode_map f0 f1 cnode_map f0 f1 c==> c/\ c~ c= b0 f1 c~ c= b0 cinverse * part cnode_map f0 f1 c= cnode_map cedge_walkup f0 f1 b0 cnode_map f0 b0 f2 * / c/\ c= cnode_map cedge_walkup f0 f1 f1 f1 c/\ c= cnode_map cedge_walkup f0 f1 cinverse * part cnode_map f0 f1 cnode_map f0 f1 c==> c/\ c~ c= b0 f1 c~ c= b0 cinverse * part cnode_map f0 f1 c= cnode_map cedge_walkup f0 f1 b0 cnode_map f0 b0 f2
+ (x' = ((inverse (face_map H)) x)) |- ((((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((face_map ((edge_walkup H) x)) ((inverse (face_map H)) x))) = (((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((face_map ((edge_walkup H) x)) x')))
T c==> c= f0 cinverse * part cface_map f1 f2 c= c= cedge_map cedge_walkup cshift cshift f1 f2 f0 cface_map cedge_walkup f1 f2 cinverse * part cface_map f1 f2 c= cedge_map cedge_walkup cshift cshift f1 f2 f0 cface_map cedge_walkup f1 f2 f0
+ |- (((!H. (!x. (!y. ((((face_map ((edge_walkup H) x)) x) = x) /\ ((((face_map ((edge_walkup H) x)) ((inverse (face_map H)) x)) = ((face_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (face_map H)) x)))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y)))))))) ==> ((\H. (!x. (!y. ((((face_map ((edge_walkup H) x)) x) = x) /\ ((((face_map ((edge_walkup H) x)) ((inverse (face_map H)) x)) = ((face_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (face_map H)) x)))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y)))))))) (shift (shift H)))) = ((\H. (!x. (!y. ((((face_map ((edge_walkup H) x)) x) = x) /\ ((((face_map ((edge_walkup H) x)) ((inverse (face_map H)) x)) = ((face_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (face_map H)) x)))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y)))))))) (shift (shift H))))
T c= c==> ! ! ! c/\ c= cface_map cedge_walkup b0 b1 b1 b1 c/\ c= cface_map cedge_walkup b0 b1 cinverse * part cface_map b0 b1 cface_map b0 b1 c==> c/\ c~ c= b2 b1 c~ c= b2 cinverse * part cface_map b0 b1 c= cface_map cedge_walkup b0 b1 b2 cface_map b0 b2 * / ! ! c/\ c= cface_map cedge_walkup b0 b1 b1 b1 c/\ c= cface_map cedge_walkup b0 b1 cinverse * part cface_map b0 b1 cface_map b0 b1 c==> c/\ c~ c= b2 b1 c~ c= b2 cinverse * part cface_map b0 b1 c= cface_map cedge_walkup b0 b1 b2 cface_map b0 b2 cshift cshift f0 * / ! ! c/\ c= cface_map cedge_walkup b0 b1 b1 b1 c/\ c= cface_map cedge_walkup b0 b1 cinverse * part cface_map b0 b1 cface_map b0 b1 c==> c/\ c~ c= b2 b1 c~ c= b2 cinverse * part cface_map b0 b1 c= cface_map cedge_walkup b0 b1 b2 cface_map b0 b2 cshift cshift f0
+ ((edge_map H) = (node_map (shift (shift H)))), ((node_map H) = (face_map (shift (shift H)))), ((face_map H) = (edge_map (shift (shift H)))), ((dart H) = (dart (shift (shift H)))), ((x IN (dart H)) /\ (((edge_map H) x) = x)), (x IN (dart H)) |- (((face_walkup H) x) = ((edge_walkup H) x))
T c==> c= * part cedge_map f0 * part cnode_map cshift cshift f0 c==> c= * part cnode_map f0 * part cface_map cshift cshift f0 c==> c= * part cface_map f0 * part cedge_map cshift cshift f0 c==> c= * part cdart f0 * part cdart cshift cshift f0 c==> c/\ cIN f1 * part cdart f0 c= cedge_map f0 f1 f1 c==> cIN f1 * part cdart f0 c= cface_walkup f0 f1 cedge_walkup f0 f1
+ ((node_map H) = (face_map (shift (shift H)))) |- (((face_map ((edge_walkup (shift (shift H))) x)) x') = ((node_map ((edge_walkup H) x)) x'))
T c==> c= * part cnode_map f0 * part cface_map cshift cshift f0 c= cface_map cedge_walkup cshift cshift f0 f1 f2 cnode_map cedge_walkup f0 f1 f2
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((edge_map H) = (node_map (shift (shift H)))), ((node_map H) = (face_map (shift (shift H)))), ((face_map H) = (edge_map (shift (shift H)))), ((dart H) = (dart (shift (shift H)))) |- (((x IN (dart H)) /\ (((edge_map H) x) = x)) ==> (((face_walkup H) x) = ((edge_walkup H) x)))
T c==> c= * part cedge_map f0 * part cnode_map cshift cshift f0 c==> c= * part cnode_map f0 * part cface_map cshift cshift f0 c==> c= * part cface_map f0 * part cedge_map cshift cshift f0 c==> c= * part cdart f0 * part cdart cshift cshift f0 c==> c/\ cIN f1 * part cdart f0 c= cedge_map f0 f1 f1 c= cface_walkup f0 f1 cedge_walkup f0 f1
+ ((edge_map H) = (node_map (shift (shift H)))) |- (((((edge_map H) x) = x) ==> (((face_walkup H) x) = ((edge_walkup H) x))) = ((((node_map (shift (shift H))) x) = x) ==> (((face_walkup H) x) = ((edge_walkup H) x))))
T c==> c= * part cedge_map f0 * part cnode_map cshift cshift f0 c= c==> c= cedge_map f0 f1 f1 c= cface_walkup f0 f1 cedge_walkup f0 f1 c==> c= cnode_map cshift cshift f0 f1 f1 c= cface_walkup f0 f1 cedge_walkup f0 f1
+ (((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((edge_map (shift (shift H))) x')) |- ((((edge_map (shift (shift H))) x') = ((face_map ((edge_walkup H) x)) x')) = (((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((face_map ((edge_walkup H) x)) x')))
T c==> c= cedge_map cedge_walkup cshift cshift f0 f1 f2 cedge_map cshift cshift f0 f2 c= c= cedge_map cshift cshift f0 f2 cface_map cedge_walkup f0 f1 f2 c= cedge_map cedge_walkup cshift cshift f0 f1 f2 cface_map cedge_walkup f0 f1 f2
+ |- (((!H. (((dart H) = (dart (shift (shift H)))) /\ (((edge_map H) = (node_map (shift (shift H)))) /\ (((node_map H) = (face_map (shift (shift H)))) /\ ((face_map H) = (edge_map (shift (shift H)))))))) ==> ((\H. (((dart H) = (dart (shift (shift H)))) /\ (((edge_map H) = (node_map (shift (shift H)))) /\ (((node_map H) = (face_map (shift (shift H)))) /\ ((face_map H) = (edge_map (shift (shift H)))))))) H)) = ((\H. (((dart H) = (dart (shift (shift H)))) /\ (((edge_map H) = (node_map (shift (shift H)))) /\ (((node_map H) = (face_map (shift (shift H)))) /\ ((face_map H) = (edge_map (shift (shift H)))))))) H))
T c= c==> ! c/\ c= * part cdart b0 * part cdart cshift cshift b0 c/\ c= * part cedge_map b0 * part cnode_map cshift cshift b0 c/\ c= * part cnode_map b0 * part cface_map cshift cshift b0 c= * part cface_map b0 * part cedge_map cshift cshift b0 * / c/\ c= * part cdart b0 * part cdart cshift cshift b0 c/\ c= * part cedge_map b0 * part cnode_map cshift cshift b0 c/\ c= * part cnode_map b0 * part cface_map cshift cshift b0 c= * part cface_map b0 * part cedge_map cshift cshift b0 f0 * / c/\ c= * part cdart b0 * part cdart cshift cshift b0 c/\ c= * part cedge_map b0 * part cnode_map cshift cshift b0 c/\ c= * part cnode_map b0 * part cface_map cshift cshift b0 c= * part cface_map b0 * part cedge_map cshift cshift b0 f0
- (((inverse (edge_map (shift (shift H)))) x) = x') |- (x' = ((inverse (edge_map (shift (shift H)))) x))
T c==> c= cinverse * part cedge_map cshift cshift f0 f1 f2 c= f2 cinverse * part cedge_map cshift cshift f0 f1
+ ((~ (x' = x)) ==> (((face_map ((edge_walkup (shift (shift H))) x)) x') = ((node_map ((edge_walkup H) x)) x'))), ((x' = x) ==> (((face_map ((edge_walkup (shift (shift H))) x)) x') = ((node_map ((edge_walkup H) x)) x'))) |- (((face_map ((edge_walkup (shift (shift H))) x)) x') = ((node_map ((edge_walkup H) x)) x'))
T c==> c==> c~ c= f0 f1 c= cface_map cedge_walkup cshift cshift f2 f1 f0 cnode_map cedge_walkup f2 f1 f0 c==> c==> c= f0 f1 c= cface_map cedge_walkup cshift cshift f2 f1 f0 cnode_map cedge_walkup f2 f1 f0 c= cface_map cedge_walkup cshift cshift f2 f1 f0 cnode_map cedge_walkup f2 f1 f0
- |- ((((edge_map ((edge_walkup (shift (shift H))) x)) ((inverse (edge_map (shift (shift H)))) x)) = ((edge_map (shift (shift H))) x)) ==> (((edge_map ((edge_walkup (shift (shift H))) x)) ((inverse (edge_map (shift (shift H)))) x)) = ((edge_map (shift (shift H))) x)))
T c==> c= cedge_map cedge_walkup cshift cshift f0 f1 cinverse * part cedge_map cshift cshift f0 f1 cedge_map cshift cshift f0 f1 c= cedge_map cedge_walkup cshift cshift f0 f1 cinverse * part cedge_map cshift cshift f0 f1 cedge_map cshift cshift f0 f1
+ |- (((!y. (((x IN (dart H)) /\ (((edge_map H) x) = x)) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))) ==> ((\y. (((x IN (dart H)) /\ (((edge_map H) x) = x)) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))) x')) = ((\y. (((x IN (dart H)) /\ (((edge_map H) x) = x)) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))) x'))
T c= c==> ! c==> c/\ cIN f0 * part cdart f1 c= cedge_map f1 f0 f0 c= cedge_map cedge_walkup f1 f0 b0 cedge_map f1 b0 * / c==> c/\ cIN f0 * part cdart f1 c= cedge_map f1 f0 f0 c= cedge_map cedge_walkup f1 f0 b0 cedge_map f1 b0 f2 * / c==> c/\ cIN f0 * part cdart f1 c= cedge_map f1 f0 f0 c= cedge_map cedge_walkup f1 f0 b0 cedge_map f1 b0 f2
+ (((edge_map H) x) = x), ((edge_map H) = (node_map (shift (shift H)))), ((node_map H) = (face_map (shift (shift H)))), ((face_map H) = (edge_map (shift (shift H)))), ((dart H) = (dart (shift (shift H)))), (x IN (dart H)), (x IN (dart (shift (shift H)))) |- ((((edge_map H) x) = x) ==> (((face_walkup H) x) = ((edge_walkup H) x)))
T c==> c= cedge_map f0 f1 f1 c==> c= * part cedge_map f0 * part cnode_map cshift cshift f0 c==> c= * part cnode_map f0 * part cface_map cshift cshift f0 c==> c= * part cface_map f0 * part cedge_map cshift cshift f0 c==> c= * part cdart f0 * part cdart cshift cshift f0 c==> cIN f1 * part cdart f0 c==> cIN f1 * part cdart cshift cshift f0 c==> c= cedge_map f0 f1 f1 c= cface_walkup f0 f1 cedge_walkup f0 f1
- (~ (x' = ((inverse (edge_map (shift (shift H)))) x))) |- (((~ (((inverse (edge_map (shift (shift H)))) x) = x')) ==> ((((inverse (edge_map (shift (shift H)))) x) = x') = F)) = ((((inverse (edge_map (shift (shift H)))) x) = x') = F))
T c==> c~ c= f0 cinverse * part cedge_map cshift cshift f1 f2 c= c==> c~ c= cinverse * part cedge_map cshift cshift f1 f2 f0 c= c= cinverse * part cedge_map cshift cshift f1 f2 f0 cF c= c= cinverse * part cedge_map cshift cshift f1 f2 f0 cF
+ (((node_map (shift (shift H))) x) = x), ((face_map H) = (edge_map (shift (shift H)))), ((~ (x' = ((inverse (face_map H)) x))) ==> (((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((face_map ((edge_walkup H) x)) x'))), (x IN (dart (shift (shift H)))) |- (((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((face_map ((edge_walkup H) x)) x'))
T c==> c= cnode_map cshift cshift f0 f1 f1 c==> c= * part cface_map f0 * part cedge_map cshift cshift f0 c==> c==> c~ c= f2 cinverse * part cface_map f0 f1 c= cedge_map cedge_walkup cshift cshift f0 f1 f2 cface_map cedge_walkup f0 f1 f2 c==> cIN f1 * part cdart cshift cshift f0 c= cedge_map cedge_walkup cshift cshift f0 f1 f2 cface_map cedge_walkup f0 f1 f2
- |- (T = ((((edge_map ((edge_walkup (shift (shift H))) x)) ((inverse (edge_map (shift (shift H)))) x)) = ((edge_map (shift (shift H))) x)) ==> (((edge_map ((edge_walkup (shift (shift H))) x)) ((inverse (edge_map (shift (shift H)))) x)) = ((edge_map (shift (shift H))) x))))
T c= cT c==> c= cedge_map cedge_walkup cshift cshift f0 f1 cinverse * part cedge_map cshift cshift f0 f1 cedge_map cshift cshift f0 f1 c= cedge_map cedge_walkup cshift cshift f0 f1 cinverse * part cedge_map cshift cshift f0 f1 cedge_map cshift cshift f0 f1
- (x' = ((inverse (edge_map (shift (shift H)))) x)) |- (((inverse (edge_map (shift (shift H)))) x) = x')
T c==> c= f0 cinverse * part cedge_map cshift cshift f1 f2 c= cinverse * part cedge_map cshift cshift f1 f2 f0
+ ((node_map H) = (face_map (shift (shift H)))) |- ((~ (x' = ((inverse (node_map H)) x))) ==> (((face_map ((edge_walkup (shift (shift H))) x)) x') = ((node_map ((edge_walkup H) x)) x')))
T c==> c= * part cnode_map f0 * part cface_map cshift cshift f0 c==> c~ c= f1 cinverse * part cnode_map f0 f2 c= cface_map cedge_walkup cshift cshift f0 f2 f1 cnode_map cedge_walkup f0 f2 f1
+ ((face_map (shift H)) = (edge_map H)) |- ((edge_map H) = (face_map (shift H)))
T c==> c= * part cface_map cshift f0 * part cedge_map f0 c= * part cedge_map f0 * part cface_map cshift f0
+ |- ((\y. ((((node_map ((edge_walkup H) x)) x) = x) /\ ((((node_map ((edge_walkup H) x)) ((inverse (node_map H)) x)) = ((node_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (node_map H)) x)))) ==> (((node_map ((edge_walkup H) x)) y) = ((node_map H) y)))))) y)
T * / c/\ c= cnode_map cedge_walkup f0 f1 f1 f1 c/\ c= cnode_map cedge_walkup f0 f1 cinverse * part cnode_map f0 f1 cnode_map f0 f1 c==> c/\ c~ c= b0 f1 c~ c= b0 cinverse * part cnode_map f0 f1 c= cnode_map cedge_walkup f0 f1 b0 cnode_map f0 b0 f2
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!x'. t) = t)
T c= ! f0 f0
+ |- ((((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((face_map H) x)) = (((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((face_map ((edge_walkup H) x)) ((inverse (face_map H)) x))))
T c= c= cedge_map cedge_walkup cshift cshift f0 f1 f2 cface_map f0 f1 c= cedge_map cedge_walkup cshift cshift f0 f1 f2 cface_map cedge_walkup f0 f1 cinverse * part cface_map f0 f1
+ (~ (x' = x)), (~ (x' = ((inverse (edge_map (shift (shift H)))) x))), (((node_map (shift (shift H))) x) = x), ((face_map H) = (edge_map (shift (shift H)))), (x IN (dart (shift (shift H)))) |- (((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((face_map ((edge_walkup H) x)) x'))
T c==> c~ c= f0 f1 c==> c~ c= f0 cinverse * part cedge_map cshift cshift f2 f1 c==> c= cnode_map cshift cshift f2 f1 f1 c==> c= * part cface_map f2 * part cedge_map cshift cshift f2 c==> cIN f1 * part cdart cshift cshift f2 c= cedge_map cedge_walkup cshift cshift f2 f1 f0 cface_map cedge_walkup f2 f1 f0
+ (~ (x' = x)), (~ (x' = ((inverse (node_map H)) x))), (((node_map ((edge_walkup H) x)) x') = ((face_map (shift (shift H))) x')), ((node_map H) = (face_map (shift (shift H)))) |- (((face_map ((edge_walkup (shift (shift H))) x)) x') = ((node_map ((edge_walkup H) x)) x'))
T c==> c~ c= f0 f1 c==> c~ c= f0 cinverse * part cnode_map f2 f1 c==> c= cnode_map cedge_walkup f2 f1 f0 cface_map cshift cshift f2 f0 c==> c= * part cnode_map f2 * part cface_map cshift cshift f2 c= cface_map cedge_walkup cshift cshift f2 f1 f0 cnode_map cedge_walkup f2 f1 f0
- |- ((((~ (y = x)) /\ (~ (y = ((inverse (face_map H)) x)))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y))) = T)
T c= c==> c/\ c~ c= f0 f1 c~ c= f0 cinverse * part cface_map f2 f1 c= cface_map cedge_walkup f2 f1 f0 cface_map f2 f0 cT
- (((inverse (face_map H)) x) = x') |- (x' = ((inverse (face_map H)) x))
T c==> c= cinverse * part cface_map f0 f1 f2 c= f2 cinverse * part cface_map f0 f1
- (~ (x' = ((inverse (edge_map (shift (shift H)))) x))) |- ((((inverse (edge_map (shift (shift H)))) x) = x') = F)
T c==> c~ c= f0 cinverse * part cedge_map cshift cshift f1 f2 c= c= cinverse * part cedge_map cshift cshift f1 f2 f0 cF
- |- (((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x)))
T c==> c/\ c~ c= cinverse * part cface_map f0 f1 f1 c~ c= cinverse * part cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 cinverse * part cface_map f0 f1
- |- ((((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y))) = T)
T c= c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 cinverse * part cedge_map f2 f1 c~ c= f0 cnode_map f2 f1 c= cedge_map cedge_walkup f2 f1 f0 cedge_map f2 f0 cT
- |- ((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H)))))
T c= * part cedge_map cedge_walkup f0 f1 * * part co * part cinverse * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0 * part cinverse * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0
- (~ (x' = x)) |- (((~ (x = x')) ==> ((x = x') = F)) = ((x = x') = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- (~ (x' = ((inverse (face_map H)) x))) |- (((~ (((inverse (face_map H)) x) = x')) ==> ((((inverse (face_map H)) x) = x') = F)) = ((((inverse (face_map H)) x) = x') = F))
T c==> c~ c= f0 cinverse * part cface_map f1 f2 c= c==> c~ c= cinverse * part cface_map f1 f2 f0 c= c= cinverse * part cface_map f1 f2 f0 cF c= c= cinverse * part cface_map f1 f2 f0 cF
- (~ (x' = ((inverse (node_map H)) x))) |- ((((inverse (node_map H)) x) = x') = F)
T c==> c~ c= f0 cinverse * part cnode_map f1 f2 c= c= cinverse * part cnode_map f1 f2 f0 cF
- |- ((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H)))
T c= * part cnode_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0
- |- ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) = T)
T c= c==> c/\ c~ c= cnode_map f0 f1 f1 c~ c= cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cnode_map f0 f1 cedge_map f0 f1 cT
- |- ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) = T)
T c= c==> c/\ c~ c= cinverse * part cface_map f0 f1 f1 c~ c= cinverse * part cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 cinverse * part cface_map f0 f1 cT
- |- (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H))))
T c/\ c= * part cnode_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c= * part cface_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0
- (x = x') |- (x' = x)
T c==> c= f0 f1 c= f1 f0
- (x' = ((inverse (node_map H)) x)) |- (((inverse (node_map H)) x) = x')
T c==> c= f0 cinverse * part cnode_map f1 f2 c= cinverse * part cnode_map f1 f2 f0
- (((inverse (node_map H)) x) = x') |- (x' = ((inverse (node_map H)) x))
T c==> c= cinverse * part cnode_map f0 f1 f2 c= f2 cinverse * part cnode_map f0 f1
- (~ (x' = ((inverse (node_map H)) x))) |- (((~ (((inverse (node_map H)) x) = x')) ==> ((((inverse (node_map H)) x) = x') = F)) = ((((inverse (node_map H)) x) = x') = F))
T c==> c~ c= f0 cinverse * part cnode_map f1 f2 c= c==> c~ c= cinverse * part cnode_map f1 f2 f0 c= c= cinverse * part cnode_map f1 f2 f0 cF c= c= cinverse * part cnode_map f1 f2 f0 cF
- |- (T = (((face_map ((edge_walkup (shift (shift H))) x)) ((inverse (face_map (shift (shift H)))) x)) = ((face_map (shift (shift H))) x)))
T c= cT c= cface_map cedge_walkup cshift cshift f0 f1 cinverse * part cface_map cshift cshift f0 f1 cface_map cshift cshift f0 f1
- |- (((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x)))
T c==> c/\ c~ c= cnode_map f0 f1 f1 c~ c= cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cnode_map f0 f1 cedge_map f0 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H)))
T c= * part cface_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0
- (~ (x' = x)) |- (~ (x = x'))
T c==> c~ c= f0 f1 c~ c= f1 f0
- (~ (x' = x)), (~ (x' = ((inverse (face_map H)) x))), (((node_map (shift (shift H))) x) = x), ((face_map H) = (edge_map (shift (shift H)))), (x IN (dart (shift (shift H)))) |- ((~ (x' = ((inverse (face_map H)) x))) /\ (((edge_map ((edge_walkup (shift (shift H))) x)) x') = ((face_map ((edge_walkup H) x)) x')))
T c==> c~ c= f0 f1 c==> c~ c= f0 cinverse * part cface_map f2 f1 c==> c= cnode_map cshift cshift f2 f1 f1 c==> c= * part cface_map f2 * part cedge_map cshift cshift f2 c==> cIN f1 * part cdart cshift cshift f2 c/\ c~ c= f0 cinverse * part cface_map f2 f1 c= cedge_map cedge_walkup cshift cshift f2 f1 f0 cface_map cedge_walkup f2 f1 f0
- |- ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))))
T c/\ c==> c/\ c~ c= cnode_map f0 f1 f1 c~ c= cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cnode_map f0 f1 cedge_map f0 f1 c/\ c==> c/\ c~ c= cinverse * part cface_map f0 f1 f1 c~ c= cinverse * part cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 cinverse * part cface_map f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 cinverse * part cedge_map f0 f1 c~ c= f2 cnode_map f0 f1 c= cedge_map cedge_walkup f0 f1 f2 cedge_map f0 f2
- (~ (x' = x)) |- ((x = x') = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- |- (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 cinverse * part cedge_map f2 f1 c~ c= f0 cnode_map f2 f1 c= cedge_map cedge_walkup f2 f1 f0 cedge_map f2 f0
- (~ (x' = ((inverse (face_map H)) x))) |- (~ (((inverse (face_map H)) x) = x'))
T c==> c~ c= f0 cinverse * part cface_map f1 f2 c~ c= cinverse * part cface_map f1 f2 f0
- (~ (x' = ((inverse (node_map H)) x))) |- (~ (((inverse (node_map H)) x) = x'))
T c==> c~ c= f0 cinverse * part cnode_map f1 f2 c~ c= cinverse * part cnode_map f1 f2 f0
- (((node_map (shift (shift H))) x) = x), (x IN (dart (shift (shift H)))) |- (((((edge_map ((edge_walkup (shift (shift H))) x)) ((inverse (edge_map (shift (shift H)))) x)) = ((edge_map (shift (shift H))) x)) ==> (((edge_map ((edge_walkup (shift (shift H))) x)) ((inverse (edge_map (shift (shift H)))) x)) = ((edge_map (shift (shift H))) x))) = (((edge_map ((edge_walkup (shift (shift H))) x)) ((inverse (edge_map (shift (shift H)))) x)) = ((edge_map (shift (shift H))) x)))
T c==> c= cnode_map cshift cshift f0 f1 f1 c==> cIN f1 * part cdart cshift cshift f0 c= c==> c= cedge_map cedge_walkup cshift cshift f0 f1 cinverse * part cedge_map cshift cshift f0 f1 cedge_map cshift cshift f0 f1 c= cedge_map cedge_walkup cshift cshift f0 f1 cinverse * part cedge_map cshift cshift f0 f1 cedge_map cshift cshift f0 f1 c= cedge_map cedge_walkup cshift cshift f0 f1 cinverse * part cedge_map cshift cshift f0 f1 cedge_map cshift cshift f0 f1
- |- ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y))))
T c/\ c==> c/\ c~ c= cinverse * part cface_map f0 f1 f1 c~ c= cinverse * part cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 cinverse * part cface_map f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 cinverse * part cedge_map f0 f1 c~ c= f2 cnode_map f0 f1 c= cedge_map cedge_walkup f0 f1 f2 cedge_map f0 f2
- |- ((((~ (y = x)) /\ (~ (y = ((inverse (node_map H)) x)))) ==> (((node_map ((edge_walkup H) x)) y) = ((node_map H) y))) = T)
T c= c==> c/\ c~ c= f0 f1 c~ c= f0 cinverse * part cnode_map f2 f1 c= cnode_map cedge_walkup f2 f1 f0 cnode_map f2 f0 cT
- (~ (x' = ((inverse (edge_map (shift (shift H)))) x))) |- (~ (((inverse (edge_map (shift (shift H)))) x) = x'))
T c==> c~ c= f0 cinverse * part cedge_map cshift cshift f1 f2 c~ c= cinverse * part cedge_map cshift cshift f1 f2 f0
