N Hypermap.lemma_join_inj_contours
C |- (!H. (!p. (!q. (!n. (!m. (((((is_inj_contour H) p) n) /\ ((((is_inj_contour H) q) m) /\ ((((one_step_contour H) (p n)) (q (NUMERAL _0))) /\ ((((disjoint_support_of_sequence p) q) n) m)))) ==> (((is_inj_contour H) (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0)))))))))))
T c==> c/\ cis_inj_contour f0 f1 f2 c/\ cis_inj_contour f0 f3 f4 c/\ cone_step_contour f0 * f1 f2 * f3 cNUMERAL c_0 cdisjoint_support_of_sequence f1 f3 f2 f4 cis_inj_contour f0 * * * part cjoin f1 f3 f2 c+ f2 c+ f4 cNUMERAL cBIT1 c_0
D Hypermap.lemma_join_inj_lists
A |- (!p. (!q. (!n. (!m. ((((is_inj_list p) n) /\ (((is_inj_list q) m) /\ ((((disjoint_support_of_sequence p) q) n) m))) ==> ((is_inj_list (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0))))))))))
T c==> c/\ cis_inj_list f0 f1 c/\ cis_inj_list f2 f3 cdisjoint_support_of_sequence f0 f2 f1 f3 cis_inj_list * * * part cjoin f0 f2 f1 c+ f1 c+ f3 cNUMERAL cBIT1 c_0
D Hypermap.lemma_join_contours
A |- (!H. (!p. (!q. (!n. (!m. (((((is_contour H) p) n) /\ ((((is_contour H) q) m) /\ (((one_step_contour H) (p n)) (q (NUMERAL _0))))) ==> (((is_contour H) (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0)))))))))))
T c==> c/\ cis_contour f0 f1 f2 c/\ cis_contour f0 f3 f4 cone_step_contour f0 * f1 f2 * f3 cNUMERAL c_0 cis_contour f0 * * * part cjoin f1 f3 f2 c+ f2 c+ f4 cNUMERAL cBIT1 c_0
D Hypermap.lemma_inj_contour_via_list
A |- (!H. (!p. (!n. ((((is_inj_contour H) p) n) = ((((is_contour H) p) n) /\ ((is_inj_list p) n))))))
T c= cis_inj_contour f0 f1 f2 c/\ cis_contour f0 f1 f2 cis_inj_list f1 f2
+ |- ((\p. (!n. ((((is_inj_contour H) p) n) = ((((is_contour H) p) n) /\ ((is_inj_list p) n))))) p)
T * / ! c= cis_inj_contour f0 b0 b1 c/\ cis_contour f0 b0 b1 cis_inj_list b0 b1 f1
+ |- (((!H. (!p. (!q. (!n. (!m. (((((is_contour H) p) n) /\ ((((is_contour H) q) m) /\ (((one_step_contour H) (p n)) (q (NUMERAL _0))))) ==> (((is_contour H) (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0))))))))))) ==> ((\H. (!p. (!q. (!n. (!m. (((((is_contour H) p) n) /\ ((((is_contour H) q) m) /\ (((one_step_contour H) (p n)) (q (NUMERAL _0))))) ==> (((is_contour H) (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0))))))))))) H)) = ((\H. (!p. (!q. (!n. (!m. (((((is_contour H) p) n) /\ ((((is_contour H) q) m) /\ (((one_step_contour H) (p n)) (q (NUMERAL _0))))) ==> (((is_contour H) (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0))))))))))) H))
T c= c==> ! ! ! ! ! c==> c/\ cis_contour b0 b1 b3 c/\ cis_contour b0 b2 b4 cone_step_contour b0 * b1 b3 * b2 cNUMERAL c_0 cis_contour b0 * * * part cjoin b1 b2 b3 c+ b3 c+ b4 cNUMERAL cBIT1 c_0 * / ! ! ! ! c==> c/\ cis_contour b0 b1 b3 c/\ cis_contour b0 b2 b4 cone_step_contour b0 * b1 b3 * b2 cNUMERAL c_0 cis_contour b0 * * * part cjoin b1 b2 b3 c+ b3 c+ b4 cNUMERAL cBIT1 c_0 f0 * / ! ! ! ! c==> c/\ cis_contour b0 b1 b3 c/\ cis_contour b0 b2 b4 cone_step_contour b0 * b1 b3 * b2 cNUMERAL c_0 cis_contour b0 * * * part cjoin b1 b2 b3 c+ b3 c+ b4 cNUMERAL cBIT1 c_0 f0
+ ((((is_inj_contour H) q) m) /\ ((((one_step_contour H) (p n)) (q (NUMERAL _0))) /\ ((((disjoint_support_of_sequence p) q) n) m))), (((is_inj_contour H) p) n), (((is_inj_contour H) q) m) |- (((is_inj_contour H) (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0)))))
T c==> c/\ cis_inj_contour f0 f1 f2 c/\ cone_step_contour f0 * f3 f4 * f1 cNUMERAL c_0 cdisjoint_support_of_sequence f3 f1 f4 f2 c==> cis_inj_contour f0 f3 f4 c==> cis_inj_contour f0 f1 f2 cis_inj_contour f0 * * * part cjoin f3 f1 f4 c+ f4 c+ f2 cNUMERAL cBIT1 c_0
+ |- ((\n. (!m. ((((is_inj_list p) n) /\ (((is_inj_list q) m) /\ ((((disjoint_support_of_sequence p) q) n) m))) ==> ((is_inj_list (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0)))))))) n)
T * / ! c==> c/\ cis_inj_list f0 b0 c/\ cis_inj_list f1 b1 cdisjoint_support_of_sequence f0 f1 b0 b1 cis_inj_list * * * part cjoin f0 f1 b0 c+ b0 c+ b1 cNUMERAL cBIT1 c_0 f2
+ |- (((!m. (((((is_contour H) p) n) /\ ((((is_contour H) q) m) /\ (((one_step_contour H) (p n)) (q (NUMERAL _0))))) ==> (((is_contour H) (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0))))))) ==> ((\m. (((((is_contour H) p) n) /\ ((((is_contour H) q) m) /\ (((one_step_contour H) (p n)) (q (NUMERAL _0))))) ==> (((is_contour H) (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0))))))) m)) = ((\m. (((((is_contour H) p) n) /\ ((((is_contour H) q) m) /\ (((one_step_contour H) (p n)) (q (NUMERAL _0))))) ==> (((is_contour H) (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0))))))) m))
T c= c==> ! c==> c/\ cis_contour f0 f1 f2 c/\ cis_contour f0 f3 b0 cone_step_contour f0 * f1 f2 * f3 cNUMERAL c_0 cis_contour f0 * * * part cjoin f1 f3 f2 c+ f2 c+ b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cis_contour f0 f1 f2 c/\ cis_contour f0 f3 b0 cone_step_contour f0 * f1 f2 * f3 cNUMERAL c_0 cis_contour f0 * * * part cjoin f1 f3 f2 c+ f2 c+ b0 cNUMERAL cBIT1 c_0 f4 * / c==> c/\ cis_contour f0 f1 f2 c/\ cis_contour f0 f3 b0 cone_step_contour f0 * f1 f2 * f3 cNUMERAL c_0 cis_contour f0 * * * part cjoin f1 f3 f2 c+ f2 c+ b0 cNUMERAL cBIT1 c_0 f4
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (((is_inj_list p) n) /\ (((is_inj_list q) m) /\ ((((disjoint_support_of_sequence p) q) n) m))) |- (((is_inj_list (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0))))) = T)
T c==> c/\ cis_inj_list f0 f1 c/\ cis_inj_list f2 f3 cdisjoint_support_of_sequence f0 f2 f1 f3 c= cis_inj_list * * * part cjoin f0 f2 f1 c+ f1 c+ f3 cNUMERAL cBIT1 c_0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (((is_inj_list p) n) /\ (((is_inj_list q) m) /\ ((((disjoint_support_of_sequence p) q) n) m))) |- ((((is_inj_list p) n) /\ (((is_inj_list q) m) /\ ((((disjoint_support_of_sequence p) q) n) m))) /\ ((is_inj_list (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0))))))
T c==> c/\ cis_inj_list f0 f1 c/\ cis_inj_list f2 f3 cdisjoint_support_of_sequence f0 f2 f1 f3 c/\ c/\ cis_inj_list f0 f1 c/\ cis_inj_list f2 f3 cdisjoint_support_of_sequence f0 f2 f1 f3 cis_inj_list * * * part cjoin f0 f2 f1 c+ f1 c+ f3 cNUMERAL cBIT1 c_0
- (((is_inj_list p) n) /\ (((is_inj_list q) m) /\ ((((disjoint_support_of_sequence p) q) n) m))) |- (T = ((is_inj_list (((join p) q) n)) (n + (m + (NUMERAL (BIT1 _0))))))
T c==> c/\ cis_inj_list f0 f1 c/\ cis_inj_list f2 f3 cdisjoint_support_of_sequence f0 f2 f1 f3 c= cT cis_inj_list * * * part cjoin f0 f2 f1 c+ f1 c+ f3 cNUMERAL cBIT1 c_0
