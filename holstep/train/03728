N Hypermap.lemma_planar_index_on_walkup_at_isolated_dart
C |- (!H. (!x. (((x IN (dart H)) /\ ((isolated_dart H) x)) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))))
T c==> c/\ cIN f0 * part cdart f1 cisolated_dart f1 f0 c= cplanar_index f1 cplanar_index cedge_walkup f1 f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D CONTRAPOS_THM
A |- (!t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1))))
T c= c==> c~ f0 c~ f1 c==> f1 f0
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_DIFF
A |- (!s. (!t. (!x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t)))))))
T c= cIN f0 * * part cDIFF f1 f2 c/\ cIN f0 f1 c~ cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_DELETE
A |- (!s. (!x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))))
T c= cIN f0 * * part cDELETE f1 f2 c/\ cIN f0 f1 c~ c= f0 f2
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D DELETE_NON_ELEMENT
A |- (!x. (!s. ((~ (x IN s)) = ((s DELETE x) = s))))
T c= c~ cIN f0 f1 c= * * part cDELETE f1 f0 f1
D Hypermap.hypermap_lemma
A |- (!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))))
T c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
D Hypermap.edge
A |- (!H. (!x. (((edge H) x) = ((orbit_map (edge_map H)) x))))
T c= * * part cedge f0 f1 * * part corbit_map * part cedge_map f0 f1
D Hypermap.node
A |- (!H. (!x. (((node H) x) = ((orbit_map (node_map H)) x))))
T c= * * part cnode f0 f1 * * part corbit_map * part cnode_map f0 f1
D Hypermap.face
A |- (!H. (!x. (((face H) x) = ((orbit_map (face_map H)) x))))
T c= * * part cface f0 f1 * * part corbit_map * part cface_map f0 f1
D Hypermap.set_part_components
A |- (!D. (!H. (((set_part_components H) D) = (GSPEC (\GEN%PVAR%5394. (?x. (((SETSPEC GEN%PVAR%5394) (x IN D)) ((comb_component H) x))))))))
T c= * * part cset_part_components f0 f1 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f1 * * part ccomb_component f0 b1
D Hypermap.set_of_components
A |- (!H. ((set_of_components H) = ((set_part_components H) (dart H))))
T c= * part cset_of_components f0 * * part cset_part_components f0 * part cdart f0
D Hypermap.set_of_orbits
A |- (!D. (!f. (((set_of_orbits D) f) = (GSPEC (\GEN%PVAR%5395. (?x. (((SETSPEC GEN%PVAR%5395) (x IN D)) ((orbit_map f) x))))))))
T c= * * part cset_of_orbits f0 f1 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f0 * * part corbit_map f1 b1
D Hypermap.edge_set
A |- (!H. ((edge_set H) = ((set_of_orbits (dart H)) (edge_map H))))
T c= * part cedge_set f0 * * part cset_of_orbits * part cdart f0 * part cedge_map f0
D Hypermap.node_set
A |- (!H. ((node_set H) = ((set_of_orbits (dart H)) (node_map H))))
T c= * part cnode_set f0 * * part cset_of_orbits * part cdart f0 * part cnode_map f0
D Hypermap.face_set
A |- (!H. ((face_set H) = ((set_of_orbits (dart H)) (face_map H))))
T c= * part cface_set f0 * * part cset_of_orbits * part cdart f0 * part cface_map f0
D Hypermap.number_of_edges
A |- (!H. ((number_of_edges H) = (CARD (edge_set H))))
T c= cnumber_of_edges f0 cCARD * part cedge_set f0
D Hypermap.number_of_nodes
A |- (!H. ((number_of_nodes H) = (CARD (node_set H))))
T c= cnumber_of_nodes f0 cCARD * part cnode_set f0
D Hypermap.number_of_faces
A |- (!H. ((number_of_faces H) = (CARD (face_set H))))
T c= cnumber_of_faces f0 cCARD * part cface_set f0
D Hypermap.number_of_components
A |- (!H. ((number_of_components H) = (CARD (set_of_components H))))
T c= cnumber_of_components f0 cCARD * part cset_of_components f0
D Hypermap.orbit_one_point
A |- (!f. (!x. (((f x) = x) = (((orbit_map f) x) = (x INSERT EMPTY)))))
T c= c= * f0 f1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 part cEMPTY
D Hypermap.orbit_single_lemma
A |- (!f. (!x. (!y. ((((orbit_map f) y) = (x INSERT EMPTY)) ==> (x = y)))))
T c==> c= * * part corbit_map f0 f1 * * part cINSERT f2 part cEMPTY c= f2 f1
D Hypermap.lemma_component_reflect
A |- (!H. (!x. (x IN ((comb_component H) x))))
T cIN f0 * * part ccomb_component f1 f0
D Hypermap.isolated_dart
A |- (!H. (!x. (((isolated_dart H) x) = ((((edge_map H) x) = x) /\ ((((node_map H) x) = x) /\ (((face_map H) x) = x))))))
T c= cisolated_dart f0 f1 c/\ c= cedge_map f0 f1 f1 c/\ c= cnode_map f0 f1 f1 c= cface_map f0 f1 f1
D Hypermap.lemma_edge_walkup
A |- (!H. (!x. (((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) /\ (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H))))))))
T c/\ c= * part cdart cedge_walkup f0 f1 * * part cDELETE * part cdart f0 f1 c/\ c= * part cedge_map cedge_walkup f0 f1 * * part co * part cinverse * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0 * part cinverse * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c/\ c= * part cnode_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c= * part cface_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0
D Hypermap.node_map_walkup
A |- (!H. (!x. (!y. ((((node_map ((edge_walkup H) x)) x) = x) /\ ((((node_map ((edge_walkup H) x)) ((inverse (node_map H)) x)) = ((node_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (node_map H)) x)))) ==> (((node_map ((edge_walkup H) x)) y) = ((node_map H) y))))))))
T c/\ c= cnode_map cedge_walkup f0 f1 f1 f1 c/\ c= cnode_map cedge_walkup f0 f1 cinverse * part cnode_map f0 f1 cnode_map f0 f1 c==> c/\ c~ c= f2 f1 c~ c= f2 cinverse * part cnode_map f0 f1 c= cnode_map cedge_walkup f0 f1 f2 cnode_map f0 f2
D Hypermap.face_map_walkup
A |- (!H. (!x. (!y. ((((face_map ((edge_walkup H) x)) x) = x) /\ ((((face_map ((edge_walkup H) x)) ((inverse (face_map H)) x)) = ((face_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (face_map H)) x)))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y))))))))
T c/\ c= cface_map cedge_walkup f0 f1 f1 f1 c/\ c= cface_map cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cface_map f0 f1 c==> c/\ c~ c= f2 f1 c~ c= f2 cinverse * part cface_map f0 f1 c= cface_map cedge_walkup f0 f1 f2 cface_map f0 f2
D Hypermap.fixed_point_lemma
A |- (!D. (!p. (((permutes p) D) ==> (!x. (((p x) = x) = (((inverse p) x) = x))))))
T c==> cpermutes f0 f1 ! c= c= * f0 b0 b0 c= cinverse f0 b0 b0
D Hypermap.edge_map_walkup
A |- (!H. (!x. (!y. ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))))))))
T c/\ c= cedge_map cedge_walkup f0 f1 f1 f1 c/\ c==> c/\ c~ c= cnode_map f0 f1 f1 c~ c= cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cnode_map f0 f1 cedge_map f0 f1 c/\ c==> c/\ c~ c= cinverse * part cface_map f0 f1 f1 c~ c= cinverse * part cedge_map f0 f1 f1 c= cedge_map cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 cinverse * part cface_map f0 f1 c==> c/\ c~ c= f2 f1 c/\ c~ c= f2 cinverse * part cedge_map f0 f1 c~ c= f2 cnode_map f0 f1 c= cedge_map cedge_walkup f0 f1 f2 cedge_map f0 f2
D Hypermap.planar_index
A |- (!H. ((planar_index H) = ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H))))))))
T c= cplanar_index f0 creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0
D Hypermap.lemma_walkup_nodes
A |- (!H. (!x. ((x IN (dart H)) ==> (((node_set H) DELETE ((node H) x)) = ((node_set ((edge_walkup H) x)) DELETE ((node ((edge_walkup H) x)) ((inverse (node_map H)) x)))))))
T c==> cIN f0 * part cdart f1 c= * * part cDELETE * part cnode_set f1 * * part cnode f1 f0 * * part cDELETE * part cnode_set cedge_walkup f1 f0 * * part cnode cedge_walkup f1 f0 cinverse * part cnode_map f1 f0
D Hypermap.lemma_walkup_faces
A |- (!H. (!x. ((x IN (dart H)) ==> (((face_set H) DELETE ((face H) x)) = ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))))))
T c==> cIN f0 * part cdart f1 c= * * part cDELETE * part cface_set f1 * * part cface f1 f0 * * part cDELETE * part cface_set cedge_walkup f1 f0 * * part cface cedge_walkup f1 f0 cinverse * part cface_map f1 f0
D Hypermap.lemma_walkup_edges
A |- (!H. (!x. ((x IN (dart H)) ==> (((edge_set H) DIFF (((edge H) x) INSERT (((edge H) ((node_map H) x)) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((edge ((edge_walkup H) x)) ((node_map H) x)) INSERT (((edge ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY)))))))
T c==> cIN f0 * part cdart f1 c= * * part cDIFF * part cedge_set f1 * * part cINSERT * * part cedge f1 f0 * * part cINSERT * * part cedge f1 cnode_map f1 f0 part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f1 f0 * * part cINSERT * * part cedge cedge_walkup f1 f0 cnode_map f1 f0 * * part cINSERT * * part cedge cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 part cEMPTY
D Hypermap.lemma_walkup_components
A |- (!H. (!x. ((x IN (dart H)) ==> (((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) ((node_map H) x)) INSERT (((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY)))))))
T c==> cIN f0 * part cdart f1 c= * * part cDELETE * part cset_of_components f1 * * part ccomb_component f1 f0 * * part cDIFF * part cset_of_components cedge_walkup f1 f0 * * part cINSERT * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part cINSERT * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 part cEMPTY
D Hypermap.CARD_MINUS_ONE
A |- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))))
T c==> c/\ cFINITE f0 cIN f1 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
D Hypermap.FINITE_HYPERMAP_ORBITS
A |- (!H. ((FINITE (edge_set H)) /\ ((FINITE (node_set H)) /\ (FINITE (face_set H)))))
T c/\ cFINITE * part cedge_set f0 c/\ cFINITE * part cnode_set f0 cFINITE * part cface_set f0
D Hypermap.FINITE_HYPERMAP_COMPONENTS
A |- (!H. (FINITE (set_of_components H)))
T cFINITE * part cset_of_components f0
D Hypermap.WALKUP_EXCEPTION_COMPONENT
A |- (!H. (!x. ((x IN (dart H)) ==> (((comb_component ((edge_walkup H) x)) x) = (x INSERT EMPTY)))))
T c==> cIN f0 * part cdart f1 c= * * part ccomb_component cedge_walkup f1 f0 f0 * * part cINSERT f0 part cEMPTY
+ ((x INSERT EMPTY) IN (edge_set H)) |- ((((edge_set H) DELETE (x INSERT EMPTY)) = (edge_set ((edge_walkup H) x))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> cIN * * part cINSERT f0 part cEMPTY * part cedge_set f1 c==> c= * * part cDELETE * part cedge_set f1 * * part cINSERT f0 part cEMPTY * part cedge_set cedge_walkup f1 f0 c= cCARD * part cedge_set f1 c+ cCARD * part cedge_set cedge_walkup f1 f0 cNUMERAL cBIT1 c_0
+ |- ((\H. (!x. (!y. ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y))))))))) H)
T * / ! ! c/\ c= cedge_map cedge_walkup b0 b1 b1 b1 c/\ c==> c/\ c~ c= cnode_map b0 b1 b1 c~ c= cedge_map b0 b1 b1 c= cedge_map cedge_walkup b0 b1 cnode_map b0 b1 cedge_map b0 b1 c/\ c==> c/\ c~ c= cinverse * part cface_map b0 b1 b1 c~ c= cinverse * part cedge_map b0 b1 b1 c= cedge_map cedge_walkup b0 b1 cinverse * part cedge_map b0 b1 cinverse * part cface_map b0 b1 c==> c/\ c~ c= b2 b1 c/\ c~ c= b2 cinverse * part cedge_map b0 b1 c~ c= b2 cnode_map b0 b1 c= cedge_map cedge_walkup b0 b1 b2 cedge_map b0 b2 f0
+ |- ((FINITE (node_set H)) /\ (FINITE (face_set H)))
T c/\ cFINITE * part cnode_set f0 cFINITE * part cface_set f0
+ ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- ((permutes f) D)
T c==> c= * part cface_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cface_map f0 * part cdart f0 cpermutes f1 f2
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (((face_set ((edge_walkup H) x)) DELETE (x INSERT EMPTY)) = (face_set ((edge_walkup H) x))), ((x INSERT EMPTY) IN (face_set H)) |- ((((face_set ((edge_walkup H) x)) DELETE (x INSERT EMPTY)) = (face_set ((edge_walkup H) x))) /\ ((((face_set H) DELETE (x INSERT EMPTY)) = ((face_set ((edge_walkup H) x)) DELETE (x INSERT EMPTY))) ==> ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cINSERT f1 part cEMPTY * part cface_set cedge_walkup f0 f1 c==> cIN * * part cINSERT f1 part cEMPTY * part cface_set f0 c/\ c= * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cINSERT f1 part cEMPTY * part cface_set cedge_walkup f0 f1 c==> c= * * part cDELETE * part cface_set f0 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part cINSERT f1 part cEMPTY c= cCARD * part cface_set f0 c+ cCARD * part cface_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
- |- ((?n'. ((node_map ((edge_walkup H) x)) = n')) ==> (?n'. ((node_map ((edge_walkup H) x)) = n')))
T c==> c? / c= * part cnode_map cedge_walkup f0 f1 b0 c? / c= * part cnode_map cedge_walkup f0 f1 b0
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((dart H) = D), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (((\e. ((edge_map H) = e)) e) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cdart f0 f2 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> * / c= * part cedge_map f0 b0 f3 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), ((number_of_edges H) = ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0)))), ((number_of_nodes H) = ((number_of_nodes ((edge_walkup H) x)) + (NUMERAL (BIT1 _0)))), ((number_of_faces H) = ((number_of_faces ((edge_walkup H) x)) + (NUMERAL (BIT1 _0)))), (x IN (dart H)), ((permutes (edge_map H)) (dart H)) |- ((planar_index H) = (planar_index ((edge_walkup H) x)))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cnode_map f0 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> c= cnumber_of_edges f0 c+ cnumber_of_edges cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 c==> c= cnumber_of_nodes f0 c+ cnumber_of_nodes cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 c==> c= cnumber_of_faces f0 c+ cnumber_of_faces cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- (((((orbit_map n') x) = (x INSERT EMPTY)) ==> ((((node_set H) DELETE (x INSERT EMPTY)) = ((node_set ((edge_walkup H) x)) DELETE ((orbit_map n') x))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) = (((n' x) = x) ==> ((((node_set H) DELETE (x INSERT EMPTY)) = ((node_set ((edge_walkup H) x)) DELETE ((orbit_map n') x))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))))
T c= c==> c= * * part corbit_map f0 f1 * * part cINSERT f1 part cEMPTY c==> c= * * part cDELETE * part cnode_set f2 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cnode_set cedge_walkup f2 f1 * * part corbit_map f0 f1 c= cCARD * part cnode_set f2 c+ cCARD * part cnode_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0 c==> c= * f0 f1 f1 c==> c= * * part cDELETE * part cnode_set f2 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cnode_set cedge_walkup f2 f1 * * part corbit_map f0 f1 c= cCARD * part cnode_set f2 c+ cCARD * part cnode_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((dart H) = D), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (((!x. (((\n. ((node_map H) = n)) x) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))) ==> ((?n. ((node_map H) = n)) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))) = ((?n. ((node_map H) = n)) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cdart f0 f3 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= c==> ! c==> * / c= * part cnode_map f0 b1 b0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c==> c? / c= * part cnode_map f0 b0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c==> c? / c= * part cnode_map f0 b0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- (((!x. (((FINITE (face_set H)) /\ (x IN (face_set H))) ==> ((CARD (face_set H)) = ((CARD ((face_set H) DELETE x)) + (NUMERAL (BIT1 _0)))))) ==> ((\x. (((FINITE (face_set H)) /\ (x IN (face_set H))) ==> ((CARD (face_set H)) = ((CARD ((face_set H) DELETE x)) + (NUMERAL (BIT1 _0)))))) (x INSERT EMPTY))) = ((\x. (((FINITE (face_set H)) /\ (x IN (face_set H))) ==> ((CARD (face_set H)) = ((CARD ((face_set H) DELETE x)) + (NUMERAL (BIT1 _0)))))) (x INSERT EMPTY)))
T c= c==> ! c==> c/\ cFINITE * part cface_set f0 cIN b0 * part cface_set f0 c= cCARD * part cface_set f0 c+ cCARD * * part cDELETE * part cface_set f0 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cFINITE * part cface_set f0 cIN b0 * part cface_set f0 c= cCARD * part cface_set f0 c+ cCARD * * part cDELETE * part cface_set f0 b0 cNUMERAL cBIT1 c_0 * * part cINSERT f1 part cEMPTY * / c==> c/\ cFINITE * part cface_set f0 cIN b0 * part cface_set f0 c= cCARD * part cface_set f0 c+ cCARD * * part cDELETE * part cface_set f0 b0 cNUMERAL cBIT1 c_0 * * part cINSERT f1 part cEMPTY
+ ((dart H) = D), ((permutes (node_map H)) (dart H)) |- ((permutes (node_map H)) D)
T c==> c= * part cdart f0 f1 c==> cpermutes * part cnode_map f0 * part cdart f0 cpermutes * part cnode_map f0 f1
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((node_map H) = n), ((face_map H) = f), ((dart H) = D), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((?D'. ((dart ((edge_walkup H) x)) = D')) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cnode_map f0 f3 c==> c= * part cface_map f0 f4 c==> c= * part cdart f0 f5 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c? / c= * part cdart cedge_walkup f0 f1 b0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (((inverse n) x) = x), (((node_map H) x) = x), ((node_map H) = n), ((node_map ((edge_walkup H) x)) = n'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)) |- ((((node_set H) DELETE (x INSERT EMPTY)) = ((node_set ((edge_walkup H) x)) DELETE ((orbit_map n') ((inverse n) x)))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> c= cinverse f0 f1 f1 c==> c= cnode_map f2 f1 f1 c==> c= * part cnode_map f2 f0 c==> c= * part cnode_map cedge_walkup f2 f1 f3 c==> c= * part cdart f2 f4 c==> c= * part cdart cedge_walkup f2 f1 f5 c==> cIN f1 * part cdart f2 c==> c= * * part cDELETE * part cnode_set f2 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cnode_set cedge_walkup f2 f1 * * part corbit_map f3 cinverse f0 f1 c= cCARD * part cnode_set f2 c+ cCARD * part cnode_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0
+ |- ((~ (((x' IN D) /\ (~ (x' = x))) /\ ((x INSERT EMPTY) = ((orbit_map f') x')))) = T)
T c= c~ c/\ c/\ cIN f0 f1 c~ c= f0 f2 c= * * part cINSERT f2 part cEMPTY * * part corbit_map f3 f0 cT
+ |- ((\H. (!x. ((x IN (dart H)) ==> (((face_set H) DELETE ((face H) x)) = ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x))))))) H)
T * / ! c==> cIN b1 * part cdart b0 c= * * part cDELETE * part cface_set b0 * * part cface b0 b1 * * part cDELETE * part cface_set cedge_walkup b0 b1 * * part cface cedge_walkup b0 b1 cinverse * part cface_map b0 b1 f0
- (?x'. (((x' IN D) /\ (~ (x' = x))) /\ (((comb_component ((edge_walkup H) x)) x) = ((comb_component ((edge_walkup H) x)) x')))), ((dart H) = D), (x IN (dart H)) |- F
T c==> c? / c/\ c/\ cIN b0 f0 c~ c= b0 f1 c= * * part ccomb_component cedge_walkup f2 f1 f1 * * part ccomb_component cedge_walkup f2 f1 b0 c==> c= * part cdart f2 f0 c==> cIN f1 * part cdart f2 cF
+ ((face_map H) = f), ((face_map ((edge_walkup H) x)) = f'), ((dart H) = D), (x IN (dart H)) |- (((((face_set H) DELETE ((orbit_map f) x)) = ((face_set ((edge_walkup H) x)) DELETE ((orbit_map f') ((inverse f) x)))) ==> ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))) = (((x IN (dart H)) ==> (((face_set H) DELETE ((orbit_map (face_map H)) x)) = ((face_set ((edge_walkup H) x)) DELETE ((orbit_map (face_map ((edge_walkup H) x))) ((inverse (face_map H)) x))))) ==> ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= * part cface_map f0 f1 c==> c= * part cface_map cedge_walkup f0 f2 f3 c==> c= * part cdart f0 f4 c==> cIN f2 * part cdart f0 c= c==> c= * * part cDELETE * part cface_set f0 * * part corbit_map f1 f2 * * part cDELETE * part cface_set cedge_walkup f0 f2 * * part corbit_map f3 cinverse f1 f2 c= cCARD * part cface_set f0 c+ cCARD * part cface_set cedge_walkup f0 f2 cNUMERAL cBIT1 c_0 c==> c==> cIN f2 * part cdart f0 c= * * part cDELETE * part cface_set f0 * * part corbit_map * part cface_map f0 f2 * * part cDELETE * part cface_set cedge_walkup f0 f2 * * part corbit_map * part cface_map cedge_walkup f0 f2 cinverse * part cface_map f0 f2 c= cCARD * part cface_set f0 c+ cCARD * part cface_set cedge_walkup f0 f2 cNUMERAL cBIT1 c_0
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((node_map ((edge_walkup H) x)) = n'), ((face_map H) = f), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (((\f'. ((face_map ((edge_walkup H) x)) = f')) f') ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cedge_map cedge_walkup f0 f1 f3 c==> c= * part cnode_map f0 f4 c==> c= * part cnode_map cedge_walkup f0 f1 f5 c==> c= * part cface_map f0 f6 c==> c= * part cdart f0 f7 c==> c= * part cdart cedge_walkup f0 f1 f8 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> * / c= * part cface_map cedge_walkup f0 f1 b0 f9 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- ((\x. ((x IN (dart H)) ==> (((face_set H) DELETE ((face H) x)) = ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x)))))) x)
T * / c==> cIN b0 * part cdart f0 c= * * part cDELETE * part cface_set f0 * * part cface f0 b0 * * part cDELETE * part cface_set cedge_walkup f0 b0 * * part cface cedge_walkup f0 b0 cinverse * part cface_map f0 b0 f1
+ (((edge_set H) DELETE (x INSERT EMPTY)) = (edge_set ((edge_walkup H) x))), ((x INSERT EMPTY) IN (edge_set H)) |- ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))
T c==> c= * * part cDELETE * part cedge_set f0 * * part cINSERT f1 part cEMPTY * part cedge_set cedge_walkup f0 f1 c==> cIN * * part cINSERT f1 part cEMPTY * part cedge_set f0 c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)) |- (~ (((comb_component ((edge_walkup H) x)) x) IN (set_of_components ((edge_walkup H) x))))
T c==> c= * part cdart f0 f1 c==> c= * part cdart cedge_walkup f0 f2 f3 c==> cIN f2 * part cdart f0 c~ cIN * * part ccomb_component cedge_walkup f0 f2 f2 * part cset_of_components cedge_walkup f0 f2
+ |- (((!H. ((FINITE (edge_set H)) /\ ((FINITE (node_set H)) /\ (FINITE (face_set H))))) ==> ((\H. ((FINITE (edge_set H)) /\ ((FINITE (node_set H)) /\ (FINITE (face_set H))))) H)) = ((\H. ((FINITE (edge_set H)) /\ ((FINITE (node_set H)) /\ (FINITE (face_set H))))) H))
T c= c==> ! c/\ cFINITE * part cedge_set b0 c/\ cFINITE * part cnode_set b0 cFINITE * part cface_set b0 * / c/\ cFINITE * part cedge_set b0 c/\ cFINITE * part cnode_set b0 cFINITE * part cface_set b0 f0 * / c/\ cFINITE * part cedge_set b0 c/\ cFINITE * part cnode_set b0 cFINITE * part cface_set b0 f0
+ (FINITE (dart H)), ((dart H) = D) |- (FINITE D)
T c==> cFINITE * part cdart f0 c==> c= * part cdart f0 f1 cFINITE f1
+ |- (((!m. (!n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n))))) ==> ((\m. (!n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n))))) m)) = ((\m. (!n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n))))) m))
T c= c==> ! ! c= creal_of_num c+ b0 b1 creal_add creal_of_num b0 creal_of_num b1 * / ! c= creal_of_num c+ b0 b1 creal_add creal_of_num b0 creal_of_num b1 f0 * / ! c= creal_of_num c+ b0 b1 creal_add creal_of_num b0 creal_of_num b1 f0
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ (((face_map H) x) = x), ((face_map H) = f), ((dart H) = D), (x IN (dart H)) |- ((\x'. ((x' IN D) /\ ((x INSERT EMPTY) = ((orbit_map f) x')))) x)
T c==> c= cface_map f0 f1 f1 c==> c= * part cface_map f0 f2 c==> c= * part cdart f0 f3 c==> cIN f1 * part cdart f0 * / c/\ cIN b0 f3 c= * * part cINSERT f1 part cEMPTY * * part corbit_map f2 b0 f1
+ ((x IN (dart H)) /\ ((isolated_dart H) x)), (x IN (dart H)) |- ((planar_index H) = (planar_index ((edge_walkup H) x)))
T c==> c/\ cIN f0 * part cdart f1 cisolated_dart f1 f0 c==> cIN f0 * part cdart f1 c= cplanar_index f1 cplanar_index cedge_walkup f1 f0
+ (((node_map H) x) = x), ((node_map H) = n), ((node_map ((edge_walkup H) x)) = n'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (node_map H)) (dart H)) |- ((((node_set H) DELETE (x INSERT EMPTY)) = ((node_set ((edge_walkup H) x)) DELETE ((orbit_map n') ((inverse n) x)))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> c= cnode_map f0 f1 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cnode_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> c= * * part cDELETE * part cnode_set f0 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cnode_set cedge_walkup f0 f1 * * part corbit_map f3 cinverse f2 f1 c= cCARD * part cnode_set f0 c+ cCARD * part cnode_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ ((dart H) = D), (x IN (dart H)) |- (((f x) = x) ==> ((x IN D) /\ ((x INSERT EMPTY) = ((orbit_map f) x))))
T c==> c= * part cdart f0 f1 c==> cIN f2 * part cdart f0 c==> c= * f3 f2 f2 c/\ cIN f2 f1 c= * * part cINSERT f2 part cEMPTY * * part corbit_map f3 f2
+ ((dart H) = D), (x IN (dart H)) |- ((x IN D) = T)
T c==> c= * part cdart f0 f1 c==> cIN f2 * part cdart f0 c= cIN f2 f1 cT
+ |- ((\P. ((~ (?x. (P x))) = (!x. (~ (P x))))) P)
T * / c= c~ c? / * b0 b1 ! c~ * b0 b1 f0
- |- ((((\e. ((edge_map H) = e)) e) ==> (?e. ((edge_map H) = e))) = T)
T c= c==> * / c= * part cedge_map f0 b0 f1 c? / c= * part cedge_map f0 b0 cT
+ ((dart H) = D), (x IN (dart H)) |- ((\x'. ((x' IN D) /\ (((comb_component H) x) = ((comb_component H) x')))) x)
T c==> c= * part cdart f0 f1 c==> cIN f2 * part cdart f0 * / c/\ cIN b0 f1 c= * * part ccomb_component f0 f2 * * part ccomb_component f0 b0 f2
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- (!x'. (~ ((x' IN (D DELETE x)) /\ ((x INSERT EMPTY) = ((orbit_map f') x')))))
T c~ c/\ cIN f0 * * part cDELETE f1 f2 c= * * part cINSERT f2 part cEMPTY * * part corbit_map f3 f0
+ |- (((!x. (((face H) x) = ((orbit_map (face_map H)) x))) ==> ((\x. (((face H) x) = ((orbit_map (face_map H)) x))) x)) = ((\x. (((face H) x) = ((orbit_map (face_map H)) x))) x))
T c= c==> ! c= * * part cface f0 b0 * * part corbit_map * part cface_map f0 b0 * / c= * * part cface f0 b0 * * part corbit_map * part cface_map f0 b0 f1 * / c= * * part cface f0 b0 * * part corbit_map * part cface_map f0 b0 f1
+ ((face_map ((edge_walkup H) x)) = f') |- ((((f' x) = x) ==> ((((face_set H) DELETE (x INSERT EMPTY)) = ((face_set ((edge_walkup H) x)) DELETE ((orbit_map f') x))) ==> ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) = ((((face_map ((edge_walkup H) x)) x) = x) ==> ((((face_set H) DELETE (x INSERT EMPTY)) = ((face_set ((edge_walkup H) x)) DELETE ((orbit_map f') x))) ==> ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))))
T c==> c= * part cface_map cedge_walkup f0 f1 f2 c= c==> c= * f2 f1 f1 c==> c= * * part cDELETE * part cface_set f0 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part corbit_map f2 f1 c= cCARD * part cface_set f0 c+ cCARD * part cface_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 c==> c= cface_map cedge_walkup f0 f1 f1 f1 c==> c= * * part cDELETE * part cface_set f0 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part corbit_map f2 f1 c= cCARD * part cface_set f0 c+ cCARD * part cface_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ (((x' IN D) /\ (~ (x' = x))) /\ ((x INSERT EMPTY) = ((orbit_map f') x'))) |- ((((x' IN D) /\ (~ (x' = x))) /\ ((x INSERT EMPTY) = ((orbit_map f') x'))) /\ F)
T c==> c/\ c/\ cIN f0 f1 c~ c= f0 f2 c= * * part cINSERT f2 part cEMPTY * * part corbit_map f3 f0 c/\ c/\ c/\ cIN f0 f1 c~ c= f0 f2 c= * * part cINSERT f2 part cEMPTY * * part corbit_map f3 f0 cF
+ ((\n'. ((node_map ((edge_walkup H) x)) = n')) n') |- ((((node_map ((edge_walkup H) x)) = n') ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))) = ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> * / c= * part cnode_map cedge_walkup f0 f1 b0 f2 c= c==> c= * part cnode_map cedge_walkup f0 f1 f2 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((dart H) = D), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((planar_index H) = (planar_index ((edge_walkup H) x)))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cdart f0 f3 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- (((?f'. ((face_map ((edge_walkup H) x)) = f')) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))) = ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c= c==> c? / c= * part cface_map cedge_walkup f0 f1 b0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- (((!n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n)))) ==> ((\n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n)))) n)) = ((\n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n)))) n))
T c= c==> ! c= creal_of_num c+ f0 b0 creal_add creal_of_num f0 creal_of_num b0 * / c= creal_of_num c+ f0 b0 creal_add creal_of_num f0 creal_of_num b0 f1 * / c= creal_of_num c+ f0 b0 creal_add creal_of_num f0 creal_of_num b0 f1
+ ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((((e x) = x) = (((inverse e) x) = x)) ==> ((((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) x) INSERT (((comb_component ((edge_walkup H) x)) ((inverse e) x)) INSERT EMPTY)))) ==> ((CARD (set_of_components H)) = ((CARD (set_of_components ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) = ((((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) x) INSERT (((comb_component ((edge_walkup H) x)) ((inverse e) x)) INSERT EMPTY)))) ==> ((CARD (set_of_components H)) = ((CARD (set_of_components ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c= c==> c= c= * f1 f3 f3 c= cinverse f1 f3 f3 c==> c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f3 * * part cDIFF * part cset_of_components cedge_walkup f0 f3 * * part cINSERT * * part ccomb_component cedge_walkup f0 f3 f3 * * part cINSERT * * part ccomb_component cedge_walkup f0 f3 cinverse f1 f3 part cEMPTY c= cCARD * part cset_of_components f0 c+ cCARD * part cset_of_components cedge_walkup f0 f3 cNUMERAL cBIT1 c_0 c==> c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f3 * * part cDIFF * part cset_of_components cedge_walkup f0 f3 * * part cINSERT * * part ccomb_component cedge_walkup f0 f3 f3 * * part cINSERT * * part ccomb_component cedge_walkup f0 f3 cinverse f1 f3 part cEMPTY c= cCARD * part cset_of_components f0 c+ cCARD * part cset_of_components cedge_walkup f0 f3 cNUMERAL cBIT1 c_0
- ((!x. (~ (P x))) = (~ (?x. (P x)))) |- ((~ (?x. (P x))) = (!x. (~ (P x))))
T c==> c= ! c~ * f0 b0 c~ c? / * f0 b0 c= c~ c? / * f0 b0 ! c~ * f0 b0
+ |- (((!H. (!x. (((node H) x) = ((orbit_map (node_map H)) x)))) ==> ((\H. (!x. (((node H) x) = ((orbit_map (node_map H)) x)))) H)) = ((\H. (!x. (((node H) x) = ((orbit_map (node_map H)) x)))) H))
T c= c==> ! ! c= * * part cnode b0 b1 * * part corbit_map * part cnode_map b0 b1 * / ! c= * * part cnode b0 b1 * * part corbit_map * part cnode_map b0 b1 f0 * / ! c= * * part cnode b0 b1 * * part corbit_map * part cnode_map b0 b1 f0
+ ((dart H) = D), (x IN (dart H)) |- (?x'. ((x' IN D) /\ (((comb_component H) x) = ((comb_component H) x'))))
T c==> c= * part cdart f0 f1 c==> cIN f2 * part cdart f0 c? / c/\ cIN b0 f1 c= * * part ccomb_component f0 f2 * * part ccomb_component f0 b0
+ (((node_map H) x) = x), ((node_map H) = n), ((dart H) = D), (x IN (dart H)) |- ((x INSERT EMPTY) IN ((set_of_orbits (dart H)) (node_map H)))
T c==> c= cnode_map f0 f1 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cIN f1 * part cdart f0 cIN * * part cINSERT f1 part cEMPTY * * part cset_of_orbits * part cdart f0 * part cnode_map f0
+ |- (!x. ((x IN ((edge_set H) DIFF ((x INSERT EMPTY) INSERT EMPTY))) = (x IN ((edge_set H) DELETE (x INSERT EMPTY)))))
T c= cIN f0 * * part cDIFF * part cedge_set f1 * * part cINSERT * * part cINSERT f2 part cEMPTY part cEMPTY cIN f0 * * part cDELETE * part cedge_set f1 * * part cINSERT f2 part cEMPTY
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((node_map ((edge_walkup H) x)) = n'), ((face_map H) = f), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((planar_index H) = (planar_index ((edge_walkup H) x)))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cedge_map cedge_walkup f0 f1 f3 c==> c= * part cnode_map f0 f4 c==> c= * part cnode_map cedge_walkup f0 f1 f5 c==> c= * part cface_map f0 f6 c==> c= * part cdart f0 f7 c==> c= * part cdart cedge_walkup f0 f1 f8 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- ((((x IN (dart H)) ==> (((edge_set H) DIFF (((orbit_map (edge_map H)) x) INSERT (((orbit_map (edge_map H)) ((node_map H) x)) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((orbit_map (edge_map ((edge_walkup H) x))) ((node_map H) x)) INSERT (((orbit_map (edge_map ((edge_walkup H) x))) ((inverse (edge_map H)) x)) INSERT EMPTY))))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))) = (((x IN (dart H)) ==> (((edge_set H) DIFF (((edge H) x) INSERT (((edge H) ((node_map H) x)) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((edge ((edge_walkup H) x)) ((node_map H) x)) INSERT (((edge ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY))))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c= c==> c==> cIN f0 * part cdart f1 c= * * part cDIFF * part cedge_set f1 * * part cINSERT * * part corbit_map * part cedge_map f1 f0 * * part cINSERT * * part corbit_map * part cedge_map f1 cnode_map f1 f0 part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f1 f0 * * part cINSERT * * part corbit_map * part cedge_map cedge_walkup f1 f0 cnode_map f1 f0 * * part cINSERT * * part corbit_map * part cedge_map cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 part cEMPTY c= cCARD * part cedge_set f1 c+ cCARD * part cedge_set cedge_walkup f1 f0 cNUMERAL cBIT1 c_0 c==> c==> cIN f0 * part cdart f1 c= * * part cDIFF * part cedge_set f1 * * part cINSERT * * part cedge f1 f0 * * part cINSERT * * part cedge f1 cnode_map f1 f0 part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f1 f0 * * part cINSERT * * part cedge cedge_walkup f1 f0 cnode_map f1 f0 * * part cINSERT * * part cedge cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 part cEMPTY c= cCARD * part cedge_set f1 c+ cCARD * part cedge_set cedge_walkup f1 f0 cNUMERAL cBIT1 c_0
+ |- (((((edge_set H) DIFF ((x INSERT EMPTY) INSERT EMPTY)) = ((edge_set ((edge_walkup H) x)) DIFF ((x INSERT EMPTY) INSERT EMPTY))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))) = ((((edge_set H) DIFF ((x INSERT EMPTY) INSERT ((x INSERT EMPTY) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF ((x INSERT EMPTY) INSERT ((x INSERT EMPTY) INSERT EMPTY)))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c= c==> c= * * part cDIFF * part cedge_set f0 * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f0 f1 * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 c==> c= * * part cDIFF * part cedge_set f0 * * part cINSERT * * part cINSERT f1 part cEMPTY * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f0 f1 * * part cINSERT * * part cINSERT f1 part cEMPTY * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ (((edge_map H) x) = x), (((node_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (edge_map H)) (dart H)) |- ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))
T c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cedge_map cedge_walkup f0 f1 f3 c==> c= * part cnode_map f0 f4 c==> c= * part cdart f0 f5 c==> c= * part cdart cedge_walkup f0 f1 f6 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ ((x INSERT EMPTY) = ((orbit_map f') x')) |- (x = x')
T c==> c= * * part cINSERT f0 part cEMPTY * * part corbit_map f1 f2 c= f0 f2
+ |- (T = (((FINITE (face_set H)) ==> ((CARD (face_set H)) = ((CARD ((face_set H) DELETE (x INSERT EMPTY))) + (NUMERAL (BIT1 _0))))) ==> ((CARD (face_set H)) = ((CARD ((face_set H) DELETE (x INSERT EMPTY))) + (NUMERAL (BIT1 _0))))))
T c= cT c==> c==> cFINITE * part cface_set f0 c= cCARD * part cface_set f0 c+ cCARD * * part cDELETE * part cface_set f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT1 c_0 c= cCARD * part cface_set f0 c+ cCARD * * part cDELETE * part cface_set f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT1 c_0
- ((\e. ((edge_map H) = e)) e) |- ((((edge_map H) = e) ==> (?e. ((edge_map H) = e))) = (?e. ((edge_map H) = e)))
T c==> * / c= * part cedge_map f0 b0 f1 c= c==> c= * part cedge_map f0 f1 c? / c= * part cedge_map f0 b0 c? / c= * part cedge_map f0 b0
+ (((edge_set ((edge_walkup H) x)) DELETE (x INSERT EMPTY)) = (edge_set ((edge_walkup H) x))), ((x INSERT EMPTY) IN (edge_set H)) |- ((((edge_set H) DELETE (x INSERT EMPTY)) = ((edge_set ((edge_walkup H) x)) DELETE (x INSERT EMPTY))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> c= * * part cDELETE * part cedge_set cedge_walkup f0 f1 * * part cINSERT f1 part cEMPTY * part cedge_set cedge_walkup f0 f1 c==> cIN * * part cINSERT f1 part cEMPTY * part cedge_set f0 c==> c= * * part cDELETE * part cedge_set f0 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cedge_set cedge_walkup f0 f1 * * part cINSERT f1 part cEMPTY c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
- |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ |- (((?n. ((node_map H) = n)) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))) = ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c= c==> c? / c= * part cnode_map f0 b0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((node_map H) = n), ((face_map H) = f), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((planar_index H) = (planar_index ((edge_walkup H) x)))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cnode_map f0 f3 c==> c= * part cface_map f0 f4 c==> c= * part cdart f0 f5 c==> c= * part cdart cedge_walkup f0 f1 f6 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
- ((\n. ((node_map H) = n)) n) |- (((\n. ((node_map H) = n)) n) /\ (?n. ((node_map H) = n)))
T c==> * / c= * part cnode_map f0 b0 f1 c/\ * / c= * part cnode_map f0 b0 f1 c? / c= * part cnode_map f0 b0
- |- (((!x. (((\D. ((dart H) = D)) x) ==> (?D. ((dart H) = D)))) ==> ((?D. ((dart H) = D)) ==> (?D. ((dart H) = D)))) = ((?D. ((dart H) = D)) ==> (?D. ((dart H) = D))))
T c= c==> ! c==> * / c= * part cdart f0 b1 b0 c? / c= * part cdart f0 b1 c==> c? / c= * part cdart f0 b0 c? / c= * part cdart f0 b0 c==> c? / c= * part cdart f0 b0 c? / c= * part cdart f0 b0
+ |- (!x. (((FINITE (face_set H)) /\ (x IN (face_set H))) ==> ((CARD (face_set H)) = ((CARD ((face_set H) DELETE x)) + (NUMERAL (BIT1 _0))))))
T c==> c/\ cFINITE * part cface_set f0 cIN f1 * part cface_set f0 c= cCARD * part cface_set f0 c+ cCARD * * part cDELETE * part cface_set f0 f1 cNUMERAL cBIT1 c_0
+ |- (((face_map ((edge_walkup H) x)) = (face_map ((edge_walkup H) x))) = ((\f'. ((face_map ((edge_walkup H) x)) = f')) (face_map ((edge_walkup H) x))))
T c= c= * part cface_map cedge_walkup f0 f1 * part cface_map cedge_walkup f0 f1 * / c= * part cface_map cedge_walkup f0 f1 b0 * part cface_map cedge_walkup f0 f1
+ |- ((\x. (!y. ((((edge_map ((edge_walkup H) x)) x) = x) /\ ((((~ (((node_map H) x) = x)) /\ (~ (((edge_map H) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((node_map H) x)) = ((edge_map H) x))) /\ ((((~ (((inverse (face_map H)) x) = x)) /\ (~ (((inverse (edge_map H)) x) = x))) ==> (((edge_map ((edge_walkup H) x)) ((inverse (edge_map H)) x)) = ((inverse (face_map H)) x))) /\ (((~ (y = x)) /\ ((~ (y = ((inverse (edge_map H)) x))) /\ (~ (y = ((node_map H) x))))) ==> (((edge_map ((edge_walkup H) x)) y) = ((edge_map H) y)))))))) x)
T * / ! c/\ c= cedge_map cedge_walkup f0 b0 b0 b0 c/\ c==> c/\ c~ c= cnode_map f0 b0 b0 c~ c= cedge_map f0 b0 b0 c= cedge_map cedge_walkup f0 b0 cnode_map f0 b0 cedge_map f0 b0 c/\ c==> c/\ c~ c= cinverse * part cface_map f0 b0 b0 c~ c= cinverse * part cedge_map f0 b0 b0 c= cedge_map cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 cinverse * part cface_map f0 b0 c==> c/\ c~ c= b1 b0 c/\ c~ c= b1 cinverse * part cedge_map f0 b0 c~ c= b1 cnode_map f0 b0 c= cedge_map cedge_walkup f0 b0 b1 cedge_map f0 b1 f1
+ |- ((((x IN (dart H)) ==> (((face_set H) DELETE ((face H) x)) = ((face_set ((edge_walkup H) x)) DELETE ((face ((edge_walkup H) x)) ((inverse (face_map H)) x))))) ==> ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))) = ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c= c==> c==> cIN f0 * part cdart f1 c= * * part cDELETE * part cface_set f1 * * part cface f1 f0 * * part cDELETE * part cface_set cedge_walkup f1 f0 * * part cface cedge_walkup f1 f0 cinverse * part cface_map f1 f0 c= cCARD * part cface_set f1 c+ cCARD * part cface_set cedge_walkup f1 f0 cNUMERAL cBIT1 c_0 c= cCARD * part cface_set f1 c+ cCARD * part cface_set cedge_walkup f1 f0 cNUMERAL cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((face_map H) x) = x), ((face_map H) = f), ((face_map ((edge_walkup H) x)) = f'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (face_map H)) (dart H)) |- ((((face_set H) DELETE ((orbit_map f) x)) = ((face_set ((edge_walkup H) x)) DELETE ((orbit_map f') ((inverse f) x)))) ==> ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> c= cface_map f0 f1 f1 c==> c= * part cface_map f0 f2 c==> c= * part cface_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part cDELETE * part cface_set f0 * * part corbit_map f2 f1 * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part corbit_map f3 cinverse f2 f1 c= cCARD * part cface_set f0 c+ cCARD * part cface_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((((node_map ((edge_walkup H) x)) x) = x) ==> ((((node_set H) DELETE (x INSERT EMPTY)) = ((node_set ((edge_walkup H) x)) DELETE ((orbit_map n') x))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) = ((((node_set H) DELETE (x INSERT EMPTY)) = ((node_set ((edge_walkup H) x)) DELETE ((orbit_map n') x))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c= c==> c= cnode_map cedge_walkup f0 f1 f1 f1 c==> c= * * part cDELETE * part cnode_set f0 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cnode_set cedge_walkup f0 f1 * * part corbit_map f2 f1 c= cCARD * part cnode_set f0 c+ cCARD * part cnode_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 c==> c= * * part cDELETE * part cnode_set f0 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cnode_set cedge_walkup f0 f1 * * part corbit_map f2 f1 c= cCARD * part cnode_set f0 c+ cCARD * part cnode_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- ((\H. ((set_of_components H) = ((set_part_components H) (dart H)))) H)
T * / c= * part cset_of_components b0 * * part cset_part_components b0 * part cdart b0 f0
+ (((node_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((dart H) = D), (x IN (dart H)) |- (((((edge_set H) DIFF (((orbit_map e) x) INSERT (((orbit_map e) x) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((orbit_map e') x) INSERT (((orbit_map e') ((inverse e) x)) INSERT EMPTY)))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))) = (((x IN (dart H)) ==> (((edge_set H) DIFF (((orbit_map (edge_map H)) x) INSERT (((orbit_map (edge_map H)) ((node_map H) x)) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((orbit_map (edge_map ((edge_walkup H) x))) ((node_map H) x)) INSERT (((orbit_map (edge_map ((edge_walkup H) x))) ((inverse (edge_map H)) x)) INSERT EMPTY))))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= cnode_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cedge_map cedge_walkup f0 f1 f3 c==> c= * part cnode_map f0 f4 c==> c= * part cdart f0 f5 c==> cIN f1 * part cdart f0 c= c==> c= * * part cDIFF * part cedge_set f0 * * part cINSERT * * part corbit_map f2 f1 * * part cINSERT * * part corbit_map f2 f1 part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f0 f1 * * part cINSERT * * part corbit_map f3 f1 * * part cINSERT * * part corbit_map f3 cinverse f2 f1 part cEMPTY c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 c==> c==> cIN f1 * part cdart f0 c= * * part cDIFF * part cedge_set f0 * * part cINSERT * * part corbit_map * part cedge_map f0 f1 * * part cINSERT * * part corbit_map * part cedge_map f0 cnode_map f0 f1 part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f0 f1 * * part cINSERT * * part corbit_map * part cedge_map cedge_walkup f0 f1 cnode_map f0 f1 * * part cINSERT * * part corbit_map * part cedge_map cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 part cEMPTY c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ (((node_map H) x) = x), ((node_map H) = n), ((node_map ((edge_walkup H) x)) = n'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)) |- ((((node_map ((edge_walkup H) x)) x) = x) ==> ((((node_set H) DELETE (x INSERT EMPTY)) = ((node_set ((edge_walkup H) x)) DELETE ((orbit_map n') x))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= cnode_map f0 f1 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cnode_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> c= cnode_map cedge_walkup f0 f1 f1 f1 c==> c= * * part cDELETE * part cnode_set f0 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cnode_set cedge_walkup f0 f1 * * part corbit_map f3 f1 c= cCARD * part cnode_set f0 c+ cCARD * part cnode_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
- ((edge_map ((edge_walkup H) x)) = e'), (((edge_map ((edge_walkup H) x)) o ((node_map ((edge_walkup H) x)) o (face_map ((edge_walkup H) x)))) = I) |- ((e' o ((node_map ((edge_walkup H) x)) o (face_map ((edge_walkup H) x)))) = I)
T c==> c= * part cedge_map cedge_walkup f0 f1 f2 c==> c= * * part co * part cedge_map cedge_walkup f0 f1 * * part co * part cnode_map cedge_walkup f0 f1 * part cface_map cedge_walkup f0 f1 part cI c= * * part co f2 * * part co * part cnode_map cedge_walkup f0 f1 * part cface_map cedge_walkup f0 f1 part cI
+ (((edge_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)) |- ((((edge_set H) DIFF ((x INSERT EMPTY) INSERT EMPTY)) = ((edge_set ((edge_walkup H) x)) DIFF ((x INSERT EMPTY) INSERT EMPTY))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> c= cedge_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cedge_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> c= * * part cDIFF * part cedge_set f0 * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f0 f1 * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ (((comb_component ((edge_walkup H) x)) x') = (x INSERT EMPTY)) |- (((x' IN ((comb_component ((edge_walkup H) x)) x')) ==> (x' = x)) = ((x' IN (x INSERT EMPTY)) ==> (x' = x)))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 f2 * * part cINSERT f1 part cEMPTY c= c==> cIN f2 * * part ccomb_component cedge_walkup f0 f1 f2 c= f2 f1 c==> cIN f2 * * part cINSERT f1 part cEMPTY c= f2 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((face_map H) x) = x), ((face_map H) = f), ((face_map ((edge_walkup H) x)) = f'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (face_map H)) (dart H)) |- ((((orbit_map f) x) = (x INSERT EMPTY)) ==> ((((face_set H) DELETE ((orbit_map f) x)) = ((face_set ((edge_walkup H) x)) DELETE ((orbit_map f') ((inverse f) x)))) ==> ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= cface_map f0 f1 f1 c==> c= * part cface_map f0 f2 c==> c= * part cface_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * * part corbit_map f2 f1 * * part cINSERT f1 part cEMPTY c==> c= * * part cDELETE * part cface_set f0 * * part corbit_map f2 f1 * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part corbit_map f3 cinverse f2 f1 c= cCARD * part cface_set f0 c+ cCARD * part cface_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((node_map ((edge_walkup H) x)) = n'), ((face_map H) = f), ((face_map ((edge_walkup H) x)) = f'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (((face_map ((edge_walkup H) x)) = f') /\ ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cedge_map cedge_walkup f0 f1 f3 c==> c= * part cnode_map f0 f4 c==> c= * part cnode_map cedge_walkup f0 f1 f5 c==> c= * part cface_map f0 f6 c==> c= * part cface_map cedge_walkup f0 f1 f7 c==> c= * part cdart f0 f8 c==> c= * part cdart cedge_walkup f0 f1 f9 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c/\ c= * part cface_map cedge_walkup f0 f1 f7 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (((edge_map H) x) = x), ((edge_map H) = e) |- (((((inverse e) x) = x) ==> ((((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) x) INSERT (((comb_component ((edge_walkup H) x)) ((inverse e) x)) INSERT EMPTY)))) ==> ((CARD (set_of_components H)) = ((CARD (set_of_components ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) = ((((e x) = x) = (((inverse e) x) = x)) ==> ((((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) x) INSERT (((comb_component ((edge_walkup H) x)) ((inverse e) x)) INSERT EMPTY)))) ==> ((CARD (set_of_components H)) = ((CARD (set_of_components ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))))
T c==> c= cedge_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c= c==> c= cinverse f2 f1 f1 c==> c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 * * part cDIFF * part cset_of_components cedge_walkup f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cinverse f2 f1 part cEMPTY c= cCARD * part cset_of_components f0 c+ cCARD * part cset_of_components cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 c==> c= c= * f2 f1 f1 c= cinverse f2 f1 f1 c==> c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 * * part cDIFF * part cset_of_components cedge_walkup f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cinverse f2 f1 part cEMPTY c= cCARD * part cset_of_components f0 c+ cCARD * part cset_of_components cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- (((?e'. ((edge_map ((edge_walkup H) x)) = e')) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))) = ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c= c==> c? / c= * part cedge_map cedge_walkup f0 f1 b0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- ((\H. ((planar_index H) = ((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))))) H)
T * / c= cplanar_index b0 creal_add creal_of_num cnumber_of_edges b0 creal_add creal_of_num cnumber_of_nodes b0 creal_sub creal_sub creal_of_num cnumber_of_faces b0 creal_of_num cCARD * part cdart b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components b0 f0
+ ((\x'. (((x' IN D) /\ (~ (x' = x))) /\ (((comb_component ((edge_walkup H) x)) x) = ((comb_component ((edge_walkup H) x)) x')))) x') |- (((x' IN D) /\ (~ (x' = x))) /\ (((comb_component ((edge_walkup H) x)) x) = ((comb_component ((edge_walkup H) x)) x')))
T c==> * / c/\ c/\ cIN b0 f0 c~ c= b0 f1 c= * * part ccomb_component cedge_walkup f2 f1 f1 * * part ccomb_component cedge_walkup f2 f1 b0 f3 c/\ c/\ cIN f3 f0 c~ c= f3 f1 c= * * part ccomb_component cedge_walkup f2 f1 f1 * * part ccomb_component cedge_walkup f2 f1 f3
+ (((node_map H) x) = x), ((node_map H) = n) |- ((n x) = x)
T c==> c= cnode_map f0 f1 f1 c==> c= * part cnode_map f0 f2 c= * f2 f1 f1
+ ((x INSERT EMPTY) IN (node_set H)) |- ((((node_set H) DELETE (x INSERT EMPTY)) = (node_set ((edge_walkup H) x))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> cIN * * part cINSERT f0 part cEMPTY * part cnode_set f1 c==> c= * * part cDELETE * part cnode_set f1 * * part cINSERT f0 part cEMPTY * part cnode_set cedge_walkup f1 f0 c= cCARD * part cnode_set f1 c+ cCARD * part cnode_set cedge_walkup f1 f0 cNUMERAL cBIT1 c_0
- ((\n'. ((node_map ((edge_walkup H) x)) = n')) n') |- (((\n'. ((node_map ((edge_walkup H) x)) = n')) n') /\ (?n'. ((node_map ((edge_walkup H) x)) = n')))
T c==> * / c= * part cnode_map cedge_walkup f0 f1 b0 f2 c/\ * / c= * part cnode_map cedge_walkup f0 f1 b0 f2 c? / c= * part cnode_map cedge_walkup f0 f1 b0
+ ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))), ((number_of_edges H) = ((number_of_edges ((edge_walkup H) x)) + (NUMERAL (BIT1 _0)))), ((number_of_nodes H) = ((number_of_nodes ((edge_walkup H) x)) + (NUMERAL (BIT1 _0)))), ((number_of_faces H) = ((number_of_faces ((edge_walkup H) x)) + (NUMERAL (BIT1 _0)))), ((number_of_components H) = ((number_of_components ((edge_walkup H) x)) + (NUMERAL (BIT1 _0)))) |- (((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes ((edge_walkup H) x)))) ((real_sub ((real_sub (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x))))))))
T c==> c= * part cdart f0 f1 c==> c= * part cdart cedge_walkup f0 f2 f3 c==> c= cCARD * part cdart f0 c+ cCARD * part cdart cedge_walkup f0 f2 cNUMERAL cBIT1 c_0 c==> c= cnumber_of_edges f0 c+ cnumber_of_edges cedge_walkup f0 f2 cNUMERAL cBIT1 c_0 c==> c= cnumber_of_nodes f0 c+ cnumber_of_nodes cedge_walkup f0 f2 cNUMERAL cBIT1 c_0 c==> c= cnumber_of_faces f0 c+ cnumber_of_faces cedge_walkup f0 f2 cNUMERAL cBIT1 c_0 c==> c= cnumber_of_components f0 c+ cnumber_of_components cedge_walkup f0 f2 cNUMERAL cBIT1 c_0 c= creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f2 creal_add creal_of_num cnumber_of_nodes cedge_walkup f0 f2 creal_sub creal_sub creal_of_num cnumber_of_faces cedge_walkup f0 f2 creal_of_num cCARD * part cdart cedge_walkup f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f2
+ |- (!x. (((FINITE (edge_set H)) /\ (x IN (edge_set H))) ==> ((CARD (edge_set H)) = ((CARD ((edge_set H) DELETE x)) + (NUMERAL (BIT1 _0))))))
T c==> c/\ cFINITE * part cedge_set f0 cIN f1 * part cedge_set f0 c= cCARD * part cedge_set f0 c+ cCARD * * part cDELETE * part cedge_set f0 f1 cNUMERAL cBIT1 c_0
+ (((face_map H) x) = x), ((face_map H) = f), ((face_map ((edge_walkup H) x)) = f'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)) |- (((f' x) = x) ==> ((((face_set H) DELETE (x INSERT EMPTY)) = ((face_set ((edge_walkup H) x)) DELETE ((orbit_map f') x))) ==> ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= cface_map f0 f1 f1 c==> c= * part cface_map f0 f2 c==> c= * part cface_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> c= * f3 f1 f1 c==> c= * * part cDELETE * part cface_set f0 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part corbit_map f3 f1 c= cCARD * part cface_set f0 c+ cCARD * part cface_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- (((!H. (((set_part_components H) D) = (GSPEC (\GEN%PVAR%5394. (?x. (((SETSPEC GEN%PVAR%5394) (x IN D)) ((comb_component H) x))))))) ==> ((\H. (((set_part_components H) D) = (GSPEC (\GEN%PVAR%5394. (?x. (((SETSPEC GEN%PVAR%5394) (x IN D)) ((comb_component H) x))))))) H)) = ((\H. (((set_part_components H) D) = (GSPEC (\GEN%PVAR%5394. (?x. (((SETSPEC GEN%PVAR%5394) (x IN D)) ((comb_component H) x))))))) H))
T c= c==> ! c= * * part cset_part_components b0 f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f0 * * part ccomb_component b0 b2 * / c= * * part cset_part_components b0 f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f0 * * part ccomb_component b0 b2 f1 * / c= * * part cset_part_components b0 f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f0 * * part ccomb_component b0 b2 f1
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ (((edge_set ((edge_walkup H) x)) DELETE (x INSERT EMPTY)) = (edge_set ((edge_walkup H) x))) |- (((((edge_set H) DELETE (x INSERT EMPTY)) = (edge_set ((edge_walkup H) x))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))) = ((((edge_set H) DELETE (x INSERT EMPTY)) = ((edge_set ((edge_walkup H) x)) DELETE (x INSERT EMPTY))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= * * part cDELETE * part cedge_set cedge_walkup f0 f1 * * part cINSERT f1 part cEMPTY * part cedge_set cedge_walkup f0 f1 c= c==> c= * * part cDELETE * part cedge_set f0 * * part cINSERT f1 part cEMPTY * part cedge_set cedge_walkup f0 f1 c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 c==> c= * * part cDELETE * part cedge_set f0 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cedge_set cedge_walkup f0 f1 * * part cINSERT f1 part cEMPTY c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ ((((edge_map H) x) = x) /\ ((((node_map H) x) = x) /\ (((face_map H) x) = x))), (x IN (dart H)) |- ((planar_index H) = (planar_index ((edge_walkup H) x)))
T c==> c/\ c= cedge_map f0 f1 f1 c/\ c= cnode_map f0 f1 f1 c= cface_map f0 f1 f1 c==> cIN f1 * part cdart f0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (((face_map H) x) = x), ((face_map H) = f), ((dart H) = D), (x IN (dart H)) |- (?x'. ((x' IN D) /\ ((x INSERT EMPTY) = ((orbit_map f) x'))))
T c==> c= cface_map f0 f1 f1 c==> c= * part cface_map f0 f2 c==> c= * part cdart f0 f3 c==> cIN f1 * part cdart f0 c? / c/\ cIN b0 f3 c= * * part cINSERT f1 part cEMPTY * * part corbit_map f2 b0
+ |- (((!H. ((face_set H) = ((set_of_orbits (dart H)) (face_map H)))) ==> ((\H. ((face_set H) = ((set_of_orbits (dart H)) (face_map H)))) H)) = ((\H. ((face_set H) = ((set_of_orbits (dart H)) (face_map H)))) H))
T c= c==> ! c= * part cface_set b0 * * part cset_of_orbits * part cdart b0 * part cface_map b0 * / c= * part cface_set b0 * * part cset_of_orbits * part cdart b0 * part cface_map b0 f0 * / c= * part cface_set b0 * * part cset_of_orbits * part cdart b0 * part cface_map b0 f0
+ (x IN (dart H)) |- (((((edge_map H) x) = x) /\ ((((node_map H) x) = x) /\ (((face_map H) x) = x))) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> cIN f0 * part cdart f1 c==> c/\ c= cedge_map f1 f0 f0 c/\ c= cnode_map f1 f0 f0 c= cface_map f1 f0 f0 c= cplanar_index f1 cplanar_index cedge_walkup f1 f0
- |- ((?f. ((face_map H) = f)) ==> (?f. ((face_map H) = f)))
T c==> c? / c= * part cface_map f0 b0 c? / c= * part cface_map f0 b0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (((set_of_components ((edge_walkup H) x)) DELETE ((comb_component ((edge_walkup H) x)) x)) = (set_of_components ((edge_walkup H) x))) |- (((((set_of_components H) DELETE ((comb_component H) x)) = (set_of_components ((edge_walkup H) x))) ==> ((CARD (set_of_components H)) = ((CARD (set_of_components ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))) = ((((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DELETE ((comb_component ((edge_walkup H) x)) x))) ==> ((CARD (set_of_components H)) = ((CARD (set_of_components ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= * * part cDELETE * part cset_of_components cedge_walkup f0 f1 * * part ccomb_component cedge_walkup f0 f1 f1 * part cset_of_components cedge_walkup f0 f1 c= c==> c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 * part cset_of_components cedge_walkup f0 f1 c= cCARD * part cset_of_components f0 c+ cCARD * part cset_of_components cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 c==> c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 * * part cDELETE * part cset_of_components cedge_walkup f0 f1 * * part ccomb_component cedge_walkup f0 f1 f1 c= cCARD * part cset_of_components f0 c+ cCARD * part cset_of_components cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
- ((dart H) = D), (x IN (dart H)) |- (T = (x IN D))
T c==> c= * part cdart f0 f1 c==> cIN f2 * part cdart f0 c= cT cIN f2 f1
+ |- (((!x. ((x IN (dart H)) ==> (((node_set H) DELETE ((node H) x)) = ((node_set ((edge_walkup H) x)) DELETE ((node ((edge_walkup H) x)) ((inverse (node_map H)) x)))))) ==> ((\x. ((x IN (dart H)) ==> (((node_set H) DELETE ((node H) x)) = ((node_set ((edge_walkup H) x)) DELETE ((node ((edge_walkup H) x)) ((inverse (node_map H)) x)))))) x)) = ((\x. ((x IN (dart H)) ==> (((node_set H) DELETE ((node H) x)) = ((node_set ((edge_walkup H) x)) DELETE ((node ((edge_walkup H) x)) ((inverse (node_map H)) x)))))) x))
T c= c==> ! c==> cIN b0 * part cdart f0 c= * * part cDELETE * part cnode_set f0 * * part cnode f0 b0 * * part cDELETE * part cnode_set cedge_walkup f0 b0 * * part cnode cedge_walkup f0 b0 cinverse * part cnode_map f0 b0 * / c==> cIN b0 * part cdart f0 c= * * part cDELETE * part cnode_set f0 * * part cnode f0 b0 * * part cDELETE * part cnode_set cedge_walkup f0 b0 * * part cnode cedge_walkup f0 b0 cinverse * part cnode_map f0 b0 f1 * / c==> cIN b0 * part cdart f0 c= * * part cDELETE * part cnode_set f0 * * part cnode f0 b0 * * part cDELETE * part cnode_set cedge_walkup f0 b0 * * part cnode cedge_walkup f0 b0 cinverse * part cnode_map f0 b0 f1
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((planar_index H) = (planar_index ((edge_walkup H) x)))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cnode_map f0 f3 c==> c= * part cdart f0 f4 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- (((?D. ((dart H) = D)) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))) = ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c= c==> c? / c= * part cdart f0 b0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (((comb_component H) x) IN (set_of_components H)) |- ((((set_of_components ((edge_walkup H) x)) DELETE ((comb_component ((edge_walkup H) x)) x)) = (set_of_components ((edge_walkup H) x))) ==> ((((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DELETE ((comb_component ((edge_walkup H) x)) x))) ==> ((CARD (set_of_components H)) = ((CARD (set_of_components ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> cIN * * part ccomb_component f0 f1 * part cset_of_components f0 c==> c= * * part cDELETE * part cset_of_components cedge_walkup f0 f1 * * part ccomb_component cedge_walkup f0 f1 f1 * part cset_of_components cedge_walkup f0 f1 c==> c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 * * part cDELETE * part cset_of_components cedge_walkup f0 f1 * * part ccomb_component cedge_walkup f0 f1 f1 c= cCARD * part cset_of_components f0 c+ cCARD * part cset_of_components cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- (((FINITE (face_set H)) ==> ((CARD (face_set H)) = ((CARD ((face_set H) DELETE (x INSERT EMPTY))) + (NUMERAL (BIT1 _0))))) ==> ((CARD (face_set H)) = ((CARD ((face_set H) DELETE (x INSERT EMPTY))) + (NUMERAL (BIT1 _0)))))
T c==> c==> cFINITE * part cface_set f0 c= cCARD * part cface_set f0 c+ cCARD * * part cDELETE * part cface_set f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT1 c_0 c= cCARD * part cface_set f0 c+ cCARD * * part cDELETE * part cface_set f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT1 c_0
+ |- ((x' IN (x INSERT EMPTY)) ==> (x' = x))
T c==> cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
+ |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((!H. ((node_set H) = ((set_of_orbits (dart H)) (node_map H)))) ==> ((\H. ((node_set H) = ((set_of_orbits (dart H)) (node_map H)))) H)) = ((\H. ((node_set H) = ((set_of_orbits (dart H)) (node_map H)))) H))
T c= c==> ! c= * part cnode_set b0 * * part cset_of_orbits * part cdart b0 * part cnode_map b0 * / c= * part cnode_set b0 * * part cset_of_orbits * part cdart b0 * part cnode_map b0 f0 * / c= * part cnode_set b0 * * part cset_of_orbits * part cdart b0 * part cnode_map b0 f0
+ ((dart H) = D), (x IN (dart H)) |- ((x IN D) /\ (((comb_component H) x) = ((comb_component H) x)))
T c==> c= * part cdart f0 f1 c==> cIN f2 * part cdart f0 c/\ cIN f2 f1 c= * * part ccomb_component f0 f2 * * part ccomb_component f0 f2
+ |- (T = (!x. ((x IN ((edge_set H) DIFF ((x INSERT EMPTY) INSERT EMPTY))) = (x IN ((edge_set H) DELETE (x INSERT EMPTY))))))
T c= cT ! c= cIN b0 * * part cDIFF * part cedge_set f0 * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY cIN b0 * * part cDELETE * part cedge_set f0 * * part cINSERT f1 part cEMPTY
+ (((face_map H) x) = x), ((face_map H) = f) |- ((((f x) = x) ==> ((((face_set H) DELETE ((orbit_map f) x)) = ((face_set ((edge_walkup H) x)) DELETE ((orbit_map f') ((inverse f) x)))) ==> ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) = ((((face_set H) DELETE ((orbit_map f) x)) = ((face_set ((edge_walkup H) x)) DELETE ((orbit_map f') ((inverse f) x)))) ==> ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= cface_map f0 f1 f1 c==> c= * part cface_map f0 f2 c= c==> c= * f2 f1 f1 c==> c= * * part cDELETE * part cface_set f0 * * part corbit_map f2 f1 * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part corbit_map f3 cinverse f2 f1 c= cCARD * part cface_set f0 c+ cCARD * part cface_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 c==> c= * * part cDELETE * part cface_set f0 * * part corbit_map f2 f1 * * part cDELETE * part cface_set cedge_walkup f0 f1 * * part corbit_map f3 cinverse f2 f1 c= cCARD * part cface_set f0 c+ cCARD * part cface_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ (((comb_component H) x) IN (set_of_components H)) |- ((~ (((comb_component ((edge_walkup H) x)) x) IN (set_of_components ((edge_walkup H) x)))) ==> ((((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DELETE ((comb_component ((edge_walkup H) x)) x))) ==> ((CARD (set_of_components H)) = ((CARD (set_of_components ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> cIN * * part ccomb_component f0 f1 * part cset_of_components f0 c==> c~ cIN * * part ccomb_component cedge_walkup f0 f1 f1 * part cset_of_components cedge_walkup f0 f1 c==> c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 * * part cDELETE * part cset_of_components cedge_walkup f0 f1 * * part ccomb_component cedge_walkup f0 f1 f1 c= cCARD * part cset_of_components f0 c+ cCARD * part cset_of_components cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- ((\H. (!x. (((isolated_dart H) x) = ((((edge_map H) x) = x) /\ ((((node_map H) x) = x) /\ (((face_map H) x) = x)))))) H)
T * / ! c= cisolated_dart b0 b1 c/\ c= cedge_map b0 b1 b1 c/\ c= cnode_map b0 b1 b1 c= cface_map b0 b1 b1 f0
- ((edge_map H) = e) |- (((edge_map H) = e) /\ (?e. ((edge_map H) = e)))
T c==> c= * part cedge_map f0 f1 c/\ c= * part cedge_map f0 f1 c? / c= * part cedge_map f0 b0
+ |- ((~ (?x'. (((x' IN D) /\ (~ (x' = x))) /\ (((comb_component ((edge_walkup H) x)) x) = ((comb_component ((edge_walkup H) x)) x'))))) = (~ (((comb_component ((edge_walkup H) x)) x) IN ((set_part_components ((edge_walkup H) x)) (D DELETE x)))))
T c= c~ c? / c/\ c/\ cIN b0 f0 c~ c= b0 f1 c= * * part ccomb_component cedge_walkup f2 f1 f1 * * part ccomb_component cedge_walkup f2 f1 b0 c~ cIN * * part ccomb_component cedge_walkup f2 f1 f1 * * part cset_part_components cedge_walkup f2 f1 * * part cDELETE f0 f1
+ (((edge_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)) |- ((((inverse e) x) = x) ==> ((((edge_set H) DIFF ((x INSERT EMPTY) INSERT ((x INSERT EMPTY) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((orbit_map e') x) INSERT (((orbit_map e') ((inverse e) x)) INSERT EMPTY)))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= cedge_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cedge_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> c= cinverse f2 f1 f1 c==> c= * * part cDIFF * part cedge_set f0 * * part cINSERT * * part cINSERT f1 part cEMPTY * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f0 f1 * * part cINSERT * * part corbit_map f3 f1 * * part cINSERT * * part corbit_map f3 cinverse f2 f1 part cEMPTY c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- (!x. ((x IN ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) x) INSERT EMPTY))) = (x IN ((set_of_components ((edge_walkup H) x)) DELETE ((comb_component ((edge_walkup H) x)) x)))))
T c= cIN f0 * * part cDIFF * part cset_of_components cedge_walkup f1 f2 * * part cINSERT * * part ccomb_component cedge_walkup f1 f2 f2 part cEMPTY cIN f0 * * part cDELETE * part cset_of_components cedge_walkup f1 f2 * * part ccomb_component cedge_walkup f1 f2 f2
+ ((edge_map H) = e), ((dart H) = D) |- (((x INSERT EMPTY) IN ((set_of_orbits D) e)) = ((x INSERT EMPTY) IN ((set_of_orbits (dart H)) (edge_map H))))
T c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c= cIN * * part cINSERT f3 part cEMPTY * * part cset_of_orbits f2 f1 cIN * * part cINSERT f3 part cEMPTY * * part cset_of_orbits * part cdart f0 * part cedge_map f0
+ |- ((\y. ((((face_map ((edge_walkup H) x)) x) = x) /\ ((((face_map ((edge_walkup H) x)) ((inverse (face_map H)) x)) = ((face_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (face_map H)) x)))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y)))))) x)
T * / c/\ c= cface_map cedge_walkup f0 f1 f1 f1 c/\ c= cface_map cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cface_map f0 f1 c==> c/\ c~ c= b0 f1 c~ c= b0 cinverse * part cface_map f0 f1 c= cface_map cedge_walkup f0 f1 b0 cface_map f0 b0 f1
+ |- (((!x. (!s. ((~ (x IN s)) = ((s DELETE x) = s)))) ==> ((\x. (!s. ((~ (x IN s)) = ((s DELETE x) = s)))) x)) = ((\x. (!s. ((~ (x IN s)) = ((s DELETE x) = s)))) x))
T c= c==> ! ! c= c~ cIN b0 b1 c= * * part cDELETE b1 b0 b1 * / ! c= c~ cIN b0 b1 c= * * part cDELETE b1 b0 b1 f0 * / ! c= c~ cIN b0 b1 c= * * part cDELETE b1 b0 b1 f0
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((face_map H) = f), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((planar_index H) = (planar_index ((edge_walkup H) x)))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cedge_map cedge_walkup f0 f1 f3 c==> c= * part cnode_map f0 f4 c==> c= * part cface_map f0 f5 c==> c= * part cdart f0 f6 c==> c= * part cdart cedge_walkup f0 f1 f7 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
- ((\f. ((face_map H) = f)) f) |- ((((face_map H) = f) ==> (?f. ((face_map H) = f))) = (?f. ((face_map H) = f)))
T c==> * / c= * part cface_map f0 b0 f1 c= c==> c= * part cface_map f0 f1 c? / c= * part cface_map f0 b0 c? / c= * part cface_map f0 b0
+ (((edge_set H) DELETE (x INSERT EMPTY)) = (edge_set ((edge_walkup H) x))) |- ((edge_set ((edge_walkup H) x)) = ((edge_set H) DELETE (x INSERT EMPTY)))
T c==> c= * * part cDELETE * part cedge_set f0 * * part cINSERT f1 part cEMPTY * part cedge_set cedge_walkup f0 f1 c= * part cedge_set cedge_walkup f0 f1 * * part cDELETE * part cedge_set f0 * * part cINSERT f1 part cEMPTY
+ |- (((!x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))) ==> ((\x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))) x)) = ((\x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))) x))
T c= c==> ! ! c= cIN b0 * * part cDELETE f0 b1 c/\ cIN b0 f0 c~ c= b0 b1 * / ! c= cIN b0 * * part cDELETE f0 b1 c/\ cIN b0 f0 c~ c= b0 b1 f1 * / ! c= cIN b0 * * part cDELETE f0 b1 c/\ cIN b0 f0 c~ c= b0 b1 f1
+ (((inverse e) x) = x), (((edge_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)) |- ((((edge_set H) DIFF ((x INSERT EMPTY) INSERT ((x INSERT EMPTY) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((orbit_map e') x) INSERT (((orbit_map e') ((inverse e) x)) INSERT EMPTY)))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> c= cinverse f0 f1 f1 c==> c= cedge_map f2 f1 f1 c==> c= * part cedge_map f2 f0 c==> c= * part cedge_map cedge_walkup f2 f1 f3 c==> c= * part cdart f2 f4 c==> c= * part cdart cedge_walkup f2 f1 f5 c==> cIN f1 * part cdart f2 c==> c= * * part cDIFF * part cedge_set f2 * * part cINSERT * * part cINSERT f1 part cEMPTY * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f2 f1 * * part cINSERT * * part corbit_map f3 f1 * * part cINSERT * * part corbit_map f3 cinverse f0 f1 part cEMPTY c= cCARD * part cedge_set f2 c+ cCARD * part cedge_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0
+ (((face_map H) x) = x), ((face_map H) = f), ((face_map ((edge_walkup H) x)) = f'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (face_map H)) (dart H)) |- ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))
T c==> c= cface_map f0 f1 f1 c==> c= * part cface_map f0 f2 c==> c= * part cface_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= cCARD * part cface_set f0 c+ cCARD * part cface_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ (((face_set H) DELETE (x INSERT EMPTY)) = (face_set ((edge_walkup H) x))) |- ((face_set ((edge_walkup H) x)) = ((face_set H) DELETE (x INSERT EMPTY)))
T c==> c= * * part cDELETE * part cface_set f0 * * part cINSERT f1 part cEMPTY * part cface_set cedge_walkup f0 f1 c= * part cface_set cedge_walkup f0 f1 * * part cDELETE * part cface_set f0 * * part cINSERT f1 part cEMPTY
+ |- (?D. ((dart H) = D))
T c? / c= * part cdart f0 b0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((((x IN (dart H)) ==> (((comb_component ((edge_walkup H) x)) x) = (x INSERT EMPTY))) ==> F) = F)
T c= c==> c==> cIN f0 * part cdart f1 c= * * part ccomb_component cedge_walkup f1 f0 f0 * * part cINSERT f0 part cEMPTY cF cF
+ |- (!x. (((FINITE (node_set H)) /\ (x IN (node_set H))) ==> ((CARD (node_set H)) = ((CARD ((node_set H) DELETE x)) + (NUMERAL (BIT1 _0))))))
T c==> c/\ cFINITE * part cnode_set f0 cIN f1 * part cnode_set f0 c= cCARD * part cnode_set f0 c+ cCARD * * part cDELETE * part cnode_set f0 f1 cNUMERAL cBIT1 c_0
+ (((node_map H) x) = x), ((node_map H) = n), ((node_map ((edge_walkup H) x)) = n'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (node_map H)) (dart H)) |- ((((orbit_map n) x) = (x INSERT EMPTY)) ==> ((((node_set H) DELETE ((orbit_map n) x)) = ((node_set ((edge_walkup H) x)) DELETE ((orbit_map n') ((inverse n) x)))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= cnode_map f0 f1 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cnode_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> c= * * part corbit_map f2 f1 * * part cINSERT f1 part cEMPTY c==> c= * * part cDELETE * part cnode_set f0 * * part corbit_map f2 f1 * * part cDELETE * part cnode_set cedge_walkup f0 f1 * * part corbit_map f3 cinverse f2 f1 c= cCARD * part cnode_set f0 c+ cCARD * part cnode_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((node_map H) x) = x), ((node_map H) = n), ((node_map ((edge_walkup H) x)) = n'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (((orbit_map n) x) = (x INSERT EMPTY)), (x IN (dart H)), ((permutes (node_map H)) (dart H)) |- ((((orbit_map n) x) = (x INSERT EMPTY)) /\ ((((node_set H) DELETE ((orbit_map n) x)) = ((node_set ((edge_walkup H) x)) DELETE ((orbit_map n') ((inverse n) x)))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= cnode_map f0 f1 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cnode_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> c= * * part corbit_map f2 f1 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c/\ c= * * part corbit_map f2 f1 * * part cINSERT f1 part cEMPTY c==> c= * * part cDELETE * part cnode_set f0 * * part corbit_map f2 f1 * * part cDELETE * part cnode_set cedge_walkup f0 f1 * * part corbit_map f3 cinverse f2 f1 c= cCARD * part cnode_set f0 c+ cCARD * part cnode_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- ((\t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1))) t2)
T * / c= c==> c~ f0 c~ b0 c==> b0 f0 f1
- |- ((((\e'. ((edge_map ((edge_walkup H) x)) = e')) e') ==> (?e'. ((edge_map ((edge_walkup H) x)) = e'))) = T)
T c= c==> * / c= * part cedge_map cedge_walkup f0 f1 b0 f2 c? / c= * part cedge_map cedge_walkup f0 f1 b0 cT
+ (FINITE (dart H)), ((dart H) = D), (x IN (dart H)) |- ((FINITE (dart H)) /\ (x IN (dart H)))
T c==> cFINITE * part cdart f0 c==> c= * part cdart f0 f1 c==> cIN f2 * part cdart f0 c/\ cFINITE * part cdart f0 cIN f2 * part cdart f0
+ |- (((!D. (!p. (((permutes p) D) ==> (!x. (((p x) = x) = (((inverse p) x) = x)))))) ==> ((\D. (!p. (((permutes p) D) ==> (!x. (((p x) = x) = (((inverse p) x) = x)))))) D)) = ((\D. (!p. (((permutes p) D) ==> (!x. (((p x) = x) = (((inverse p) x) = x)))))) D))
T c= c==> ! ! c==> cpermutes b1 b0 ! c= c= * b1 b2 b2 c= cinverse b1 b2 b2 * / ! c==> cpermutes b1 b0 ! c= c= * b1 b2 b2 c= cinverse b1 b2 b2 f0 * / ! c==> cpermutes b1 b0 ! c= c= * b1 b2 b2 c= cinverse b1 b2 b2 f0
+ (((node_map H) x) = x), ((node_map H) = n), ((node_map ((edge_walkup H) x)) = n'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)) |- ((((node_set H) DELETE (x INSERT EMPTY)) = ((node_set ((edge_walkup H) x)) DELETE (x INSERT EMPTY))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> c= cnode_map f0 f1 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cnode_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> c= * * part cDELETE * part cnode_set f0 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cnode_set cedge_walkup f0 f1 * * part cINSERT f1 part cEMPTY c= cCARD * part cnode_set f0 c+ cCARD * part cnode_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ ((x INSERT EMPTY) = ((orbit_map f') x')) |- ((~ (x' = x)) ==> F)
T c==> c= * * part cINSERT f0 part cEMPTY * * part corbit_map f1 f2 c==> c~ c= f2 f0 cF
+ |- ((\p. (((permutes p) D) ==> (!x. (((p x) = x) = (((inverse p) x) = x))))) p)
T * / c==> cpermutes b0 f0 ! c= c= * b0 b1 b1 c= cinverse b0 b1 b1 f1
+ |- ((\f. ((face_map H) = f)) (face_map H))
T * / c= * part cface_map f0 b0 * part cface_map f0
- |- (!n'. (((\n'. ((node_map ((edge_walkup H) x)) = n')) n') ==> (?n'. ((node_map ((edge_walkup H) x)) = n'))))
T c==> * / c= * part cnode_map cedge_walkup f0 f1 b0 f2 c? / c= * part cnode_map cedge_walkup f0 f1 b0
+ (((face_map H) x) = x), ((face_map H) = f), ((dart H) = D), (x IN (dart H)) |- ((x INSERT EMPTY) IN (face_set H))
T c==> c= cface_map f0 f1 f1 c==> c= * part cface_map f0 f2 c==> c= * part cdart f0 f3 c==> cIN f1 * part cdart f0 cIN * * part cINSERT f1 part cEMPTY * part cface_set f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (((!f. (((set_of_orbits D) f) = (GSPEC (\GEN%PVAR%5395. (?x. (((SETSPEC GEN%PVAR%5395) (x IN D)) ((orbit_map f) x))))))) ==> ((\f. (((set_of_orbits D) f) = (GSPEC (\GEN%PVAR%5395. (?x. (((SETSPEC GEN%PVAR%5395) (x IN D)) ((orbit_map f) x))))))) f)) = ((\f. (((set_of_orbits D) f) = (GSPEC (\GEN%PVAR%5395. (?x. (((SETSPEC GEN%PVAR%5395) (x IN D)) ((orbit_map f) x))))))) f))
T c= c==> ! c= * * part cset_of_orbits f0 b0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f0 * * part corbit_map b0 b2 * / c= * * part cset_of_orbits f0 b0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f0 * * part corbit_map b0 b2 f1 * / c= * * part cset_of_orbits f0 b0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f0 * * part corbit_map b0 b2 f1
+ |- ((\t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1)))) t1)
T * / ! c= c==> c~ b0 c~ b1 c==> b1 b0 f0
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((node_map H) = n), ((face_map H) = f), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((?e'. ((edge_map ((edge_walkup H) x)) = e')) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cnode_map f0 f3 c==> c= * part cface_map f0 f4 c==> c= * part cdart f0 f5 c==> c= * part cdart cedge_walkup f0 f1 f6 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c? / c= * part cedge_map cedge_walkup f0 f1 b0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- ((!x'. t) = t)
T c= ! f0 f0
+ |- ((?x'. ((x' IN D) /\ ((x INSERT EMPTY) = ((orbit_map f) x')))) = ((x INSERT EMPTY) IN ((set_of_orbits D) f)))
T c= c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part corbit_map f2 b0 cIN * * part cINSERT f1 part cEMPTY * * part cset_of_orbits f0 f2
- |- ((((\n'. ((node_map ((edge_walkup H) x)) = n')) n') ==> (?n'. ((node_map ((edge_walkup H) x)) = n'))) = T)
T c= c==> * / c= * part cnode_map cedge_walkup f0 f1 b0 f2 c? / c= * part cnode_map cedge_walkup f0 f1 b0 cT
- |- (!n. (((\n. ((node_map H) = n)) n) ==> (?n. ((node_map H) = n))))
T c==> * / c= * part cnode_map f0 b0 f1 c? / c= * part cnode_map f0 b0
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((node_map ((edge_walkup H) x)) = n'), ((face_map H) = f), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((((\f'. ((face_map ((edge_walkup H) x)) = f')) f') ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))) = T)
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cedge_map cedge_walkup f0 f1 f3 c==> c= * part cnode_map f0 f4 c==> c= * part cnode_map cedge_walkup f0 f1 f5 c==> c= * part cface_map f0 f6 c==> c= * part cdart f0 f7 c==> c= * part cdart cedge_walkup f0 f1 f8 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= c==> * / c= * part cface_map cedge_walkup f0 f1 b0 f9 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 cT
+ ((dart H) = D), (x IN (dart H)) |- ((((orbit_map f) x) = (x INSERT EMPTY)) ==> ((x IN D) /\ ((x INSERT EMPTY) = ((orbit_map f) x))))
T c==> c= * part cdart f0 f1 c==> cIN f2 * part cdart f0 c==> c= * * part corbit_map f3 f2 * * part cINSERT f2 part cEMPTY c/\ cIN f2 f1 c= * * part cINSERT f2 part cEMPTY * * part corbit_map f3 f2
+ |- (((!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ==> ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H)) = ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H))
T c= c==> ! c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0 * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- ((face_map H) = f) |- (((face_map H) = f) /\ (?f. ((face_map H) = f)))
T c==> c= * part cface_map f0 f1 c/\ c= * part cface_map f0 f1 c? / c= * part cface_map f0 b0
+ ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- ((\x. (((f x) = x) = (((inverse f) x) = x))) x)
T c==> c= * part cface_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cface_map f0 * part cdart f0 * / c= c= * f1 b0 b0 c= cinverse f1 b0 b0 f3
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!f. (!x. (!y. ((((orbit_map f) y) = (x INSERT EMPTY)) ==> (x = y))))) ==> ((\f. (!x. (!y. ((((orbit_map f) y) = (x INSERT EMPTY)) ==> (x = y))))) f)) = ((\f. (!x. (!y. ((((orbit_map f) y) = (x INSERT EMPTY)) ==> (x = y))))) f))
T c= c==> ! ! ! c==> c= * * part corbit_map b0 b2 * * part cINSERT b1 part cEMPTY c= b1 b2 * / ! ! c==> c= * * part corbit_map b0 b2 * * part cINSERT b1 part cEMPTY c= b1 b2 f0 * / ! ! c==> c= * * part corbit_map b0 b2 * * part cINSERT b1 part cEMPTY c= b1 b2 f0
+ (((edge_map H) x) = x), ((edge_map H) = e), ((dart H) = D), (x IN (dart H)) |- (?x'. ((x' IN D) /\ ((x INSERT EMPTY) = ((orbit_map e) x'))))
T c==> c= cedge_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cdart f0 f3 c==> cIN f1 * part cdart f0 c? / c/\ cIN b0 f3 c= * * part cINSERT f1 part cEMPTY * * part corbit_map f2 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((face_map H) = f), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((?n'. ((node_map ((edge_walkup H) x)) = n')) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cedge_map cedge_walkup f0 f1 f3 c==> c= * part cnode_map f0 f4 c==> c= * part cface_map f0 f5 c==> c= * part cdart f0 f6 c==> c= * part cdart cedge_walkup f0 f1 f7 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c? / c= * part cnode_map cedge_walkup f0 f1 b0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))), (x IN (dart H)), ((permutes (edge_map H)) (dart H)) |- ((planar_index H) = (planar_index ((edge_walkup H) x)))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (((edge_map H) x) = x), (((node_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((node_map H) = n), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (edge_map H)) (dart H)) |- (((x IN (dart H)) ==> (((edge_set H) DIFF (((orbit_map (edge_map H)) x) INSERT (((orbit_map (edge_map H)) ((node_map H) x)) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((orbit_map (edge_map ((edge_walkup H) x))) ((node_map H) x)) INSERT (((orbit_map (edge_map ((edge_walkup H) x))) ((inverse (edge_map H)) x)) INSERT EMPTY))))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cedge_map cedge_walkup f0 f1 f3 c==> c= * part cnode_map f0 f4 c==> c= * part cdart f0 f5 c==> c= * part cdart cedge_walkup f0 f1 f6 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> c==> cIN f1 * part cdart f0 c= * * part cDIFF * part cedge_set f0 * * part cINSERT * * part corbit_map * part cedge_map f0 f1 * * part cINSERT * * part corbit_map * part cedge_map f0 cnode_map f0 f1 part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f0 f1 * * part cINSERT * * part corbit_map * part cedge_map cedge_walkup f0 f1 cnode_map f0 f1 * * part cINSERT * * part corbit_map * part cedge_map cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 part cEMPTY c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), (x IN (dart H)) |- ((planar_index H) = (planar_index ((edge_walkup H) x)))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> cIN f1 * part cdart f0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- (((!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) ==> ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x)) = ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x))
T c= c==> ! c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1
+ |- (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))
T c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((\s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) s)
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 f0
- |- (!e'. (((\e'. ((edge_map ((edge_walkup H) x)) = e')) e') ==> (?e'. ((edge_map ((edge_walkup H) x)) = e'))))
T c==> * / c= * part cedge_map cedge_walkup f0 f1 b0 f2 c? / c= * part cedge_map cedge_walkup f0 f1 b0
+ |- (((!H. (!x. (((face H) x) = ((orbit_map (face_map H)) x)))) ==> ((\H. (!x. (((face H) x) = ((orbit_map (face_map H)) x)))) H)) = ((\H. (!x. (((face H) x) = ((orbit_map (face_map H)) x)))) H))
T c= c==> ! ! c= * * part cface b0 b1 * * part corbit_map * part cface_map b0 b1 * / ! c= * * part cface b0 b1 * * part corbit_map * part cface_map b0 b1 f0 * / ! c= * * part cface b0 b1 * * part corbit_map * part cface_map b0 b1 f0
+ |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ |- (((!H. (!x. (((isolated_dart H) x) = ((((edge_map H) x) = x) /\ ((((node_map H) x) = x) /\ (((face_map H) x) = x)))))) ==> ((\H. (!x. (((isolated_dart H) x) = ((((edge_map H) x) = x) /\ ((((node_map H) x) = x) /\ (((face_map H) x) = x)))))) H)) = ((\H. (!x. (((isolated_dart H) x) = ((((edge_map H) x) = x) /\ ((((node_map H) x) = x) /\ (((face_map H) x) = x)))))) H))
T c= c==> ! ! c= cisolated_dart b0 b1 c/\ c= cedge_map b0 b1 b1 c/\ c= cnode_map b0 b1 b1 c= cface_map b0 b1 b1 * / ! c= cisolated_dart b0 b1 c/\ c= cedge_map b0 b1 b1 c/\ c= cnode_map b0 b1 b1 c= cface_map b0 b1 b1 f0 * / ! c= cisolated_dart b0 b1 c/\ c= cedge_map b0 b1 b1 c/\ c= cnode_map b0 b1 b1 c= cface_map b0 b1 b1 f0
+ |- (((x = x') ==> (x' = x)) = ((x = x') ==> T))
T c= c==> c= f0 f1 c= f1 f0 c==> c= f0 f1 cT
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (!f. (((\f. ((face_map H) = f)) f) ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cnode_map f0 f3 c==> c= * part cdart f0 f4 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 ! c==> * / c= * part cface_map f0 b1 b0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((dart H) = D), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (((node_map H) = n) ==> ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cdart f0 f3 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> c= * part cnode_map f0 f4 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (((orbit_map f) x) = (x INSERT EMPTY)) |- ((x IN D) = ((x IN D) /\ ((x INSERT EMPTY) = ((orbit_map f) x))))
T c==> c= * * part corbit_map f0 f1 * * part cINSERT f1 part cEMPTY c= cIN f1 f2 c/\ cIN f1 f2 c= * * part cINSERT f1 part cEMPTY * * part corbit_map f0 f1
+ (((edge_set H) DELETE (x INSERT EMPTY)) = (edge_set ((edge_walkup H) x))) |- (((CARD (edge_set H)) = ((CARD ((edge_set H) DELETE (x INSERT EMPTY))) + (NUMERAL (BIT1 _0)))) = ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> c= * * part cDELETE * part cedge_set f0 * * part cINSERT f1 part cEMPTY * part cedge_set cedge_walkup f0 f1 c= c= cCARD * part cedge_set f0 c+ cCARD * * part cDELETE * part cedge_set f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT1 c_0 c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- (((FINITE (edge_set H)) ==> ((CARD (edge_set H)) = ((CARD ((edge_set H) DELETE (x INSERT EMPTY))) + (NUMERAL (BIT1 _0))))) ==> ((CARD (edge_set H)) = ((CARD ((edge_set H) DELETE (x INSERT EMPTY))) + (NUMERAL (BIT1 _0)))))
T c==> c==> cFINITE * part cedge_set f0 c= cCARD * part cedge_set f0 c+ cCARD * * part cDELETE * part cedge_set f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT1 c_0 c= cCARD * part cedge_set f0 c+ cCARD * * part cDELETE * part cedge_set f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT1 c_0
- |- (((dart ((edge_walkup H) x)) = D') ==> (?D'. ((dart ((edge_walkup H) x)) = D')))
T c==> c= * part cdart cedge_walkup f0 f1 f2 c? / c= * part cdart cedge_walkup f0 f1 b0
+ (((edge_map H) x) = x), ((edge_map H) = e), ((dart H) = D), (x IN (dart H)) |- ((\x'. ((x' IN D) /\ ((x INSERT EMPTY) = ((orbit_map e) x')))) x)
T c==> c= cedge_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cdart f0 f3 c==> cIN f1 * part cdart f0 * / c/\ cIN b0 f3 c= * * part cINSERT f1 part cEMPTY * * part corbit_map f2 b0 f1
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((\f. (((set_of_orbits D) f) = (GSPEC (\GEN%PVAR%5395. (?x. (((SETSPEC GEN%PVAR%5395) (x IN D)) ((orbit_map f) x))))))) f)
T * / c= * * part cset_of_orbits f0 b0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f0 * * part corbit_map b0 b2 f1
+ ((edge_map ((edge_walkup H) x)) = e'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D') |- (~ ((x INSERT EMPTY) IN (edge_set ((edge_walkup H) x))))
T c==> c= * part cedge_map cedge_walkup f0 f1 f2 c==> c= * part cdart f0 f3 c==> c= * part cdart cedge_walkup f0 f1 f4 c~ cIN * * part cINSERT f1 part cEMPTY * part cedge_set cedge_walkup f0 f1
+ |- ((((real_add (real_of_num (number_of_edges H))) ((real_add (real_of_num (number_of_nodes H))) ((real_sub ((real_sub (real_of_num (number_of_faces H))) (real_of_num (CARD (dart H))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components H)))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes ((edge_walkup H) x)))) ((real_sub ((real_sub (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (CARD (dart ((edge_walkup H) x)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x)))))))) = ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c= c= creal_add creal_of_num cnumber_of_edges f0 creal_add creal_of_num cnumber_of_nodes f0 creal_sub creal_sub creal_of_num cnumber_of_faces f0 creal_of_num cCARD * part cdart f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components f0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_add creal_of_num cnumber_of_nodes cedge_walkup f0 f1 creal_sub creal_sub creal_of_num cnumber_of_faces cedge_walkup f0 f1 creal_of_num cCARD * part cdart cedge_walkup f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f1 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((f x) = x) = (((inverse f) x) = x))
T c==> c= * part cface_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cface_map f0 * part cdart f0 c= c= * f1 f3 f3 c= cinverse f1 f3 f3
- |- ((?x'. t) = t)
T c= c? / f0 f0
+ |- ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x)
T * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1
- |- (((face_map ((edge_walkup H) x)) = f') ==> (?f'. ((face_map ((edge_walkup H) x)) = f')))
T c==> c= * part cface_map cedge_walkup f0 f1 f2 c? / c= * part cface_map cedge_walkup f0 f1 b0
- (x' IN D) |- ((x' IN D) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ |- (((dart H) = (dart H)) = ((\D. ((dart H) = D)) (dart H)))
T c= c= * part cdart f0 * part cdart f0 * / c= * part cdart f0 b0 * part cdart f0
+ ((dart H) = D) |- ((dart ((edge_walkup H) x)) = (D DELETE x))
T c==> c= * part cdart f0 f1 c= * part cdart cedge_walkup f0 f2 * * part cDELETE f1 f2
+ |- ((\x. ((x IN (dart H)) ==> (((comb_component ((edge_walkup H) x)) x) = (x INSERT EMPTY)))) x)
T * / c==> cIN b0 * part cdart f0 c= * * part ccomb_component cedge_walkup f0 b0 b0 * * part cINSERT b0 part cEMPTY f1
+ |- ((((x IN (dart H)) ==> (((edge_set H) DIFF (((edge H) x) INSERT (((edge H) ((node_map H) x)) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((edge ((edge_walkup H) x)) ((node_map H) x)) INSERT (((edge ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY))))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))) = ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c= c==> c==> cIN f0 * part cdart f1 c= * * part cDIFF * part cedge_set f1 * * part cINSERT * * part cedge f1 f0 * * part cINSERT * * part cedge f1 cnode_map f1 f0 part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f1 f0 * * part cINSERT * * part cedge cedge_walkup f1 f0 cnode_map f1 f0 * * part cINSERT * * part cedge cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 part cEMPTY c= cCARD * part cedge_set f1 c+ cCARD * part cedge_set cedge_walkup f1 f0 cNUMERAL cBIT1 c_0 c= cCARD * part cedge_set f1 c+ cCARD * part cedge_set cedge_walkup f1 f0 cNUMERAL cBIT1 c_0
+ |- (((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) ==> ((\s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) (face_set H))) = ((\s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) (face_set H)))
T c= c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 * part cface_set f0 * / ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 * part cface_set f0
+ ((dart H) = D), (((comb_component ((edge_walkup H) x)) x) = ((comb_component ((edge_walkup H) x)) x')), (x IN (dart H)) |- ((~ (((comb_component ((edge_walkup H) x)) x') = (x INSERT EMPTY))) = (((x IN (dart H)) ==> (((comb_component ((edge_walkup H) x)) x) = (x INSERT EMPTY))) ==> F))
T c==> c= * part cdart f0 f1 c==> c= * * part ccomb_component cedge_walkup f0 f2 f2 * * part ccomb_component cedge_walkup f0 f2 f3 c==> cIN f2 * part cdart f0 c= c~ c= * * part ccomb_component cedge_walkup f0 f2 f3 * * part cINSERT f2 part cEMPTY c==> c==> cIN f2 * part cdart f0 c= * * part ccomb_component cedge_walkup f0 f2 f2 * * part cINSERT f2 part cEMPTY cF
+ |- (~ ((x INSERT EMPTY) IN ((set_of_orbits (D DELETE x)) f')))
T c~ cIN * * part cINSERT f0 part cEMPTY * * part cset_of_orbits * * part cDELETE f1 f0 f2
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((node_map H) = n), ((face_map H) = f), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((((\e'. ((edge_map ((edge_walkup H) x)) = e')) e') ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))) = T)
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cnode_map f0 f3 c==> c= * part cface_map f0 f4 c==> c= * part cdart f0 f5 c==> c= * part cdart cedge_walkup f0 f1 f6 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= c==> * / c= * part cedge_map cedge_walkup f0 f1 b0 f7 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1 cT
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ (((edge_map H) x) = x), ((edge_map H) = e), ((dart H) = D), (x IN (dart H)) |- ((x INSERT EMPTY) IN ((set_of_orbits (dart H)) (edge_map H)))
T c==> c= cedge_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cdart f0 f3 c==> cIN f1 * part cdart f0 cIN * * part cINSERT f1 part cEMPTY * * part cset_of_orbits * part cdart f0 * part cedge_map f0
+ |- ((((x = x') = (x = x')) ==> (((x = x') ==> ((x' = x) = q')) ==> (((x = x') ==> (x' = x)) = ((x = x') ==> q')))) = (((x = x') ==> ((x' = x) = q')) ==> (((x = x') ==> (x' = x)) = ((x = x') ==> q'))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= c= f1 f0 f2 c= c==> c= f0 f1 c= f1 f0 c==> c= f0 f1 f2 c==> c==> c= f0 f1 c= c= f1 f0 f2 c= c==> c= f0 f1 c= f1 f0 c==> c= f0 f1 f2
+ (((edge_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (((orbit_map e) x) = (x INSERT EMPTY)), (x IN (dart H)), ((permutes (edge_map H)) (dart H)) |- ((((orbit_map e) x) = (x INSERT EMPTY)) /\ ((((edge_set H) DIFF (((orbit_map e) x) INSERT (((orbit_map e) x) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((orbit_map e') x) INSERT (((orbit_map e') ((inverse e) x)) INSERT EMPTY)))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= cedge_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cedge_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> c= * * part corbit_map f2 f1 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c/\ c= * * part corbit_map f2 f1 * * part cINSERT f1 part cEMPTY c==> c= * * part cDIFF * part cedge_set f0 * * part cINSERT * * part corbit_map f2 f1 * * part cINSERT * * part corbit_map f2 f1 part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f0 f1 * * part cINSERT * * part corbit_map f3 f1 * * part cINSERT * * part corbit_map f3 cinverse f2 f1 part cEMPTY c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- ((((face_map ((edge_walkup H) x)) x) = x) /\ ((((face_map ((edge_walkup H) x)) ((inverse (face_map H)) x)) = ((face_map H) x)) /\ (((~ (x = x)) /\ (~ (x = ((inverse (face_map H)) x)))) ==> (((face_map ((edge_walkup H) x)) x) = ((face_map H) x)))))
T c/\ c= cface_map cedge_walkup f0 f1 f1 f1 c/\ c= cface_map cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cface_map f0 f1 c==> c/\ c~ c= f1 f1 c~ c= f1 cinverse * part cface_map f0 f1 c= cface_map cedge_walkup f0 f1 f1 cface_map f0 f1
+ |- (((((orbit_map e) x) = (x INSERT EMPTY)) ==> ((((edge_set H) DIFF (((orbit_map e) x) INSERT (((orbit_map e) x) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((orbit_map e') x) INSERT (((orbit_map e') ((inverse e) x)) INSERT EMPTY)))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) = (((e x) = x) ==> ((((edge_set H) DIFF (((orbit_map e) x) INSERT (((orbit_map e) x) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((orbit_map e') x) INSERT (((orbit_map e') ((inverse e) x)) INSERT EMPTY)))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))))
T c= c==> c= * * part corbit_map f0 f1 * * part cINSERT f1 part cEMPTY c==> c= * * part cDIFF * part cedge_set f2 * * part cINSERT * * part corbit_map f0 f1 * * part cINSERT * * part corbit_map f0 f1 part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f2 f1 * * part cINSERT * * part corbit_map f3 f1 * * part cINSERT * * part corbit_map f3 cinverse f0 f1 part cEMPTY c= cCARD * part cedge_set f2 c+ cCARD * part cedge_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0 c==> c= * f0 f1 f1 c==> c= * * part cDIFF * part cedge_set f2 * * part cINSERT * * part corbit_map f0 f1 * * part cINSERT * * part corbit_map f0 f1 part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f2 f1 * * part cINSERT * * part corbit_map f3 f1 * * part cINSERT * * part corbit_map f3 cinverse f0 f1 part cEMPTY c= cCARD * part cedge_set f2 c+ cCARD * part cedge_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0
+ ((x INSERT EMPTY) = ((orbit_map f') x')) |- (((((orbit_map f') x') = (x INSERT EMPTY)) ==> (x = x')) = (x = x'))
T c==> c= * * part cINSERT f0 part cEMPTY * * part corbit_map f1 f2 c= c==> c= * * part corbit_map f1 f2 * * part cINSERT f0 part cEMPTY c= f0 f2 c= f0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((node_map H) x) = x), ((node_map H) = n), ((node_map ((edge_walkup H) x)) = n'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)) |- ((((orbit_map n') x) = (x INSERT EMPTY)) ==> ((((node_set H) DELETE (x INSERT EMPTY)) = ((node_set ((edge_walkup H) x)) DELETE ((orbit_map n') x))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= cnode_map f0 f1 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cnode_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> c= * * part corbit_map f3 f1 * * part cINSERT f1 part cEMPTY c==> c= * * part cDELETE * part cnode_set f0 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cnode_set cedge_walkup f0 f1 * * part corbit_map f3 f1 c= cCARD * part cnode_set f0 c+ cCARD * part cnode_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- (((!H. (!x. ((x IN (dart H)) ==> (((node_set H) DELETE ((node H) x)) = ((node_set ((edge_walkup H) x)) DELETE ((node ((edge_walkup H) x)) ((inverse (node_map H)) x))))))) ==> ((\H. (!x. ((x IN (dart H)) ==> (((node_set H) DELETE ((node H) x)) = ((node_set ((edge_walkup H) x)) DELETE ((node ((edge_walkup H) x)) ((inverse (node_map H)) x))))))) H)) = ((\H. (!x. ((x IN (dart H)) ==> (((node_set H) DELETE ((node H) x)) = ((node_set ((edge_walkup H) x)) DELETE ((node ((edge_walkup H) x)) ((inverse (node_map H)) x))))))) H))
T c= c==> ! ! c==> cIN b1 * part cdart b0 c= * * part cDELETE * part cnode_set b0 * * part cnode b0 b1 * * part cDELETE * part cnode_set cedge_walkup b0 b1 * * part cnode cedge_walkup b0 b1 cinverse * part cnode_map b0 b1 * / ! c==> cIN b1 * part cdart b0 c= * * part cDELETE * part cnode_set b0 * * part cnode b0 b1 * * part cDELETE * part cnode_set cedge_walkup b0 b1 * * part cnode cedge_walkup b0 b1 cinverse * part cnode_map b0 b1 f0 * / ! c==> cIN b1 * part cdart b0 c= * * part cDELETE * part cnode_set b0 * * part cnode b0 b1 * * part cDELETE * part cnode_set cedge_walkup b0 b1 * * part cnode cedge_walkup b0 b1 cinverse * part cnode_map b0 b1 f0
+ |- (((real_add ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add ((real_add (real_of_num (number_of_nodes ((edge_walkup H) x)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((real_sub ((real_add (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (CARD (D DELETE x)))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add (real_of_num (number_of_components ((edge_walkup H) x)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes ((edge_walkup H) x)))) ((real_sub ((real_sub (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (CARD (D DELETE x))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x))))))))
T c= creal_add creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_add creal_of_num cnumber_of_nodes cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_sub creal_add creal_of_num cnumber_of_faces cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cCARD * * part cDELETE f2 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num cnumber_of_components cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_add creal_of_num cnumber_of_nodes cedge_walkup f0 f1 creal_sub creal_sub creal_of_num cnumber_of_faces cedge_walkup f0 f1 creal_of_num cCARD * * part cDELETE f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f1
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((node_map H) = n), ((face_map H) = f), ((dart H) = D), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- (!D'. (((\D'. ((dart ((edge_walkup H) x)) = D')) D') ==> ((planar_index H) = (planar_index ((edge_walkup H) x)))))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cnode_map f0 f3 c==> c= * part cface_map f0 f4 c==> c= * part cdart f0 f5 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 ! c==> * / c= * part cdart cedge_walkup f0 f1 b1 b0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- ((((node_map ((edge_walkup H) x)) x) = x) /\ ((((node_map ((edge_walkup H) x)) ((inverse (node_map H)) x)) = ((node_map H) x)) /\ (((~ (x = x)) /\ (~ (x = ((inverse (node_map H)) x)))) ==> (((node_map ((edge_walkup H) x)) x) = ((node_map H) x)))))
T c/\ c= cnode_map cedge_walkup f0 f1 f1 f1 c/\ c= cnode_map cedge_walkup f0 f1 cinverse * part cnode_map f0 f1 cnode_map f0 f1 c==> c/\ c~ c= f1 f1 c~ c= f1 cinverse * part cnode_map f0 f1 c= cnode_map cedge_walkup f0 f1 f1 cnode_map f0 f1
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((edge_map H) = e), ((node_map H) = n), ((face_map H) = f), ((dart H) = D), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)), ((\D'. ((dart ((edge_walkup H) x)) = D')) D') |- (((\D'. ((dart ((edge_walkup H) x)) = D')) D') /\ ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cnode_map f0 f3 c==> c= * part cface_map f0 f4 c==> c= * part cdart f0 f5 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> * / c= * part cdart cedge_walkup f0 f1 b0 f6 c/\ * / c= * part cdart cedge_walkup f0 f1 b0 f6 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- (((FINITE (face_set H)) /\ ((x INSERT EMPTY) IN (face_set H))) ==> ((CARD (face_set H)) = ((CARD ((face_set H) DELETE (x INSERT EMPTY))) + (NUMERAL (BIT1 _0)))))
T c==> c/\ cFINITE * part cface_set f0 cIN * * part cINSERT f1 part cEMPTY * part cface_set f0 c= cCARD * part cface_set f0 c+ cCARD * * part cDELETE * part cface_set f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT1 c_0
+ |- (!x'. (~ (((x' IN D) /\ (~ (x' = x))) /\ ((x INSERT EMPTY) = ((orbit_map f') x')))))
T c~ c/\ c/\ cIN f0 f1 c~ c= f0 f2 c= * * part cINSERT f2 part cEMPTY * * part corbit_map f3 f0
+ |- ((x = x') ==> ((x' = x) = T))
T c==> c= f0 f1 c= c= f1 f0 cT
+ (((node_map H) x) = x), ((node_map H) = n), ((dart H) = D), (x IN (dart H)) |- ((x INSERT EMPTY) IN (node_set H))
T c==> c= cnode_map f0 f1 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cdart f0 f3 c==> cIN f1 * part cdart f0 cIN * * part cINSERT f1 part cEMPTY * part cnode_set f0
+ |- (((!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y))))) ==> ((\y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y))))) y)) = ((\y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y))))) y))
T c= c==> ! c= cIN f0 * * part cDELETE f1 b0 c/\ cIN f0 f1 c~ c= f0 b0 * / c= cIN f0 * * part cDELETE f1 b0 c/\ cIN f0 f1 c~ c= f0 b0 f2 * / c= cIN f0 * * part cDELETE f1 b0 c/\ cIN f0 f1 c~ c= f0 b0 f2
+ (((edge_map H) x) = x), (((node_map H) x) = x), ((edge_map H) = e), ((node_map H) = n), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (edge_map H)) (dart H)) |- ((CARD (set_of_components H)) = ((CARD (set_of_components ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))
T c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cnode_map f0 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c= cCARD * part cset_of_components f0 c+ cCARD * part cset_of_components cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- ((((comb_component H) x) IN ((set_part_components H) (dart H))) = (((comb_component H) x) IN (set_of_components H)))
T c= cIN * * part ccomb_component f0 f1 * * part cset_part_components f0 * part cdart f0 cIN * * part ccomb_component f0 f1 * part cset_of_components f0
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))), (x IN (dart H)) |- ((planar_index H) = (planar_index ((edge_walkup H) x)))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> cIN f1 * part cdart f0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (((face_map H) x) = x), ((face_map H) = f), ((face_map ((edge_walkup H) x)) = f'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)), ((permutes (face_map H)) (dart H)) |- ((number_of_faces H) = ((number_of_faces ((edge_walkup H) x)) + (NUMERAL (BIT1 _0))))
T c==> c= cface_map f0 f1 f1 c==> c= * part cface_map f0 f2 c==> c= * part cface_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= cnumber_of_faces f0 c+ cnumber_of_faces cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ (((inverse f) x) = x) |- (((((face_set H) DELETE (x INSERT EMPTY)) = ((face_set ((edge_walkup H) x)) DELETE ((orbit_map f') x))) ==> ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))) = ((((face_set H) DELETE (x INSERT EMPTY)) = ((face_set ((edge_walkup H) x)) DELETE ((orbit_map f') ((inverse f) x)))) ==> ((CARD (face_set H)) = ((CARD (face_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= cinverse f0 f1 f1 c= c==> c= * * part cDELETE * part cface_set f2 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cface_set cedge_walkup f2 f1 * * part corbit_map f3 f1 c= cCARD * part cface_set f2 c+ cCARD * part cface_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0 c==> c= * * part cDELETE * part cface_set f2 * * part cINSERT f1 part cEMPTY * * part cDELETE * part cface_set cedge_walkup f2 f1 * * part corbit_map f3 cinverse f0 f1 c= cCARD * part cface_set f2 c+ cCARD * part cface_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0
+ (((edge_map H) x) = x), ((edge_map H) = e), ((edge_map ((edge_walkup H) x)) = e'), ((dart H) = D), ((dart ((edge_walkup H) x)) = D'), (x IN (dart H)) |- ((((orbit_map e') x) = (x INSERT EMPTY)) ==> ((((edge_set H) DIFF ((x INSERT EMPTY) INSERT ((x INSERT EMPTY) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((orbit_map e') x) INSERT (((orbit_map e') x) INSERT EMPTY)))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= cedge_map f0 f1 f1 c==> c= * part cedge_map f0 f2 c==> c= * part cedge_map cedge_walkup f0 f1 f3 c==> c= * part cdart f0 f4 c==> c= * part cdart cedge_walkup f0 f1 f5 c==> cIN f1 * part cdart f0 c==> c= * * part corbit_map f3 f1 * * part cINSERT f1 part cEMPTY c==> c= * * part cDIFF * part cedge_set f0 * * part cINSERT * * part cINSERT f1 part cEMPTY * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f0 f1 * * part cINSERT * * part corbit_map f3 f1 * * part cINSERT * * part corbit_map f3 f1 part cEMPTY c= cCARD * part cedge_set f0 c+ cCARD * part cedge_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- ((\n. ((real_of_num (m + n)) = ((real_add (real_of_num m)) (real_of_num n)))) n)
T * / c= creal_of_num c+ f0 b0 creal_add creal_of_num f0 creal_of_num b0 f1
- ((edge_map ((edge_walkup H) x)) = e'), ((dart ((edge_walkup H) x)) = D'), ((permutes (edge_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) |- ((permutes e') D')
T c==> c= * part cedge_map cedge_walkup f0 f1 f2 c==> c= * part cdart cedge_walkup f0 f1 f3 c==> cpermutes * part cedge_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 cpermutes f2 f3
+ |- (((((orbit_map e') x) = (x INSERT EMPTY)) ==> ((((edge_set H) DIFF ((x INSERT EMPTY) INSERT ((x INSERT EMPTY) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((orbit_map e') x) INSERT (((orbit_map e') x) INSERT EMPTY)))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) = (((e' x) = x) ==> ((((edge_set H) DIFF ((x INSERT EMPTY) INSERT ((x INSERT EMPTY) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((orbit_map e') x) INSERT (((orbit_map e') x) INSERT EMPTY)))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))))
T c= c==> c= * * part corbit_map f0 f1 * * part cINSERT f1 part cEMPTY c==> c= * * part cDIFF * part cedge_set f2 * * part cINSERT * * part cINSERT f1 part cEMPTY * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f2 f1 * * part cINSERT * * part corbit_map f0 f1 * * part cINSERT * * part corbit_map f0 f1 part cEMPTY c= cCARD * part cedge_set f2 c+ cCARD * part cedge_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0 c==> c= * f0 f1 f1 c==> c= * * part cDIFF * part cedge_set f2 * * part cINSERT * * part cINSERT f1 part cEMPTY * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f2 f1 * * part cINSERT * * part corbit_map f0 f1 * * part cINSERT * * part corbit_map f0 f1 part cEMPTY c= cCARD * part cedge_set f2 c+ cCARD * part cedge_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), ((dart H) = D), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)), ((\e. ((edge_map H) = e)) e) |- (((\e. ((edge_map H) = e)) e) /\ ((planar_index H) = (planar_index ((edge_walkup H) x))))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> c= * part cdart f0 f2 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c==> * / c= * part cedge_map f0 b0 f3 c/\ * / c= * part cedge_map f0 b0 f3 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ (~ (((real_add ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add ((real_add (real_of_num (number_of_nodes ((edge_walkup H) x)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((real_sub ((real_add (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (CARD (D DELETE x)))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add (real_of_num (number_of_components ((edge_walkup H) x)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes ((edge_walkup H) x)))) ((real_sub ((real_sub (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (CARD (D DELETE x))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x))))))))) |- ((~ (((real_add ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add ((real_add (real_of_num (number_of_nodes ((edge_walkup H) x)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_sub ((real_sub ((real_add (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num (CARD (D DELETE x)))) (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add (real_of_num (number_of_components ((edge_walkup H) x)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = ((real_add (real_of_num (number_of_edges ((edge_walkup H) x)))) ((real_add (real_of_num (number_of_nodes ((edge_walkup H) x)))) ((real_sub ((real_sub (real_of_num (number_of_faces ((edge_walkup H) x)))) (real_of_num (CARD (D DELETE x))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (number_of_components ((edge_walkup H) x))))))))) /\ F)
T c==> c~ c= creal_add creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_add creal_of_num cnumber_of_nodes cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_sub creal_add creal_of_num cnumber_of_faces cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cCARD * * part cDELETE f2 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num cnumber_of_components cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_add creal_of_num cnumber_of_nodes cedge_walkup f0 f1 creal_sub creal_sub creal_of_num cnumber_of_faces cedge_walkup f0 f1 creal_of_num cCARD * * part cDELETE f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f1 c/\ c~ c= creal_add creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_add creal_of_num cnumber_of_nodes cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_sub creal_sub creal_add creal_of_num cnumber_of_faces cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cCARD * * part cDELETE f2 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_of_num cnumber_of_components cedge_walkup f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num cnumber_of_edges cedge_walkup f0 f1 creal_add creal_of_num cnumber_of_nodes cedge_walkup f0 f1 creal_sub creal_sub creal_of_num cnumber_of_faces cedge_walkup f0 f1 creal_of_num cCARD * * part cDELETE f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cnumber_of_components cedge_walkup f0 f1 cF
+ |- (((((orbit_map n) x) = (x INSERT EMPTY)) ==> ((((node_set H) DELETE ((orbit_map n) x)) = ((node_set ((edge_walkup H) x)) DELETE ((orbit_map n') ((inverse n) x)))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) = (((n x) = x) ==> ((((node_set H) DELETE ((orbit_map n) x)) = ((node_set ((edge_walkup H) x)) DELETE ((orbit_map n') ((inverse n) x)))) ==> ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))))
T c= c==> c= * * part corbit_map f0 f1 * * part cINSERT f1 part cEMPTY c==> c= * * part cDELETE * part cnode_set f2 * * part corbit_map f0 f1 * * part cDELETE * part cnode_set cedge_walkup f2 f1 * * part corbit_map f3 cinverse f0 f1 c= cCARD * part cnode_set f2 c+ cCARD * part cnode_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0 c==> c= * f0 f1 f1 c==> c= * * part cDELETE * part cnode_set f2 * * part corbit_map f0 f1 * * part cDELETE * part cnode_set cedge_walkup f2 f1 * * part corbit_map f3 cinverse f0 f1 c= cCARD * part cnode_set f2 c+ cCARD * part cnode_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0
+ |- (((!x. ((x IN (dart H)) ==> (((edge_set H) DIFF (((edge H) x) INSERT (((edge H) ((node_map H) x)) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((edge ((edge_walkup H) x)) ((node_map H) x)) INSERT (((edge ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY)))))) ==> ((\x. ((x IN (dart H)) ==> (((edge_set H) DIFF (((edge H) x) INSERT (((edge H) ((node_map H) x)) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((edge ((edge_walkup H) x)) ((node_map H) x)) INSERT (((edge ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY)))))) x)) = ((\x. ((x IN (dart H)) ==> (((edge_set H) DIFF (((edge H) x) INSERT (((edge H) ((node_map H) x)) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((edge ((edge_walkup H) x)) ((node_map H) x)) INSERT (((edge ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY)))))) x))
T c= c==> ! c==> cIN b0 * part cdart f0 c= * * part cDIFF * part cedge_set f0 * * part cINSERT * * part cedge f0 b0 * * part cINSERT * * part cedge f0 cnode_map f0 b0 part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f0 b0 * * part cINSERT * * part cedge cedge_walkup f0 b0 cnode_map f0 b0 * * part cINSERT * * part cedge cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 part cEMPTY * / c==> cIN b0 * part cdart f0 c= * * part cDIFF * part cedge_set f0 * * part cINSERT * * part cedge f0 b0 * * part cINSERT * * part cedge f0 cnode_map f0 b0 part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f0 b0 * * part cINSERT * * part cedge cedge_walkup f0 b0 cnode_map f0 b0 * * part cINSERT * * part cedge cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 part cEMPTY f1 * / c==> cIN b0 * part cdart f0 c= * * part cDIFF * part cedge_set f0 * * part cINSERT * * part cedge f0 b0 * * part cINSERT * * part cedge f0 cnode_map f0 b0 part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f0 b0 * * part cINSERT * * part cedge cedge_walkup f0 b0 cnode_map f0 b0 * * part cINSERT * * part cedge cedge_walkup f0 b0 cinverse * part cedge_map f0 b0 part cEMPTY f1
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (((orbit_map e') x) = (x INSERT EMPTY)) |- (((((edge_set H) DIFF ((x INSERT EMPTY) INSERT ((x INSERT EMPTY) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF ((x INSERT EMPTY) INSERT ((x INSERT EMPTY) INSERT EMPTY)))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))) = ((((edge_set H) DIFF ((x INSERT EMPTY) INSERT ((x INSERT EMPTY) INSERT EMPTY))) = ((edge_set ((edge_walkup H) x)) DIFF (((orbit_map e') x) INSERT (((orbit_map e') x) INSERT EMPTY)))) ==> ((CARD (edge_set H)) = ((CARD (edge_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))))
T c==> c= * * part corbit_map f0 f1 * * part cINSERT f1 part cEMPTY c= c==> c= * * part cDIFF * part cedge_set f2 * * part cINSERT * * part cINSERT f1 part cEMPTY * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f2 f1 * * part cINSERT * * part cINSERT f1 part cEMPTY * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY c= cCARD * part cedge_set f2 c+ cCARD * part cedge_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0 c==> c= * * part cDIFF * part cedge_set f2 * * part cINSERT * * part cINSERT f1 part cEMPTY * * part cINSERT * * part cINSERT f1 part cEMPTY part cEMPTY * * part cDIFF * part cedge_set cedge_walkup f2 f1 * * part cINSERT * * part corbit_map f0 f1 * * part cINSERT * * part corbit_map f0 f1 part cEMPTY c= cCARD * part cedge_set f2 c+ cCARD * part cedge_set cedge_walkup f2 f1 cNUMERAL cBIT1 c_0
+ ((dart H) = D), (((orbit_map f) x) = (x INSERT EMPTY)), (x IN (dart H)) |- ((x IN D) /\ ((x INSERT EMPTY) = ((orbit_map f) x)))
T c==> c= * part cdart f0 f1 c==> c= * * part corbit_map f2 f3 * * part cINSERT f3 part cEMPTY c==> cIN f3 * part cdart f0 c/\ cIN f3 f1 c= * * part cINSERT f3 part cEMPTY * * part corbit_map f2 f3
+ (((node_set H) DELETE (x INSERT EMPTY)) = (node_set ((edge_walkup H) x))), ((x INSERT EMPTY) IN (node_set H)) |- ((((node_set H) DELETE (x INSERT EMPTY)) = (node_set ((edge_walkup H) x))) /\ ((CARD (node_set H)) = ((CARD (node_set ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> c= * * part cDELETE * part cnode_set f0 * * part cINSERT f1 part cEMPTY * part cnode_set cedge_walkup f0 f1 c==> cIN * * part cINSERT f1 part cEMPTY * part cnode_set f0 c/\ c= * * part cDELETE * part cnode_set f0 * * part cINSERT f1 part cEMPTY * part cnode_set cedge_walkup f0 f1 c= cCARD * part cnode_set f0 c+ cCARD * part cnode_set cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ (FINITE (dart H)), (((edge_map H) x) = x), (((node_map H) x) = x), (((face_map H) x) = x), (x IN (dart H)), ((permutes (edge_map H)) (dart H)), ((permutes (node_map H)) (dart H)), ((permutes (face_map H)) (dart H)) |- ((planar_index H) = (planar_index ((edge_walkup H) x)))
T c==> cFINITE * part cdart f0 c==> c= cedge_map f0 f1 f1 c==> c= cnode_map f0 f1 f1 c==> c= cface_map f0 f1 f1 c==> cIN f1 * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 c==> cpermutes * part cface_map f0 * part cdart f0 c= cplanar_index f0 cplanar_index cedge_walkup f0 f1
+ |- (T = (((FINITE (set_of_components H)) ==> ((CARD (set_of_components H)) = ((CARD ((set_of_components H) DELETE ((comb_component H) x))) + (NUMERAL (BIT1 _0))))) ==> ((CARD (set_of_components H)) = ((CARD ((set_of_components H) DELETE ((comb_component H) x))) + (NUMERAL (BIT1 _0))))))
T c= cT c==> c==> cFINITE * part cset_of_components f0 c= cCARD * part cset_of_components f0 c+ cCARD * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 cNUMERAL cBIT1 c_0 c= cCARD * part cset_of_components f0 c+ cCARD * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 cNUMERAL cBIT1 c_0
+ |- (((!s. ((~ (x IN s)) = ((s DELETE x) = s))) ==> ((\s. ((~ (x IN s)) = ((s DELETE x) = s))) s)) = ((\s. ((~ (x IN s)) = ((s DELETE x) = s))) s))
T c= c==> ! c= c~ cIN f0 b0 c= * * part cDELETE b0 f0 b0 * / c= c~ cIN f0 b0 c= * * part cDELETE b0 f0 b0 f1 * / c= c~ cIN f0 b0 c= * * part cDELETE b0 f0 b0 f1
+ |- (((!t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1)))) ==> ((\t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1)))) t1)) = ((\t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1)))) t1))
T c= c==> ! ! c= c==> c~ b0 c~ b1 c==> b1 b0 * / ! c= c==> c~ b0 c~ b1 c==> b1 b0 f0 * / ! c= c==> c~ b0 c~ b1 c==> b1 b0 f0
+ |- (?D'. ((dart ((edge_walkup H) x)) = D'))
T c? / c= * part cdart cedge_walkup f0 f1 b0
- |- (((dart ((edge_walkup H) x)) = D') = ((\D'. ((dart ((edge_walkup H) x)) = D')) D'))
T c= c= * part cdart cedge_walkup f0 f1 f2 * / c= * part cdart cedge_walkup f0 f1 b0 f2
- ((dart ((edge_walkup H) x)) = D') |- (((dart ((edge_walkup H) x)) = D') /\ (?D'. ((dart ((edge_walkup H) x)) = D')))
T c==> c= * part cdart cedge_walkup f0 f1 f2 c/\ c= * part cdart cedge_walkup f0 f1 f2 c? / c= * part cdart cedge_walkup f0 f1 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((face_map H) = f) = ((\f. ((face_map H) = f)) f))
T c= c= * part cface_map f0 f1 * / c= * part cface_map f0 b0 f1
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((node_map H) = n) ==> (?n. ((node_map H) = n)))
T c==> c= * part cnode_map f0 f1 c? / c= * part cnode_map f0 b0
- ((face_map ((edge_walkup H) x)) = f') |- (((face_map ((edge_walkup H) x)) = f') /\ (?f'. ((face_map ((edge_walkup H) x)) = f')))
T c==> c= * part cface_map cedge_walkup f0 f1 f2 c/\ c= * part cface_map cedge_walkup f0 f1 f2 c? / c= * part cface_map cedge_walkup f0 f1 b0
- ((edge_map H) = e), ((node_map H) = n), (((edge_map H) o ((node_map H) o (face_map H))) = I) |- ((e o (n o (face_map H))) = I)
T c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co f1 * * part co f2 * part cface_map f0 part cI
- |- ((?D'. ((dart ((edge_walkup H) x)) = D')) ==> (?D'. ((dart ((edge_walkup H) x)) = D')))
T c==> c? / c= * part cdart cedge_walkup f0 f1 b0 c? / c= * part cdart cedge_walkup f0 f1 b0
- |- (((dart H) = D) ==> (?D. ((dart H) = D)))
T c==> c= * part cdart f0 f1 c? / c= * part cdart f0 b0
- (~ (x' = x)) |- (((~ (x = x')) ==> ((x = x') = F)) = ((x = x') = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- ((edge_map ((edge_walkup H) x)) = e') |- ((\e'. ((edge_map ((edge_walkup H) x)) = e')) e')
T c==> c= * part cedge_map cedge_walkup f0 f1 f2 * / c= * part cedge_map cedge_walkup f0 f1 b0 f2
- |- (((!x. (((\f'. ((face_map ((edge_walkup H) x)) = f')) x) ==> (?f'. ((face_map ((edge_walkup H) x)) = f')))) ==> ((?f'. ((face_map ((edge_walkup H) x)) = f')) ==> (?f'. ((face_map ((edge_walkup H) x)) = f')))) = ((?f'. ((face_map ((edge_walkup H) x)) = f')) ==> (?f'. ((face_map ((edge_walkup H) x)) = f'))))
T c= c==> ! c==> * / c= * part cface_map cedge_walkup f0 f1 b1 b0 c? / c= * part cface_map cedge_walkup f0 f1 b1 c==> c? / c= * part cface_map cedge_walkup f0 f1 b0 c? / c= * part cface_map cedge_walkup f0 f1 b0 c==> c? / c= * part cface_map cedge_walkup f0 f1 b0 c? / c= * part cface_map cedge_walkup f0 f1 b0
- |- ((?D. ((dart H) = D)) ==> (?D. ((dart H) = D)))
T c==> c? / c= * part cdart f0 b0 c? / c= * part cdart f0 b0
- (~ (x' = x)) |- ((x' = x) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
- ((node_map ((edge_walkup H) x)) = n') |- ((\n'. ((node_map ((edge_walkup H) x)) = n')) n')
T c==> c= * part cnode_map cedge_walkup f0 f1 f2 * / c= * part cnode_map cedge_walkup f0 f1 b0 f2
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- ((edge_map ((edge_walkup H) x)) = e'), ((node_map ((edge_walkup H) x)) = n'), (((edge_map ((edge_walkup H) x)) o ((node_map ((edge_walkup H) x)) o (face_map ((edge_walkup H) x)))) = I) |- ((e' o (n' o (face_map ((edge_walkup H) x)))) = I)
T c==> c= * part cedge_map cedge_walkup f0 f1 f2 c==> c= * part cnode_map cedge_walkup f0 f1 f3 c==> c= * * part co * part cedge_map cedge_walkup f0 f1 * * part co * part cnode_map cedge_walkup f0 f1 * part cface_map cedge_walkup f0 f1 part cI c= * * part co f2 * * part co f3 * part cface_map cedge_walkup f0 f1 part cI
- |- ((((\D. ((dart H) = D)) D) ==> (?D. ((dart H) = D))) = T)
T c= c==> * / c= * part cdart f0 b0 f1 c? / c= * part cdart f0 b0 cT
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((node_map H) = n), ((dart H) = D), ((permutes (node_map H)) (dart H)) |- (((permutes n) D) = T)
T c==> c= * part cnode_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cnode_map f0 * part cdart f0 c= cpermutes f1 f2 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- (((!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) ==> ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x)) = ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= c==> ! c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1
- ((\e'. ((edge_map ((edge_walkup H) x)) = e')) e') |- (((\e'. ((edge_map ((edge_walkup H) x)) = e')) e') /\ (?e'. ((edge_map ((edge_walkup H) x)) = e')))
T c==> * / c= * part cedge_map cedge_walkup f0 f1 b0 f2 c/\ * / c= * part cedge_map cedge_walkup f0 f1 b0 f2 c? / c= * part cedge_map cedge_walkup f0 f1 b0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- ((dart ((edge_walkup H) x)) = D') |- ((\D'. ((dart ((edge_walkup H) x)) = D')) D')
T c==> c= * part cdart cedge_walkup f0 f1 f2 * / c= * part cdart cedge_walkup f0 f1 b0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) = T)
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= ! c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 cT
- ((edge_map ((edge_walkup H) x)) = e'), ((node_map ((edge_walkup H) x)) = n'), ((face_map ((edge_walkup H) x)) = f'), (((edge_map ((edge_walkup H) x)) o ((node_map ((edge_walkup H) x)) o (face_map ((edge_walkup H) x)))) = I) |- ((e' o (n' o f')) = I)
T c==> c= * part cedge_map cedge_walkup f0 f1 f2 c==> c= * part cnode_map cedge_walkup f0 f1 f3 c==> c= * part cface_map cedge_walkup f0 f1 f4 c==> c= * * part co * part cedge_map cedge_walkup f0 f1 * * part co * part cnode_map cedge_walkup f0 f1 * part cface_map cedge_walkup f0 f1 part cI c= * * part co f2 * * part co f3 f4 part cI
- (FINITE (dart ((edge_walkup H) x))), ((dart ((edge_walkup H) x)) = D') |- (FINITE D')
T c==> cFINITE * part cdart cedge_walkup f0 f1 c==> c= * part cdart cedge_walkup f0 f1 f2 cFINITE f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((dart ((edge_walkup H) x)) = D'), ((permutes (edge_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) |- ((permutes (edge_map ((edge_walkup H) x))) D')
T c==> c= * part cdart cedge_walkup f0 f1 f2 c==> cpermutes * part cedge_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 cpermutes * part cedge_map cedge_walkup f0 f1 f2
- ((face_map ((edge_walkup H) x)) = f'), ((dart ((edge_walkup H) x)) = D'), ((permutes (face_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) |- ((permutes f') D')
T c==> c= * part cface_map cedge_walkup f0 f1 f2 c==> c= * part cdart cedge_walkup f0 f1 f3 c==> cpermutes * part cface_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 cpermutes f2 f3
- |- (((!x. (((\D'. ((dart ((edge_walkup H) x)) = D')) x) ==> (?D'. ((dart ((edge_walkup H) x)) = D')))) ==> ((?D'. ((dart ((edge_walkup H) x)) = D')) ==> (?D'. ((dart ((edge_walkup H) x)) = D')))) = ((?D'. ((dart ((edge_walkup H) x)) = D')) ==> (?D'. ((dart ((edge_walkup H) x)) = D'))))
T c= c==> ! c==> * / c= * part cdart cedge_walkup f0 f1 b1 b0 c? / c= * part cdart cedge_walkup f0 f1 b1 c==> c? / c= * part cdart cedge_walkup f0 f1 b0 c? / c= * part cdart cedge_walkup f0 f1 b0 c==> c? / c= * part cdart cedge_walkup f0 f1 b0 c? / c= * part cdart cedge_walkup f0 f1 b0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))), ((FINITE s) /\ (x IN s)) |- ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c==> c/\ cFINITE f0 cIN f1 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
- ((edge_map H) = e), (((edge_map H) o ((node_map H) o (face_map H))) = I) |- ((e o ((node_map H) o (face_map H))) = I)
T c==> c= * part cedge_map f0 f1 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co f1 * * part co * part cnode_map f0 * part cface_map f0 part cI
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((node_map ((edge_walkup H) x)) = n'), ((dart ((edge_walkup H) x)) = D'), ((permutes (node_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) |- (((permutes n') D') = T)
T c==> c= * part cnode_map cedge_walkup f0 f1 f2 c==> c= * part cdart cedge_walkup f0 f1 f3 c==> cpermutes * part cnode_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 c= cpermutes f2 f3 cT
- |- ((?n. ((node_map H) = n)) ==> (?n. ((node_map H) = n)))
T c==> c? / c= * part cnode_map f0 b0 c? / c= * part cnode_map f0 b0
- |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!e. (((\e. ((edge_map H) = e)) e) ==> (?e. ((edge_map H) = e))))
T c==> * / c= * part cedge_map f0 b0 f1 c? / c= * part cedge_map f0 b0
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((node_map ((edge_walkup H) x)) = n') = ((\n'. ((node_map ((edge_walkup H) x)) = n')) n'))
T c= c= * part cnode_map cedge_walkup f0 f1 f2 * / c= * part cnode_map cedge_walkup f0 f1 b0 f2
- |- (((dart H) = D) = ((\D. ((dart H) = D)) D))
T c= c= * part cdart f0 f1 * / c= * part cdart f0 b0 f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- ((\D'. ((dart ((edge_walkup H) x)) = D')) D') |- (((\D'. ((dart ((edge_walkup H) x)) = D')) D') /\ (?D'. ((dart ((edge_walkup H) x)) = D')))
T c==> * / c= * part cdart cedge_walkup f0 f1 b0 f2 c/\ * / c= * part cdart cedge_walkup f0 f1 b0 f2 c? / c= * part cdart cedge_walkup f0 f1 b0
- ((\n. ((node_map H) = n)) n) |- ((((node_map H) = n) ==> (?n. ((node_map H) = n))) = (?n. ((node_map H) = n)))
T c==> * / c= * part cnode_map f0 b0 f1 c= c==> c= * part cnode_map f0 f1 c? / c= * part cnode_map f0 b0 c? / c= * part cnode_map f0 b0
- |- (((face_map ((edge_walkup H) x)) = f') = ((\f'. ((face_map ((edge_walkup H) x)) = f')) f'))
T c= c= * part cface_map cedge_walkup f0 f1 f2 * / c= * part cface_map cedge_walkup f0 f1 b0 f2
- |- ((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) ==> (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0
- |- ((?f'. ((face_map ((edge_walkup H) x)) = f')) ==> (?f'. ((face_map ((edge_walkup H) x)) = f')))
T c==> c? / c= * part cface_map cedge_walkup f0 f1 b0 c? / c= * part cface_map cedge_walkup f0 f1 b0
- |- (((edge_map ((edge_walkup H) x)) = e') ==> (?e'. ((edge_map ((edge_walkup H) x)) = e')))
T c==> c= * part cedge_map cedge_walkup f0 f1 f2 c? / c= * part cedge_map cedge_walkup f0 f1 b0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\D'. ((dart ((edge_walkup H) x)) = D')) D') |- ((((dart ((edge_walkup H) x)) = D') ==> (?D'. ((dart ((edge_walkup H) x)) = D'))) = (?D'. ((dart ((edge_walkup H) x)) = D')))
T c==> * / c= * part cdart cedge_walkup f0 f1 b0 f2 c= c==> c= * part cdart cedge_walkup f0 f1 f2 c? / c= * part cdart cedge_walkup f0 f1 b0 c? / c= * part cdart cedge_walkup f0 f1 b0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))) = T)
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= c==> c/\ cFINITE f0 cIN f1 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0 cT
- ((face_map ((edge_walkup H) x)) = f'), ((dart ((edge_walkup H) x)) = D'), ((permutes (face_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) |- (((permutes f') D') = T)
T c==> c= * part cface_map cedge_walkup f0 f1 f2 c==> c= * part cdart cedge_walkup f0 f1 f3 c==> cpermutes * part cface_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 c= cpermutes f2 f3 cT
- ((~ (?x. (P x))) = (!x. (~ (P x)))) |- ((!x. (~ (P x))) = (~ (?x. (P x))))
T c==> c= c~ c? / * f0 b0 ! c~ * f0 b0 c= ! c~ * f0 b0 c~ c? / * f0 b0
- |- (((edge_map ((edge_walkup H) x)) = e') = ((\e'. ((edge_map ((edge_walkup H) x)) = e')) e'))
T c= c= * part cedge_map cedge_walkup f0 f1 f2 * / c= * part cedge_map cedge_walkup f0 f1 b0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x)
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1
- ((dart ((edge_walkup H) x)) = D'), ((permutes (face_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) |- ((permutes (face_map ((edge_walkup H) x))) D')
T c==> c= * part cdart cedge_walkup f0 f1 f2 c==> cpermutes * part cface_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 cpermutes * part cface_map cedge_walkup f0 f1 f2
- ((\e'. ((edge_map ((edge_walkup H) x)) = e')) e') |- ((((edge_map ((edge_walkup H) x)) = e') ==> (?e'. ((edge_map ((edge_walkup H) x)) = e'))) = (?e'. ((edge_map ((edge_walkup H) x)) = e')))
T c==> * / c= * part cedge_map cedge_walkup f0 f1 b0 f2 c= c==> c= * part cedge_map cedge_walkup f0 f1 f2 c? / c= * part cedge_map cedge_walkup f0 f1 b0 c? / c= * part cedge_map cedge_walkup f0 f1 b0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!f. (((\f. ((face_map H) = f)) f) ==> (?f. ((face_map H) = f))))
T c==> * / c= * part cface_map f0 b0 f1 c? / c= * part cface_map f0 b0
- ((\f. ((face_map H) = f)) f) |- (((\f. ((face_map H) = f)) f) /\ (?f. ((face_map H) = f)))
T c==> * / c= * part cface_map f0 b0 f1 c/\ * / c= * part cface_map f0 b0 f1 c? / c= * part cface_map f0 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0
- ((dart H) = D) |- (((dart H) = D) /\ (?D. ((dart H) = D)))
T c==> c= * part cdart f0 f1 c/\ c= * part cdart f0 f1 c? / c= * part cdart f0 b0
- |- ((?e. ((edge_map H) = e)) ==> (?e. ((edge_map H) = e)))
T c==> c? / c= * part cedge_map f0 b0 c? / c= * part cedge_map f0 b0
- ((face_map ((edge_walkup H) x)) = f') |- ((\f'. ((face_map ((edge_walkup H) x)) = f')) f')
T c==> c= * part cface_map cedge_walkup f0 f1 f2 * / c= * part cface_map cedge_walkup f0 f1 b0 f2
- |- (((!x. (((\f. ((face_map H) = f)) x) ==> (?f. ((face_map H) = f)))) ==> ((?f. ((face_map H) = f)) ==> (?f. ((face_map H) = f)))) = ((?f. ((face_map H) = f)) ==> (?f. ((face_map H) = f))))
T c= c==> ! c==> * / c= * part cface_map f0 b1 b0 c? / c= * part cface_map f0 b1 c==> c? / c= * part cface_map f0 b0 c? / c= * part cface_map f0 b0 c==> c? / c= * part cface_map f0 b0 c? / c= * part cface_map f0 b0
- ((edge_map ((edge_walkup H) x)) = e'), ((dart ((edge_walkup H) x)) = D'), ((permutes (edge_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) |- (((permutes e') D') = T)
T c==> c= * part cedge_map cedge_walkup f0 f1 f2 c==> c= * part cdart cedge_walkup f0 f1 f3 c==> cpermutes * part cedge_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 c= cpermutes f2 f3 cT
- |- (FINITE (dart ((edge_walkup H) x)))
T cFINITE * part cdart cedge_walkup f0 f1
- |- ((?e'. ((edge_map ((edge_walkup H) x)) = e')) ==> (?e'. ((edge_map ((edge_walkup H) x)) = e')))
T c==> c? / c= * part cedge_map cedge_walkup f0 f1 b0 c? / c= * part cedge_map cedge_walkup f0 f1 b0
- ((\f'. ((face_map ((edge_walkup H) x)) = f')) f') |- ((((face_map ((edge_walkup H) x)) = f') ==> (?f'. ((face_map ((edge_walkup H) x)) = f'))) = (?f'. ((face_map ((edge_walkup H) x)) = f')))
T c==> * / c= * part cface_map cedge_walkup f0 f1 b0 f2 c= c==> c= * part cface_map cedge_walkup f0 f1 f2 c? / c= * part cface_map cedge_walkup f0 f1 b0 c? / c= * part cface_map cedge_walkup f0 f1 b0
- (~ (x' = x)) |- (~ (x = x'))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- ((((\f'. ((face_map ((edge_walkup H) x)) = f')) f') ==> (?f'. ((face_map ((edge_walkup H) x)) = f'))) = T)
T c= c==> * / c= * part cface_map cedge_walkup f0 f1 b0 f2 c? / c= * part cface_map cedge_walkup f0 f1 b0 cT
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((isolated_dart H) x) |- (((isolated_dart H) x) = T)
T c==> cisolated_dart f0 f1 c= cisolated_dart f0 f1 cT
- |- (((!x. (((\e. ((edge_map H) = e)) x) ==> (?e. ((edge_map H) = e)))) ==> ((?e. ((edge_map H) = e)) ==> (?e. ((edge_map H) = e)))) = ((?e. ((edge_map H) = e)) ==> (?e. ((edge_map H) = e))))
T c= c==> ! c==> * / c= * part cedge_map f0 b1 b0 c? / c= * part cedge_map f0 b1 c==> c? / c= * part cedge_map f0 b0 c? / c= * part cedge_map f0 b0 c==> c? / c= * part cedge_map f0 b0 c? / c= * part cedge_map f0 b0
- |- (((edge_map H) = e) ==> (?e. ((edge_map H) = e)))
T c==> c= * part cedge_map f0 f1 c? / c= * part cedge_map f0 b0
- ((FINITE s) /\ (x IN s)) |- ((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))
T c==> c/\ cFINITE f0 cIN f1 f0 c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
- ((edge_map ((edge_walkup H) x)) = e') |- (((edge_map ((edge_walkup H) x)) = e') /\ (?e'. ((edge_map ((edge_walkup H) x)) = e')))
T c==> c= * part cedge_map cedge_walkup f0 f1 f2 c/\ c= * part cedge_map cedge_walkup f0 f1 f2 c? / c= * part cedge_map cedge_walkup f0 f1 b0
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((face_map H) = f) ==> (?f. ((face_map H) = f)))
T c==> c= * part cface_map f0 f1 c? / c= * part cface_map f0 b0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))), ((FINITE s) /\ (x IN s)) |- ((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) /\ ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c==> c/\ cFINITE f0 cIN f1 f0 c/\ ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
- ((node_map H) = n) |- (((node_map H) = n) /\ (?n. ((node_map H) = n)))
T c==> c= * part cnode_map f0 f1 c/\ c= * part cnode_map f0 f1 c? / c= * part cnode_map f0 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- ((dart ((edge_walkup H) x)) = D'), ((permutes (node_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) |- ((permutes (node_map ((edge_walkup H) x))) D')
T c==> c= * part cdart cedge_walkup f0 f1 f2 c==> cpermutes * part cnode_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 cpermutes * part cnode_map cedge_walkup f0 f1 f2
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((edge_map H) = e) = ((\e. ((edge_map H) = e)) e))
T c= c= * part cedge_map f0 f1 * / c= * part cedge_map f0 b0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\n'. ((node_map ((edge_walkup H) x)) = n')) n') |- ((((node_map ((edge_walkup H) x)) = n') ==> (?n'. ((node_map ((edge_walkup H) x)) = n'))) = (?n'. ((node_map ((edge_walkup H) x)) = n')))
T c==> * / c= * part cnode_map cedge_walkup f0 f1 b0 f2 c= c==> c= * part cnode_map cedge_walkup f0 f1 f2 c? / c= * part cnode_map cedge_walkup f0 f1 b0 c? / c= * part cnode_map cedge_walkup f0 f1 b0
- (~ (x' = x)) |- ((x = x') = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- |- (!f'. (((\f'. ((face_map ((edge_walkup H) x)) = f')) f') ==> (?f'. ((face_map ((edge_walkup H) x)) = f'))))
T c==> * / c= * part cface_map cedge_walkup f0 f1 b0 f2 c? / c= * part cface_map cedge_walkup f0 f1 b0
- ((node_map ((edge_walkup H) x)) = n') |- (((node_map ((edge_walkup H) x)) = n') /\ (?n'. ((node_map ((edge_walkup H) x)) = n')))
T c==> c= * part cnode_map cedge_walkup f0 f1 f2 c/\ c= * part cnode_map cedge_walkup f0 f1 f2 c? / c= * part cnode_map cedge_walkup f0 f1 b0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!D'. (((\D'. ((dart ((edge_walkup H) x)) = D')) D') ==> (?D'. ((dart ((edge_walkup H) x)) = D'))))
T c==> * / c= * part cdart cedge_walkup f0 f1 b0 f2 c? / c= * part cdart cedge_walkup f0 f1 b0
- ((node_map H) = n) |- ((\n. ((node_map H) = n)) n)
T c==> c= * part cnode_map f0 f1 * / c= * part cnode_map f0 b0 f1
- ((face_map H) = f) |- ((\f. ((face_map H) = f)) f)
T c==> c= * part cface_map f0 f1 * / c= * part cface_map f0 b0 f1
- (?x'. (((x' IN D) /\ (~ (x' = x))) /\ (((comb_component ((edge_walkup H) x)) x) = ((comb_component ((edge_walkup H) x)) x')))), ((dart H) = D), (x IN (dart H)) |- ((?x'. (((x' IN D) /\ (~ (x' = x))) /\ (((comb_component ((edge_walkup H) x)) x) = ((comb_component ((edge_walkup H) x)) x')))) /\ F)
T c==> c? / c/\ c/\ cIN b0 f0 c~ c= b0 f1 c= * * part ccomb_component cedge_walkup f2 f1 f1 * * part ccomb_component cedge_walkup f2 f1 b0 c==> c= * part cdart f2 f0 c==> cIN f1 * part cdart f2 c/\ c? / c/\ c/\ cIN b0 f0 c~ c= b0 f1 c= * * part ccomb_component cedge_walkup f2 f1 f1 * * part ccomb_component cedge_walkup f2 f1 b0 cF
- |- (((node_map H) = n) = ((\n. ((node_map H) = n)) n))
T c= c= * part cnode_map f0 f1 * / c= * part cnode_map f0 b0 f1
- (FINITE (dart ((edge_walkup H) x))), ((dart ((edge_walkup H) x)) = D') |- ((FINITE D') = T)
T c==> cFINITE * part cdart cedge_walkup f0 f1 c==> c= * part cdart cedge_walkup f0 f1 f2 c= cFINITE f2 cT
- ((edge_map H) = e), ((dart H) = D), ((permutes (edge_map H)) (dart H)) |- (((permutes e) D) = T)
T c==> c= * part cedge_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cedge_map f0 * part cdart f0 c= cpermutes f1 f2 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((node_map ((edge_walkup H) x)) = n') ==> (?n'. ((node_map ((edge_walkup H) x)) = n')))
T c==> c= * part cnode_map cedge_walkup f0 f1 f2 c? / c= * part cnode_map cedge_walkup f0 f1 b0
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((dart H) = D) |- ((\D. ((dart H) = D)) D)
T c==> c= * part cdart f0 f1 * / c= * part cdart f0 b0 f1
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((node_map ((edge_walkup H) x)) = n'), ((dart ((edge_walkup H) x)) = D'), ((permutes (node_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) |- ((permutes n') D')
T c==> c= * part cnode_map cedge_walkup f0 f1 f2 c==> c= * part cdart cedge_walkup f0 f1 f3 c==> cpermutes * part cnode_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 cpermutes f2 f3
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))), ((FINITE s) /\ (x IN s)) |- (((FINITE s) /\ (x IN s)) /\ ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c==> c/\ cFINITE f0 cIN f1 f0 c/\ c/\ cFINITE f0 cIN f1 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
- |- (((permutes (edge_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) /\ (((permutes (node_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) /\ (((permutes (face_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) /\ (((edge_map ((edge_walkup H) x)) o ((node_map ((edge_walkup H) x)) o (face_map ((edge_walkup H) x)))) = I))))
T c/\ cpermutes * part cedge_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 c/\ cpermutes * part cnode_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 c/\ cpermutes * part cface_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 c= * * part co * part cedge_map cedge_walkup f0 f1 * * part co * part cnode_map cedge_walkup f0 f1 * part cface_map cedge_walkup f0 f1 part cI
- |- ((((\D'. ((dart ((edge_walkup H) x)) = D')) D') ==> (?D'. ((dart ((edge_walkup H) x)) = D'))) = T)
T c= c==> * / c= * part cdart cedge_walkup f0 f1 b0 f2 c? / c= * part cdart cedge_walkup f0 f1 b0 cT
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (!D. (((\D. ((dart H) = D)) D) ==> (?D. ((dart H) = D))))
T c==> * / c= * part cdart f0 b0 f1 c? / c= * part cdart f0 b0
- |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- (((!x. (((\e'. ((edge_map ((edge_walkup H) x)) = e')) x) ==> (?e'. ((edge_map ((edge_walkup H) x)) = e')))) ==> ((?e'. ((edge_map ((edge_walkup H) x)) = e')) ==> (?e'. ((edge_map ((edge_walkup H) x)) = e')))) = ((?e'. ((edge_map ((edge_walkup H) x)) = e')) ==> (?e'. ((edge_map ((edge_walkup H) x)) = e'))))
T c= c==> ! c==> * / c= * part cedge_map cedge_walkup f0 f1 b1 b0 c? / c= * part cedge_map cedge_walkup f0 f1 b1 c==> c? / c= * part cedge_map cedge_walkup f0 f1 b0 c? / c= * part cedge_map cedge_walkup f0 f1 b0 c==> c? / c= * part cedge_map cedge_walkup f0 f1 b0 c? / c= * part cedge_map cedge_walkup f0 f1 b0
- |- (((\t. (f t)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\e. ((edge_map H) = e)) e) |- (((\e. ((edge_map H) = e)) e) /\ (?e. ((edge_map H) = e)))
T c==> * / c= * part cedge_map f0 b0 f1 c/\ * / c= * part cedge_map f0 b0 f1 c? / c= * part cedge_map f0 b0
- |- (((!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ==> ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ((edge_walkup H) x))) = ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ((edge_walkup H) x)))
T c= c==> ! c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI cedge_walkup f0 f1 * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI cedge_walkup f0 f1
- |- (((!x. (((\n'. ((node_map ((edge_walkup H) x)) = n')) x) ==> (?n'. ((node_map ((edge_walkup H) x)) = n')))) ==> ((?n'. ((node_map ((edge_walkup H) x)) = n')) ==> (?n'. ((node_map ((edge_walkup H) x)) = n')))) = ((?n'. ((node_map ((edge_walkup H) x)) = n')) ==> (?n'. ((node_map ((edge_walkup H) x)) = n'))))
T c= c==> ! c==> * / c= * part cnode_map cedge_walkup f0 f1 b1 b0 c? / c= * part cnode_map cedge_walkup f0 f1 b1 c==> c? / c= * part cnode_map cedge_walkup f0 f1 b0 c? / c= * part cnode_map cedge_walkup f0 f1 b0 c==> c? / c= * part cnode_map cedge_walkup f0 f1 b0 c? / c= * part cnode_map cedge_walkup f0 f1 b0
- |- ((FINITE (dart ((edge_walkup H) x))) /\ (((permutes (edge_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) /\ (((permutes (node_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) /\ (((permutes (face_map ((edge_walkup H) x))) (dart ((edge_walkup H) x))) /\ (((edge_map ((edge_walkup H) x)) o ((node_map ((edge_walkup H) x)) o (face_map ((edge_walkup H) x)))) = I)))))
T c/\ cFINITE * part cdart cedge_walkup f0 f1 c/\ cpermutes * part cedge_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 c/\ cpermutes * part cnode_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 c/\ cpermutes * part cface_map cedge_walkup f0 f1 * part cdart cedge_walkup f0 f1 c= * * part co * part cedge_map cedge_walkup f0 f1 * * part co * part cnode_map cedge_walkup f0 f1 * part cface_map cedge_walkup f0 f1 part cI
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- ((edge_map H) = e) |- ((\e. ((edge_map H) = e)) e)
T c==> c= * part cedge_map f0 f1 * / c= * part cedge_map f0 b0 f1
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) /\ (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c/\ ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0
- ((\D. ((dart H) = D)) D) |- (((\D. ((dart H) = D)) D) /\ (?D. ((dart H) = D)))
T c==> * / c= * part cdart f0 b0 f1 c/\ * / c= * part cdart f0 b0 f1 c? / c= * part cdart f0 b0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- ((edge_map H) = e), ((node_map H) = n), ((face_map H) = f), (((edge_map H) o ((node_map H) o (face_map H))) = I) |- ((e o (n o f)) = I)
T c==> c= * part cedge_map f0 f1 c==> c= * part cnode_map f0 f2 c==> c= * part cface_map f0 f3 c==> c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co f1 * * part co f2 f3 part cI
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((((\n. ((node_map H) = n)) n) ==> (?n. ((node_map H) = n))) = T)
T c= c==> * / c= * part cnode_map f0 b0 f1 c? / c= * part cnode_map f0 b0 cT
- |- (((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) ==> (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))))) = (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))))
T c= c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((\f. ((face_map H) = f)) f) ==> (?f. ((face_map H) = f))) = T)
T c= c==> * / c= * part cface_map f0 b0 f1 c? / c= * part cface_map f0 b0 cT
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- ((\f'. ((face_map ((edge_walkup H) x)) = f')) f') |- (((\f'. ((face_map ((edge_walkup H) x)) = f')) f') /\ (?f'. ((face_map ((edge_walkup H) x)) = f')))
T c==> * / c= * part cface_map cedge_walkup f0 f1 b0 f2 c/\ * / c= * part cface_map cedge_walkup f0 f1 b0 f2 c? / c= * part cface_map cedge_walkup f0 f1 b0
- ((face_map H) = f), ((dart H) = D), ((permutes (face_map H)) (dart H)) |- (((permutes f) D) = T)
T c==> c= * part cface_map f0 f1 c==> c= * part cdart f0 f2 c==> cpermutes * part cface_map f0 * part cdart f0 c= cpermutes f1 f2 cT
- |- (((!x. (((\n. ((node_map H) = n)) x) ==> (?n. ((node_map H) = n)))) ==> ((?n. ((node_map H) = n)) ==> (?n. ((node_map H) = n)))) = ((?n. ((node_map H) = n)) ==> (?n. ((node_map H) = n))))
T c= c==> ! c==> * / c= * part cnode_map f0 b1 b0 c? / c= * part cnode_map f0 b1 c==> c? / c= * part cnode_map f0 b0 c? / c= * part cnode_map f0 b0 c==> c? / c= * part cnode_map f0 b0 c? / c= * part cnode_map f0 b0
- |- ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ((edge_walkup H) x))
T * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI cedge_walkup f0 f1
- |- ((x IN (GSPEC (\GEN%PVAR%5394. (?x'. (((SETSPEC GEN%PVAR%5394) (p x')) x'))))) = (p x))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 * f1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\D. ((dart H) = D)) D) |- ((((dart H) = D) ==> (?D. ((dart H) = D))) = (?D. ((dart H) = D)))
T c==> * / c= * part cdart f0 b0 f1 c= c==> c= * part cdart f0 f1 c? / c= * part cdart f0 b0 c? / c= * part cdart f0 b0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
