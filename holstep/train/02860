N AZIM_ARG
C |- (!x. (!y. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))
T c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_LE
A |- ((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) /\ (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))))
T c/\ ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
D ARITH_LT
A |- ((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))))))
T c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
D ARITH_EQ
A |- ((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) /\ (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))))
T c/\ ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D Real_ext.REAL_SV_LMUL_0
A |- (!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_LT_DIV
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_div f0 f1
D DIMINDEX_3
A |- ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0))))
T c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0
D VECTOR_ADD_RID
A |- (!x. (((vector_add x) (vec (NUMERAL _0))) = x))
T c= cvector_add f0 cvec cNUMERAL c_0 f0
D VECTOR_MUL_LID
A |- (!x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D VECTOR_SUB_RZERO
A |- (((vector_sub x) (vec (NUMERAL _0))) = x)
T c= cvector_sub f0 cvec cNUMERAL c_0 f0
D VECTOR_MUL_RZERO
A |- (((% c) (vec (NUMERAL _0))) = (vec (NUMERAL _0)))
T c= c% f0 cvec cNUMERAL c_0 cvec cNUMERAL c_0
D DIST_0
A |- (!x. (((distance (x , (vec (NUMERAL _0)))) = (vector_norm x)) /\ ((distance ((vec (NUMERAL _0)) , x)) = (vector_norm x))))
T c/\ c= cdistance c, f0 cvec cNUMERAL c_0 cvector_norm f0 c= cdistance c, cvec cNUMERAL c_0 f0 cvector_norm f0
D NORM_BASIS
A |- (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((vector_norm (basis k)) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cvector_norm cbasis f0 creal_of_num cNUMERAL cBIT1 c_0
D DOT_BASIS_BASIS
A |- (!i. (!j. ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))))) ==> (((dot (basis i)) (basis j)) = (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= cdot cbasis f0 cbasis f1 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
D BASIS_NONZERO
A |- (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (~ ((basis k) = (vec (NUMERAL _0))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c~ c= cbasis f0 cvec cNUMERAL c_0
D CX_DEF
A |- (!a. ((Cx a) = (complex (a , (real_of_num (NUMERAL _0))))))
T c= cCx f0 ccomplex c, f0 creal_of_num cNUMERAL c_0
D complex_mul
A |- (!w. (!z. (((complex_mul w) z) = (complex (((real_sub ((real_mul (Re w)) (Re z))) ((real_mul (Im w)) (Im z))) , ((real_add ((real_mul (Re w)) (Im z))) ((real_mul (Im w)) (Re z))))))))
T c= ccomplex_mul f0 f1 ccomplex c, creal_sub creal_mul cRe f0 cRe f1 creal_mul cIm f0 cIm f1 creal_add creal_mul cRe f0 cIm f1 creal_mul cIm f0 cRe f1
D complex_div
A |- (!w. (!z. (((complex_div w) z) = ((complex_mul w) (complex_inv z)))))
T c= ccomplex_div f0 f1 ccomplex_mul f0 ccomplex_inv f1
D RE
A |- ((Re (complex (x , y))) = x)
T c= cRe ccomplex c, f0 f1 f0
D IM
A |- ((Im (complex (x , y))) = y)
T c= cIm ccomplex c, f0 f1 f1
D COMPLEX_EQ
A |- (!w. (!z. ((w = z) = (((Re w) = (Re z)) /\ ((Im w) = (Im z))))))
T c= c= f0 f1 c/\ c= cRe f0 cRe f1 c= cIm f0 cIm f1
D complex_add
A |- (((vector_add w) z) = (complex (((real_add (Re w)) (Re z)) , ((real_add (Im w)) (Im z)))))
T c= cvector_add f0 f1 ccomplex c, creal_add cRe f0 cRe f1 creal_add cIm f0 cIm f1
D COMPLEX_EQ_ADD_LCANCEL
A |- (!x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))))
T c= c= cvector_add f0 f1 cvector_add f0 f2 c= f1 f2
D COMPLEX_MUL_RZERO
A |- (!x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0)))))
T c= ccomplex_mul f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_MUL_LZERO
A |- (!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0)))))
T c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 f0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_SUB_0
A |- (!x. (!y. ((((vector_sub x) y) = (Cx (real_of_num (NUMERAL _0)))) = (x = y))))
T c= c= cvector_sub f0 f1 cCx creal_of_num cNUMERAL c_0 c= f0 f1
D COMPLEX_MUL_RINV
A |- (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0
D CX_INJ
A |- (!x. (!y. (((Cx x) = (Cx y)) = (x = y))))
T c= c= cCx f0 cCx f1 c= f0 f1
D CX_ADD
A |- (!x. (!y. ((Cx ((real_add x) y)) = ((vector_add (Cx x)) (Cx y)))))
T c= cCx creal_add f0 f1 cvector_add cCx f0 cCx f1
D CX_MUL
A |- (!x. (!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))))
T c= cCx creal_mul f0 f1 ccomplex_mul cCx f0 cCx f1
D CX_DIV
A |- (!x. (!y. ((Cx ((real_div x) y)) = ((complex_div (Cx x)) (Cx y)))))
T c= cCx creal_div f0 f1 ccomplex_div cCx f0 cCx f1
D RE_II
A |- ((Re ii) = (real_of_num (NUMERAL _0)))
T c= cRe cii creal_of_num cNUMERAL c_0
D IM_II
A |- ((Im ii) = (real_of_num (NUMERAL (BIT1 _0))))
T c= cIm cii creal_of_num cNUMERAL cBIT1 c_0
D COMPLEX_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z))))) /\ ((!x. (!y. (((vector_add x) y) = ((vector_add y) x)))) /\ ((!x. (((vector_add (Cx (real_of_num (NUMERAL _0)))) x) = x)) /\ ((!x. (!y. (!z. (((complex_mul x) ((complex_mul y) z)) = ((complex_mul ((complex_mul x) y)) z))))) /\ ((!x. (!y. (((complex_mul x) y) = ((complex_mul y) x)))) /\ ((!x. (((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) x) = x)) /\ ((!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) /\ ((!x. (!y. (!z. (((complex_mul x) ((vector_add y) z)) = ((vector_add ((complex_mul x) y)) ((complex_mul x) z)))))) /\ ((!x. (((complex_pow x) (NUMERAL _0)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) /\ (!x. (!n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n))))))))))))))
T c/\ ! ! ! c= cvector_add b0 cvector_add b1 b2 cvector_add cvector_add b0 b1 b2 c/\ ! ! c= cvector_add b0 b1 cvector_add b1 b0 c/\ ! c= cvector_add cCx creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= ccomplex_mul b0 ccomplex_mul b1 b2 ccomplex_mul ccomplex_mul b0 b1 b2 c/\ ! ! c= ccomplex_mul b0 b1 ccomplex_mul b1 b0 c/\ ! c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 c/\ ! ! ! c= ccomplex_mul b0 cvector_add b1 b2 cvector_add ccomplex_mul b0 b1 ccomplex_mul b0 b2 c/\ ! c= ccomplex_pow b0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ! ! c= ccomplex_pow b0 cSUC b1 ccomplex_mul b0 ccomplex_pow b0 b1
D COMPLEX_POLY_NEG_CLAUSES
A |- ((!x. ((vector_neg x) = ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) x))) /\ (!x. (!y. (((vector_sub x) y) = ((vector_add x) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) y))))))
T c/\ ! c= cvector_neg b0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= cvector_sub b0 b1 cvector_add b0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D COMPLEX_INV_0
A |- ((complex_inv (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c= ccomplex_inv cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_INV_MUL
A |- (!w. (!z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z)))))
T c= ccomplex_inv ccomplex_mul f0 f1 ccomplex_mul ccomplex_inv f0 ccomplex_inv f1
D COMPLEX_VEC_0
A |- ((vec (NUMERAL _0)) = (Cx (real_of_num (NUMERAL _0))))
T c= cvec cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_CMUL
A |- (!c. (!x. (((% c) x) = ((complex_mul (Cx c)) x))))
T c= c% f0 f1 ccomplex_mul cCx f0 f1
D COMPLEX_BASIS
A |- (((basis (NUMERAL (BIT1 _0))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((basis (NUMERAL (BIT0 (BIT1 _0)))) = ii))
T c/\ c= cbasis cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cbasis cNUMERAL cBIT0 cBIT1 c_0 cii
D CEXP_SUB
A |- (!w. (!z. ((cexp ((vector_sub w) z)) = ((complex_div (cexp w)) (cexp z)))))
T c= ccexp cvector_sub f0 f1 ccomplex_div ccexp f0 ccexp f1
D CEXP_EULER
A |- (!z. ((cexp ((complex_mul ii) z)) = ((vector_add (ccos z)) ((complex_mul ii) (csin z)))))
T c= ccexp ccomplex_mul cii f0 cvector_add cccos f0 ccomplex_mul cii ccsin f0
D CX_SIN
A |- (!x. ((Cx (sin x)) = (csin (Cx x))))
T c= cCx csin f0 ccsin cCx f0
D CX_COS
A |- (!x. ((Cx (cos x)) = (ccos (Cx x))))
T c= cCx ccos f0 cccos cCx f0
D ARG_0
A |- ((Arg (Cx (real_of_num (NUMERAL _0)))) = (real_of_num (NUMERAL _0)))
T c= cArg cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D ARG_UNIQUE
A |- (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= ccomplex_mul cCx f0 ccexp ccomplex_mul cii cCx f1 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg f2 f1
D DROPOUT_ADD
A |- (!k. (!x. (!y. (((dropout k) ((vector_add x) y)) = ((vector_add ((dropout k) x)) ((dropout k) y))))))
T c= cdropout f0 cvector_add f1 f2 cvector_add cdropout f0 f1 cdropout f0 f2
D DROPOUT_MUL
A |- (!k. (!c. (!x. (((dropout k) ((% c) x)) = ((% c) ((dropout k) x))))))
T c= cdropout f0 c% f1 f2 c% f1 cdropout f0 f2
D CROSS_BASIS
A |- ((((cross (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((cross (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 _0)))) = (vector_neg (basis (NUMERAL (BIT1 (BIT1 _0)))))) /\ ((((cross (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 _0)))) /\ ((((cross (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (vector_neg (basis (NUMERAL (BIT1 _0))))) /\ ((((cross (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT1 _0)))) = (basis (NUMERAL (BIT0 (BIT1 _0))))) /\ (((cross (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (vector_neg (basis (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c/\ c= ccross cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ccross cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ccross cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 c/\ c= ccross cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT1 c_0 c/\ c= ccross cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c= ccross cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT0 cBIT1 c_0
D DROPOUT_BASIS_3
A |- ((((dropout (NUMERAL (BIT1 (BIT1 _0)))) (basis (NUMERAL (BIT1 _0)))) = (basis (NUMERAL (BIT1 _0)))) /\ ((((dropout (NUMERAL (BIT1 (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (basis (NUMERAL (BIT0 (BIT1 _0))))) /\ (((dropout (NUMERAL (BIT1 (BIT1 _0)))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (vec (NUMERAL _0)))))
T c/\ c= cdropout cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 c/\ c= cdropout cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c= cdropout cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0
D COLLINEAR_BASIS_3
A |- ((collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY)))) = (((dropout (NUMERAL (BIT1 (BIT1 _0)))) x) = (vec (NUMERAL _0))))
T c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cvec cNUMERAL c_0
D Trigonometry.AXBTGQX
A |- (!e1. (!e2. (!e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3))))))))))))
T c= corthonormal f0 f1 f2 c/\ c= cdot f0 f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f1 f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f2 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f0 f1 creal_of_num cNUMERAL c_0 c/\ c= cdot f0 f2 creal_of_num cNUMERAL c_0 c/\ c= cdot f1 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross f0 f1 f2
D azim
A |- (!v. (!w. (!w1. (!w2. (((real_le (real_of_num (NUMERAL _0))) ((((azim v) w) w1) w2)) /\ (((real_lt ((((azim v) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance (w , v))) e3) = ((vector_sub w) v)) /\ (~ (w = v)))) ==> (?psi. (?r1. (?r2. ((((vector_sub w1) v) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub w) v))))) /\ ((((vector_sub w2) v) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim v) w) w1) w2))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim v) w) w1) w2))))) e2)) ((% h2) ((vector_sub w) v))))) /\ (((~ (collinear (v INSERT (w INSERT (w1 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear (v INSERT (w INSERT (w2 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))))))))))))
T c/\ creal_le creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 c/\ creal_lt cazim f0 f1 f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, f1 f0 b4 cvector_sub f1 f0 c~ c= f1 f0 c? / c? / c? / c/\ c= cvector_sub f2 f0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub f1 f0 c/\ c= cvector_sub f3 f0 cvector_add c% creal_mul b7 ccos creal_add b5 cazim f0 f1 f2 f3 b2 cvector_add c% creal_mul b7 csin creal_add b5 cazim f0 f1 f2 f3 b3 c% b1 cvector_sub f1 f0 c/\ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7
D AZIM_DEGENERATE
A |- ((!v. (!w. (!w1. (!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) /\ ((!v. (!w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) /\ (!v. (!w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))))))))
T c/\ ! ! ! ! c==> c= b0 b1 c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 c/\ ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0
- ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) |- (((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))) = x)
T c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- (!t. (((\t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) t) ==> F))
T c==> * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- (((!w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))) ==> ((\w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))) w2)) = ((\w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))) w2))
T c= c==> ! c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= cazim f0 f1 f2 b0 creal_of_num cNUMERAL c_0 * / c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= cazim f0 f1 f2 b0 creal_of_num cNUMERAL c_0 f3 * / c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= cazim f0 f1 f2 b0 creal_of_num cNUMERAL c_0 f3
+ |- ((((?a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F) ==> (((~ q) = (?a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> q)) = (((~ q) = (?a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) |- ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a))
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg f1 f0
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) |- ((\z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))) z)
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= ccomplex_mul cCx f0 ccexp ccomplex_mul cii cCx f1 b0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b0 f1 f2
+ |- ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 f0
+ ((\z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z) |- ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> * / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0
- |- (((!n. (((BIT0 n) + _0) = (BIT0 n))) ==> ((\n. (((BIT0 n) + _0) = (BIT0 n))) n)) = ((\n. (((BIT0 n) + _0) = (BIT0 n))) n))
T c= c==> ! c= c+ cBIT0 b0 c_0 cBIT0 b0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0
- |- ((((cross (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 _0)))) = (vector_neg (basis (NUMERAL (BIT1 (BIT1 _0)))))) /\ ((((cross (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 _0)))) /\ ((((cross (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (vector_neg (basis (NUMERAL (BIT1 _0))))) /\ ((((cross (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT1 _0)))) = (basis (NUMERAL (BIT0 (BIT1 _0))))) /\ (((cross (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (vector_neg (basis (NUMERAL (BIT0 (BIT1 _0))))))))))
T c/\ c= ccross cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ccross cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 c/\ c= ccross cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT1 c_0 c/\ c= ccross cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c= ccross cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT0 cBIT1 c_0
+ ((\a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) a) |- (((?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F) = F)
T c==> * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))) |- (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (real_of_num (NUMERAL _0)))
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f1 f0 creal_of_num cNUMERAL c_0
+ ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) |- ((((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))) = y) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))
T c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c/\ c= cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 f4 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5
- (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) |- (~ (((dropout (NUMERAL (BIT1 (BIT1 _0)))) x) = (vec (NUMERAL _0))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c~ c= cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cvec cNUMERAL c_0
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) /\ (((basis k) = (vec (NUMERAL _0))) = F))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= cbasis f0 cvec cNUMERAL c_0 cF
+ |- (((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (?z. (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) = (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c? / c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((vector_norm (basis k)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((\k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((vector_norm (basis k)) = (real_of_num (NUMERAL (BIT1 _0)))))) k)) = ((\k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((vector_norm (basis k)) = (real_of_num (NUMERAL (BIT1 _0)))))) k))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= cvector_norm cbasis b0 creal_of_num cNUMERAL cBIT1 c_0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= cvector_norm cbasis b0 creal_of_num cNUMERAL cBIT1 c_0 f0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= cvector_norm cbasis b0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) |- ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) /\ ((!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) ==> ((Arg z) = a)))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= ccomplex_mul cCx f0 ccexp ccomplex_mul cii cCx f1 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= ccomplex_mul cCx f0 ccexp ccomplex_mul cii cCx f1 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= cArg f2 f1
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))), (?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) |- ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) /\ ((Arg z) = a))
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg f1 f0
- |- (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))
T c= cEXP cBIT0 f0 cBIT0 f1 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
- |- (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) ==> ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m)) = ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0
- |- ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))
T c= ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3
- ((basis k) = (vec (NUMERAL _0))) |- ((vec (NUMERAL _0)) = (basis k))
T c==> c= cbasis f0 cvec cNUMERAL c_0 c= cvec cNUMERAL c_0 cbasis f0
- |- (((!n. (((BIT1 n) * _0) = _0)) ==> ((\n. (((BIT1 n) * _0) = _0)) n)) = ((\n. (((BIT1 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT1 b0 c_0 c_0 * / c= c* cBIT1 b0 c_0 c_0 f0 * / c= c* cBIT1 b0 c_0 c_0 f0
- (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!x. (((\c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) x) ==> F)) ==> ((?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F)) = ((?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((BIT0 m) = (BIT1 n)) = F)
T c= c= cBIT0 f0 cBIT1 f1 cF
- |- (((!n. (((BIT0 n) * _0) = _0)) ==> ((\n. (((BIT0 n) * _0) = _0)) n)) = ((\n. (((BIT0 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT0 b0 c_0 c_0 * / c= c* cBIT0 b0 c_0 c_0 f0 * / c= c* cBIT0 b0 c_0 c_0 f0
- |- (((!n. ((BIT1 n) > _0)) ==> ((\n. ((BIT1 n) > _0)) n)) = ((\n. ((BIT1 n) > _0)) n))
T c= c==> ! c> cBIT1 b0 c_0 * / c> cBIT1 b0 c_0 f0 * / c> cBIT1 b0 c_0 f0
- |- (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))
T c= c+ cBIT0 f0 cBIT1 f1 cBIT1 c+ f0 f1
+ ((\psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) psi) |- (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) |- (((!e3. (((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))) ==> ((\e3. (((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))) (basis (NUMERAL (BIT1 (BIT1 _0)))))) = ((\e3. (((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))) (basis (NUMERAL (BIT1 (BIT1 _0))))))
T c==> ! ! ! c==> c/\ corthonormal b0 b1 b2 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b4 ccos b3 b0 cvector_add c% creal_mul b4 csin b3 b1 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b5 ccos creal_add b3 f3 b0 cvector_add c% creal_mul b5 csin creal_add b3 f3 b1 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt creal_of_num cNUMERAL c_0 b5 c= c==> ! c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b2 ccos b1 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin b1 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b3 ccos creal_add b1 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin creal_add b1 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b2 creal_lt creal_of_num cNUMERAL c_0 b3 * / c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b2 ccos b1 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin b1 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b3 ccos creal_add b1 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin creal_add b1 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b2 creal_lt creal_of_num cNUMERAL c_0 b3 cbasis cNUMERAL cBIT1 cBIT1 c_0 * / c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b2 ccos b1 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin b1 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b3 ccos creal_add b1 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin creal_add b1 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b2 creal_lt creal_of_num cNUMERAL c_0 b3 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\q'. ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) = p') ==> ((p' ==> ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))) = q')) ==> ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 f8 c==> c==> f8 c= c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f4 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 b0 c= c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f4 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c==> f8 b0 f9
- |- (((cross (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (vector_neg (basis (NUMERAL (BIT0 (BIT1 _0))))))
T c= ccross cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT0 cBIT1 c_0
+ |- ((~ F) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0))))
T c==> c~ cF c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((SUC _0) = (BIT1 _0))
T c= cSUC c_0 cBIT1 c_0
- |- (((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
- |- ((_0 <= (BIT0 n)) = T)
T c= c<= c_0 cBIT0 f0 cT
+ |- ((\p'. (!q'. ((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) = p') ==> ((p' ==> ((?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))) = q')) ==> ((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b0 c==> c==> b0 c= c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b3 ccos b2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin b2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b4 ccos creal_add b2 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b4 csin creal_add b2 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 creal_lt creal_of_num cNUMERAL c_0 b4 b1 c= c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b3 ccos b2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin b2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b4 ccos creal_add b2 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b4 csin creal_add b2 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 creal_lt creal_of_num cNUMERAL c_0 b4 c==> b0 b1 f5
- |- ((\p'. (!q'. ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) = p') ==> ((p' ==> ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))))))) = q')) ==> ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 b0 c==> c==> b0 c= c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 b1 c= c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c==> b0 b1 f8
+ |- (((BIT1 m) = (BIT0 n)) = F)
T c= c= cBIT1 f0 cBIT0 f1 cF
- |- ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))
T c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
+ |- (!z. (((\z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z) ==> F))
T c==> * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f4 cF
- |- (((PRE _0) = _0) /\ ((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) /\ (!n. ((PRE (BIT1 n)) = (BIT0 n)))))
T c/\ c= cPRE c_0 c_0 c/\ ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 ! c= cPRE cBIT1 b0 cBIT0 b0
- |- (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))
T c= c* cBIT0 f0 cBIT0 f1 cBIT0 cBIT0 c* f0 f1
+ |- (((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))))))))
T c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b2 cvector_add c% creal_mul b7 csin creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7
+ |- ((\x. (!y. (((dropout k) ((vector_add x) y)) = ((vector_add ((dropout k) x)) ((dropout k) y))))) x)
T * / ! c= cdropout f0 cvector_add b0 b1 cvector_add cdropout f0 b0 cdropout f0 b1 f1
+ |- (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi))))
T c= ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cCx creal_add f1 f0 ccomplex_mul cii cCx f1
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) /\ (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e'))))
T c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1
+ |- ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))
T c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT1 m) < (BIT0 n)) = (m < n))
T c= c< cBIT1 f0 cBIT0 f1 c< f0 f1
+ |- (T = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))))))
T c= cT c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV
- |- ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
- (collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) |- ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) /\ (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))
T c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cazim f0 f1 f3 f2 creal_of_num cNUMERAL c_0
+ |- (((!a. (!c. (!b. (!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d))))))) ==> ((\a. (!c. (!b. (!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d))))))) a)) = ((\a. (!c. (!b. (!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d))))))) a))
T c= c==> ! ! ! ! c= ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 * / ! ! ! c= ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 f0 * / ! ! ! c= ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 f0
+ ((\z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z) |- ((((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F) = F)
T c==> * / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- (((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0
+ |- ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e'))))
T c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1
- |- ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))
T c= cEXP c_0 cBIT0 f0 c* cEXP c_0 f0 cEXP c_0 f0
+ ((\c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) c) |- (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- ((!r2. (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))))))))) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= ! c==> c/\ c= f1 cvector_add c% creal_mul f2 ccos f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f2 csin f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f5 cvector_add c% creal_mul b0 ccos creal_add f3 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b0 csin creal_add f3 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f6 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul b0 ccos creal_add f3 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b0 csin creal_add f3 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f6 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f2 ccos f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f2 csin f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 cT
+ (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) |- ((\e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) (basis (NUMERAL (BIT1 _0))))
T c==> ! ! ! c==> c/\ corthonormal b0 b1 b2 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b4 ccos b3 b0 cvector_add c% creal_mul b4 csin b3 b1 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b5 ccos creal_add b3 f3 b0 cvector_add c% creal_mul b5 csin creal_add b3 f3 b1 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt creal_of_num cNUMERAL c_0 b5 * / ! ! c==> c/\ corthonormal b0 b1 b2 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b4 ccos b3 b0 cvector_add c% creal_mul b4 csin b3 b1 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b5 ccos creal_add b3 f3 b0 cvector_add c% creal_mul b5 csin creal_add b3 f3 b1 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt creal_of_num cNUMERAL c_0 b5 cbasis cNUMERAL cBIT1 c_0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) |- ((((real_le (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((basis (NUMERAL (BIT1 _0))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c= cbasis cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!a. ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a))) ==> ((\a. ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a))) a)) = ((\a. ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a))) a))
T c= c==> ! c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg f0 b0 * / c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg f0 b0 f1 * / c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg f0 b0 f1
- |- (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))
T c= cEXP cNUMERAL f0 cNUMERAL f1 cNUMERAL cEXP f0 f1
- |- (((!n. ((SUC (BIT0 n)) = (BIT1 n))) ==> ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n)) = ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n))
T c= c==> ! c= cSUC cBIT0 b0 cBIT1 b0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0
- |- (~ (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c~ c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0
- (v = w) |- ((v = w) /\ (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))
T c==> c= f0 f1 c/\ c= f0 f1 c= cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0
- |- ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F)))
T c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!n. ((ODD (BIT0 n)) = F)) ==> ((\n. ((ODD (BIT0 n)) = F)) n)) = ((\n. ((ODD (BIT0 n)) = F)) n))
T c= c==> ! c= cODD cBIT0 b0 cF * / c= cODD cBIT0 b0 cF f0 * / c= cODD cBIT0 b0 cF f0
+ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY)))) |- ((collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY)))) /\ (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c/\ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) |- ((((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a) ==> ((((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f2 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b2 cvector_add c% creal_mul b7 csin creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) ==> ((Arg z) = a)))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= ccomplex_mul cCx f0 ccexp ccomplex_mul cii cCx f1 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= cArg f2 f1
- |- ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0
- |- (((!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) ==> ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n)) = ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
+ |- ((a = (Arg ((complex_div ((complex_mul (Cx r2)) (cexp ((complex_mul ii) (Cx ((real_add psi) a)))))) ((complex_mul (Cx r1)) (cexp ((complex_mul ii) (Cx psi))))))) = (a = (Arg ((complex_div ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (vec (NUMERAL _0)))))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (vec (NUMERAL _0)))))))))
T c= c= f0 cArg ccomplex_div ccomplex_mul cCx f1 ccexp ccomplex_mul cii cCx creal_add f2 f0 ccomplex_mul cCx f3 ccexp ccomplex_mul cii cCx f2 c= f0 cArg ccomplex_div cvector_add c% creal_mul f1 ccos creal_add f2 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin creal_add f2 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cvec cNUMERAL c_0 cvector_add c% creal_mul f3 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f3 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cvec cNUMERAL c_0
+ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY)))) |- (((real_of_num (NUMERAL _0)) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))) = (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= c= creal_of_num cNUMERAL c_0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ ((\c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) c) |- (((\c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) c) /\ F)
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ ((\a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) a) |- (((\a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) a) /\ F)
T c==> * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- ((((cross (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (vector_neg (basis (NUMERAL (BIT1 _0))))) /\ ((((cross (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT1 _0)))) = (basis (NUMERAL (BIT0 (BIT1 _0))))) /\ (((cross (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (vector_neg (basis (NUMERAL (BIT0 (BIT1 _0))))))))
T c/\ c= ccross cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT1 c_0 c/\ c= ccross cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c= ccross cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT0 cBIT1 c_0
+ ((Cx (cos x)) = (ccos (Cx x))) |- ((ccos (Cx x)) = (Cx (cos x)))
T c==> c= cCx ccos f0 cccos cCx f0 c= cccos cCx f0 cCx ccos f0
- |- (((!n. ((_0 * (BIT0 n)) = _0)) ==> ((\n. ((_0 * (BIT0 n)) = _0)) n)) = ((\n. ((_0 * (BIT0 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT0 b0 c_0 * / c= c* c_0 cBIT0 b0 c_0 f0 * / c= c* c_0 cBIT0 b0 c_0 f0
+ |- ((!psi. (!r1. (!r2. (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))))))))))) = ((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))
T c= ! ! ! c==> c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c==> c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- (((!n. ((EVEN (BIT1 n)) = F)) ==> ((\n. ((EVEN (BIT1 n)) = F)) n)) = ((\n. ((EVEN (BIT1 n)) = F)) n))
T c= c==> ! c= cEVEN cBIT1 b0 cF * / c= cEVEN cBIT1 b0 cF f0 * / c= cEVEN cBIT1 b0 cF f0
- |- (((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) ==> ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m)) = ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m))
T c= c==> ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
- |- ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)
T * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
+ |- ((\y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))) y)
T * / ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 f1
+ |- (((complex_mul w) (complex_inv z)) = ((complex_div w) z))
T c= ccomplex_mul f0 ccomplex_inv f1 ccomplex_div f0 f1
- |- ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)
T * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
+ |- ((\q'. (((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) = p') ==> ((p' ==> ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))) = q')) ==> (((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = (p' ==> q'))))) q')
T * / c==> c= c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b2 ccos b1 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin b1 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b3 ccos creal_add b1 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin creal_add b1 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b2 creal_lt creal_of_num cNUMERAL c_0 b3 f5 c==> c==> f5 c= c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 b0 c= c==> c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b2 ccos b1 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin b1 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b3 ccos creal_add b1 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin creal_add b1 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b2 creal_lt creal_of_num cNUMERAL c_0 b3 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c==> f5 b0 f6
- |- ((\n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) n)
T * / c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 f0
- (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) |- ((((dropout (NUMERAL (BIT1 (BIT1 _0)))) x) = (vec (NUMERAL _0))) = F)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= c= cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cvec cNUMERAL c_0 cF
+ |- (((!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 * / c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2 * / c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2
- |- ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))
T c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) |- (~ ((vec (NUMERAL _0)) = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c~ c= cvec cNUMERAL c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))))
T c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x)
T * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0
+ |- (((?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = (!r1. ((?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))))
T c= c==> c? / c? / c/\ c= f0 cvector_add c% creal_mul b0 ccos f1 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b0 csin f1 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f3 cvector_add c% creal_mul b1 ccos creal_add f1 f4 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin creal_add f1 f4 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 c= f4 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f3 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 ! c==> c? / c/\ c= f0 cvector_add c% creal_mul b0 ccos f1 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b0 csin f1 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f3 cvector_add c% creal_mul b1 ccos creal_add f1 f4 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin creal_add f1 f4 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 c= f4 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f3 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))), (((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))))))), ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> c/\ creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- (((((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b2 cvector_add c% creal_mul b7 csin creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- (!d. (((\d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) d) ==> F))
T c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b0 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 cF
- (((dropout (NUMERAL (BIT1 (BIT1 _0)))) x) = (vec (NUMERAL _0))) |- ((vec (NUMERAL _0)) = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))
T c==> c= cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cvec cNUMERAL c_0 c= cvec cNUMERAL c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((\w. (!w1. (!w2. (((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) w) w1) w2)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance (w , (vec (NUMERAL _0))))) e3) = ((vector_sub w) (vec (NUMERAL _0)))) /\ (~ (w = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub w1) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub w) (vec (NUMERAL _0))))))) /\ ((((vector_sub w2) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) w) w1) w2))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) w) w1) w2))))) e2)) ((% h2) ((vector_sub w) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT (w INSERT (w1 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT (w INSERT (w2 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))))))))))) (basis (NUMERAL (BIT1 (BIT1 _0)))))
T * / ! ! c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 b0 b1 b2 c/\ creal_lt cazim cvec cNUMERAL c_0 b0 b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b5 b6 b7 c/\ c= c% cdistance c, b0 cvec cNUMERAL c_0 b7 cvector_sub b0 cvec cNUMERAL c_0 c~ c= b0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub b1 cvec cNUMERAL c_0 cvector_add c% creal_mul b9 ccos b8 b5 cvector_add c% creal_mul b9 csin b8 b6 c% b3 cvector_sub b0 cvec cNUMERAL c_0 c/\ c= cvector_sub b2 cvec cNUMERAL c_0 cvector_add c% creal_mul b10 ccos creal_add b8 cazim cvec cNUMERAL c_0 b0 b1 b2 b5 cvector_add c% creal_mul b10 csin creal_add b8 cazim cvec cNUMERAL c_0 b0 b1 b2 b6 c% b4 cvector_sub b0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b9 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b10 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) ((real_div r2) r1)) /\ ((((complex_mul (Cx ((real_div r2) r1))) (cexp ((complex_mul ii) (Cx a)))) = ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) = ((\r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ((real_div r2) r1)))
T c= c/\ creal_lt creal_of_num cNUMERAL c_0 creal_div f0 f1 c/\ c= ccomplex_mul cCx creal_div f0 f1 ccexp ccomplex_mul cii cCx f2 ccomplex_mul cCx creal_div f0 f1 ccexp cvector_sub ccomplex_mul cii cCx creal_add f3 f2 ccomplex_mul cii cCx f3 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f2 ccomplex_mul cCx creal_div f0 f1 ccexp cvector_sub ccomplex_mul cii cCx creal_add f3 f2 ccomplex_mul cii cCx f3 c/\ creal_le creal_of_num cNUMERAL c_0 f2 creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_div f0 f1
- |- ((_0 < _0) = F)
T c= c< c_0 c_0 cF
+ |- ((\e1. (!e2. (!e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3)))))))))))) e1)
T * / ! ! c= corthonormal b0 b1 b2 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b1 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b2 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b1 creal_of_num cNUMERAL c_0 c/\ c= cdot b0 b2 creal_of_num cNUMERAL c_0 c/\ c= cdot b1 b2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross b0 b1 b2 f0
- |- (((!n. (((BIT1 n) < _0) = F)) ==> ((\n. (((BIT1 n) < _0) = F)) n)) = ((\n. (((BIT1 n) < _0) = F)) n))
T c= c==> ! c= c< cBIT1 b0 c_0 cF * / c= c< cBIT1 b0 c_0 cF f0 * / c= c< cBIT1 b0 c_0 cF f0
- |- ((_0 + (BIT0 n)) = (BIT0 n))
T c= c+ c_0 cBIT0 f0 cBIT0 f0
+ |- (((!x. (((\d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) x) ==> F)) ==> ((?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F)) = ((?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F))
T c= c==> ! c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b1 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b0 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b0 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) |- (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b1 f0
+ |- ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- (T = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))))))
T c= cT c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV
- |- ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))
T c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ |- (((!v. (!w. (!w1. (!w2. (((real_le (real_of_num (NUMERAL _0))) ((((azim v) w) w1) w2)) /\ (((real_lt ((((azim v) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance (w , v))) e3) = ((vector_sub w) v)) /\ (~ (w = v)))) ==> (?psi. (?r1. (?r2. ((((vector_sub w1) v) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub w) v))))) /\ ((((vector_sub w2) v) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim v) w) w1) w2))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim v) w) w1) w2))))) e2)) ((% h2) ((vector_sub w) v))))) /\ (((~ (collinear (v INSERT (w INSERT (w1 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear (v INSERT (w INSERT (w2 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))))))) ==> ((\v. (!w. (!w1. (!w2. (((real_le (real_of_num (NUMERAL _0))) ((((azim v) w) w1) w2)) /\ (((real_lt ((((azim v) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance (w , v))) e3) = ((vector_sub w) v)) /\ (~ (w = v)))) ==> (?psi. (?r1. (?r2. ((((vector_sub w1) v) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub w) v))))) /\ ((((vector_sub w2) v) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim v) w) w1) w2))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim v) w) w1) w2))))) e2)) ((% h2) ((vector_sub w) v))))) /\ (((~ (collinear (v INSERT (w INSERT (w1 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear (v INSERT (w INSERT (w2 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))))))) (vec (NUMERAL _0)))) = ((\v. (!w. (!w1. (!w2. (((real_le (real_of_num (NUMERAL _0))) ((((azim v) w) w1) w2)) /\ (((real_lt ((((azim v) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance (w , v))) e3) = ((vector_sub w) v)) /\ (~ (w = v)))) ==> (?psi. (?r1. (?r2. ((((vector_sub w1) v) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub w) v))))) /\ ((((vector_sub w2) v) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim v) w) w1) w2))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim v) w) w1) w2))))) e2)) ((% h2) ((vector_sub w) v))))) /\ (((~ (collinear (v INSERT (w INSERT (w1 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear (v INSERT (w INSERT (w2 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))))))) (vec (NUMERAL _0))))
T c= c==> ! ! ! ! c/\ creal_le creal_of_num cNUMERAL c_0 cazim b0 b1 b2 b3 c/\ creal_lt cazim b0 b1 b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b6 b7 b8 c/\ c= c% cdistance c, b1 b0 b8 cvector_sub b1 b0 c~ c= b1 b0 c? / c? / c? / c/\ c= cvector_sub b2 b0 cvector_add c% creal_mul b10 ccos b9 b6 cvector_add c% creal_mul b10 csin b9 b7 c% b4 cvector_sub b1 b0 c/\ c= cvector_sub b3 b0 cvector_add c% creal_mul b11 ccos creal_add b9 cazim b0 b1 b2 b3 b6 cvector_add c% creal_mul b11 csin creal_add b9 cazim b0 b1 b2 b3 b7 c% b5 cvector_sub b1 b0 c/\ c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b10 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b11 * / ! ! ! c/\ creal_le creal_of_num cNUMERAL c_0 cazim b0 b1 b2 b3 c/\ creal_lt cazim b0 b1 b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b6 b7 b8 c/\ c= c% cdistance c, b1 b0 b8 cvector_sub b1 b0 c~ c= b1 b0 c? / c? / c? / c/\ c= cvector_sub b2 b0 cvector_add c% creal_mul b10 ccos b9 b6 cvector_add c% creal_mul b10 csin b9 b7 c% b4 cvector_sub b1 b0 c/\ c= cvector_sub b3 b0 cvector_add c% creal_mul b11 ccos creal_add b9 cazim b0 b1 b2 b3 b6 cvector_add c% creal_mul b11 csin creal_add b9 cazim b0 b1 b2 b3 b7 c% b5 cvector_sub b1 b0 c/\ c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b10 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b11 cvec cNUMERAL c_0 * / ! ! ! c/\ creal_le creal_of_num cNUMERAL c_0 cazim b0 b1 b2 b3 c/\ creal_lt cazim b0 b1 b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b6 b7 b8 c/\ c= c% cdistance c, b1 b0 b8 cvector_sub b1 b0 c~ c= b1 b0 c? / c? / c? / c/\ c= cvector_sub b2 b0 cvector_add c% creal_mul b10 ccos b9 b6 cvector_add c% creal_mul b10 csin b9 b7 c% b4 cvector_sub b1 b0 c/\ c= cvector_sub b3 b0 cvector_add c% creal_mul b11 ccos creal_add b9 cazim b0 b1 b2 b3 b6 cvector_add c% creal_mul b11 csin creal_add b9 cazim b0 b1 b2 b3 b7 c% b5 cvector_sub b1 b0 c/\ c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b10 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b11 cvec cNUMERAL c_0
- |- ((\n. ((BIT0 n) >= _0)) n)
T * / c>= cBIT0 b0 c_0 f0
+ |- (((!z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z)))) ==> ((\z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z)))) z)) = ((\z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z)))) z))
T c= c==> ! c= ccomplex_inv ccomplex_mul f0 b0 ccomplex_mul ccomplex_inv f0 ccomplex_inv b0 * / c= ccomplex_inv ccomplex_mul f0 b0 ccomplex_mul ccomplex_inv f0 ccomplex_inv b0 f1 * / c= ccomplex_inv ccomplex_mul f0 b0 ccomplex_mul ccomplex_inv f0 ccomplex_inv b0 f1
- |- (((BIT1 n) - _0) = (BIT1 n))
T c= c- cBIT1 f0 c_0 cBIT1 f0
+ |- (((?r2. (P r2)) ==> Q) = (!r2. ((P r2) ==> Q)))
T c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1
+ ((cexp ((vector_sub w) z)) = ((complex_div (cexp w)) (cexp z))) |- (((complex_div (cexp w)) (cexp z)) = (cexp ((vector_sub w) z)))
T c==> c= ccexp cvector_sub f0 f1 ccomplex_div ccexp f0 ccexp f1 c= ccomplex_div ccexp f0 ccexp f1 ccexp cvector_sub f0 f1
- (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a) |- ((((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a) /\ (?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)))
T c==> c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f2 c/\ c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f2 c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0
- |- (((!n. ((_0 - (BIT0 n)) = _0)) ==> ((\n. ((_0 - (BIT0 n)) = _0)) n)) = ((\n. ((_0 - (BIT0 n)) = _0)) n))
T c= c==> ! c= c- c_0 cBIT0 b0 c_0 * / c= c- c_0 cBIT0 b0 c_0 f0 * / c= c- c_0 cBIT0 b0 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) |- (!a. ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a)))
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 ! c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg f0 b0
+ |- ((\w. (!z. (((complex_div (cexp w)) (cexp z)) = (cexp ((vector_sub w) z))))) w)
T * / ! c= ccomplex_div ccexp b0 ccexp b1 ccexp cvector_sub b0 b1 f0
- |- (((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) ==> ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n)) = ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n))
T c= c==> ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0
- |- ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)
T * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- ((\x. (((distance (x , (vec (NUMERAL _0)))) = (vector_norm x)) /\ ((distance ((vec (NUMERAL _0)) , x)) = (vector_norm x)))) x)
T * / c/\ c= cdistance c, b0 cvec cNUMERAL c_0 cvector_norm b0 c= cdistance c, cvec cNUMERAL c_0 b0 cvector_norm b0 f0
- |- ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))
T c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (T = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))))))
T c= cT c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV
+ |- (((!c. (!x. (((% c) x) = ((complex_mul (Cx c)) x)))) ==> ((\c. (!x. (((% c) x) = ((complex_mul (Cx c)) x)))) c)) = ((\c. (!x. (((% c) x) = ((complex_mul (Cx c)) x)))) c))
T c= c==> ! ! c= c% b0 b1 ccomplex_mul cCx b0 b1 * / ! c= c% b0 b1 ccomplex_mul cCx b0 b1 f0 * / ! c= c% b0 b1 ccomplex_mul cCx b0 b1 f0
- |- (((!n. (((BIT1 n) <= _0) = F)) ==> ((\n. (((BIT1 n) <= _0) = F)) n)) = ((\n. (((BIT1 n) <= _0) = F)) n))
T c= c==> ! c= c<= cBIT1 b0 c_0 cF * / c= c<= cBIT1 b0 c_0 cF f0 * / c= c<= cBIT1 b0 c_0 cF f0
- |- ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
+ |- ((\w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))))) w)
T * / ! ! c==> ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c= cazim f0 b0 b1 b2 creal_of_num cNUMERAL c_0 f1
+ |- ((ccos (Cx x)) = (Cx (cos x)))
T c= cccos cCx f0 cCx ccos f0
- |- ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))
T c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- ((\e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2
- |- ((\n. (~ (_0 >= (BIT1 n)))) n)
T * / c~ c>= c_0 cBIT1 b0 f0
- |- (((!n. ((_0 + (BIT0 n)) = (BIT0 n))) ==> ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)) = ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n))
T c= c==> ! c= c+ c_0 cBIT0 b0 cBIT0 b0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
- |- (((!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) ==> ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)) = ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
- (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) /\ (((vec (NUMERAL _0)) = (basis k)) = F))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= cvec cNUMERAL c_0 cbasis f0 cF
+ |- ((\w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))))) w)
T * / ! ! c==> ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cazim f0 b0 b1 b2 creal_of_num cNUMERAL c_0 f1
+ |- (((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) ==> ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)) = ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT0 b1 cF * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0 * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
- |- ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)
T * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
+ |- ((\w. (!z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z))))) w)
T * / ! c= ccomplex_inv ccomplex_mul b0 b1 ccomplex_mul ccomplex_inv b0 ccomplex_inv b1 f0
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV)))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV
- |- ((SUC (BIT1 n)) = (BIT0 (SUC n)))
T c= cSUC cBIT1 f0 cBIT0 cSUC f0
+ |- ((\p'. (!q'. ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) = p') ==> ((p' ==> ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))) = q')) ==> ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 b0 c==> c==> b0 c= c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f4 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 b1 c= c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f4 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c==> b0 b1 f8
- |- (((BIT1 m) < (BIT1 n)) = (m < n))
T c= c< cBIT1 f0 cBIT1 f1 c< f0 f1
- ((vec (NUMERAL _0)) = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) |- (((dropout (NUMERAL (BIT1 (BIT1 _0)))) x) = (vec (NUMERAL _0)))
T c==> c= cvec cNUMERAL c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c= cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cvec cNUMERAL c_0
+ |- (((!z. (((complex_mul w) (complex_inv z)) = ((complex_div w) z))) ==> ((\z. (((complex_mul w) (complex_inv z)) = ((complex_div w) z))) z)) = ((\z. (((complex_mul w) (complex_inv z)) = ((complex_div w) z))) z))
T c= c==> ! c= ccomplex_mul f0 ccomplex_inv b0 ccomplex_div f0 b0 * / c= ccomplex_mul f0 ccomplex_inv b0 ccomplex_div f0 b0 f1 * / c= ccomplex_mul f0 ccomplex_inv b0 ccomplex_div f0 b0 f1
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))), (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) |- ((Arg z) = a)
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= ccomplex_mul cCx f0 ccexp ccomplex_mul cii cCx f1 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg f2 f1
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) |- ((\a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) a)
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 * / ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!x. (((\r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) x) ==> ((!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) ==> ((Arg z) = a)))) ==> ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) ==> ((Arg z) = a)))) = ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) ==> ((Arg z) = a))))
T c= c==> ! c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi b0 c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= ccomplex_mul cCx b2 ccexp ccomplex_mul cii cCx b1 b3 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b3 b1 c= cArg f1 f0 c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= cArg f1 f0 c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= cArg f1 f0
- |- ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)
T * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
+ |- (((!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) ==> ((\x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) x)) = ((\x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) x))
T c= c==> ! c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 * / c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 f0 * / c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 f0
- |- (((!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((NUMERAL (NUMERAL _0)) = (NUMERAL _0))
T c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0
+ |- ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) x)
T * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 f0
+ |- (((!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div x) y)))) ==> ((\y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div x) y)))) y)) = ((\y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div x) y)))) y))
T c= c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div f0 b0 * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div f0 b0 f1 * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div f0 b0 f1
+ |- (((!w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))))) ==> ((\w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))))) w)) = ((\w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))))) w))
T c= c==> ! ! ! c==> ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cazim f0 b0 b1 b2 creal_of_num cNUMERAL c_0 * / ! ! c==> ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cazim f0 b0 b1 b2 creal_of_num cNUMERAL c_0 f1 * / ! ! c==> ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cazim f0 b0 b1 b2 creal_of_num cNUMERAL c_0 f1
+ ((\r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) r) |- (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. (!y. ((Cx ((real_add x) y)) = ((vector_add (Cx x)) (Cx y))))) x)
T * / ! c= cCx creal_add b0 b1 cvector_add cCx b0 cCx b1 f0
+ |- ((((\psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) psi) ==> F) = T)
T c= c==> * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
- |- (((!n. ((PRE (BIT1 n)) = (BIT0 n))) ==> ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n)) = ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n))
T c= c==> ! c= cPRE cBIT1 b0 cBIT0 b0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0
+ |- (((!y. (((dropout k) ((vector_add x) y)) = ((vector_add ((dropout k) x)) ((dropout k) y)))) ==> ((\y. (((dropout k) ((vector_add x) y)) = ((vector_add ((dropout k) x)) ((dropout k) y)))) y)) = ((\y. (((dropout k) ((vector_add x) y)) = ((vector_add ((dropout k) x)) ((dropout k) y)))) y))
T c= c==> ! c= cdropout f0 cvector_add f1 b0 cvector_add cdropout f0 f1 cdropout f0 b0 * / c= cdropout f0 cvector_add f1 b0 cvector_add cdropout f0 f1 cdropout f0 b0 f2 * / c= cdropout f0 cvector_add f1 b0 cvector_add cdropout f0 f1 cdropout f0 b0 f2
+ |- ((\k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (~ ((basis k) = (vec (NUMERAL _0)))))) k)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c~ c= cbasis b0 cvec cNUMERAL c_0 f0
+ |- ((\x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) x)
T * / c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 f0
+ |- ((((\z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z) ==> F) = T)
T c= c==> * / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
- (?a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((?a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (T = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))))))
T c= cT c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV
- |- (((!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) ==> ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)) = ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n))
T c= c==> ! c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
+ |- (((BIT1 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT1 f0 cBIT1 f1 c<= f0 f1
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)), ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- (a = (Arg ((complex_div ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (vec (NUMERAL _0)))))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (vec (NUMERAL _0))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f2 c= f0 cArg ccomplex_div cvector_add c% creal_mul f2 ccos creal_add f3 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f2 csin creal_add f3 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cvec cNUMERAL c_0 cvector_add c% creal_mul f1 ccos f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cvec cNUMERAL c_0
+ |- ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1
+ |- ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 f2 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 f2
- |- (((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) ==> ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)) = ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)), ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- (((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))) = a)) = ((Arg ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))) = a))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f2 c= c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 ccomplex_mul cCx creal_div f2 f1 ccexp cvector_sub ccomplex_mul cii cCx creal_add f3 f0 ccomplex_mul cii cCx f3 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg ccomplex_mul cCx creal_div f2 f1 ccexp cvector_sub ccomplex_mul cii cCx creal_add f3 f0 ccomplex_mul cii cCx f3 f0 c= cArg ccomplex_mul cCx creal_div f2 f1 ccexp cvector_sub ccomplex_mul cii cCx creal_add f3 f0 ccomplex_mul cii cCx f3 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!a. (((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) a) ==> (?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a))))
T c==> * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 f2 c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0
+ |- (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))
T c= ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1
- |- (((EVEN _0) = T) /\ ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F))))
T c/\ c= cEVEN c_0 cT c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n)
T * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1
+ |- (((dot (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cdot cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) a) |- (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)
T c==> * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 f2 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f2
+ ((\z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z) |- (((\z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z) /\ F)
T c==> * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f4 c/\ * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f4 cF
- (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((NUMERAL n) > (NUMERAL m)) = (n > m))
T c= c> cNUMERAL f0 cNUMERAL f1 c> f0 f1
+ |- ((collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY)))) \/ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))))
T c\/ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY
- |- ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))
T c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
+ |- (((!e1. (!e2. (!e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3)))))))))))) ==> ((\e1. (!e2. (!e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3)))))))))))) e1)) = ((\e1. (!e2. (!e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3)))))))))))) e1))
T c= c==> ! ! ! c= corthonormal b0 b1 b2 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b1 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b2 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b1 creal_of_num cNUMERAL c_0 c/\ c= cdot b0 b2 creal_of_num cNUMERAL c_0 c/\ c= cdot b1 b2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross b0 b1 b2 * / ! ! c= corthonormal b0 b1 b2 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b1 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b2 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b1 creal_of_num cNUMERAL c_0 c/\ c= cdot b0 b2 creal_of_num cNUMERAL c_0 c/\ c= cdot b1 b2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross b0 b1 b2 f0 * / ! ! c= corthonormal b0 b1 b2 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b1 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b2 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b1 creal_of_num cNUMERAL c_0 c/\ c= cdot b0 b2 creal_of_num cNUMERAL c_0 c/\ c= cdot b1 b2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross b0 b1 b2 f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) |- ((?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) ==> ((((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b2 cvector_add c% creal_mul b7 csin creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- (((BIT0 m) < (BIT0 n)) = (m < n))
T c= c< cBIT0 f0 cBIT0 f1 c< f0 f1
+ |- ((csin (Cx x)) = (Cx (sin x)))
T c= ccsin cCx f0 cCx csin f0
- |- (((~ (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F)) = ((((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F))
T c= c==> c~ c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- ((!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> ! ! ! c==> c/\ corthonormal b0 b1 b2 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f1 cvector_add c% creal_mul b4 ccos b3 b0 cvector_add c% creal_mul b4 csin b3 b1 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f3 cvector_add c% creal_mul b5 ccos creal_add b3 f0 b0 cvector_add c% creal_mul b5 csin creal_add b3 f0 b1 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt creal_of_num cNUMERAL c_0 b5 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f3 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))
T c= cPRE cNUMERAL f0 cNUMERAL cPRE f0
+ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))) |- (((real_of_num (NUMERAL _0)) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))) = (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= c= creal_of_num cNUMERAL c_0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f1 f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
- ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) |- (((real_lt (real_of_num (NUMERAL _0))) r1) = T)
T c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= creal_lt creal_of_num cNUMERAL c_0 f1 cT
- |- (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))
T c= c+ cBIT1 f0 cBIT1 f1 cBIT0 cSUC c+ f0 f1
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) |- ((\r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a)))) r)
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 * / ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b1 f0 f1
- |- (((!n. ((_0 EXP (BIT1 n)) = _0)) ==> ((\n. ((_0 EXP (BIT1 n)) = _0)) n)) = ((\n. ((_0 EXP (BIT1 n)) = _0)) n))
T c= c==> ! c= cEXP c_0 cBIT1 b0 c_0 * / c= cEXP c_0 cBIT1 b0 c_0 f0 * / c= cEXP c_0 cBIT1 b0 c_0 f0
+ |- (((!x. ((ccos (Cx x)) = (Cx (cos x)))) ==> ((\x. ((ccos (Cx x)) = (Cx (cos x)))) x)) = ((\x. ((ccos (Cx x)) = (Cx (cos x)))) x))
T c= c==> ! c= cccos cCx b0 cCx ccos b0 * / c= cccos cCx b0 cCx ccos b0 f0 * / c= cccos cCx b0 cCx ccos b0 f0
+ |- (((!b. (!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d))))) ==> ((\b. (!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d))))) b)) = ((\b. (!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d))))) b))
T c= c==> ! ! c= ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 * / ! c= ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 f2 * / ! c= ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 f2
- |- ((!r2. t) = t)
T c= ! f0 f0
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- ((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f1 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f3 cvector_add c% creal_mul b2 ccos creal_add b0 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f3 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
- |- ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_0 >= (BIT0 n)) = (_0 >= n))
T c= c>= c_0 cBIT0 f0 c>= c_0 f0
+ |- ((\k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> ((vector_norm (basis k)) = (real_of_num (NUMERAL (BIT1 _0)))))) k)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= cvector_norm cbasis b0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = (!h1. ((?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))))
T c= c==> c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 ! c==> c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> c/\ c= f1 cvector_add c% creal_mul f2 ccos f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f2 csin f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f5 cvector_add c% creal_mul f6 ccos creal_add f3 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f6 csin creal_add f3 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f6 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f6 ccos creal_add f3 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f6 csin creal_add f3 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f2 ccos f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f2 csin f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ |- (((!t. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t)))))))) ==> ((\t. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t)))))))) t)) = ((\t. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t)))))))) t))
T c= c==> ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 * / c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 f1 * / c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 f1
+ |- ((\Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))) Q)
T * / c= c==> c? / * f0 b1 b0 ! c==> * f0 b1 b0 f1
+ |- ((((\r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) r) ==> ((!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) ==> ((Arg z) = a))) = T)
T c= c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f2 c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= cArg f1 f0 cT
+ |- (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))))
T c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT0 n) - _0) = (BIT0 n))
T c= c- cBIT0 f0 c_0 cBIT0 f0
- |- (((!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) ==> ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)) = ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
+ |- (((!P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) ==> ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P)) = ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P))
T c= c==> ! ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0
+ |- ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
+ (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))), ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))
T c==> ! ! ! c==> c/\ corthonormal b0 b1 b2 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b4 ccos b3 b0 cvector_add c% creal_mul b4 csin b3 b1 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b5 ccos creal_add b3 f3 b0 cvector_add c% creal_mul b5 csin creal_add b3 f3 b1 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt creal_of_num cNUMERAL c_0 b5 c==> creal_le creal_of_num cNUMERAL c_0 f3 c==> creal_lt f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- (((BIT1 n) <= _0) = F)
T c= c<= cBIT1 f0 c_0 cF
+ |- ((\y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div x) y)))) y)
T * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 creal_div f0 b0 f1
+ |- ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))
T c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (dimindex UNIV))))) ==> (((dot (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (((dot (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdot cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cdot cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) ==> ((\x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) x)) = ((\x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) x))
T c= c==> ! c= c% creal_of_num cNUMERAL cBIT1 c_0 b0 b0 * / c= c% creal_of_num cNUMERAL cBIT1 c_0 b0 b0 f0 * / c= c% creal_of_num cNUMERAL cBIT1 c_0 b0 b0 f0
+ |- ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)
T * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV
+ T |- (T /\ ((?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))) = (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))
T c==> cT c/\ cT c= c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2
+ |- ((((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) ==> F)
T c==> c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)
T * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
- |- ((\n. ((EVEN (BIT0 n)) = T)) n)
T * / c= cEVEN cBIT0 b0 cT f0
- |- ((_0 + _0) = _0)
T c= c+ c_0 c_0 c_0
- |- (((!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) ==> ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n)) = ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n))
T c= c==> ! c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1
+ (((complex_div w) z) = ((complex_mul w) (complex_inv z))) |- (((complex_mul w) (complex_inv z)) = ((complex_div w) z))
T c==> c= ccomplex_div f0 f1 ccomplex_mul f0 ccomplex_inv f1 c= ccomplex_mul f0 ccomplex_inv f1 ccomplex_div f0 f1
- |- ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))
T c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((_0 * (BIT0 n)) = _0)
T c= c* c_0 cBIT0 f0 c_0
- |- (((!n. (((BIT0 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- (((BIT0 n) >= (BIT0 m)) = (n >= m))
T c= c>= cBIT0 f0 cBIT0 f1 c>= f0 f1
+ |- (((BIT0 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT1 f1 c<= f0 f1
- |- ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m)
T * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)), ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- (a = (Arg ((complex_mul ((complex_mul (Cx r2)) (cexp ((complex_mul ii) (Cx ((real_add psi) a)))))) ((complex_mul (complex_inv (Cx r1))) (complex_inv (cexp ((complex_mul ii) (Cx psi))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f2 c= f0 cArg ccomplex_mul ccomplex_mul cCx f2 ccexp ccomplex_mul cii cCx creal_add f3 f0 ccomplex_mul ccomplex_inv cCx f1 ccomplex_inv ccexp ccomplex_mul cii cCx f3
- (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) |- ((?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b0 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b0 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((\a. (!psi. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))))) a)
T * / ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 f0
- |- (((!n. ((_0 * (BIT1 n)) = _0)) ==> ((\n. ((_0 * (BIT1 n)) = _0)) n)) = ((\n. ((_0 * (BIT1 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT1 b0 c_0 * / c= c* c_0 cBIT1 b0 c_0 f0 * / c= c* c_0 cBIT1 b0 c_0 f0
- |- ((\m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) m)
T * / ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 f0
- |- ((EVEN (BIT1 n)) = F)
T c= cEVEN cBIT1 f0 cF
+ |- ((\q'. ((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) = p') ==> ((p' ==> ((?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))) = q')) ==> ((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 f0 c==> c==> f0 c= c? / c? / c? / c/\ c= f1 cvector_add c% creal_mul b2 ccos b1 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin b1 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f3 cvector_add c% creal_mul b3 ccos creal_add b1 f4 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin creal_add b1 f4 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b2 creal_lt creal_of_num cNUMERAL c_0 b3 b0 c= c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f1 cvector_add c% creal_mul b2 ccos b1 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin b1 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f3 cvector_add c% creal_mul b3 ccos creal_add b1 f4 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin creal_add b1 f4 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b2 creal_lt creal_of_num cNUMERAL c_0 b3 c==> f0 b0 f6
- |- ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)
T * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
+ |- ((\x. (!y. (((complex_div (Cx x)) (Cx y)) = (Cx ((real_div x) y))))) x)
T * / ! c= ccomplex_div cCx b0 cCx b1 cCx creal_div b0 b1 f0
+ |- (((!x. (((\a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) x) ==> F)) ==> ((?a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F)) = ((?a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b1 cvector_sub ccomplex_mul cii cvector_add cCx b2 cCx b1 ccomplex_mul cii cCx b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((PRE _0) = _0)
T c= cPRE c_0 c_0
- |- ((?r2. t) = t)
T c= c? / f0 f0
+ ((real_le (real_of_num (NUMERAL _0))) a) |- (((real_le (real_of_num (NUMERAL _0))) a) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 f0 cT
+ |- (((vector_add ((% ((real_mul r) (cos t))) (basis (NUMERAL (BIT1 _0))))) ((% ((real_mul r) (sin t))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) = ((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx t)))))
T c= cvector_add c% creal_mul f0 ccos f1 cbasis cNUMERAL cBIT1 c_0 c% creal_mul f0 csin f1 cbasis cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul cCx f0 ccexp ccomplex_mul cii cCx f1
- |- ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n)
T * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((\n. ((BIT1 n) > _0)) n)
T * / c> cBIT1 b0 c_0 f0
- |- (((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) ==> ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m)) = ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0
- |- (((!n. ((BIT1 n) >= _0)) ==> ((\n. ((BIT1 n) >= _0)) n)) = ((\n. ((BIT1 n) >= _0)) n))
T c= c==> ! c>= cBIT1 b0 c_0 * / c>= cBIT1 b0 c_0 f0 * / c>= cBIT1 b0 c_0 f0
- |- (((!n. (((BIT1 n) > (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 > (BIT0 n)) = F)
T c= c> c_0 cBIT0 f0 cF
+ ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- (((real_lt (real_of_num (NUMERAL _0))) ((real_div r2) r1)) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c==> creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 f0 cT
- |- (((!n. (((BIT1 n) - _0) = (BIT1 n))) ==> ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)) = ((\n. (((BIT1 n) - _0) = (BIT1 n))) n))
T c= c==> ! c= c- cBIT1 b0 c_0 cBIT1 b0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- (((!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) ==> ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)) = ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- (~ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c~ c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ (((complex_div (Cx x)) (Cx y)) = (Cx ((real_div x) y))) |- ((Cx ((real_div x) y)) = ((complex_div (Cx x)) (Cx y)))
T c==> c= ccomplex_div cCx f0 cCx f1 cCx creal_div f0 f1 c= cCx creal_div f0 f1 ccomplex_div cCx f0 cCx f1
+ |- ((\z. ((cexp ((complex_mul ii) z)) = ((vector_add (ccos z)) ((complex_mul ii) (csin z))))) z)
T * / c= ccexp ccomplex_mul cii b0 cvector_add cccos b0 ccomplex_mul cii ccsin b0 f0
+ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((!a. (!psi. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))))) ==> ((\a. (!psi. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))))) a)) = ((\a. (!psi. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))))) a))
T c= c==> ! ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 * / ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 f0 * / ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 f0
- |- ((EVEN _0) = T)
T c= cEVEN c_0 cT
+ |- ((\v. (!w. (!w1. (!w2. (((real_le (real_of_num (NUMERAL _0))) ((((azim v) w) w1) w2)) /\ (((real_lt ((((azim v) w) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance (w , v))) e3) = ((vector_sub w) v)) /\ (~ (w = v)))) ==> (?psi. (?r1. (?r2. ((((vector_sub w1) v) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub w) v))))) /\ ((((vector_sub w2) v) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim v) w) w1) w2))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim v) w) w1) w2))))) e2)) ((% h2) ((vector_sub w) v))))) /\ (((~ (collinear (v INSERT (w INSERT (w1 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear (v INSERT (w INSERT (w2 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))))))) (vec (NUMERAL _0)))
T * / ! ! ! c/\ creal_le creal_of_num cNUMERAL c_0 cazim b0 b1 b2 b3 c/\ creal_lt cazim b0 b1 b2 b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b6 b7 b8 c/\ c= c% cdistance c, b1 b0 b8 cvector_sub b1 b0 c~ c= b1 b0 c? / c? / c? / c/\ c= cvector_sub b2 b0 cvector_add c% creal_mul b10 ccos b9 b6 cvector_add c% creal_mul b10 csin b9 b7 c% b4 cvector_sub b1 b0 c/\ c= cvector_sub b3 b0 cvector_add c% creal_mul b11 ccos creal_add b9 cazim b0 b1 b2 b3 b6 cvector_add c% creal_mul b11 csin creal_add b9 cazim b0 b1 b2 b3 b7 c% b5 cvector_sub b1 b0 c/\ c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b10 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b11 cvec cNUMERAL c_0
- |- (((!w. (!w1. (!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))))) ==> ((\w. (!w1. (!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))))) w)) = ((\w. (!w1. (!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))))) w))
T c= c==> ! ! ! c==> c= f0 b0 c= cazim f0 b0 b1 b2 creal_of_num cNUMERAL c_0 * / ! ! c==> c= f0 b0 c= cazim f0 b0 b1 b2 creal_of_num cNUMERAL c_0 f1 * / ! ! c==> c= f0 b0 c= cazim f0 b0 b1 b2 creal_of_num cNUMERAL c_0 f1
+ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY)))) |- ((real_of_num (NUMERAL _0)) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= creal_of_num cNUMERAL c_0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) ==> ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)) = ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m))
T c= c==> ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
- |- ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))
T c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ |- ((\y. (((dropout k) ((vector_add x) y)) = ((vector_add ((dropout k) x)) ((dropout k) y)))) y)
T * / c= cdropout f0 cvector_add f1 b0 cvector_add cdropout f0 f1 cdropout f0 b0 f2
- |- ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
- |- (((!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) ==> ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0
- |- ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) = p') ==> ((p' ==> ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))))))) = q')) ==> ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))) = (p' ==> q'))))
T c==> c= c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 f8 c==> c==> f8 c= c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 f9 c= c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c==> f8 f9
- |- (((~ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> (((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = F)) = (((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = F))
T c= c==> c~ c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((\b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) b) |- (((\b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) b) /\ F)
T c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ |- (((!x. (((\r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) x) ==> F)) ==> ((?r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F)) = ((?r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b1 cCx ccos b2 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b1 cCx csin b2 cii ccomplex_mul cCx b1 cvector_add cCx ccos b2 ccomplex_mul cii cCx csin b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!w. (!z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z))))) ==> ((\w. (!z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z))))) w)) = ((\w. (!z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z))))) w))
T c= c==> ! ! c= ccomplex_inv ccomplex_mul b0 b1 ccomplex_mul ccomplex_inv b0 ccomplex_inv b1 * / ! c= ccomplex_inv ccomplex_mul b0 b1 ccomplex_mul ccomplex_inv b0 ccomplex_inv b1 f0 * / ! c= ccomplex_inv ccomplex_mul b0 b1 ccomplex_mul ccomplex_inv b0 ccomplex_inv b1 f0
+ |- ((((~ (!r. (!t. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t)))))))))) = (?r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> (!r. (!t. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t)))))))))) = (!r. (!t. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))))))
T c= c==> c= c~ ! ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 ! ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 ! ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1
- |- (((!n. (((BIT0 n) > _0) = (n > _0))) ==> ((\n. (((BIT0 n) > _0) = (n > _0))) n)) = ((\n. (((BIT0 n) > _0) = (n > _0))) n))
T c= c==> ! c= c> cBIT0 b0 c_0 c> b0 c_0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0
+ |- ((_0 = (BIT1 n)) = F)
T c= c= c_0 cBIT1 f0 cF
- |- (((!n. (~ (_0 > (BIT0 n)))) ==> ((\n. (~ (_0 > (BIT0 n)))) n)) = ((\n. (~ (_0 > (BIT0 n)))) n))
T c= c==> ! c~ c> c_0 cBIT0 b0 * / c~ c> c_0 cBIT0 b0 f0 * / c~ c> c_0 cBIT0 b0 f0
+ |- (((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)
T c==> c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (a = (Arg ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi))))))) |- ((Arg ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))) = a)
T c==> c= f0 cArg ccomplex_mul cCx creal_div f1 f2 ccexp cvector_sub ccomplex_mul cii cCx creal_add f3 f0 ccomplex_mul cii cCx f3 c= cArg ccomplex_mul cCx creal_div f1 f2 ccexp cvector_sub ccomplex_mul cii cCx creal_add f3 f0 ccomplex_mul cii cCx f3 f0
+ |- ((((\z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z) ==> F) = T)
T c= c==> * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f4 cF cT
+ |- ((\e2. (!e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3))))))))))) e2)
T * / ! c= corthonormal f0 b0 b1 c/\ c= cdot f0 f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b1 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f0 b0 creal_of_num cNUMERAL c_0 c/\ c= cdot f0 b1 creal_of_num cNUMERAL c_0 c/\ c= cdot b0 b1 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross f0 b0 b1 f1
- |- ((SUC (BIT0 n)) = (BIT1 n))
T c= cSUC cBIT0 f0 cBIT1 f0
- |- ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)
T * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- ((!r1. (!r2. (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))))) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= ! ! c==> c/\ c= f1 cvector_add c% creal_mul b0 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b0 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul b1 ccos creal_add f2 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin creal_add f2 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul b1 ccos creal_add f2 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin creal_add f2 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul b0 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b0 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 cT
+ |- ((\n. ((_0 = (BIT1 n)) = F)) n)
T * / c= c= c_0 cBIT1 b0 cF f0
+ |- ((((~ (!a. (!psi. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi)))))))) = (?a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> (!a. (!psi. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi)))))))) = (!a. (!psi. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))))))
T c= c==> c= c~ ! ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 ! ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 ! ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1
+ |- (((?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = (!r2. (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))))
T c= c==> c? / c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul b0 ccos creal_add f2 f5 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b0 csin creal_add f2 f5 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f6 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 b0 c= f5 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f4 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 ! c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul b0 ccos creal_add f2 f5 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b0 csin creal_add f2 f5 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f6 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 b0 c= f5 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f4 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)
T * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- (((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) ==> ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)) = ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m))
T c= c==> ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))
T c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((\psi. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi)))))) psi)
T * / c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 f1
- |- ((\n. ((BIT1 n) >= _0)) n)
T * / c>= cBIT1 b0 c_0 f0
+ |- (!z. (((\z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z) ==> F))
T c==> * / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ |- ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)
T * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
+ |- (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) e')))
T c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((BIT0 n) > (BIT0 m)) = (n > m))
T c= c> cBIT0 f0 cBIT0 f1 c> f0 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (((cross (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0)))))
T c= ccross cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ |- ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)
T * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
+ |- (((!x. (((\b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) x) ==> F)) ==> ((?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F)) = ((?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul f1 b2 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))) /\ (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) /\ ((_0 >= _0) /\ ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))))) /\ (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))))
T c/\ c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 c/\ c/\ ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 c/\ c>= c_0 c_0 c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- ((\k. (!x. (!y. (((dropout k) ((vector_add x) y)) = ((vector_add ((dropout k) x)) ((dropout k) y)))))) k)
T * / ! ! c= cdropout b0 cvector_add b1 b2 cvector_add cdropout b0 b1 cdropout b0 b2 f0
+ (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) |- ((\e2. (!e3. (((((orthonormal (basis (NUMERAL (BIT1 _0)))) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))) (basis (NUMERAL (BIT0 (BIT1 _0)))))
T c==> ! ! ! c==> c/\ corthonormal b0 b1 b2 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b4 ccos b3 b0 cvector_add c% creal_mul b4 csin b3 b1 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b5 ccos creal_add b3 f3 b0 cvector_add c% creal_mul b5 csin creal_add b3 f3 b1 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt creal_of_num cNUMERAL c_0 b5 * / ! c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 b0 b1 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b3 ccos b2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin b2 b0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b4 ccos creal_add b2 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b4 csin creal_add b2 f3 b0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 creal_lt creal_of_num cNUMERAL c_0 b4 cbasis cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- |- ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n)
T * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1
+ |- (((!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 * / c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2 * / c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2
- (?a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (dimindex UNIV)))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV
+ |- (((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) ==> ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m)) = ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT1 b1 cF * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0 * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0
- T |- (T = T)
T c==> cT c= cT cT
- |- (((ODD _0) = F) /\ ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T))))
T c/\ c= cODD c_0 cF c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
+ |- (((!j. ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))))) ==> (((dot (basis i)) (basis j)) = (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))) ==> ((\j. ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))))) ==> (((dot (basis i)) (basis j)) = (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))) j)) = ((\j. ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))))) ==> (((dot (basis i)) (basis j)) = (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))) j))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= cdot cbasis f0 cbasis b0 cCOND c= f0 b0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= cdot cbasis f0 cbasis b0 cCOND c= f0 b0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= cdot cbasis f0 cbasis b0 cCOND c= f0 b0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1
- |- (((!n. (((BIT1 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
+ |- (((!w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))))) ==> ((\w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))))) w)) = ((\w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))))) w))
T c= c==> ! ! ! c==> ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c= cazim f0 b0 b1 b2 creal_of_num cNUMERAL c_0 * / ! ! c==> ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c= cazim f0 b0 b1 b2 creal_of_num cNUMERAL c_0 f1 * / ! ! c==> ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c= cazim f0 b0 b1 b2 creal_of_num cNUMERAL c_0 f1
+ |- ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t)))))))
T c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1
- |- ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))
T c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- (((~ (_0 >= (BIT1 n))) ==> ((_0 >= (BIT1 n)) = F)) = ((_0 >= (BIT1 n)) = F))
T c= c==> c~ c>= c_0 cBIT1 f0 c= c>= c_0 cBIT1 f0 cF c= c>= c_0 cBIT1 f0 cF
- |- ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))
T c= cSUC cNUMERAL f0 cNUMERAL cSUC f0
- |- (((BIT0 n) >= _0) = T)
T c= c>= cBIT0 f0 c_0 cT
+ |- (((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = F) ==> ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e'))))) = ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e')))))
T c= c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1 c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1
- |- ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))
T c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((!n. (((BIT1 n) = _0) = F)) ==> ((\n. (((BIT1 n) = _0) = F)) n)) = ((\n. (((BIT1 n) = _0) = F)) n))
T c= c==> ! c= c= cBIT1 b0 c_0 cF * / c= c= cBIT1 b0 c_0 cF f0 * / c= c= cBIT1 b0 c_0 cF f0
+ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY)))) |- (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (real_of_num (NUMERAL _0)))
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ |- ((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))
T * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1
- |- ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))
T c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) ==> ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)) = ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n))
T c= c==> ! c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
- |- (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))))))
T c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) |- (((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))
T c==> ! ! ! c==> c/\ corthonormal b0 b1 b2 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b4 ccos b3 b0 cvector_add c% creal_mul b4 csin b3 b1 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b5 ccos creal_add b3 f3 b0 cvector_add c% creal_mul b5 csin creal_add b3 f3 b1 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt creal_of_num cNUMERAL c_0 b5 c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2
+ |- (((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) e')))) = (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) e'))))
T c= c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 f0
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) |- ((!a. ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a))) = T)
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= ! c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg f0 b0 cT
+ |- ((\y. (((complex_div (Cx x)) (Cx y)) = (Cx ((real_div x) y)))) y)
T * / c= ccomplex_div cCx f0 cCx b0 cCx creal_div f0 b0 f1
+ |- ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1
- ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT0 n) = _0) = (n = _0))) ==> ((\n. (((BIT0 n) = _0) = (n = _0))) n)) = ((\n. (((BIT0 n) = _0) = (n = _0))) n))
T c= c==> ! c= c= cBIT0 b0 c_0 c= b0 c_0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
- |- (((BIT0 n) > (BIT1 m)) = (n > m))
T c= c> cBIT0 f0 cBIT1 f1 c> f0 f1
+ |- (((!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 * / c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2 * / c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2
- |- ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)
T * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
+ ((\z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z) |- (((\z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z) /\ F)
T c==> * / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
- |- (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))))
T c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (T = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))))
T c= cT c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV
- |- ((\n. (((BIT1 n) >= (BIT0 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- (((!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) ==> ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
+ |- (((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (?z. (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) = (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c? / c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))
T c= c+ cBIT0 f0 cBIT0 f1 cBIT0 c+ f0 f1
- |- (((!n. ((_0 + (BIT1 n)) = (BIT1 n))) ==> ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n)) = ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n))
T c= c==> ! c= c+ c_0 cBIT1 b0 cBIT1 b0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0
+ |- ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))))
T c= c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f4 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0
- |- ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)
T * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))
T c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a))
T c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg f1 f0
- |- ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)
T * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
- |- (((!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))) ==> ((\w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))) w2)) = ((\w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))) w2))
T c= c==> ! c==> c= f0 f1 c= cazim f0 f1 f2 b0 creal_of_num cNUMERAL c_0 * / c==> c= f0 f1 c= cazim f0 f1 f2 b0 creal_of_num cNUMERAL c_0 f3 * / c==> c= f0 f1 c= cazim f0 f1 f2 b0 creal_of_num cNUMERAL c_0 f3
+ |- ((\g'. (!t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 f0
- |- ((\w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))) w2)
T * / c==> c= f0 f1 c= cazim f0 f1 f2 b0 creal_of_num cNUMERAL c_0 f3
- |- (((!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)) = ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
+ |- ((((\b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) b) ==> F) = T)
T c= c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
+ |- ((\t. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t)))))))) t)
T * / c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 f1
- (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (((~ ((vec (NUMERAL _0)) = (basis k))) ==> (((vec (NUMERAL _0)) = (basis k)) = F)) = (((vec (NUMERAL _0)) = (basis k)) = F))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c~ c= cvec cNUMERAL c_0 cbasis f0 c= c= cvec cNUMERAL c_0 cbasis f0 cF c= c= cvec cNUMERAL c_0 cbasis f0 cF
- |- (((!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) ==> ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)) = ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n))
T c= c==> ! c= cSUC cBIT1 b0 cBIT0 cSUC b0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
- |- ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))))))
T c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> (((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = F)) = (((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = F))
T c= c==> c~ c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((\w. (!z. (((complex_mul w) (complex_inv z)) = ((complex_div w) z)))) w)
T * / ! c= ccomplex_mul b0 ccomplex_inv b1 ccomplex_div b0 b1 f0
+ |- ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))
T c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- ((\e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 f1 b0 f2
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) |- ((collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY cF
- (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) |- ((?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((!n. (((BIT0 m) < (BIT0 n)) = (m < n))) ==> ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
+ |- ((\w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))) w2)
T * / c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cazim f0 f1 f2 b0 creal_of_num cNUMERAL c_0 f3
- |- ((((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) a) ==> (?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a))) = T)
T c= c==> * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 f2 c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 cT
+ |- (((!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))) ==> ((\z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))) z)) = ((\z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))) z))
T c= c==> ! c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 * / c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 f2 * / c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 f2
+ |- (((!x. (((\t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) x) ==> F)) ==> ((?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F)) = ((?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b1 cii ccomplex_mul cCx f0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\n. (((BIT0 n) = _0) = (n = _0))) n)
T * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)), ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- (a = (Arg ((complex_mul ((complex_mul (Cx r2)) (complex_inv (Cx r1)))) ((complex_mul (cexp ((complex_mul ii) (Cx ((real_add psi) a))))) (complex_inv (cexp ((complex_mul ii) (Cx psi))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f2 c= f0 cArg ccomplex_mul ccomplex_mul cCx f2 ccomplex_inv cCx f1 ccomplex_mul ccexp ccomplex_mul cii cCx creal_add f3 f0 ccomplex_inv ccexp ccomplex_mul cii cCx f3
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ |- ((((\t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) t) ==> F) = T)
T c= c==> * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
+ |- ((a = (Arg ((complex_mul ((complex_mul (Cx r2)) (cexp ((complex_mul ii) (Cx ((real_add psi) a)))))) ((complex_mul (complex_inv (Cx r1))) (complex_inv (cexp ((complex_mul ii) (Cx psi)))))))) = (a = (Arg ((complex_div ((complex_mul (Cx r2)) (cexp ((complex_mul ii) (Cx ((real_add psi) a)))))) ((complex_mul (Cx r1)) (cexp ((complex_mul ii) (Cx psi))))))))
T c= c= f0 cArg ccomplex_mul ccomplex_mul cCx f1 ccexp ccomplex_mul cii cCx creal_add f2 f0 ccomplex_mul ccomplex_inv cCx f3 ccomplex_inv ccexp ccomplex_mul cii cCx f2 c= f0 cArg ccomplex_div ccomplex_mul cCx f1 ccexp ccomplex_mul cii cCx creal_add f2 f0 ccomplex_mul cCx f3 ccexp ccomplex_mul cii cCx f2
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))))) ==> (((dot (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (((dot (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV c= cdot cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cdot cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) m)
T * / ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- |- (((NUMERAL n) >= (NUMERAL m)) = (n >= m))
T c= c>= cNUMERAL f0 cNUMERAL f1 c>= f0 f1
+ |- (((!x. (((\psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) x) ==> F)) ==> ((?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F)) = ((?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx f0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n)))
T c= c- cBIT0 f0 cBIT0 f1 cBIT0 c- f0 f1
+ |- (((!n. (((BIT1 m) = (BIT0 n)) = F)) ==> ((\n. (((BIT1 m) = (BIT0 n)) = F)) n)) = ((\n. (((BIT1 m) = (BIT0 n)) = F)) n))
T c= c==> ! c= c= cBIT1 f0 cBIT0 b0 cF * / c= c= cBIT1 f0 cBIT0 b0 cF f1 * / c= c= cBIT1 f0 cBIT0 b0 cF f1
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)), ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- (((real_lt (real_of_num (NUMERAL _0))) ((real_div r2) r1)) /\ ((((complex_mul (Cx ((real_div r2) r1))) (cexp ((complex_mul ii) (Cx a)))) = ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f2 c/\ creal_lt creal_of_num cNUMERAL c_0 creal_div f2 f1 c/\ c= ccomplex_mul cCx creal_div f2 f1 ccexp ccomplex_mul cii cCx f0 ccomplex_mul cCx creal_div f2 f1 ccexp cvector_sub ccomplex_mul cii cCx creal_add f3 f0 ccomplex_mul cii cCx f3 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi
+ |- ((\v. (!w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) v)
T * / ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 f0
- |- ((\n. ((_0 EXP (BIT1 n)) = _0)) n)
T * / c= cEXP c_0 cBIT1 b0 c_0 f0
+ |- ((distance (x , (vec (NUMERAL _0)))) = (vector_norm x))
T c= cdistance c, f0 cvec cNUMERAL c_0 cvector_norm f0
- |- (((!n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 EXP (BIT1 n)) = _0)
T c= cEXP c_0 cBIT1 f0 c_0
+ (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- ((((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ F)
T c==> c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))), (((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))))))), ((real_le (real_of_num (NUMERAL _0))) a) |- (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> c/\ creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c==> creal_le creal_of_num cNUMERAL c_0 f2 c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((((\a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) a) ==> F) = T)
T c= c==> * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
+ |- (((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = F) ==> ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e'))))) = ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e')))))
T c= c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1 c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1
+ |- ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))
T c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ ((\z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z) |- (((((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) ==> F) = F)
T c==> * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f4 c= c==> c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- (!psi. (((\psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) psi) ==> F))
T c==> * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
- |- ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))
T c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- (((dropout (NUMERAL (BIT1 (BIT1 _0)))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (vec (NUMERAL _0)))
T c= cdropout cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0
- |- ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)
T * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((!x. (!y. (((complex_div (Cx x)) (Cx y)) = (Cx ((real_div x) y))))) ==> ((\x. (!y. (((complex_div (Cx x)) (Cx y)) = (Cx ((real_div x) y))))) x)) = ((\x. (!y. (((complex_div (Cx x)) (Cx y)) = (Cx ((real_div x) y))))) x))
T c= c==> ! ! c= ccomplex_div cCx b0 cCx b1 cCx creal_div b0 b1 * / ! c= ccomplex_div cCx b0 cCx b1 cCx creal_div b0 b1 f0 * / ! c= ccomplex_div cCx b0 cCx b1 cCx creal_div b0 b1 f0
+ ((\a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) a) |- (((\a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) a) /\ F)
T c==> * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)), ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)), ((real_lt (real_of_num (NUMERAL _0))) r1) |- (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos creal_add f3 f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin creal_add f3 f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f0 ccos f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f0 csin f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cbasis cNUMERAL cBIT1 cBIT1 c_0
- |- ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))
T c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!v. (!w. (!w1. (!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) ==> ((\v. (!w. (!w1. (!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) v)) = ((\v. (!w. (!w1. (!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) v))
T c= c==> ! ! ! ! c==> c= b0 b1 c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 * / ! ! ! c==> c= b0 b1 c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 f0 * / ! ! ! c==> c= b0 b1 c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 f0
+ |- (((!y. ((Cx ((real_add x) y)) = ((vector_add (Cx x)) (Cx y)))) ==> ((\y. ((Cx ((real_add x) y)) = ((vector_add (Cx x)) (Cx y)))) y)) = ((\y. ((Cx ((real_add x) y)) = ((vector_add (Cx x)) (Cx y)))) y))
T c= c==> ! c= cCx creal_add f0 b0 cvector_add cCx f0 cCx b0 * / c= cCx creal_add f0 b0 cvector_add cCx f0 cCx b0 f1 * / c= cCx creal_add f0 b0 cvector_add cCx f0 cCx b0 f1
+ |- (((!w. (!z. (((complex_div w) z) = ((complex_mul w) (complex_inv z))))) ==> ((\w. (!z. (((complex_div w) z) = ((complex_mul w) (complex_inv z))))) w)) = ((\w. (!z. (((complex_div w) z) = ((complex_mul w) (complex_inv z))))) w))
T c= c==> ! ! c= ccomplex_div b0 b1 ccomplex_mul b0 ccomplex_inv b1 * / ! c= ccomplex_div b0 b1 ccomplex_mul b0 ccomplex_inv b1 f0 * / ! c= ccomplex_div b0 b1 ccomplex_mul b0 ccomplex_inv b1 f0
- |- (((!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0
- |- ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n)
T * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1
- |- ((\n. ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))) n)
T * / c= cPRE cNUMERAL b0 cNUMERAL cPRE b0 f0
- |- (((!n. ((_0 <= (BIT0 n)) = T)) ==> ((\n. ((_0 <= (BIT0 n)) = T)) n)) = ((\n. ((_0 <= (BIT0 n)) = T)) n))
T c= c==> ! c= c<= c_0 cBIT0 b0 cT * / c= c<= c_0 cBIT0 b0 cT f0 * / c= c<= c_0 cBIT0 b0 cT f0
+ |- ((\y. ((Cx ((real_add x) y)) = ((vector_add (Cx x)) (Cx y)))) y)
T * / c= cCx creal_add f0 b0 cvector_add cCx f0 cCx b0 f1
- |- (((!n. ((_0 < (BIT0 n)) = (_0 < n))) ==> ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)) = ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n))
T c= c==> ! c= c< c_0 cBIT0 b0 c< c_0 b0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
+ ((\d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) d) |- (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b0 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((vector_norm (basis (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))
T c= cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((BIT1 n) = _0) = F)
T c= c= cBIT1 f0 c_0 cF
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (!h1. (!h2. ((!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi ! ! c==> ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f1 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b7 ccos creal_add b5 f0 b2 cvector_add c% creal_mul b7 csin creal_add b5 f0 b3 c% b1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b6 creal_lt creal_of_num cNUMERAL c_0 b7 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) ==> ((((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))) = ((((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))
T c= c==> c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b2 cvector_add c% creal_mul b7 csin creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b2 cvector_add c% creal_mul b7 csin creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((\p'. (!q'. (((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) = p') ==> ((p' ==> ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))) = q')) ==> (((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b3 ccos b2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin b2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b4 ccos creal_add b2 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b4 csin creal_add b2 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 creal_lt creal_of_num cNUMERAL c_0 b4 b0 c==> c==> b0 c= c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 b1 c= c==> c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b3 ccos b2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin b2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b4 ccos creal_add b2 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b4 csin creal_add b2 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 creal_lt creal_of_num cNUMERAL c_0 b4 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c==> b0 b1 f5
- |- (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))
T c= c- cBIT0 f0 cBIT1 f1 cPRE cBIT0 c- f0 f1
+ |- (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))
T c= cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1
- |- ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))
T c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m)
T * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0
- (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))), (((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))))))), ((real_le (real_of_num (NUMERAL _0))) a) |- ((((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))))))) /\ (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> c/\ creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c==> creal_le creal_of_num cNUMERAL c_0 f2 c/\ c/\ creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- ((_0 < (BIT0 n)) = (_0 < n))
T c= c< c_0 cBIT0 f0 c< c_0 f0
- |- ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)
T * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV
+ |- (((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = F) ==> ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e'))))) = ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e')))))
T c= c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1 c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1
- |- (((!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) ==> ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n)) = ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n))
T c= c==> ! c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1 * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1
+ ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) |- ((((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))) = x) /\ ((((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))) = y) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))
T c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c/\ c= cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 c/\ c= cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 f4 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5
- |- ((\m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) m)
T * / ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 f0
- |- (((BIT0 n) + _0) = (BIT0 n))
T c= c+ cBIT0 f0 c_0 cBIT0 f0
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV)))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV
+ |- ((a = (Arg ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi))))))) = (a = (Arg ((complex_mul ((complex_mul (Cx r2)) (complex_inv (Cx r1)))) ((complex_mul (cexp ((complex_mul ii) (Cx ((real_add psi) a))))) (complex_inv (cexp ((complex_mul ii) (Cx psi)))))))))
T c= c= f0 cArg ccomplex_mul cCx creal_div f1 f2 ccexp cvector_sub ccomplex_mul cii cCx creal_add f3 f0 ccomplex_mul cii cCx f3 c= f0 cArg ccomplex_mul ccomplex_mul cCx f1 ccomplex_inv cCx f2 ccomplex_mul ccexp ccomplex_mul cii cCx creal_add f3 f0 ccomplex_inv ccexp ccomplex_mul cii cCx f3
- |- ((\n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) n)
T * / c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 f1
+ |- ((\c. (!x. (((% c) x) = ((complex_mul (Cx c)) x)))) c)
T * / ! c= c% b0 b1 ccomplex_mul cCx b0 b1 f0
- |- (((BIT1 n) > _0) = T)
T c= c> cBIT1 f0 c_0 cT
+ |- ((\n. ((_0 <= (BIT1 n)) = T)) n)
T * / c= c<= c_0 cBIT1 b0 cT f0
- ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) |- ((real_lt (real_of_num (NUMERAL _0))) r2)
T c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 creal_lt creal_of_num cNUMERAL c_0 f5
+ |- (((!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- (((((real_lt (real_of_num (NUMERAL _0))) r2) /\ ((real_lt (real_of_num (NUMERAL _0))) r1)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div r2) r1)) = T)) = (((real_lt (real_of_num (NUMERAL _0))) ((real_div r2) r1)) = T))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c==> creal_lt creal_of_num cNUMERAL c_0 f1 c= c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 f0 cT c= creal_lt creal_of_num cNUMERAL c_0 creal_div f1 f0 cT
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (((complex_mul w) (complex_inv z)) = ((complex_div w) z)) |- (((complex_div w) z) = ((complex_mul w) (complex_inv z)))
T c==> c= ccomplex_mul f0 ccomplex_inv f1 ccomplex_div f0 f1 c= ccomplex_div f0 f1 ccomplex_mul f0 ccomplex_inv f1
- |- ((\n. (((BIT1 n) < _0) = F)) n)
T * / c= c< cBIT1 b0 c_0 cF f0
- |- (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n))))))
T c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
+ |- ((((dropout (NUMERAL (BIT1 (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (basis (NUMERAL (BIT0 (BIT1 _0))))) /\ (((dropout (NUMERAL (BIT1 (BIT1 _0)))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (vec (NUMERAL _0))))
T c/\ c= cdropout cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c= cdropout cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((\v. (!w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) v)
T * / ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 f0
+ (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) |- (((!e2. (!e3. (((((orthonormal (basis (NUMERAL (BIT1 _0)))) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))) ==> ((\e2. (!e3. (((((orthonormal (basis (NUMERAL (BIT1 _0)))) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) = ((\e2. (!e3. (((((orthonormal (basis (NUMERAL (BIT1 _0)))) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))) (basis (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! ! ! c==> c/\ corthonormal b0 b1 b2 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b4 ccos b3 b0 cvector_add c% creal_mul b4 csin b3 b1 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b5 ccos creal_add b3 f3 b0 cvector_add c% creal_mul b5 csin creal_add b3 f3 b1 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt creal_of_num cNUMERAL c_0 b5 c= c==> ! ! c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 b0 b1 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b3 ccos b2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin b2 b0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b4 ccos creal_add b2 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b4 csin creal_add b2 f3 b0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 creal_lt creal_of_num cNUMERAL c_0 b4 * / ! c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 b0 b1 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b3 ccos b2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin b2 b0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b4 ccos creal_add b2 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b4 csin creal_add b2 f3 b0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 creal_lt creal_of_num cNUMERAL c_0 b4 cbasis cNUMERAL cBIT0 cBIT1 c_0 * / ! c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 b0 b1 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b3 ccos b2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin b2 b0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b4 ccos creal_add b2 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b4 csin creal_add b2 f3 b0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 creal_lt creal_of_num cNUMERAL c_0 b4 cbasis cNUMERAL cBIT0 cBIT1 c_0
- |- (((cross (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (vector_neg (basis (NUMERAL (BIT1 _0)))))
T c= ccross cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT1 c_0
+ |- (((!x. (((vector_add x) (vec (NUMERAL _0))) = x)) ==> ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x)) = ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x))
T c= c==> ! c= cvector_add b0 cvec cNUMERAL c_0 b0 * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0 * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0
+ |- (((dot (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cdot cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\n. ((_0 >= (BIT0 n)) = (_0 >= n))) n)
T * / c= c>= c_0 cBIT0 b0 c>= c_0 b0 f0
- |- ((\n. (((BIT1 n) * _0) = _0)) n)
T * / c= c* cBIT1 b0 c_0 c_0 f0
- |- ((_0 - _0) = _0)
T c= c- c_0 c_0 c_0
+ |- (((!n. ((_0 = (BIT1 n)) = F)) ==> ((\n. ((_0 = (BIT1 n)) = F)) n)) = ((\n. ((_0 = (BIT1 n)) = F)) n))
T c= c==> ! c= c= c_0 cBIT1 b0 cF * / c= c= c_0 cBIT1 b0 cF f0 * / c= c= c_0 cBIT1 b0 cF f0
+ |- (((!n. (((BIT1 m) = (BIT1 n)) = (m = n))) ==> ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n)) = ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n))
T c= c==> ! c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)), ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- ((((complex_mul (Cx ((real_div r2) r1))) (cexp ((complex_mul ii) (Cx a)))) = ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))) = (((real_lt (real_of_num (NUMERAL _0))) ((real_div r2) r1)) /\ ((((complex_mul (Cx ((real_div r2) r1))) (cexp ((complex_mul ii) (Cx a)))) = ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f2 c= c= ccomplex_mul cCx creal_div f2 f1 ccexp ccomplex_mul cii cCx f0 ccomplex_mul cCx creal_div f2 f1 ccexp cvector_sub ccomplex_mul cii cCx creal_add f3 f0 ccomplex_mul cii cCx f3 c/\ creal_lt creal_of_num cNUMERAL c_0 creal_div f2 f1 c/\ c= ccomplex_mul cCx creal_div f2 f1 ccexp ccomplex_mul cii cCx f0 ccomplex_mul cCx creal_div f2 f1 ccexp cvector_sub ccomplex_mul cii cCx creal_add f3 f0 ccomplex_mul cii cCx f3 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi
- |- ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0
- |- ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
+ ((csin (Cx x)) = (Cx (sin x))) |- ((Cx (sin x)) = (csin (Cx x)))
T c==> c= ccsin cCx f0 cCx csin f0 c= cCx csin f0 ccsin cCx f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))), (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a) |- ((((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a) /\ ((((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f2 c/\ c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f2 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b2 cvector_add c% creal_mul b7 csin creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- (?r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ (?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) |- ((!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) ==> ((Arg z) = a))
T c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= cArg f1 f0
+ (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a) |- (((((real_le (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = ((((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))
T c==> c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f2 c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b2 cvector_add c% creal_mul b7 csin creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- (((!x. (((\z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) x) ==> F)) ==> ((?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F)) = ((?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F))
T c= c==> ! c==> * / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!psi. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi)))))) ==> ((\psi. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi)))))) psi)) = ((\psi. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi)))))) psi))
T c= c==> ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 * / c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 f1 * / c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 f1
+ |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ |- (!z. (((\z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z) ==> F))
T c==> * / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
- (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))) |- (T = (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))))
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cT ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY
- |- (((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) ==> ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)) = ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m))
T c= c==> ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0 * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
+ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- (((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)
T * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
+ |- ((\z. (((complex_mul w) (complex_inv z)) = ((complex_div w) z))) z)
T * / c= ccomplex_mul f0 ccomplex_inv b0 ccomplex_div f0 b0 f1
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- (((dot (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (((COND ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cdot cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) ==> ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n)) = ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
+ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY)))) |- (T = ((real_of_num (NUMERAL _0)) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cT c= creal_of_num cNUMERAL c_0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- ((_0 EXP _0) = (BIT1 _0))
T c= cEXP c_0 c_0 cBIT1 c_0
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)), ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- (a = (Arg ((complex_div ((complex_mul (Cx r2)) (cexp ((complex_mul ii) (Cx ((real_add psi) a)))))) ((complex_mul (Cx r1)) (cexp ((complex_mul ii) (Cx psi)))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f2 c= f0 cArg ccomplex_div ccomplex_mul cCx f2 ccexp ccomplex_mul cii cCx creal_add f3 f0 ccomplex_mul cCx f1 ccexp ccomplex_mul cii cCx f3
- |- ((\m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
+ |- ((\z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z)))) z)
T * / c= ccomplex_inv ccomplex_mul f0 b0 ccomplex_mul ccomplex_inv f0 ccomplex_inv b0 f1
- |- (((!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) ==> ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n)) = ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1 * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1
+ |- (((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)
T * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
+ |- (((!x. ((csin (Cx x)) = (Cx (sin x)))) ==> ((\x. ((csin (Cx x)) = (Cx (sin x)))) x)) = ((\x. ((csin (Cx x)) = (Cx (sin x)))) x))
T c= c==> ! c= ccsin cCx b0 cCx csin b0 * / c= ccsin cCx b0 cCx csin b0 f0 * / c= ccsin cCx b0 cCx csin b0 f0
+ (x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) |- (((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))) = x)
T c==> c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c= cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ |- ((\i. (!j. ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))))) ==> (((dot (basis i)) (basis j)) = (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))) i)
T * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= cdot cbasis b0 cbasis b1 cCOND c= b0 b1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (!psi. (!r1. (!r2. (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi ! ! ! c==> c/\ c= f1 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f3 cvector_add c% creal_mul b2 ccos creal_add b0 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul b2 ccos creal_add b0 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0
- |- (((!n. (~ (_0 >= (BIT1 n)))) ==> ((\n. (~ (_0 >= (BIT1 n)))) n)) = ((\n. (~ (_0 >= (BIT1 n)))) n))
T c= c==> ! c~ c>= c_0 cBIT1 b0 * / c~ c>= c_0 cBIT1 b0 f0 * / c~ c>= c_0 cBIT1 b0 f0
+ |- ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P)
T * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)), ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f2 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f2 ccos creal_add f3 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f2 csin creal_add f3 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ ((\b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) b) |- (((?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F) = F)
T c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b0 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- (((!t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 * / ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1 * / ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1
+ |- (((!x. (!y. ((Cx ((real_add x) y)) = ((vector_add (Cx x)) (Cx y))))) ==> ((\x. (!y. ((Cx ((real_add x) y)) = ((vector_add (Cx x)) (Cx y))))) x)) = ((\x. (!y. ((Cx ((real_add x) y)) = ((vector_add (Cx x)) (Cx y))))) x))
T c= c==> ! ! c= cCx creal_add b0 b1 cvector_add cCx b0 cCx b1 * / ! c= cCx creal_add b0 b1 cvector_add cCx b0 cCx b1 f0 * / ! c= cCx creal_add b0 b1 cvector_add cCx b0 cCx b1 f0
- |- ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
+ |- ((\x. ((ccos (Cx x)) = (Cx (cos x)))) x)
T * / c= cccos cCx b0 cCx ccos b0 f0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))))
T c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))), ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))
T c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c==> creal_le creal_of_num cNUMERAL c_0 f6 c==> creal_lt f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ |- (((!z. (!a. ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a)))) ==> ((\z. (!a. ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a)))) z)) = ((\z. (!a. ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a)))) z))
T c= c==> ! ! c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= ccomplex_mul cCx b2 ccexp ccomplex_mul cii cCx b1 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b0 b1 * / ! c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= ccomplex_mul cCx b2 ccexp ccomplex_mul cii cCx b1 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b0 b1 f0 * / ! c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= ccomplex_mul cCx b2 ccexp ccomplex_mul cii cCx b1 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b0 b1 f0
- ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) |- (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) /\ ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))))))) = (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))))
T c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c/\ c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ |- ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))
T c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ ((\z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z) |- ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> * / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) a) |- (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))
T c==> * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. ((ODD (BIT0 n)) = F)) n)
T * / c= cODD cBIT0 b0 cF f0
+ |- (((~ q) = (?r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = (!psi. ((?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))))
T c= c==> c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 ! c==> c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- ((_0 - (BIT1 n)) = _0)
T c= c- c_0 cBIT1 f0 c_0
+ |- (((!v. (!w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) ==> ((\v. (!w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) v)) = ((\v. (!w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) v))
T c= c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 * / ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 f0 * / ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 f0
- |- (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))
T c= c* cBIT0 f0 cBIT1 f1 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 f1
+ |- ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))
T c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)
T * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
+ |- (((!z. (((complex_div w) z) = ((complex_mul w) (complex_inv z)))) ==> ((\z. (((complex_div w) z) = ((complex_mul w) (complex_inv z)))) z)) = ((\z. (((complex_div w) z) = ((complex_mul w) (complex_inv z)))) z))
T c= c==> ! c= ccomplex_div f0 b0 ccomplex_mul f0 ccomplex_inv b0 * / c= ccomplex_div f0 b0 ccomplex_mul f0 ccomplex_inv b0 f1 * / c= ccomplex_div f0 b0 ccomplex_mul f0 ccomplex_inv b0 f1
+ |- (((!g'. (!t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 f0 * / ! ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 f0
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY)))))) = ((\t. (t \/ (~ t))) (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY * / c\/ b0 c~ b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY
- |- (((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) ==> ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m)) = ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m))
T c= c==> ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0 * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0
- |- ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T)))
T c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
- |- (((!n. ((EVEN (NUMERAL n)) = (EVEN n))) ==> ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n)) = ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n))
T c= c==> ! c= cEVEN cNUMERAL b0 cEVEN b0 * / c= cEVEN cNUMERAL b0 cEVEN b0 f0 * / c= cEVEN cNUMERAL b0 cEVEN b0 f0
+ ((\r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) r) |- (((?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- ((Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z)) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. ((ODD (BIT1 n)) = T)) n)
T * / c= cODD cBIT1 b0 cT f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) /\ (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((vec (NUMERAL _0)) = (basis k)) = F))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= cvec cNUMERAL c_0 cbasis f0 cF
+ |- ((((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi)))) = (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))
T c= c= ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 c= ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cCx creal_add f1 f0 ccomplex_mul cii cCx f1
+ |- ((((\z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z) ==> F) = T)
T c= c==> * / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
+ |- (!a. (((\a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) a) ==> F))
T c==> * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- ((\n. ((_0 = (BIT0 n)) = (_0 = n))) n)
T * / c= c= c_0 cBIT0 b0 c= c_0 b0 f0
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) |- ((!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) /\ (!z. (!a. ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a)))))
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c/\ ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 ! ! c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= ccomplex_mul cCx b2 ccexp ccomplex_mul cii cCx b1 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b0 b1
- |- ((_0 = _0) = T)
T c= c= c_0 c_0 cT
- |- ((\n. (((BIT0 n) * _0) = _0)) n)
T * / c= c* cBIT0 b0 c_0 c_0 f0
- |- (((BIT1 n) >= (BIT1 m)) = (n >= m))
T c= c>= cBIT1 f0 cBIT1 f1 c>= f0 f1
- |- (((!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) ==> ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)) = ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n))
T c= c==> ! c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1 * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
+ |- (T = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))))))
T c= cT c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV
+ |- ((((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t)))))) = (((vector_add ((% ((real_mul r) (cos t))) (basis (NUMERAL (BIT1 _0))))) ((% ((real_mul r) (sin t))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) = ((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx t))))))
T c= c= cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 c= cvector_add c% creal_mul f0 ccos f1 cbasis cNUMERAL cBIT1 c_0 c% creal_mul f0 csin f1 cbasis cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul cCx f0 ccexp ccomplex_mul cii cCx f1
- |- ((\m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) m)
T * / ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 f0
+ |- (((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = ((?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))
T c= c==> c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = T)
T c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cT
+ |- (((!x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) ==> ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) x)) = ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) x))
T c= c==> ! c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 f0 * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 f0
- F |- (F = T)
T c==> cF c= cF cT
- |- ((\n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))) n)
T * / c= c* cBIT0 f0 cBIT1 b0 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 b0 f1
+ |- (((!x. (((\z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) x) ==> F)) ==> ((?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) = ((?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))
T c= c==> ! c==> * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n)
T * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (!r1. (!r2. (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi ! ! c==> c/\ c= f1 cvector_add c% creal_mul b0 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b0 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul b1 ccos creal_add f2 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin creal_add f2 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul b1 ccos creal_add f2 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin creal_add f2 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul b0 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b0 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ |- (((!c. (!b. (!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))))) ==> ((\c. (!b. (!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))))) c)) = ((\c. (!b. (!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))))) c))
T c= c==> ! ! ! c= ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 * / ! ! c= ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 f1 * / ! ! c= ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 f1
- |- ((_0 * (BIT1 n)) = _0)
T c= c* c_0 cBIT1 f0 c_0
+ |- (((!x. (((% c) x) = ((complex_mul (Cx c)) x))) ==> ((\x. (((% c) x) = ((complex_mul (Cx c)) x))) x)) = ((\x. (((% c) x) = ((complex_mul (Cx c)) x))) x))
T c= c==> ! c= c% f0 b0 ccomplex_mul cCx f0 b0 * / c= c% f0 b0 ccomplex_mul cCx f0 b0 f1 * / c= c% f0 b0 ccomplex_mul cCx f0 b0 f1
+ ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- (((real_lt (real_of_num (NUMERAL _0))) r2) /\ ((real_lt (real_of_num (NUMERAL _0))) r1))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c==> creal_lt creal_of_num cNUMERAL c_0 f1 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f0
+ |- (((vector_add (Cx x)) (Cx y)) = (Cx ((real_add x) y)))
T c= cvector_add cCx f0 cCx f1 cCx creal_add f0 f1
+ |- (((!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div x) y))))) ==> ((\x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div x) y))))) x)) = ((\x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div x) y))))) x))
T c= c==> ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 b1 * / ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 b1 f0 * / ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 b1 f0
+ |- (((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) = (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t)))))))
T c= c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 c= cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1
+ |- (((!x. (((distance (x , (vec (NUMERAL _0)))) = (vector_norm x)) /\ ((distance ((vec (NUMERAL _0)) , x)) = (vector_norm x)))) ==> ((\x. (((distance (x , (vec (NUMERAL _0)))) = (vector_norm x)) /\ ((distance ((vec (NUMERAL _0)) , x)) = (vector_norm x)))) x)) = ((\x. (((distance (x , (vec (NUMERAL _0)))) = (vector_norm x)) /\ ((distance ((vec (NUMERAL _0)) , x)) = (vector_norm x)))) x))
T c= c==> ! c/\ c= cdistance c, b0 cvec cNUMERAL c_0 cvector_norm b0 c= cdistance c, cvec cNUMERAL c_0 b0 cvector_norm b0 * / c/\ c= cdistance c, b0 cvec cNUMERAL c_0 cvector_norm b0 c= cdistance c, cvec cNUMERAL c_0 b0 cvector_norm b0 f0 * / c/\ c= cdistance c, b0 cvec cNUMERAL c_0 cvector_norm b0 c= cdistance c, cvec cNUMERAL c_0 b0 cvector_norm b0 f0
+ |- ((\w1. (!w2. (((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) w1) w2)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) w1) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub w1) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub w2) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) w1) w2))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) w1) w2))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (w1 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (w2 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))))) x)
T * / ! c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 b0 b1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b4 b5 b6 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b6 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub b0 cvec cNUMERAL c_0 cvector_add c% creal_mul b8 ccos b7 b4 cvector_add c% creal_mul b8 csin b7 b5 c% b2 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub b1 cvec cNUMERAL c_0 cvector_add c% creal_mul b9 ccos creal_add b7 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 b0 b1 b4 cvector_add c% creal_mul b9 csin creal_add b7 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 b0 b1 b5 c% b3 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT b0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b8 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT b1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b9 f0
+ |- (((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) = (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi)))))
T c= c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 c= ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1
- |- ((_0 = (BIT0 n)) = (_0 = n))
T c= c= c_0 cBIT0 f0 c= c_0 f0
- |- ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)
T * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- |- ((\v. (!w. (!w1. (!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) v)
T * / ! ! ! c==> c= b0 b1 c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 f0
+ |- ((y = z) = (((vector_add (vector_neg z)) y) = ((vector_add (vector_neg z)) z)))
T c= c= f0 f1 c= cvector_add cvector_neg f1 f0 cvector_add cvector_neg f1 f1
- |- ((\m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) m)
T * / ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
+ |- ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))
T c= cEXP cBIT0 f0 cBIT1 f1 c* cBIT0 f0 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
+ |- (((!x. (!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y))))) ==> ((\x. (!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y))))) x)) = ((\x. (!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y))))) x))
T c= c==> ! ! c= cCx creal_mul b0 b1 ccomplex_mul cCx b0 cCx b1 * / ! c= cCx creal_mul b0 b1 ccomplex_mul cCx b0 cCx b1 f0 * / ! c= cCx creal_mul b0 b1 ccomplex_mul cCx b0 cCx b1 f0
+ |- (((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) e')))) = (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) e'))))
T c= c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 f0
- (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) /\ ((vector_norm (basis k)) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cvector_norm cbasis f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))))))
T c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- (((vector_add ((complex_pow ii) (NUMERAL (BIT0 (BIT1 _0))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_pow cii cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))
T c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))
T c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) |- (((vec (NUMERAL _0)) = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) = F)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= c= cvec cNUMERAL c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cF
+ |- ((((\c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) c) ==> F) = T)
T c= c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
+ |- (((!w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))) ==> ((\w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))) w2)) = ((\w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))) w2))
T c= c==> ! c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cazim f0 f1 f2 b0 creal_of_num cNUMERAL c_0 * / c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cazim f0 f1 f2 b0 creal_of_num cNUMERAL c_0 f3 * / c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cazim f0 f1 f2 b0 creal_of_num cNUMERAL c_0 f3
+ |- (((BIT1 m) = (BIT1 n)) = (m = n))
T c= c= cBIT1 f0 cBIT1 f1 c= f0 f1
- |- ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))))
T c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))), ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))
T c==> c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- (((!n. ((EVEN (BIT0 n)) = T)) ==> ((\n. ((EVEN (BIT0 n)) = T)) n)) = ((\n. ((EVEN (BIT0 n)) = T)) n))
T c= c==> ! c= cEVEN cBIT0 b0 cT * / c= cEVEN cBIT0 b0 cT f0 * / c= cEVEN cBIT0 b0 cT f0
+ |- ((\w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))) w2)
T * / c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= cazim f0 f1 f2 b0 creal_of_num cNUMERAL c_0 f3
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)), ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- ((Arg ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))) = a)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f2 c= cArg ccomplex_mul cCx creal_div f2 f1 ccexp cvector_sub ccomplex_mul cii cCx creal_add f3 f0 ccomplex_mul cii cCx f3 f0
+ |- (T = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (dimindex UNIV))))))
T c= cT c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV
+ |- ((\e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3)))))))))) e3)
T * / c= corthonormal f0 f1 b0 c/\ c= cdot f0 f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f1 f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f0 f1 creal_of_num cNUMERAL c_0 c/\ c= cdot f0 b0 creal_of_num cNUMERAL c_0 c/\ c= cdot f1 b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross f0 f1 b0 f2
- |- (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))
T c= c- cBIT1 f0 cBIT1 f1 cBIT0 c- f0 f1
+ |- (((!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) ==> (!z. (!a. ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a))))) = (!z. (!a. ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a)))))
T c= c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 ! ! c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= ccomplex_mul cCx b2 ccexp ccomplex_mul cii cCx b1 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b0 b1 ! ! c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= ccomplex_mul cCx b2 ccexp ccomplex_mul cii cCx b1 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b0 b1
+ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))) |- ((collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))) /\ (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c/\ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f1 f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
- |- ((\n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) n)
T * / c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 f0
- |- ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))
T c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- (((?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))) ==> ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))) = q')) ==> (((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = ((?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))) ==> q')))
T c==> c==> c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c= c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 f5 c= c==> c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 f5
- |- ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))
T c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n)
T * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1
- |- ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))
T c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = F)
T c= c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) ==> ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)) = ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n))
T c= c==> ! c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
+ ((\a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) a) |- (((?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- ((_0 >= (BIT1 n)) = F)
T c= c>= c_0 cBIT1 f0 cF
- |- (((!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) ==> ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n)) = ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n))
T c= c==> ! c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1 * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1
+ |- (((!n. ((_0 <= (BIT1 n)) = T)) ==> ((\n. ((_0 <= (BIT1 n)) = T)) n)) = ((\n. ((_0 <= (BIT1 n)) = T)) n))
T c= c==> ! c= c<= c_0 cBIT1 b0 cT * / c= c<= c_0 cBIT1 b0 cT f0 * / c= c<= c_0 cBIT1 b0 cT f0
+ |- ((((\a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) a) ==> F) = T)
T c= c==> * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
+ |- ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((complex_mul ii) (Cx a)) = ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi)))))
T c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1
+ |- ((a = (Arg ((complex_div ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (vec (NUMERAL _0)))))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (vec (NUMERAL _0)))))))) = (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))))))))
T c= c= f0 cArg ccomplex_div cvector_add c% creal_mul f1 ccos creal_add f2 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin creal_add f2 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cvec cNUMERAL c_0 cvector_add c% creal_mul f4 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f4 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cvec cNUMERAL c_0 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos creal_add f2 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin creal_add f2 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f4 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f4 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ |- (((complex_div (Cx x)) (Cx y)) = (Cx ((real_div x) y)))
T c= ccomplex_div cCx f0 cCx f1 cCx creal_div f0 f1
- |- ((\n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n)))) n)
T * / c= c- cBIT0 f0 cBIT0 b0 cBIT0 c- f0 b0 f1
+ |- (((!k. (!c. (!x. (((dropout k) ((% c) x)) = ((% c) ((dropout k) x)))))) ==> ((\k. (!c. (!x. (((dropout k) ((% c) x)) = ((% c) ((dropout k) x)))))) k)) = ((\k. (!c. (!x. (((dropout k) ((% c) x)) = ((% c) ((dropout k) x)))))) k))
T c= c==> ! ! ! c= cdropout b0 c% b1 b2 c% b1 cdropout b0 b2 * / ! ! c= cdropout b0 c% b1 b2 c% b1 cdropout b0 b2 f0 * / ! ! c= cdropout b0 c% b1 b2 c% b1 cdropout b0 b2 f0
+ |- (((!r. (!t. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))))) ==> ((\r. (!t. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))))) r)) = ((\r. (!t. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) ==> (((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii)) = ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))))) r))
T c= c==> ! ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 * / ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 f0 * / ! c==> c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 f0
+ |- ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))
T c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- (((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) ==> ((\m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) m)) = ((\m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) m))
T c= c==> ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 * / ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 f0 * / ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 f0
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
- |- (((!n. (((BIT0 n) > (BIT0 m)) = (n > m))) ==> ((\n. (((BIT0 n) > (BIT0 m)) = (n > m))) n)) = ((\n. (((BIT0 n) > (BIT0 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT0 b0 cBIT0 f0 c> b0 f0 * / c= c> cBIT0 b0 cBIT0 f0 c> b0 f0 f1 * / c= c> cBIT0 b0 cBIT0 f0 c> b0 f0 f1
- |- (((cross (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 _0))))
T c= ccross cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0
+ |- ((((~ F) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))
T c= c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))) y)
T * / c= cCx creal_mul f0 b0 ccomplex_mul cCx f0 cCx b0 f1
- |- (((!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))) ==> ((\m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))) m)) = ((\m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 * / ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 f0 * / ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 f0
- |- (((BIT0 n) = _0) = (n = _0))
T c= c= cBIT0 f0 c_0 c= f0 c_0
+ ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- (T = (((real_lt (real_of_num (NUMERAL _0))) r2) /\ ((real_lt (real_of_num (NUMERAL _0))) r1)))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c==> creal_lt creal_of_num cNUMERAL c_0 f1 c= cT c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f0
+ |- (((dropout (NUMERAL (BIT1 (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (basis (NUMERAL (BIT0 (BIT1 _0)))))
T c= cdropout cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0
- |- ((_0 > _0) = F)
T c= c> c_0 c_0 cF
- |- (((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) m))
T c= c==> ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 * / ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 f0 * / ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 f0
+ |- (((!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))) ==> ((\Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))) Q)) = ((\Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))) Q))
T c= c==> ! c= c==> c? / * f0 b1 b0 ! c==> * f0 b1 b0 * / c= c==> c? / * f0 b1 b0 ! c==> * f0 b1 b0 f1 * / c= c==> c? / * f0 b1 b0 ! c==> * f0 b1 b0 f1
+ |- ((((~ F) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))
T c= c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((BIT1 n) >= _0) = T)
T c= c>= cBIT1 f0 c_0 cT
+ |- (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) e')))
T c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f0 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))
T c= c- cBIT1 f0 cBIT0 f1 cCOND c<= f1 f0 cBIT1 c- f0 f1 c_0
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- ((!h2. ((!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= ! c==> ! ! ! c==> c/\ corthonormal b1 b2 b3 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f1 cvector_add c% creal_mul b5 ccos b4 b1 cvector_add c% creal_mul b5 csin b4 b2 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f3 cvector_add c% creal_mul b6 ccos creal_add b4 f0 b1 cvector_add c% creal_mul b6 csin creal_add b4 f0 b2 c% b0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b5 creal_lt creal_of_num cNUMERAL c_0 b6 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f3 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cT
- |- (((NUMERAL m) < (NUMERAL n)) = (m < n))
T c= c< cNUMERAL f0 cNUMERAL f1 c< f0 f1
+ |- (((!x. (((\a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) x) ==> F)) ==> ((?a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F)) = ((?a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b1 b3 ccomplex_mul b2 b4 ccomplex_mul ccomplex_mul b1 b2 ccomplex_mul b3 b4 b5 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) ==> ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m)) = ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m))
T c= c==> ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0 * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0
- |- (((cross (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 _0)))) = (vector_neg (basis (NUMERAL (BIT1 (BIT1 _0))))))
T c= ccross cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT1 cBIT1 c_0
- |- (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))
T c= cEXP cBIT1 f0 cBIT1 f1 c* cBIT1 f0 c* cEXP cBIT1 f0 f1 cEXP cBIT1 f0 f1
+ |- (((!x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) ==> ((\x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) x)) = ((\x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) x))
T c= c==> ! ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0 * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0
+ ((Arg ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))) = a) |- (a = (Arg ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))))
T c==> c= cArg ccomplex_mul cCx creal_div f0 f1 ccexp cvector_sub ccomplex_mul cii cCx creal_add f2 f3 ccomplex_mul cii cCx f2 f3 c= f3 cArg ccomplex_mul cCx creal_div f0 f1 ccexp cvector_sub ccomplex_mul cii cCx creal_add f2 f3 ccomplex_mul cii cCx f2
- |- ((\n. ((ODD (NUMERAL n)) = (ODD n))) n)
T * / c= cODD cNUMERAL b0 cODD b0 f0
+ |- (((BIT1 m) <= (BIT0 n)) = (m < n))
T c= c<= cBIT1 f0 cBIT0 f1 c< f0 f1
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))), ((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) a) |- (((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) a) /\ ((((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 f2 c/\ * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 f2 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b2 cvector_add c% creal_mul b7 csin creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) = p') ==> ((p' ==> ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))) = q')) ==> ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = (p' ==> q'))))
T c==> c= c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 f8 c==> c==> f8 c= c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f4 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 f9 c= c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f4 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c==> f8 f9
- |- ((_0 * _0) = _0)
T c= c* c_0 c_0 c_0
+ |- (((real_of_num m) = (real_of_num n)) = (m = n))
T c= c= creal_of_num f0 creal_of_num f1 c= f0 f1
- |- (((BIT0 n) <= _0) = (n <= _0))
T c= c<= cBIT0 f0 c_0 c<= f0 c_0
- |- (((!n. ((_0 - (BIT1 n)) = _0)) ==> ((\n. ((_0 - (BIT1 n)) = _0)) n)) = ((\n. ((_0 - (BIT1 n)) = _0)) n))
T c= c==> ! c= c- c_0 cBIT1 b0 c_0 * / c= c- c_0 cBIT1 b0 c_0 f0 * / c= c- c_0 cBIT1 b0 c_0 f0
- |- ((\n. (((BIT0 n) - _0) = (BIT0 n))) n)
T * / c= c- cBIT0 b0 c_0 cBIT0 b0 f0
- |- ((\n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))) n)
T * / c= cEXP cBIT0 f0 cBIT0 b0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
+ ((\z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z) |- (((\z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z) /\ F)
T c==> * / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ |- ((\m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) m)
T * / ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 f0
+ |- (((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) ==> ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)) = ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
- |- (((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) ==> ((\m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) m)) = ((\m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) m))
T c= c==> ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 * / ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 f0 * / ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\n. (((BIT0 m) <= (BIT1 n)) = (m <= n))) n)
T * / c= c<= cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
+ |- ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))
T c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))), (((real_le (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) |- ((((real_le (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) /\ (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- (((complex_mul (Cx x)) (Cx y)) = (Cx ((real_mul x) y)))
T c= ccomplex_mul cCx f0 cCx f1 cCx creal_mul f0 f1
- |- ((\n. (((BIT1 n) + _0) = (BIT1 n))) n)
T * / c= c+ cBIT1 b0 c_0 cBIT1 b0 f0
+ |- (((dot (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cdot cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\n. (((BIT0 n) > _0) = (n > _0))) n)
T * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0
+ |- ((\w1. (!w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))) w1)
T * / ! c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c= cazim f0 f1 b0 b1 creal_of_num cNUMERAL c_0 f2
+ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))) |- (((dropout (NUMERAL (BIT1 (BIT1 _0)))) y) = (vec (NUMERAL _0)))
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cvec cNUMERAL c_0
+ (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- ((Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (T ==> ((?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))) = (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))
T c==> cT c= c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))), (((real_le (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))), ((real_le (real_of_num (NUMERAL _0))) a) |- (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c==> creal_le creal_of_num cNUMERAL c_0 f2 c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))
T c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- ((\m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) m)
T * / ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 f0
+ |- (((!i. (!j. ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))))) ==> (((dot (basis i)) (basis j)) = (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))) ==> ((\i. (!j. ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))))) ==> (((dot (basis i)) (basis j)) = (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))) i)) = ((\i. (!j. ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))))) ==> (((dot (basis i)) (basis j)) = (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))) i))
T c= c==> ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= cdot cbasis b0 cbasis b1 cCOND c= b0 b1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= cdot cbasis b0 cbasis b1 cCOND c= b0 b1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0 * / ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c<= b0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= cdot cbasis b0 cbasis b1 cCOND c= b0 b1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0
- |- (~ (_0 >= (BIT1 n)))
T c~ c>= c_0 cBIT1 f0
- |- (((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) ==> ((\m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) m)) = ((\m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) m))
T c= c==> ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 * / ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0 * / ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
+ |- (((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (~ ((basis k) = (vec (NUMERAL _0)))))) ==> ((\k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (~ ((basis k) = (vec (NUMERAL _0)))))) k)) = ((\k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (~ ((basis k) = (vec (NUMERAL _0)))))) k))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c~ c= cbasis b0 cvec cNUMERAL c_0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c~ c= cbasis b0 cvec cNUMERAL c_0 f0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c~ c= cbasis b0 cvec cNUMERAL c_0 f0
- |- ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 * / ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
- (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))) n)
T * / c= c+ cBIT0 f0 cBIT0 b0 cBIT0 c+ f0 b0 f1
+ |- ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)
T * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))
T c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- (((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) ==> ((\m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) m)) = ((\m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) m))
T c= c==> ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 * / ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 f0 * / ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 f0
+ ((\d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) d) |- (((?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F) = F)
T c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b0 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 c= c==> c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m)
T * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0
+ |- ((\z. (((complex_div (cexp w)) (cexp z)) = (cexp ((vector_sub w) z)))) z)
T * / c= ccomplex_div ccexp f0 ccexp b0 ccexp cvector_sub f0 b0 f1
+ |- (((!x. (((dropout k) ((% c) x)) = ((% c) ((dropout k) x)))) ==> ((\x. (((dropout k) ((% c) x)) = ((% c) ((dropout k) x)))) x)) = ((\x. (((dropout k) ((% c) x)) = ((% c) ((dropout k) x)))) x))
T c= c==> ! c= cdropout f0 c% f1 b0 c% f1 cdropout f0 b0 * / c= cdropout f0 c% f1 b0 c% f1 cdropout f0 b0 f2 * / c= cdropout f0 c% f1 b0 c% f1 cdropout f0 b0 f2
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) |- (((!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))) ==> ((\z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))) z)) = ((\z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))) z))
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= ccomplex_mul cCx f0 ccexp ccomplex_mul cii cCx f1 b0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b0 f1 * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= ccomplex_mul cCx f0 ccexp ccomplex_mul cii cCx f1 b0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b0 f1 f2 * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= ccomplex_mul cCx f0 ccexp ccomplex_mul cii cCx f1 b0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b0 f1 f2
- |- (((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) ==> ((\m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) m))
T c= c==> ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 * / ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 f0 * / ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 f0
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
- |- ((\n. (((BIT1 n) = _0) = F)) n)
T * / c= c= cBIT1 b0 c_0 cF f0
+ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) |- (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))
T c==> c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- (((!n. (((BIT1 m) < (BIT0 n)) = (m < n))) ==> ((\n. (((BIT1 m) < (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT1 m) < (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c< cBIT1 f0 cBIT0 b0 c< f0 b0 * / c= c< cBIT1 f0 cBIT0 b0 c< f0 b0 f1 * / c= c< cBIT1 f0 cBIT0 b0 c< f0 b0 f1
- |- ((_0 - (BIT0 n)) = _0)
T c= c- c_0 cBIT0 f0 c_0
- |- ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))))))
T c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) |- ((real_lt (real_of_num (NUMERAL _0))) r1)
T c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 creal_lt creal_of_num cNUMERAL c_0 f1
+ (((complex_div (cexp w)) (cexp z)) = (cexp ((vector_sub w) z))) |- ((cexp ((vector_sub w) z)) = ((complex_div (cexp w)) (cexp z)))
T c==> c= ccomplex_div ccexp f0 ccexp f1 ccexp cvector_sub f0 f1 c= ccexp cvector_sub f0 f1 ccomplex_div ccexp f0 ccexp f1
- |- ((_0 >= _0) /\ ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))))
T c/\ c>= c_0 c_0 c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))
T c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f1 f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
- |- ((\n. (~ (_0 > (BIT1 n)))) n)
T * / c~ c> c_0 cBIT1 b0 f0
+ ((\t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) t) |- (((?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F) = F)
T c==> * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- ((\m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) m)
T * / ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 f0
+ ((\t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) t) |- (((\t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) t) /\ F)
T c==> * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= c==> c/\ c= f1 cvector_add c% creal_mul f2 ccos f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f2 csin f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f5 cvector_add c% creal_mul f6 ccos creal_add f3 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f6 csin creal_add f3 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 f6 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f6 ccos creal_add f3 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f6 csin creal_add f3 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f2 ccos f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f2 csin f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 cT
- |- (((!n. ((ODD (NUMERAL n)) = (ODD n))) ==> ((\n. ((ODD (NUMERAL n)) = (ODD n))) n)) = ((\n. ((ODD (NUMERAL n)) = (ODD n))) n))
T c= c==> ! c= cODD cNUMERAL b0 cODD b0 * / c= cODD cNUMERAL b0 cODD b0 f0 * / c= cODD cNUMERAL b0 cODD b0 f0
- |- (((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) ==> ((\m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) m)) = ((\m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) m))
T c= c==> ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 * / ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 f0 * / ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 f0
+ |- (((!c. (!x. (((dropout k) ((% c) x)) = ((% c) ((dropout k) x))))) ==> ((\c. (!x. (((dropout k) ((% c) x)) = ((% c) ((dropout k) x))))) c)) = ((\c. (!x. (((dropout k) ((% c) x)) = ((% c) ((dropout k) x))))) c))
T c= c==> ! ! c= cdropout f0 c% b0 b1 c% b0 cdropout f0 b1 * / ! c= cdropout f0 c% b0 b1 c% b0 cdropout f0 b1 f1 * / ! c= cdropout f0 c% b0 b1 c% b0 cdropout f0 b1 f1
+ (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))), ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- ((!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) /\ (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> ! ! ! c==> c/\ corthonormal b0 b1 b2 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b4 ccos b3 b0 cvector_add c% creal_mul b4 csin b3 b1 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b5 ccos creal_add b3 f3 b0 cvector_add c% creal_mul b5 csin creal_add b3 f3 b1 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt creal_of_num cNUMERAL c_0 b5 c==> creal_le creal_of_num cNUMERAL c_0 f3 c==> creal_lt f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ ! ! ! c==> c/\ corthonormal b0 b1 b2 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b4 ccos b3 b0 cvector_add c% creal_mul b4 csin b3 b1 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b5 ccos creal_add b3 f3 b0 cvector_add c% creal_mul b5 csin creal_add b3 f3 b1 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt creal_of_num cNUMERAL c_0 b5 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- ((_0 > (BIT1 n)) = F)
T c= c> c_0 cBIT1 f0 cF
- |- (((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0
- |- (((!n. (((BIT0 n) <= _0) = (n <= _0))) ==> ((\n. (((BIT0 n) <= _0) = (n <= _0))) n)) = ((\n. (((BIT0 n) <= _0) = (n <= _0))) n))
T c= c==> ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 * / c= c<= cBIT0 b0 c_0 c<= b0 c_0 f0 * / c= c<= cBIT0 b0 c_0 c<= b0 c_0 f0
+ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) |- (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))
T c==> c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f1 f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f1 f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
+ ((\b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) b) |- (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b0 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))))) ==> (((dot (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (((dot (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV c= cdot cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cdot cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((dot (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cdot cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\n. ((_0 < (BIT1 n)) = T)) n)
T * / c= c< c_0 cBIT1 b0 cT f0
+ |- ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))
T c= c* cNUMERAL f0 cNUMERAL f1 cNUMERAL c* f0 f1
- (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) |- ((?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))) ==> (((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0))) = F)) = (((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0))) = F))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV c= c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 cF c= c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 cF
+ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))) |- ((real_of_num (NUMERAL _0)) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= creal_of_num cNUMERAL c_0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
+ |- ((\z. (!a. ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a)))) z)
T * / ! c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ c= ccomplex_mul cCx b2 ccexp ccomplex_mul cii cCx b1 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b0 b1 f0
+ ((((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))) = y) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))), ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))
T c==> c/\ c= cvector_add c% creal_mul f0 ccos creal_add f1 f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f0 csin creal_add f1 f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 f4 c/\ creal_lt creal_of_num cNUMERAL c_0 f5 creal_lt creal_of_num cNUMERAL c_0 f0 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f0 ccos creal_add f1 f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f0 csin creal_add f1 f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos f1 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin f1 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f6 cbasis cNUMERAL cBIT1 cBIT1 c_0
- (v = w) |- (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))
T c==> c= f0 f1 c= cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))) ==> ((\n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))) n)) = ((\n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))) n))
T c= c==> ! c= c* cBIT0 f0 cBIT1 b0 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT0 f0 cBIT1 b0 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT0 f0 cBIT1 b0 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 b0 f1
+ |- (((!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))) ==> ((\y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))) y)) = ((\y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))) y))
T c= c==> ! ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 * / ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 f1 * / ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 f1
- |- (((!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) ==> ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n)) = ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n))
T c= c==> ! c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1 * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1
- |- (((BIT0 m) <= (BIT0 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT0 f1 c<= f0 f1
- |- ((\m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) m)
T * / ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 f0
- |- ((((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F)
T c= c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((ODD (NUMERAL n)) = (ODD n))
T c= cODD cNUMERAL f0 cODD f0
+ |- (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) e')))
T c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m)
T * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0
- |- ((\n. ((_0 - (BIT1 n)) = _0)) n)
T * / c= c- c_0 cBIT1 b0 c_0 f0
- |- (((~ (_0 > _0)) ==> ((_0 > _0) = F)) = ((_0 > _0) = F))
T c= c==> c~ c> c_0 c_0 c= c> c_0 c_0 cF c= c> c_0 c_0 cF
- |- (((!n. (((BIT0 m) < (BIT1 n)) = (m <= n))) ==> ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n)) = ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n))
T c= c==> ! c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1 * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
- ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) |- (((real_lt (real_of_num (NUMERAL _0))) r2) = T)
T c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= creal_lt creal_of_num cNUMERAL c_0 f5 cT
+ |- (((?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = (!h2. ((!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))))
T c= c==> c? / ! ! ! c==> c/\ corthonormal b1 b2 b3 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b3 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b5 ccos b4 b1 cvector_add c% creal_mul b5 csin b4 b2 c% f1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f2 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos creal_add b4 f3 b1 cvector_add c% creal_mul b6 csin creal_add b4 f3 b2 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b5 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 ! c==> ! ! ! c==> c/\ corthonormal b1 b2 b3 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b3 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b5 ccos b4 b1 cvector_add c% creal_mul b5 csin b4 b2 c% f1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f2 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos creal_add b4 f3 b1 cvector_add c% creal_mul b6 csin creal_add b4 f3 b2 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b5 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((_0 < (BIT1 n)) = T)
T c= c< c_0 cBIT1 f0 cT
+ |- ((\t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1
+ |- (((!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) ==> ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)) = ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n))
T c= c==> ! c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
+ |- ((\a. ((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a))) a)
T * / c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg f0 b0 f1
+ |- (((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) ==> ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m)) = ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m))
T c= c==> ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0 * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0
- |- (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))
T c= c* cBIT1 f0 cBIT1 f1 c+ cBIT1 f0 c+ cBIT0 f1 cBIT0 cBIT0 c* f0 f1
- |- (((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0 * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0
+ |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))))) ==> (((dot (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (((dot (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= cdot cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cdot cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (~ (_0 > (BIT0 n)))
T c~ c> c_0 cBIT0 f0
- |- ((\m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))) m)
T * / ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 f0
- |- ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n)
T * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
- (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- ((?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n)
T * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
+ |- ((\t. (t \/ (~ t))) (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY)))))
T * / c\/ b0 c~ b0 ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY
+ |- (((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) = p') ==> ((p' ==> ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))) = q')) ==> (((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = (p' ==> q'))))
T c==> c= c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 f5 c==> c==> f5 c= c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 f6 c= c==> c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c==> f5 f6
- |- (((!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))) ==> ((\n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))) n)) = ((\n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))) n))
T c= c==> ! c= cEXP cBIT0 f0 cBIT0 b0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 * / c= cEXP cBIT0 f0 cBIT0 b0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1 * / c= cEXP cBIT0 f0 cBIT0 b0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
- |- ((\m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) m)
T * / ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 f0
+ |- ((F ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ F) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) t') e'))))
T c==> c==> cF c= creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 f1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF f0 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((!n. (((BIT0 n) - _0) = (BIT0 n))) ==> ((\n. (((BIT0 n) - _0) = (BIT0 n))) n)) = ((\n. (((BIT0 n) - _0) = (BIT0 n))) n))
T c= c==> ! c= c- cBIT0 b0 c_0 cBIT0 b0 * / c= c- cBIT0 b0 c_0 cBIT0 b0 f0 * / c= c- cBIT0 b0 c_0 cBIT0 b0 f0
+ |- ((\x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) x)
T * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0
- |- ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))
T c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- (((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) ==> ((\m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) m)) = ((\m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 * / ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 f0 * / ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 f0
- |- ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))
T c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ |- (((!n. (((BIT0 m) <= (BIT1 n)) = (m <= n))) ==> ((\n. (((BIT0 m) <= (BIT1 n)) = (m <= n))) n)) = ((\n. (((BIT0 m) <= (BIT1 n)) = (m <= n))) n))
T c= c==> ! c= c<= cBIT0 f0 cBIT1 b0 c<= f0 b0 * / c= c<= cBIT0 f0 cBIT1 b0 c<= f0 b0 f1 * / c= c<= cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
- |- (((!w1. (!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))) ==> ((\w1. (!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))) w1)) = ((\w1. (!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))) w1))
T c= c==> ! ! c==> c= f0 f1 c= cazim f0 f1 b0 b1 creal_of_num cNUMERAL c_0 * / ! c==> c= f0 f1 c= cazim f0 f1 b0 b1 creal_of_num cNUMERAL c_0 f2 * / ! c==> c= f0 f1 c= cazim f0 f1 b0 b1 creal_of_num cNUMERAL c_0 f2
- |- (~ (_0 > (BIT1 n)))
T c~ c> c_0 cBIT1 f0
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
- |- ((_0 + (BIT1 n)) = (BIT1 n))
T c= c+ c_0 cBIT1 f0 cBIT1 f0
- |- ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))
T c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
+ |- ((\x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) x)
T * / c= c% creal_of_num cNUMERAL cBIT1 c_0 b0 b0 f0
- |- (((!n. ((ODD (BIT1 n)) = T)) ==> ((\n. ((ODD (BIT1 n)) = T)) n)) = ((\n. ((ODD (BIT1 n)) = T)) n))
T c= c==> ! c= cODD cBIT1 b0 cT * / c= cODD cBIT1 b0 cT f0 * / c= cODD cBIT1 b0 cT f0
- |- ((ODD _0) = F)
T c= cODD c_0 cF
- |- (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))
T c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- ((distance ((vec (NUMERAL _0)) , x)) = (vector_norm x))
T c= cdistance c, cvec cNUMERAL c_0 f0 cvector_norm f0
- |- (((!n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) ==> ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n)) = ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n))
T c= c==> ! c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1 * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1
- |- (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))
T c= c+ cNUMERAL f0 cNUMERAL f1 cNUMERAL c+ f0 f1
+ |- ((\x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_div x) y))))) x)
T * / ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_div b0 b1 f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) |- ((((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b2 cvector_add c% creal_mul b7 csin creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- (((((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = F) ==> (~ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) = (~ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> c= c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) m))
T c= c==> ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 * / ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 f0 * / ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 f0
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (((!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= c==> ! ! ! c==> c/\ corthonormal b0 b1 b2 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f1 cvector_add c% creal_mul b4 ccos b3 b0 cvector_add c% creal_mul b4 csin b3 b1 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f3 cvector_add c% creal_mul b5 ccos creal_add b3 f0 b0 cvector_add c% creal_mul b5 csin creal_add b3 f0 b1 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt creal_of_num cNUMERAL c_0 b5 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f3 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cT
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) |- (!a. (((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) a) ==> ((((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY ! c==> * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b1 b0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b3 b4 b5 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b5 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos b6 b3 cvector_add c% creal_mul b7 csin b6 b4 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b8 ccos creal_add b6 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b3 cvector_add c% creal_mul b8 csin creal_add b6 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b4 c% b2 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b8 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (~ ((vec (NUMERAL _0)) = (basis k)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c~ c= cvec cNUMERAL c_0 cbasis f0
+ ((\z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z) |- (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f4 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\n. (((BIT1 m) = (BIT0 n)) = F)) n)
T * / c= c= cBIT1 f0 cBIT0 b0 cF f1
+ ((\psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) psi) |- (((\psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) psi) /\ F)
T c==> * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- ((_0 <= _0) = T)
T c= c<= c_0 c_0 cT
+ |- (((!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))) ==> ((\y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))) y)) = ((\y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))) y))
T c= c==> ! c= cCx creal_mul f0 b0 ccomplex_mul cCx f0 cCx b0 * / c= cCx creal_mul f0 b0 ccomplex_mul cCx f0 cCx b0 f1 * / c= cCx creal_mul f0 b0 ccomplex_mul cCx f0 cCx b0 f1
- |- (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))))))) = (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))))
T c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0
- |- (((!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))) ==> ((\n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))) n)) = ((\n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))) n))
T c= c==> ! c= c* cBIT0 f0 cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT0 f0 cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT0 f0 cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))
T c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- (((!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))) ==> ((\n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))) n)) = ((\n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))) n))
T c= c==> ! c= c+ cBIT0 f0 cBIT0 b0 cBIT0 c+ f0 b0 * / c= c+ cBIT0 f0 cBIT0 b0 cBIT0 c+ f0 b0 f1 * / c= c+ cBIT0 f0 cBIT0 b0 cBIT0 c+ f0 b0 f1
- |- (((((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = F) ==> (~ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) = (~ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> c= c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) c) |- (((?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F) = F)
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul f1 b1 ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- ((ODD (BIT0 n)) = F)
T c= cODD cBIT0 f0 cF
- |- ((\n. ((_0 - (BIT0 n)) = _0)) n)
T * / c= c- c_0 cBIT0 b0 c_0 f0
- |- (((!n. ((_0 = (BIT0 n)) = (_0 = n))) ==> ((\n. ((_0 = (BIT0 n)) = (_0 = n))) n)) = ((\n. ((_0 = (BIT0 n)) = (_0 = n))) n))
T c= c==> ! c= c= c_0 cBIT0 b0 c= c_0 b0 * / c= c= c_0 cBIT0 b0 c= c_0 b0 f0 * / c= c= c_0 cBIT0 b0 c= c_0 b0 f0
+ |- ((\z. (((complex_div w) z) = ((complex_mul w) (complex_inv z)))) z)
T * / c= ccomplex_div f0 b0 ccomplex_mul f0 ccomplex_inv b0 f1
+ |- ((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) = p') ==> ((p' ==> ((?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))) = q')) ==> ((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) = (p' ==> q'))))
T c==> c= c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 f0 c==> c==> f0 c= c? / c? / c? / c/\ c= f1 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f3 cvector_add c% creal_mul b2 ccos creal_add b0 f4 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f4 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 f6 c= c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f1 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f3 cvector_add c% creal_mul b2 ccos creal_add b0 f4 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f4 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f5 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c==> f0 f6
- |- ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n)
T * / c= cPRE cBIT1 b0 cBIT0 b0 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))) = T)
T c= c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cT
+ |- ((((~ (!a. (!c. (!b. (!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))))))) = (?a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> (!a. (!c. (!b. (!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))))))) = (!a. (!c. (!b. (!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d))))))))
T c= c==> c= c~ ! ! ! ! c= ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 ! ! ! ! c= ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 ! ! ! ! c= ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3
- |- ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))))
T c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)), ((real_lt (real_of_num (NUMERAL _0))) r1), ((real_lt (real_of_num (NUMERAL _0))) r2) |- ((\r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = ((complex_mul (Cx ((real_div r2) r1))) (cexp ((vector_sub ((complex_mul ii) (Cx ((real_add psi) a)))) ((complex_mul ii) (Cx psi)))))) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ((real_div r2) r1))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> creal_lt creal_of_num cNUMERAL c_0 f1 c==> creal_lt creal_of_num cNUMERAL c_0 f2 * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 ccomplex_mul cCx creal_div f2 f1 ccexp cvector_sub ccomplex_mul cii cCx creal_add f3 f0 ccomplex_mul cii cCx f3 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_div f2 f1
- |- ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))
T c= cPRE cBIT0 f0 cCOND c= f0 c_0 c_0 cBIT1 cPRE f0
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) |- ((!h1. (!h2. ((!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))) = ((?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c= ! ! c==> ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f1 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b6 creal_lt creal_of_num cNUMERAL c_0 b7 c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- (((!k. (!x. (!y. (((dropout k) ((vector_add x) y)) = ((vector_add ((dropout k) x)) ((dropout k) y)))))) ==> ((\k. (!x. (!y. (((dropout k) ((vector_add x) y)) = ((vector_add ((dropout k) x)) ((dropout k) y)))))) k)) = ((\k. (!x. (!y. (((dropout k) ((vector_add x) y)) = ((vector_add ((dropout k) x)) ((dropout k) y)))))) k))
T c= c==> ! ! ! c= cdropout b0 cvector_add b1 b2 cvector_add cdropout b0 b1 cdropout b0 b2 * / ! ! c= cdropout b0 cvector_add b1 b2 cvector_add cdropout b0 b1 cdropout b0 b2 f0 * / ! ! c= cdropout b0 cvector_add b1 b2 cvector_add cdropout b0 b1 cdropout b0 b2 f0
+ (((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))) = y) |- (y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))
T c==> c= cvector_add c% creal_mul f0 ccos creal_add f1 f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f0 csin creal_add f1 f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 f4 c= f4 cvector_add c% creal_mul f0 ccos creal_add f1 f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f0 csin creal_add f1 f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ |- ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))
T c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))
T c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- ((((cross (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT1 _0)))) = (basis (NUMERAL (BIT0 (BIT1 _0))))) /\ (((cross (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (vector_neg (basis (NUMERAL (BIT0 (BIT1 _0)))))))
T c/\ c= ccross cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c= ccross cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT0 cBIT1 c_0
+ |- (((NUMERAL m) = (NUMERAL n)) = (m = n))
T c= c= cNUMERAL f0 cNUMERAL f1 c= f0 f1
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- |- (((BIT0 m) EXP _0) = (BIT1 _0))
T c= cEXP cBIT0 f0 c_0 cBIT1 c_0
- |- (((BIT0 m) < (BIT1 n)) = (m <= n))
T c= c< cBIT0 f0 cBIT1 f1 c<= f0 f1
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) |- (((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) a) ==> ((((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 f2 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b2 cvector_add c% creal_mul b7 csin creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
+ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))), ((collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))) |- (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))
T c==> c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f1 f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c==> c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f1 f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f1 f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
+ |- (((!n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) ==> ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)) = ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n))
T c= c==> ! c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1 * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
+ |- (((!e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3)))))))))) ==> ((\e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3)))))))))) e3)) = ((\e3. ((((orthonormal e1) e2) e3) = ((((dot e1) e1) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e2) e2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e3) e3) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((dot e1) e2) = (real_of_num (NUMERAL _0))) /\ ((((dot e1) e3) = (real_of_num (NUMERAL _0))) /\ ((((dot e2) e3) = (real_of_num (NUMERAL _0))) /\ ((real_lt (real_of_num (NUMERAL _0))) ((dot ((cross e1) e2)) e3)))))))))) e3))
T c= c==> ! c= corthonormal f0 f1 b0 c/\ c= cdot f0 f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f1 f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f0 f1 creal_of_num cNUMERAL c_0 c/\ c= cdot f0 b0 creal_of_num cNUMERAL c_0 c/\ c= cdot f1 b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross f0 f1 b0 * / c= corthonormal f0 f1 b0 c/\ c= cdot f0 f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f1 f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f0 f1 creal_of_num cNUMERAL c_0 c/\ c= cdot f0 b0 creal_of_num cNUMERAL c_0 c/\ c= cdot f1 b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross f0 f1 b0 f2 * / c= corthonormal f0 f1 b0 c/\ c= cdot f0 f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f1 f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot b0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cdot f0 f1 creal_of_num cNUMERAL c_0 c/\ c= cdot f0 b0 creal_of_num cNUMERAL c_0 c/\ c= cdot f1 b0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cdot ccross f0 f1 b0 f2
+ |- ((\x. (((dropout k) ((% c) x)) = ((% c) ((dropout k) x)))) x)
T * / c= cdropout f0 c% f1 b0 c% f1 cdropout f0 b0 f2
- |- (((!n. (((BIT1 n) >= (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT1 n) >= (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) >= (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT1 b0 cBIT0 f0 c>= b0 f0 * / c= c>= cBIT1 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c>= cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 >= _0) = T)
T c= c>= c_0 c_0 cT
- |- ((BIT0 _0) = _0)
T c= cBIT0 c_0 c_0
- |- (((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) ==> ((\n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) n)) = ((\n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) n))
T c= c==> ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 * / c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 f0 * / c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 f0
+ |- (((!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) ==> ((\d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) d)) = ((\d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) d))
T c= c==> ! c= ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b0 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b0 * / c= ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b0 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b0 f3 * / c= ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b0 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b0 f3
- |- (((BIT0 n) >= (BIT1 m)) = (n > m))
T c= c>= cBIT0 f0 cBIT1 f1 c> f0 f1
+ |- ((\w2. (((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) w2)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) w2)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub w2) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) w2))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) w2))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (w2 INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))))))))) y)
T * / c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 b0 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b3 b4 b5 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b5 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos b6 b3 cvector_add c% creal_mul b7 csin b6 b4 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub b0 cvec cNUMERAL c_0 cvector_add c% creal_mul b8 ccos creal_add b6 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 b0 b3 cvector_add c% creal_mul b8 csin creal_add b6 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 b0 b4 c% b2 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT b0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b8 f1
- |- (((BIT1 n) < _0) = F)
T c= c< cBIT1 f0 c_0 cF
- |- (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) /\ ((_0 >= _0) /\ ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))))) /\ (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))))))))))))
T c/\ c/\ ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 c/\ c>= c_0 c_0 c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV)))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV
- |- (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) ==> ((\m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) m)) = ((\m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) m))
T c= c==> ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 * / ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 f0 * / ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 f0
- |- ((\n. (((BIT0 n) > (BIT0 m)) = (n > m))) n)
T * / c= c> cBIT0 b0 cBIT0 f0 c> b0 f0 f1
+ ((\t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) t) |- (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin b0 cii ccomplex_mul cCx f0 cvector_add cCx ccos b0 ccomplex_mul cii cCx csin b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z)) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))))))))))
T c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
+ |- ((\g'. (!t'. (!e'. ((((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL c_0 b2 c= cCOND c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND b0 b1 b2 f0
+ |- ((basis (NUMERAL (BIT0 (BIT1 _0)))) = ii)
T c= cbasis cNUMERAL cBIT0 cBIT1 c_0 cii
+ |- (((~ q) = (?a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((BIT1 m) EXP _0) = (BIT1 _0))
T c= cEXP cBIT1 f0 c_0 cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (~ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c~ c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT1 m) < (BIT0 n)) = (m < n))) n)
T * / c= c< cBIT1 f0 cBIT0 b0 c< f0 b0 f1
+ |- (((!x. (!y. (((dropout k) ((vector_add x) y)) = ((vector_add ((dropout k) x)) ((dropout k) y))))) ==> ((\x. (!y. (((dropout k) ((vector_add x) y)) = ((vector_add ((dropout k) x)) ((dropout k) y))))) x)) = ((\x. (!y. (((dropout k) ((vector_add x) y)) = ((vector_add ((dropout k) x)) ((dropout k) y))))) x))
T c= c==> ! ! c= cdropout f0 cvector_add b0 b1 cvector_add cdropout f0 b0 cdropout f0 b1 * / ! c= cdropout f0 cvector_add b0 b1 cvector_add cdropout f0 b0 cdropout f0 b1 f1 * / ! c= cdropout f0 cvector_add b0 b1 cvector_add cdropout f0 b0 cdropout f0 b1 f1
- |- (((!n. (((BIT0 n) < _0) = F)) ==> ((\n. (((BIT0 n) < _0) = F)) n)) = ((\n. (((BIT0 n) < _0) = F)) n))
T c= c==> ! c= c< cBIT0 b0 c_0 cF * / c= c< cBIT0 b0 c_0 cF f0 * / c= c< cBIT0 b0 c_0 cF f0
- (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))) |- ((collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))) = T)
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY cT
+ (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) |- (!e2. (!e3. (((((orthonormal (basis (NUMERAL (BIT1 _0)))) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))
T c==> ! ! ! c==> c/\ corthonormal b0 b1 b2 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b4 ccos b3 b0 cvector_add c% creal_mul b4 csin b3 b1 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b5 ccos creal_add b3 f3 b0 cvector_add c% creal_mul b5 csin creal_add b3 f3 b1 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt creal_of_num cNUMERAL c_0 b5 ! ! c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 b0 b1 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b3 ccos b2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b3 csin b2 b0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b4 ccos creal_add b2 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b4 csin creal_add b2 f3 b0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b3 creal_lt creal_of_num cNUMERAL c_0 b4
- |- ((EVEN (BIT0 n)) = T)
T c= cEVEN cBIT0 f0 cT
- |- (((!n. (((BIT1 n) + _0) = (BIT1 n))) ==> ((\n. (((BIT1 n) + _0) = (BIT1 n))) n)) = ((\n. (((BIT1 n) + _0) = (BIT1 n))) n))
T c= c==> ! c= c+ cBIT1 b0 c_0 cBIT1 b0 * / c= c+ cBIT1 b0 c_0 cBIT1 b0 f0 * / c= c+ cBIT1 b0 c_0 cBIT1 b0 f0
- |- ((\n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n)))) n)
T * / c= c+ cBIT1 f0 cBIT0 b0 cBIT1 c+ f0 b0 f1
- |- ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n)
T * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0
- |- (((!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n)))) ==> ((\n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n)))) n)) = ((\n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n)))) n))
T c= c==> ! c= c+ cBIT1 f0 cBIT0 b0 cBIT1 c+ f0 b0 * / c= c+ cBIT1 f0 cBIT0 b0 cBIT1 c+ f0 b0 f1 * / c= c+ cBIT1 f0 cBIT0 b0 cBIT1 c+ f0 b0 f1
- |- ((\n. (((BIT0 m) = (BIT0 n)) = (m = n))) n)
T * / c= c= cBIT0 f0 cBIT0 b0 c= f0 b0 f1
+ |- ((\w1. (!w2. ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))) w1)
T * / ! c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= cazim f0 f1 b0 b1 creal_of_num cNUMERAL c_0 f2
+ |- (((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)
T c==> c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((BIT0 n) >= _0)
T c>= cBIT0 f0 c_0
+ |- ((\x. (!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y))))) x)
T * / ! c= cCx creal_mul b0 b1 ccomplex_mul cCx b0 cCx b1 f0
- |- ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n)
T * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0
+ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (((~ ((basis k) = (vec (NUMERAL _0)))) ==> (((basis k) = (vec (NUMERAL _0))) = F)) = (((basis k) = (vec (NUMERAL _0))) = F))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c~ c= cbasis f0 cvec cNUMERAL c_0 c= c= cbasis f0 cvec cNUMERAL c_0 cF c= c= cbasis f0 cvec cNUMERAL c_0 cF
+ |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))))) ==> (((dot (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = (((dot (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV c= cdot cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cdot cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) m)
T * / ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 f0
- |- ((BIT1 n) > _0)
T c> cBIT1 f0 c_0
+ (((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))) = x) |- (x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))))
T c==> c= cvector_add c% creal_mul f0 ccos f1 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f0 csin f1 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0 f3 c= f3 cvector_add c% creal_mul f0 ccos f1 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f0 csin f1 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ |- ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))
T c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))
T c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
+ |- ((~ (x = y)) = (?z. (((complex_mul ((vector_sub x) y)) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c~ c= f0 f1 c? / c= ccomplex_mul cvector_sub f0 f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT1 n) <= _0) = F)) n)
T * / c= c<= cBIT1 b0 c_0 cF f0
+ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY)))) |- (T = ((real_of_num (NUMERAL _0)) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= cT c= creal_of_num cNUMERAL c_0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
- |- (~ (_0 > _0))
T c~ c> c_0 c_0
+ |- ((((~ F) ==> ((real_of_num (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) = ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))
T c= c==> c==> c~ cF c= creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) |- ((collinear (v INSERT (w INSERT (w1 INSERT EMPTY)))) /\ (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))
T c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0
+ |- (((!t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 * / ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1 * / ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1
- |- ((\n. (~ (_0 > (BIT0 n)))) n)
T * / c~ c> c_0 cBIT0 b0 f0
- |- ((\m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))) m)
T * / ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 f0
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (!r2. (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi ! c==> c/\ c= f1 cvector_add c% creal_mul f2 ccos f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f2 csin f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f5 cvector_add c% creal_mul b0 ccos creal_add f3 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b0 csin creal_add f3 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f6 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f2 creal_lt creal_of_num cNUMERAL c_0 b0 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul b0 ccos creal_add f3 f0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b0 csin creal_add f3 f0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f6 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f2 ccos f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f2 csin f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))), (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) |- ((!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) /\ ((Arg z) = a))
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= ccomplex_mul cCx f0 ccexp ccomplex_mul cii cCx f1 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= cArg f2 f1
- |- ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))))))))
T c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- ((?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) ==> (?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)))
T c==> c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0
- |- (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))
T c= c- cNUMERAL f0 cNUMERAL f1 cNUMERAL c- f0 f1
- |- ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))
T c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
+ ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) |- (y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))
T c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ |- (((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0))) = F)
T c= c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 cF
+ |- ((~ F) = T)
T c= c~ cF cT
+ |- ((\d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) d)
T * / c= ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 b0 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 b0 f3
+ ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (!h2. ((!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) e3) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi ! c==> ! ! ! c==> c/\ corthonormal b1 b2 b3 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 b3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f1 cvector_add c% creal_mul b5 ccos b4 b1 cvector_add c% creal_mul b5 csin b4 b2 c% f2 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f3 cvector_add c% creal_mul b6 ccos creal_add b4 f0 b1 cvector_add c% creal_mul b6 csin creal_add b4 f0 b2 c% b0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b5 creal_lt creal_of_num cNUMERAL c_0 b6 c= f0 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f3 cdropout cNUMERAL cBIT1 cBIT1 c_0 f1
+ (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) |- ((((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) a) ==> ((((real_le (real_of_num (NUMERAL _0))) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) /\ (((real_lt ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) ((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y))))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2)))))))))))))))) ==> (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))) = T)
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c= c==> * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 f2 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 c/\ creal_lt cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b2 cvector_add c% creal_mul b7 csin creal_add b5 cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cT
- |- (((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) ==> ((\m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) m)) = ((\m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) m))
T c= c==> ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 f0
+ |- ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n)
T * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1
+ ((\a. (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) a) |- (?psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx b0 cvector_sub ccomplex_mul cii cvector_add cCx b1 cCx b0 ccomplex_mul cii cCx b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((((?r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F) ==> (((~ q) = (?r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> q)) = (((~ q) = (?r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (!a. (((\a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) a) ==> F))
T c==> * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))) n)
T * / c= c+ cBIT1 f0 cBIT1 b0 cBIT0 cSUC c+ f0 b0 f1
+ ((real_lt (real_of_num (NUMERAL _0))) r2) |- (((real_lt (real_of_num (NUMERAL _0))) r2) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_lt creal_of_num cNUMERAL c_0 f0 cT
- |- ((((((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F) ==> (~ (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) = (~ (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c= c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0
+ (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z)) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 f1 ccomplex_mul f2 f3 ccomplex_mul ccomplex_mul f0 f2 ccomplex_mul f1 f3 f4 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) r) |- (((\r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) r) /\ F)
T c==> * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- (((!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))) ==> ((\m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))) m)) = ((\m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))) m))
T c= c==> ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 * / ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 f0 * / ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 f0
- |- ((\m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) m)
T * / ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((NUMERAL m) <= (NUMERAL n)) = (m <= n))
T c= c<= cNUMERAL f0 cNUMERAL f1 c<= f0 f1
+ |- ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND F) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND cF creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\n. ((_0 * (BIT1 n)) = _0)) n)
T * / c= c* c_0 cBIT1 b0 c_0 f0
- |- ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))) = (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))))
T c= c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_div x) y)) = T))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_lt creal_of_num cNUMERAL c_0 creal_div f0 f1 cT
+ |- ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))) ==> ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))) = (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))))))
T c==> c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c= c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c= f3 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f2 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- (((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) ==> ((\m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) m)) = ((\m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) m))
T c= c==> ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 * / ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0 * / ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
+ |- ((T ==> ((?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))) = q')) ==> ((((((orthonormal (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((% (vector_norm (basis (NUMERAL (BIT1 (BIT1 _0)))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))))))) = (T ==> q')))
T c==> c==> cT c= c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 f5 c= c==> c/\ corthonormal cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c% cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c==> cT f5
+ ((\r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) r) |- (((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) ==> ((Arg z) = a))) = ((!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) ==> ((Arg z) = a)))
T c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f2 c= c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f2 c/\ c= ccomplex_mul cCx f2 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= cArg f1 f0 c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= cArg f1 f0
+ |- ((\m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
+ ((\psi. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) psi) |- (((?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F) = F)
T c==> * / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx b0 cCx f0 ccomplex_mul cii cCx b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- (((!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))) ==> ((\n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))) n)) = ((\n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))) n))
T c= c==> ! c= c+ cBIT1 f0 cBIT1 b0 cBIT0 cSUC c+ f0 b0 * / c= c+ cBIT1 f0 cBIT1 b0 cBIT0 cSUC c+ f0 b0 f1 * / c= c+ cBIT1 f0 cBIT1 b0 cBIT0 cSUC c+ f0 b0 f1
- |- ((\n. (((BIT0 n) < _0) = F)) n)
T * / c= c< cBIT0 b0 c_0 cF f0
- |- (((!n. (((NUMERAL n) > (NUMERAL m)) = (n > m))) ==> ((\n. (((NUMERAL n) > (NUMERAL m)) = (n > m))) n)) = ((\n. (((NUMERAL n) > (NUMERAL m)) = (n > m))) n))
T c= c==> ! c= c> cNUMERAL b0 cNUMERAL f0 c> b0 f0 * / c= c> cNUMERAL b0 cNUMERAL f0 c> b0 f0 f1 * / c= c> cNUMERAL b0 cNUMERAL f0 c> b0 f0 f1
+ ((\r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) r) |- (((\r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) r) /\ ((!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) ==> ((Arg z) = a)))
T c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f2 c/\ * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f2 c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= cArg f1 f0
+ ((\r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) r) |- (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))
T c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f2 c/\ creal_lt creal_of_num cNUMERAL c_0 f2 c/\ c= ccomplex_mul cCx f2 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi
- |- (((!x. (((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) x) ==> (?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)))) ==> ((?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) ==> (?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)))) = ((?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) ==> (?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a))))
T c= c==> ! c==> * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b1 b0 c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b1 c==> c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 c==> c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0
- |- ((\q'. ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) = p') ==> ((p' ==> ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))))))) = q')) ==> ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 f8 c==> c==> f8 c= c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 b0 c= c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c==> f8 b0 f9
- |- (((BIT1 n) > (BIT0 m)) = (n >= m))
T c= c> cBIT1 f0 cBIT0 f1 c>= f0 f1
- |- (((BIT0 m) = (BIT0 n)) = (m = n))
T c= c= cBIT0 f0 cBIT0 f1 c= f0 f1
+ ((ccos (Cx x)) = (Cx (cos x))) |- ((Cx (cos x)) = (ccos (Cx x)))
T c==> c= cccos cCx f0 cCx ccos f0 c= cCx ccos f0 cccos cCx f0
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV)))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV
+ |- ((((\r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) r) ==> F) = T)
T c= c==> * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
- (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) |- (((~ (((dropout (NUMERAL (BIT1 (BIT1 _0)))) x) = (vec (NUMERAL _0)))) ==> ((((dropout (NUMERAL (BIT1 (BIT1 _0)))) x) = (vec (NUMERAL _0))) = F)) = ((((dropout (NUMERAL (BIT1 (BIT1 _0)))) x) = (vec (NUMERAL _0))) = F))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= c==> c~ c= cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cvec cNUMERAL c_0 c= c= cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cvec cNUMERAL c_0 cF c= c= cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cvec cNUMERAL c_0 cF
- |- (((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) ==> ((\m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) m)) = ((\m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) m))
T c= c==> ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 * / ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 f0 * / ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 f0
- |- (((BIT1 n) >= (BIT0 m)) = (n >= m))
T c= c>= cBIT1 f0 cBIT0 f1 c>= f0 f1
- |- ((ODD (BIT1 n)) = T)
T c= cODD cBIT1 f0 cT
- ((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) a) |- (((((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a) ==> (?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a))) = (?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)))
T c==> * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 f2 c= c==> c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f2 c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0
+ |- (!c. (((\c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) c) ==> F))
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- (((!v. (!w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) ==> ((\v. (!w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) v)) = ((\v. (!w. (!w1. (!w2. ((collinear (v INSERT (w INSERT (w2 INSERT EMPTY)))) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))))) v))
T c= c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 * / ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 f0 * / ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c= cazim b0 b1 b2 b3 creal_of_num cNUMERAL c_0 f0
- |- (((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((complex_mul ii) (Cx a))) ((vector_sub ((complex_mul ii) ((vector_add (Cx psi)) (Cx a)))) ((complex_mul ii) (Cx psi))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = F)
T c= c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub ccomplex_mul cii cCx f0 cvector_sub ccomplex_mul cii cvector_add cCx f1 cCx f0 ccomplex_mul cii cCx f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((~ q) = (?a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) ==> ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m)) = ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m))
T c= c==> ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0 * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
- |- ((\n. (((BIT1 m) < (BIT1 n)) = (m < n))) n)
T * / c= c< cBIT1 f0 cBIT1 b0 c< f0 b0 f1
- |- (((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) ==> ((\m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) m)) = ((\m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 * / ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 f0 * / ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 f0
- |- ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))))))))
T c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
+ |- ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)
T * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
- ((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) a) |- (((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) a) /\ (?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)))
T c==> * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 f2 c/\ * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 f2 c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0
+ ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))), ((real_le (real_of_num (NUMERAL _0))) a), ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) |- (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) /\ (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))))))))
T c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c==> creal_le creal_of_num cNUMERAL c_0 f6 c==> creal_lt f6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c/\ c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0
+ |- (((dot (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cdot cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((!n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) ==> ((\n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) n)) = ((\n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) n))
T c= c==> ! c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 * / c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 f1 * / c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 f1
+ |- ((p ==> F) ==> (((~ q) = p) ==> q))
T c==> c==> f0 cF c==> c= c~ f1 f0 f1
- |- (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n)))
T c= c+ cBIT1 f0 cBIT0 f1 cBIT1 c+ f0 f1
+ |- ((((?a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F) ==> (((~ q) = (?a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> q)) = (((~ q) = (?a. (?c. (?b. (?d. (?z. (((complex_mul ((vector_sub ((complex_mul ((complex_mul a) b)) ((complex_mul c) d))) ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul b0 b2 ccomplex_mul b1 b3 ccomplex_mul ccomplex_mul b0 b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ F |- (F /\ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> cF c/\ cF c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) |- (((!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a)))) ==> ((\r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a)))) r)) = ((\r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a)))) r))
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= c==> ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b1 f0 * / ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b1 f0 f1 * / ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b1 f0 f1
- ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) |- (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))
T c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) |- (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a)))
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ c= ccomplex_mul cCx f0 ccexp ccomplex_mul cii cCx f1 b0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b0 f1
- |- ((\n. (((BIT0 n) + _0) = (BIT0 n))) n)
T * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0
+ |- ((\k. (!c. (!x. (((dropout k) ((% c) x)) = ((% c) ((dropout k) x)))))) k)
T * / ! ! c= cdropout b0 c% b1 b2 c% b1 cdropout b0 b2 f0
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- (((!n. ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))) ==> ((\n. ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))) n)) = ((\n. ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))) n))
T c= c==> ! c= cPRE cNUMERAL b0 cNUMERAL cPRE b0 * / c= cPRE cNUMERAL b0 cNUMERAL cPRE b0 f0 * / c= cPRE cNUMERAL b0 cNUMERAL cPRE b0 f0
+ |- ((\c. (!b. (!d. (((complex_mul ((complex_mul a) b)) ((complex_mul c) d)) = ((complex_mul ((complex_mul a) c)) ((complex_mul b) d)))))) c)
T * / ! ! c= ccomplex_mul ccomplex_mul f0 b1 ccomplex_mul b0 b2 ccomplex_mul ccomplex_mul f0 b0 ccomplex_mul b1 b2 f1
- |- (((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) ==> ((\m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) m)) = ((\m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 * / ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 f0 * / ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 f0
+ |- (((dropout (NUMERAL (BIT1 (BIT1 _0)))) (basis (NUMERAL (BIT1 _0)))) = (basis (NUMERAL (BIT1 _0))))
T c= cdropout cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0
+ |- (((!z. ((cexp ((complex_mul ii) z)) = ((vector_add (ccos z)) ((complex_mul ii) (csin z))))) ==> ((\z. ((cexp ((complex_mul ii) z)) = ((vector_add (ccos z)) ((complex_mul ii) (csin z))))) z)) = ((\z. ((cexp ((complex_mul ii) z)) = ((vector_add (ccos z)) ((complex_mul ii) (csin z))))) z))
T c= c==> ! c= ccexp ccomplex_mul cii b0 cvector_add cccos b0 ccomplex_mul cii ccsin b0 * / c= ccexp ccomplex_mul cii b0 cvector_add cccos b0 ccomplex_mul cii ccsin b0 f0 * / c= ccexp ccomplex_mul cii b0 cvector_add cccos b0 ccomplex_mul cii ccsin b0 f0
+ |- (((!n. ((_0 < (BIT1 n)) = T)) ==> ((\n. ((_0 < (BIT1 n)) = T)) n)) = ((\n. ((_0 < (BIT1 n)) = T)) n))
T c= c==> ! c= c< c_0 cBIT1 b0 cT * / c= c< c_0 cBIT1 b0 cT f0 * / c= c< c_0 cBIT1 b0 cT f0
- |- ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))
T c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))
T c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))) ==> ((vector_norm (basis (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) = ((vector_norm (basis (NUMERAL (BIT1 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV c= cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_norm cbasis cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) m)
T * / ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) ==> ((\m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) m)) = ((\m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) m))
T c= c==> ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 * / ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 f0 * / ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 f0
+ (!a. (!r. (!z. ((((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((Arg z) = a))))) |- (((?r. (((real_lt (real_of_num (NUMERAL _0))) r) /\ ((((complex_mul (Cx r)) (cexp ((complex_mul ii) (Cx a)))) = z) /\ (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))) ==> ((Arg z) = a)) = T)
T c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ c= ccomplex_mul cCx b1 ccexp ccomplex_mul cii cCx b0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg b2 b0 c= c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ c= ccomplex_mul cCx b0 ccexp ccomplex_mul cii cCx f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cArg f1 f0 cT
- |- ((\n. (((NUMERAL n) > (NUMERAL m)) = (n > m))) n)
T * / c= c> cNUMERAL b0 cNUMERAL f0 c> b0 f0 f1
+ |- (((!n. (((BIT1 m) <= (BIT0 n)) = (m < n))) ==> ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1 * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1
- |- ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n)
T * / c= cEVEN cNUMERAL b0 cEVEN b0 f0
+ |- (((!t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 * / ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1 * / ! c==> c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c==> f0 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f0 c= creal_of_num cNUMERAL c_0 b1 c= cCOND c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f0 b0 b1 f1
- |- ((\n. ((_0 * (BIT0 n)) = _0)) n)
T * / c= c* c_0 cBIT0 b0 c_0 f0
- |- ((PRE (BIT1 n)) = (BIT0 n))
T c= cPRE cBIT1 f0 cBIT0 f0
+ |- (!r. (((\r. (?t. (?z. ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) r) ==> F))
T c==> * / c? / c? / c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx b0 cCx ccos b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx b0 cCx csin b1 cii ccomplex_mul cCx b0 cvector_add cCx ccos b1 ccomplex_mul cii cCx csin b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- (((BIT0 n) > _0) = (n > _0))
T c= c> cBIT0 f0 c_0 c> f0 c_0
+ ((Cx ((real_div x) y)) = ((complex_div (Cx x)) (Cx y))) |- (((complex_div (Cx x)) (Cx y)) = (Cx ((real_div x) y)))
T c==> c= cCx creal_div f0 f1 ccomplex_div cCx f0 cCx f1 c= ccomplex_div cCx f0 cCx f1 cCx creal_div f0 f1
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
- |- ((((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a) = ((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) a))
T c= c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f2 * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 f2
- (?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))) |- ((?psi. (?r1. (?r2. ((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2))))))) = T)
T c==> c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 c= c? / c? / c? / c/\ c= f0 cvector_add c% creal_mul b1 ccos b0 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b1 csin b0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f1 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f2 cvector_add c% creal_mul b2 ccos creal_add b0 f3 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul b2 csin creal_add b0 f3 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f4 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 b2 cT
- |- (((BIT0 n) < _0) = F)
T c= c< cBIT0 f0 c_0 cF
- |- (((!n. ((BIT0 n) >= _0)) ==> ((\n. ((BIT0 n) >= _0)) n)) = ((\n. ((BIT0 n) >= _0)) n))
T c= c==> ! c>= cBIT0 b0 c_0 * / c>= cBIT0 b0 c_0 f0 * / c>= cBIT0 b0 c_0 f0
- |- (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))
T c= cEXP cBIT1 f0 cBIT0 f1 c* cEXP cBIT1 f0 f1 cEXP cBIT1 f0 f1
- |- ((!x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) /\ (!w. (!x. (!y. (!z. ((((vector_add ((complex_mul w) y)) ((complex_mul x) z)) = ((vector_add ((complex_mul w) z)) ((complex_mul x) y))) = ((w = x) \/ (y = z))))))))
T c/\ ! ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 ! ! ! ! c= c= cvector_add ccomplex_mul b0 b2 ccomplex_mul b1 b3 cvector_add ccomplex_mul b0 b3 ccomplex_mul b1 b2 c\/ c= b0 b1 c= b2 b3
- |- ((\w. (!w1. (!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0))))))) w)
T * / ! ! c==> c= f0 b0 c= cazim f0 b0 b1 b2 creal_of_num cNUMERAL c_0 f1
- |- ((\n. ((EVEN (BIT1 n)) = F)) n)
T * / c= cEVEN cBIT1 b0 cF f0
- |- (((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) ==> ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m)) = ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m))
T c= c==> ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0 * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- |- (((~ (_0 > (BIT1 n))) ==> ((_0 > (BIT1 n)) = F)) = ((_0 > (BIT1 n)) = F))
T c= c==> c~ c> c_0 cBIT1 f0 c= c> c_0 cBIT1 f0 cF c= c> c_0 cBIT1 f0 cF
- |- (((!n. (((BIT0 m) = (BIT0 n)) = (m = n))) ==> ((\n. (((BIT0 m) = (BIT0 n)) = (m = n))) n)) = ((\n. (((BIT0 m) = (BIT0 n)) = (m = n))) n))
T c= c==> ! c= c= cBIT0 f0 cBIT0 b0 c= f0 b0 * / c= c= cBIT0 f0 cBIT0 b0 c= f0 b0 f1 * / c= c= cBIT0 f0 cBIT0 b0 c= f0 b0 f1
- |- (((BIT0 n) * _0) = _0)
T c= c* cBIT0 f0 c_0 c_0
- |- ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))
T c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= j) /\ (j <= (dimindex UNIV))))) /\ (((dot (basis i)) (basis j)) = (((COND (i = j)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= cdot cbasis f0 cbasis f1 cCOND c= f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> ((a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0))))))))))) = q')) ==> ((((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0))))))))) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))))))) = (((x = ((vector_add ((% ((real_mul r1) (cos psi))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r1) (sin psi))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h1) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((y = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) (basis (NUMERAL (BIT1 _0))))) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) (basis (NUMERAL (BIT0 (BIT1 _0)))))) ((% h2) (basis (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_lt (real_of_num (NUMERAL _0))) r1) /\ ((real_lt (real_of_num (NUMERAL _0))) r2)))) ==> q')))
T c==> c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 f8 c= c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 c= f6 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c==> c/\ c= f0 cvector_add c% creal_mul f1 ccos f2 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f1 csin f2 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f3 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f4 cvector_add c% creal_mul f5 ccos creal_add f2 f6 cbasis cNUMERAL cBIT1 c_0 cvector_add c% creal_mul f5 csin creal_add f2 f6 cbasis cNUMERAL cBIT0 cBIT1 c_0 c% f7 cbasis cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 f5 f8
- (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a) |- ((\a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)) a)
T c==> c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f2 * / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0 f2
- |- ((\m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) m)
T * / ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 f0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- (_0 >= _0)
T c>= c_0 c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((BIT1 n) + _0) = (BIT1 n))
T c= c+ cBIT1 f0 c_0 cBIT1 f0
- (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))), (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))), ((real_le (real_of_num (NUMERAL _0))) a) |- ((((real_lt a) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) /\ (?h1. (?h2. (!e1. (!e2. (!e3. (((((orthonormal e1) e2) e3) /\ ((((% (distance ((basis (NUMERAL (BIT1 (BIT1 _0)))) , (vec (NUMERAL _0))))) e3) = ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0)))) /\ (~ ((basis (NUMERAL (BIT1 (BIT1 _0)))) = (vec (NUMERAL _0)))))) ==> (?psi. (?r1. (?r2. ((((vector_sub x) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r1) (cos psi))) e1)) ((vector_add ((% ((real_mul r1) (sin psi))) e2)) ((% h1) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ ((((vector_sub y) (vec (NUMERAL _0))) = ((vector_add ((% ((real_mul r2) (cos ((real_add psi) a)))) e1)) ((vector_add ((% ((real_mul r2) (sin ((real_add psi) a)))) e2)) ((% h2) ((vector_sub (basis (NUMERAL (BIT1 (BIT1 _0))))) (vec (NUMERAL _0))))))) /\ (((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r1)) /\ ((~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (y INSERT EMPTY))))) ==> ((real_lt (real_of_num (NUMERAL _0))) r2))))))))))))))) ==> (a = (Arg ((complex_div ((dropout (NUMERAL (BIT1 (BIT1 _0)))) y)) ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> c/\ creal_lt f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c? / c? / ! ! ! c==> c/\ corthonormal b2 b3 b4 c/\ c= c% cdistance c, cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 b4 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c~ c= cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c? / c? / c? / c/\ c= cvector_sub f0 cvec cNUMERAL c_0 cvector_add c% creal_mul b6 ccos b5 b2 cvector_add c% creal_mul b6 csin b5 b3 c% b0 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvector_sub f1 cvec cNUMERAL c_0 cvector_add c% creal_mul b7 ccos creal_add b5 f2 b2 cvector_add c% creal_mul b7 csin creal_add b5 f2 b3 c% b1 cvector_sub cbasis cNUMERAL cBIT1 cBIT1 c_0 cvec cNUMERAL c_0 c/\ c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b6 c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f1 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 b7 c= f2 cArg ccomplex_div cdropout cNUMERAL cBIT1 cBIT1 c_0 f1 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0
- |- ((EVEN (NUMERAL n)) = (EVEN n))
T c= cEVEN cNUMERAL f0 cEVEN f0
- |- (((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) ==> ((\n. ((_0 >= (BIT0 n)) = (_0 >= n))) n)) = ((\n. ((_0 >= (BIT0 n)) = (_0 >= n))) n))
T c= c==> ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 * / c= c>= c_0 cBIT0 b0 c>= c_0 b0 f0 * / c= c>= c_0 cBIT0 b0 c>= c_0 b0 f0
- |- ((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) /\ (!n. ((PRE (BIT1 n)) = (BIT0 n))))
T c/\ ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 ! c= cPRE cBIT1 b0 cBIT0 b0
- |- ((\n. ((_0 <= (BIT0 n)) = T)) n)
T * / c= c<= c_0 cBIT0 b0 cT f0
- |- (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))))))))))))
T c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))
T c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))
T c= c* cBIT1 f0 cBIT0 f1 c+ cBIT0 f1 cBIT0 cBIT0 c* f0 f1
- |- ((\w1. (!w2. ((v = w) ==> (((((azim v) w) w1) w2) = (real_of_num (NUMERAL _0)))))) w1)
T * / ! c==> c= f0 f1 c= cazim f0 f1 b0 b1 creal_of_num cNUMERAL c_0 f2
- |- (((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) ==> ((\m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) m)) = ((\m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) m))
T c= c==> ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 * / ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 f0 * / ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 f0
- |- (((cross (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT1 _0)))) = (basis (NUMERAL (BIT0 (BIT1 _0)))))
T c= ccross cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0
- |- ((\m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) m)
T * / ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 f0
- |- ((((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a) ==> (?a. (((((azim (vec (NUMERAL _0))) (basis (NUMERAL (BIT1 (BIT1 _0))))) x) y) = a)))
T c==> c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 f2 c? / c= cazim cvec cNUMERAL c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 f0 f1 b0
- |- ((\n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))) n)
T * / c= c* cBIT0 f0 cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))
T c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))
T c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- (((BIT1 n) * _0) = _0)
T c= c* cBIT1 f0 c_0 c_0
- |- ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n)
T * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1
- |- ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m)
T * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((vector_add ((complex_mul ii) ii)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((complex_mul ((vector_sub ((vector_add ((complex_mul ((complex_mul (Cx r)) (Cx (cos t)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_mul (Cx r)) (Cx (sin t)))) ii))) ((complex_mul (Cx r)) ((vector_add (Cx (cos t))) ((complex_mul ii) (Cx (sin t))))))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- (((vector_add ((complex_pow ii) (NUMERAL (BIT0 (BIT1 _0))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= cvector_add ccomplex_mul cii cii cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cvector_sub cvector_add ccomplex_mul ccomplex_mul cCx f0 cCx ccos f1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_mul cCx f0 cCx csin f1 cii ccomplex_mul cCx f0 cvector_add cCx ccos f1 ccomplex_mul cii cCx csin f1 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_pow cii cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n)
T * / c= cSUC cBIT0 b0 cBIT1 b0 f0
- |- (((BIT1 n) > (BIT1 m)) = (n > m))
T c= c> cBIT1 f0 cBIT1 f1 c> f0 f1
- |- ((BIT1 n) >= _0)
T c>= cBIT1 f0 c_0
- |- (((!n. (((BIT0 n) >= (BIT1 m)) = (n > m))) ==> ((\n. (((BIT0 n) >= (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT0 n) >= (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c>= cBIT0 b0 cBIT1 f0 c> b0 f0 * / c= c>= cBIT0 b0 cBIT1 f0 c> b0 f0 f1 * / c= c>= cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- ((\m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) m)
T * / ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 f0
- |- ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n)
T * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1
- |- ((\n. (((BIT0 n) <= _0) = (n <= _0))) n)
T * / c= c<= cBIT0 b0 c_0 c<= b0 c_0 f0
- ((vec (NUMERAL _0)) = (basis k)) |- ((basis k) = (vec (NUMERAL _0)))
T c==> c= cvec cNUMERAL c_0 cbasis f0 c= cbasis f0 cvec cNUMERAL c_0
- |- ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m)
T * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0
- |- ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))))
T c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- ((\n. (((BIT0 n) >= (BIT1 m)) = (n > m))) n)
T * / c= c>= cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m)
T * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
- (~ (collinear ((vec (NUMERAL _0)) INSERT ((basis (NUMERAL (BIT1 (BIT1 _0)))) INSERT (x INSERT EMPTY))))) |- (((~ ((vec (NUMERAL _0)) = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x))) ==> (((vec (NUMERAL _0)) = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) = F)) = (((vec (NUMERAL _0)) = ((dropout (NUMERAL (BIT1 (BIT1 _0)))) x)) = F))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cbasis cNUMERAL cBIT1 cBIT1 c_0 * * part cINSERT f0 part cEMPTY c= c==> c~ c= cvec cNUMERAL c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 c= c= cvec cNUMERAL c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cF c= c= cvec cNUMERAL c_0 cdropout cNUMERAL cBIT1 cBIT1 c_0 f0 cF
- |- (((!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n)))) ==> ((\n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n)))) n)) = ((\n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n)))) n))
T c= c==> ! c= c- cBIT0 f0 cBIT0 b0 cBIT0 c- f0 b0 * / c= c- cBIT0 f0 cBIT0 b0 cBIT0 c- f0 b0 f1 * / c= c- cBIT0 f0 cBIT0 b0 cBIT0 c- f0 b0 f1
- |- ((((cross (basis (NUMERAL (BIT0 (BIT1 _0))))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (basis (NUMERAL (BIT1 _0)))) /\ ((((cross (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT0 (BIT1 _0))))) = (vector_neg (basis (NUMERAL (BIT1 _0))))) /\ ((((cross (basis (NUMERAL (BIT1 (BIT1 _0))))) (basis (NUMERAL (BIT1 _0)))) = (basis (NUMERAL (BIT0 (BIT1 _0))))) /\ (((cross (basis (NUMERAL (BIT1 _0)))) (basis (NUMERAL (BIT1 (BIT1 _0))))) = (vector_neg (basis (NUMERAL (BIT0 (BIT1 _0)))))))))
T c/\ c= ccross cbasis cNUMERAL cBIT0 cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 c/\ c= ccross cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT1 c_0 c/\ c= ccross cbasis cNUMERAL cBIT1 cBIT1 c_0 cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT0 cBIT1 c_0 c= ccross cbasis cNUMERAL cBIT1 c_0 cbasis cNUMERAL cBIT1 cBIT1 c_0 cvector_neg cbasis cNUMERAL cBIT0 cBIT1 c_0
- |- (((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) ==> ((\n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) n)) = ((\n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) n))
T c= c==> ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 * / c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 f0 * / c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 f0
- |- (((!n. (((BIT1 m) < (BIT1 n)) = (m < n))) ==> ((\n. (((BIT1 m) < (BIT1 n)) = (m < n))) n)) = ((\n. (((BIT1 m) < (BIT1 n)) = (m < n))) n))
T c= c==> ! c= c< cBIT1 f0 cBIT1 b0 c< f0 b0 * / c= c< cBIT1 f0 cBIT1 b0 c< f0 b0 f1 * / c= c< cBIT1 f0 cBIT1 b0 c< f0 b0 f1
- |- (((~ (_0 > (BIT0 n))) ==> ((_0 > (BIT0 n)) = F)) = ((_0 > (BIT0 n)) = F))
T c= c==> c~ c> c_0 cBIT0 f0 c= c> c_0 cBIT0 f0 cF c= c> c_0 cBIT0 f0 cF
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m)
T * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
- |- ((\m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) m)
T * / ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 f0
- |- ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n)
T * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- (((!n. (~ (_0 > (BIT1 n)))) ==> ((\n. (~ (_0 > (BIT1 n)))) n)) = ((\n. (~ (_0 > (BIT1 n)))) n))
T c= c==> ! c~ c> c_0 cBIT1 b0 * / c~ c> c_0 cBIT1 b0 f0 * / c~ c> c_0 cBIT1 b0 f0
- |- ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m)
T * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0
- |- ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))
T c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
