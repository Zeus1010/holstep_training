N Trigonometry.KVVWPNA
C |- (!x. (!y. ((vector_norm ((cross x) y)) = ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y)))))))
T c= cvector_norm ccross f0 f1 creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_EQ
A |- ((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) /\ (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))))
T c/\ ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_LE_MUL
A |- (!x. (!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D REAL_EQ_ADD_LCANCEL
A |- (!x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))))
T c= c= creal_add f0 f1 creal_add f0 f2 c= f1 f2
D Real_ext.REAL_SV_LMUL_0
A |- (!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_MUL_RINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul x) (real_inv x)) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_POW_EQ
A |- (!n. (!x. (!y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y)))))
T c==> c/\ c~ c= f0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c= creal_pow f1 f0 creal_pow f2 f0 c= f1 f2
D NORM_POS_LE
A |- (!x. ((real_le (real_of_num (NUMERAL _0))) (vector_norm x)))
T creal_le creal_of_num cNUMERAL c_0 cvector_norm f0
D SIN_CIRCLE
A |- (!x. (((real_add ((real_pow (sin x)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos x)) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_pow csin f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
D VECTOR_ANGLE
A |- (!x. (!y. (((dot x) y) = ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y)))))))
T c= cdot f0 f1 creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1
D SIN_VECTOR_ANGLE_POS
A |- (!v. (!w. ((real_le (real_of_num (NUMERAL _0))) (sin ((vector_angle v) w)))))
T creal_le creal_of_num cNUMERAL c_0 csin cvector_angle f0 f1
D NORM_CROSS_DOT
A |- (!x. (!y. (((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot x) y)) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0
+ ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z)) = ((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((real_le (real_of_num (NUMERAL _0))) (vector_norm x)) /\ ((real_le (real_of_num (NUMERAL _0))) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) = T)) = (((real_le (real_of_num (NUMERAL _0))) ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) = T))
T c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 cvector_norm f0 creal_le creal_of_num cNUMERAL c_0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 c= creal_le creal_of_num cNUMERAL c_0 creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cT c= creal_le creal_of_num cNUMERAL c_0 creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cT
+ |- ((\x. ((real_le (real_of_num (NUMERAL _0))) (vector_norm x))) x)
T * / creal_le creal_of_num cNUMERAL c_0 cvector_norm b0 f0
+ |- (!y. (((\y. (?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) y) ==> F))
T c==> * / c? / c/\ c= creal_add creal_pow csin cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm b0 ccos cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm b0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm b0 csin cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f1 cF
- |- (((BIT0 m) = (BIT1 n)) = F)
T c= c= cBIT0 f0 cBIT1 f1 cF
+ |- ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y)
T * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1
- |- (((BIT1 m) = (BIT0 n)) = F)
T c= c= cBIT1 f0 cBIT0 f1 cF
+ (?n. ((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n)))))) |- ((!n. (!x. (!y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y))))) ==> (x = y))
T c==> c? / c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c= creal_pow f0 b0 creal_pow f1 b0 c==> ! ! ! c==> c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_pow b1 b0 creal_pow b2 b0 c= b1 b2 c= f0 f1
+ |- ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))
T c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ (!n. (!x. (!y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y))))) |- (((!y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y))) ==> ((\y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y))) y)) = ((\y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y))) y))
T c==> ! ! ! c==> c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_pow b1 b0 creal_pow b2 b0 c= b1 b2 c= c==> ! c==> c/\ c~ c= f0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_pow f1 f0 creal_pow b0 f0 c= f1 b0 * / c==> c/\ c~ c= f0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_pow f1 f0 creal_pow b0 f0 c= f1 b0 f2 * / c==> c/\ c~ c= f0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_pow f1 f0 creal_pow b0 f0 c= f1 b0 f2
+ |- (!x. (((\x. (?y. (?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))) x) ==> F))
T c==> * / c? / c? / c/\ c= creal_add creal_pow csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- ((\x. (!y. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))))))) x)
T * / ! c==> c= creal_add creal_pow csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- (((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (?z. ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) = (?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\w. ((real_le (real_of_num (NUMERAL _0))) (sin ((vector_angle v) w)))) w)
T * / creal_le creal_of_num cNUMERAL c_0 csin cvector_angle f0 b0 f1
+ ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_mul ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (vector_norm x)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm y)) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow (vector_norm x)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm y)) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (!y. ((?n. ((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n)))))) ==> (x = y)))) ==> ((\x. (!y. ((?n. ((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n)))))) ==> (x = y)))) x)) = ((\x. (!y. ((?n. ((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n)))))) ==> (x = y)))) x))
T c= c==> ! ! c==> c? / c/\ c~ c= b2 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c= creal_pow b0 b2 creal_pow b1 b2 c= b0 b1 * / ! c==> c? / c/\ c~ c= b2 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c= creal_pow b0 b2 creal_pow b1 b2 c= b0 b1 f0 * / ! c==> c? / c/\ c~ c= b2 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c= creal_pow b0 b2 creal_pow b1 b2 c= b0 b1 f0
- |- (((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) ==> ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)) = ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT0 b1 cF * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0 * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
+ |- ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!n. (!x. (!y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y))))), ((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) |- (x = y)
T c==> ! ! ! c==> c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_pow b1 b0 creal_pow b2 b0 c= b1 b2 c==> c/\ c~ c= f0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c= creal_pow f1 f0 creal_pow f2 f0 c= f1 f2
+ |- ((!y. ((vector_norm ((cross x) y)) = ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y)))))) = T)
T c= ! c= cvector_norm ccross f0 b0 creal_mul cvector_norm f0 creal_mul cvector_norm b0 csin cvector_angle f0 b0 cT
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))
T c= creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((\z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) z) ==> F) = T)
T c= c==> * / c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
- |- (((~ ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) ==> (((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) = F)) = (((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) = F))
T c= c==> c~ c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!y. t) = t)
T c= ! f0 f0
- |- ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (T = (((real_le (real_of_num (NUMERAL _0))) (vector_norm x)) /\ ((real_le (real_of_num (NUMERAL _0))) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))))
T c= cT c/\ creal_le creal_of_num cNUMERAL c_0 cvector_norm f0 creal_le creal_of_num cNUMERAL c_0 creal_mul cvector_norm f1 csin cvector_angle f0 f1
+ |- (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))))
T c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> ((!n. (!x. (!y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y))))) ==> (x = y)))
T c==> c/\ c~ c= f0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c= creal_pow f1 f0 creal_pow f2 f0 c==> ! ! ! c==> c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_pow b1 b0 creal_pow b2 b0 c= b1 b2 c= f1 f2
+ ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))
T c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)
T * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
+ |- (((((real_le (real_of_num (NUMERAL _0))) (vector_norm y)) /\ ((real_le (real_of_num (NUMERAL _0))) (sin ((vector_angle x) y)))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul (vector_norm y)) (sin ((vector_angle x) y)))) = T)) = (((real_le (real_of_num (NUMERAL _0))) ((real_mul (vector_norm y)) (sin ((vector_angle x) y)))) = T))
T c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 cvector_norm f0 creal_le creal_of_num cNUMERAL c_0 csin cvector_angle f1 f0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul cvector_norm f0 csin cvector_angle f1 f0 cT c= creal_le creal_of_num cNUMERAL c_0 creal_mul cvector_norm f0 csin cvector_angle f1 f0 cT
+ |- ((((\n. ((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n)))))) n) ==> ((!n. (!x. (!y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y))))) ==> (x = y))) = T)
T c= c==> * / c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c= creal_pow f0 b0 creal_pow f1 b0 f2 c==> ! ! ! c==> c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_pow b1 b0 creal_pow b2 b0 c= b1 b2 c= f0 f1 cT
- |- (((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) ==> ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m)) = ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0
+ |- (((real_le (real_of_num (NUMERAL _0))) (vector_norm y)) /\ ((real_le (real_of_num (NUMERAL _0))) (sin ((vector_angle x) y))))
T c/\ creal_le creal_of_num cNUMERAL c_0 cvector_norm f0 creal_le creal_of_num cNUMERAL c_0 csin cvector_angle f1 f0
+ ((\x. (?y. (?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))) x) |- (((\x. (?y. (?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))) x) /\ F)
T c==> * / c? / c? / c/\ c= creal_add creal_pow csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c/\ c= creal_add creal_pow csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- ((\y. ((?n. ((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n)))))) ==> (x = y))) y)
T * / c==> c? / c/\ c~ c= b1 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_pow f0 b1 creal_pow b0 b1 c= f0 b0 f1
- |- ((_0 = (BIT1 n)) = F)
T c= c= c_0 cBIT1 f0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\v. (!w. ((real_le (real_of_num (NUMERAL _0))) (sin ((vector_angle v) w))))) v)
T * / ! creal_le creal_of_num cNUMERAL c_0 csin cvector_angle b0 b1 f0
- |- (((((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) = F) ==> (~ ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) = (~ ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> c= c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. ((_0 = (BIT1 n)) = F)) n)
T * / c= c= c_0 cBIT1 b0 cF f0
- |- ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)
T * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ (!n. (!x. (!y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y))))) |- ((\n. (!x. (!y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y))))) n)
T c==> ! ! ! c==> c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_pow b1 b0 creal_pow b2 b0 c= b1 b2 * / ! ! c==> c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_pow b1 b0 creal_pow b2 b0 c= b1 b2 f0
- |- (((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) ==> ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m)) = ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT1 b1 cF * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0 * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0
+ |- (((!n. (((BIT1 n) = _0) = F)) ==> ((\n. (((BIT1 n) = _0) = F)) n)) = ((\n. (((BIT1 n) = _0) = F)) n))
T c= c==> ! c= c= cBIT1 b0 c_0 cF * / c= c= cBIT1 b0 c_0 cF f0 * / c= c= cBIT1 b0 c_0 cF f0
+ |- (((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))))) = ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c= c==> c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c==> c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!n. (((BIT0 n) = _0) = (n = _0))) ==> ((\n. (((BIT0 n) = _0) = (n = _0))) n)) = ((\n. (((BIT0 n) = _0) = (n = _0))) n))
T c= c==> ! c= c= cBIT0 b0 c_0 c= b0 c_0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
+ |- (((!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) ==> ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y)) = ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y))
T c= c==> ! ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1 * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1
+ |- (((!x. (((\z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) x) ==> F)) ==> ((?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) ==> F)) = ((?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) ==> F))
T c= c==> ! c==> * / c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))
T c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- ((((~ (!x. (!y. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))))))) = (?x. (?y. (?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> (!x. (!y. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))))))) = (!x. (!y. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c= c==> c= c~ ! ! c==> c= creal_add creal_pow csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 c? / c? / c? / c/\ c= creal_add creal_pow csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 ! ! c==> c= creal_add creal_pow csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c==> c= creal_add creal_pow csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\n. (((BIT0 n) = _0) = (n = _0))) n)
T * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
+ |- (((real_le (real_of_num (NUMERAL _0))) (vector_norm x)) /\ ((real_le (real_of_num (NUMERAL _0))) ((real_mul (vector_norm y)) (sin ((vector_angle x) y)))))
T c/\ creal_le creal_of_num cNUMERAL c_0 cvector_norm f0 creal_le creal_of_num cNUMERAL c_0 creal_mul cvector_norm f1 csin cvector_angle f0 f1
- (?x. (?y. (?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?x. (?y. (?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= creal_add creal_pow csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= creal_add creal_pow csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 ccos cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 creal_mul cvector_norm b1 csin cvector_angle b0 b1 cNUMERAL cBIT0 cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF
+ (!n. (!x. (!y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y))))), (?n. ((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n)))))) |- ((?n. ((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n)))))) /\ (x = y))
T c==> ! ! ! c==> c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_pow b1 b0 creal_pow b2 b0 c= b1 b2 c==> c? / c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c= creal_pow f0 b0 creal_pow f1 b0 c/\ c? / c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c= creal_pow f0 b0 creal_pow f1 b0 c= f0 f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((\z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) z) |- (((\z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) z) /\ F)
T c==> * / c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f2 cF
- |- (((!n. (((BIT1 m) = (BIT0 n)) = F)) ==> ((\n. (((BIT1 m) = (BIT0 n)) = F)) n)) = ((\n. (((BIT1 m) = (BIT0 n)) = F)) n))
T c= c==> ! c= c= cBIT1 f0 cBIT0 b0 cF * / c= c= cBIT1 f0 cBIT0 b0 cF f1 * / c= c= cBIT1 f0 cBIT0 b0 cF f1
+ |- ((\y. (((dot x) y) = ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y)))))) y)
T * / c= cdot f0 b0 creal_mul cvector_norm f0 creal_mul cvector_norm b0 ccos cvector_angle f0 b0 f1
+ |- ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))
T c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul z) ((real_mul ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (vector_norm x)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm y)) (NUMERAL (BIT0 (BIT1 _0))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul z) ((real_mul ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (vector_norm x)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm y)) (NUMERAL (BIT0 (BIT1 _0))))))))) ((real_mul z) ((real_mul ((real_pow (vector_norm x)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (vector_norm y)) (NUMERAL (BIT0 (BIT1 _0)))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 creal_mul creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 creal_mul creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul f2 creal_mul creal_pow cvector_norm f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!n. (!x. (!y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y))))) |- (((?n. ((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n)))))) ==> (x = y)) = T)
T c==> ! ! ! c==> c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_pow b1 b0 creal_pow b2 b0 c= b1 b2 c= c==> c? / c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c= creal_pow f0 b0 creal_pow f1 b0 c= f0 f1 cT
+ ((\y. (?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) y) |- (((?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) ==> F) = F)
T c==> * / c? / c/\ c= creal_add creal_pow csin cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm b0 ccos cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm b0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm b0 csin cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- (((!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))) ==> ((\y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))) y)) = ((\y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))) y))
T c= c==> ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 f1 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 f1
+ |- (((BIT1 n) = _0) = F)
T c= c= cBIT1 f0 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!y. ((?n. ((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n)))))) ==> (x = y))) ==> ((\y. ((?n. ((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n)))))) ==> (x = y))) y)) = ((\y. ((?n. ((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n)))))) ==> (x = y))) y))
T c= c==> ! c==> c? / c/\ c~ c= b1 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_pow f0 b1 creal_pow b0 b1 c= f0 b0 * / c==> c? / c/\ c~ c= b1 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_pow f0 b1 creal_pow b0 b1 c= f0 b0 f1 * / c==> c? / c/\ c~ c= b1 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_pow f0 b1 creal_pow b0 b1 c= f0 b0 f1
+ |- (((!x. (!y. (((dot x) y) = ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))))) ==> ((\x. (!y. (((dot x) y) = ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))))) x)) = ((\x. (!y. (((dot x) y) = ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))))) x))
T c= c==> ! ! c= cdot b0 b1 creal_mul cvector_norm b0 creal_mul cvector_norm b1 ccos cvector_angle b0 b1 * / ! c= cdot b0 b1 creal_mul cvector_norm b0 creal_mul cvector_norm b1 ccos cvector_angle b0 b1 f0 * / ! c= cdot b0 b1 creal_mul cvector_norm b0 creal_mul cvector_norm b1 ccos cvector_angle b0 b1 f0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((y = z) = (((real_add (real_neg z)) y) = ((real_add (real_neg z)) z)))
T c= c= f0 f1 c= creal_add creal_neg f1 f0 creal_add creal_neg f1 f1
+ |- (!z. (((\z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) z) ==> F))
T c==> * / c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f2 cF
- |- (((!n. ((_0 = (BIT1 n)) = F)) ==> ((\n. ((_0 = (BIT1 n)) = F)) n)) = ((\n. ((_0 = (BIT1 n)) = F)) n))
T c= c==> ! c= c= c_0 cBIT1 b0 cF * / c= c= c_0 cBIT1 b0 cF f0 * / c= c= c_0 cBIT1 b0 cF f0
- |- (((!n. (((BIT1 m) = (BIT1 n)) = (m = n))) ==> ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n)) = ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n))
T c= c==> ! c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1
+ |- (((real_le (real_of_num (NUMERAL _0))) (vector_norm x)) = T)
T c= creal_le creal_of_num cNUMERAL c_0 cvector_norm f0 cT
+ |- ((\y. (((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot x) y)) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0)))))) y)
T * / c= creal_add creal_pow cvector_norm ccross f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm b0 cNUMERAL cBIT0 cBIT1 c_0 f1
+ (!n. (!x. (!y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y))))) |- ((\x. (!y. (((~ (n = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) y) /\ (((real_pow x) n) = ((real_pow y) n))))) ==> (x = y)))) x)
T c==> ! ! ! c==> c/\ c~ c= b0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_pow b1 b0 creal_pow b2 b0 c= b1 b2 * / ! c==> c/\ c~ c= f0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c= creal_pow b0 f0 creal_pow b1 f0 c= b0 b1 f1
+ |- (((!x. ((real_le (real_of_num (NUMERAL _0))) (vector_norm x))) ==> ((\x. ((real_le (real_of_num (NUMERAL _0))) (vector_norm x))) x)) = ((\x. ((real_le (real_of_num (NUMERAL _0))) (vector_norm x))) x))
T c= c==> ! creal_le creal_of_num cNUMERAL c_0 cvector_norm b0 * / creal_le creal_of_num cNUMERAL c_0 cvector_norm b0 f0 * / creal_le creal_of_num cNUMERAL c_0 cvector_norm b0 f0
+ |- ((~ (x = y)) = (?z. (((real_mul ((real_sub x) y)) z) = (real_of_num (NUMERAL (BIT1 _0))))))
T c= c~ c= f0 f1 c? / c= creal_mul creal_sub f0 f1 b0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((real_le (real_of_num (NUMERAL _0))) (vector_norm ((cross x) y))) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) /\ (((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cvector_norm ccross f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 c= creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0
- |- ((!x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) /\ (!w. (!x. (!y. (!z. ((((real_add ((real_mul w) y)) ((real_mul x) z)) = ((real_add ((real_mul w) z)) ((real_mul x) y))) = ((w = x) \/ (y = z))))))))
T c/\ ! ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 ! ! ! ! c= c= creal_add creal_mul b0 b2 creal_mul b1 b3 creal_add creal_mul b0 b3 creal_mul b1 b2 c\/ c= b0 b1 c= b2 b3
+ |- (((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) = ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot x) y)) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c= c==> c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c==> c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\x. (!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))) x)
T * / ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) |- ((?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c? / c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))
T c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- ((\x. (!y. (((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((dot x) y)) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))))) x)
T * / ! c= creal_add creal_pow cvector_norm ccross b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdot b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm b0 cvector_norm b1 cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- (((!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) ==> ((\z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) z)) = ((\z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) z))
T c= c==> ! c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 * / c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 f2 * / c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 f2
+ |- ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = T))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c= creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1 cT
- |- ((\n. ((_0 = (BIT0 n)) = (_0 = n))) n)
T * / c= c= c_0 cBIT0 b0 c= c_0 b0 f0
- (?y. (?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((?y. (?z. ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c? / c? / c/\ c= creal_add creal_pow csin cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm b0 ccos cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm b0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm b0 csin cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= creal_add creal_pow csin cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm b0 ccos cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm b0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm b0 csin cvector_angle f0 b0 cNUMERAL cBIT0 cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((_0 = _0) = T)
T c= c= c_0 c_0 cT
- |- ((_0 = (BIT0 n)) = (_0 = n))
T c= c= c_0 cBIT0 f0 c= c_0 f0
- |- ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT1 m) = (BIT1 n)) = (m = n))
T c= c= cBIT1 f0 cBIT1 f1 c= f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) m)
T * / ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\n. (((BIT1 m) = (BIT0 n)) = F)) n)
T * / c= c= cBIT1 f0 cBIT0 b0 cF f1
- |- (((!n. ((_0 = (BIT0 n)) = (_0 = n))) ==> ((\n. ((_0 = (BIT0 n)) = (_0 = n))) n)) = ((\n. ((_0 = (BIT0 n)) = (_0 = n))) n))
T c= c==> ! c= c= c_0 cBIT0 b0 c= c_0 b0 * / c= c= c_0 cBIT0 b0 c= c_0 b0 f0 * / c= c= c_0 cBIT0 b0 c= c_0 b0 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT0 m) = (BIT0 n)) = (m = n))) n)
T * / c= c= cBIT0 f0 cBIT0 b0 c= f0 b0 f1
- |- (~ ((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))
T c~ c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n)
T * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((BIT0 m) = (BIT0 n)) = (m = n))
T c= c= cBIT0 f0 cBIT0 f1 c= f0 f1
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!n. (((BIT0 m) = (BIT1 n)) = F)) ==> ((\n. (((BIT0 m) = (BIT1 n)) = F)) n)) = ((\n. (((BIT0 m) = (BIT1 n)) = F)) n))
T c= c==> ! c= c= cBIT0 f0 cBIT1 b0 cF * / c= c= cBIT0 f0 cBIT1 b0 cF f1 * / c= c= cBIT0 f0 cBIT1 b0 cF f1
- |- (((!n. (((BIT0 m) = (BIT0 n)) = (m = n))) ==> ((\n. (((BIT0 m) = (BIT0 n)) = (m = n))) n)) = ((\n. (((BIT0 m) = (BIT0 n)) = (m = n))) n))
T c= c==> ! c= c= cBIT0 f0 cBIT0 b0 c= f0 b0 * / c= c= cBIT0 f0 cBIT0 b0 c= f0 b0 f1 * / c= c= cBIT0 f0 cBIT0 b0 c= f0 b0 f1
- |- ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m)
T * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) ==> ((\m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) m)) = ((\m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 * / ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 f0 * / ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 f0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_add ((real_pow (sin ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (cos ((vector_angle x) y))) (NUMERAL (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (cos ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_pow ((real_mul (vector_norm x)) (vector_norm y))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_pow (vector_norm ((cross x) y))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_mul (vector_norm x)) ((real_mul (vector_norm y)) (sin ((vector_angle x) y))))) (NUMERAL (BIT0 (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) = F)
T c= c/\ c= creal_add creal_pow csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 ccos cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 cvector_norm f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_sub creal_pow cvector_norm ccross f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_mul cvector_norm f0 creal_mul cvector_norm f1 csin cvector_angle f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((\n. (((BIT0 m) = (BIT1 n)) = F)) n)
T * / c= c= cBIT0 f0 cBIT1 b0 cF f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m)
T * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0
