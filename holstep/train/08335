N Seq2.BIJ_from_lists
C |- (!s1. (!s2. (((uniq s1) /\ ((uniq s2) /\ ((sizel s1) = (sizel s2)))) ==> (((BIJ (\x. ((EL ((indexl x) s1)) s2))) (set_of_list s1)) (set_of_list s2)))))
T c==> c/\ cuniq f0 c/\ cuniq f1 c= csizel f0 csizel f1 cBIJ / cEL cindexl b0 f0 f1 * part cset_of_list f0 * part cset_of_list f1
D TRUTH
A |- T
T cT
D MEM_EL
A |- (!l. (!n. ((n < (LENGTH l)) ==> ((MEM ((EL n) l)) l))))
T c==> c< f0 cLENGTH f1 cMEM cEL f0 f1 f1
D INJ
A |- (!t. (!s. (!f. ((((INJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))))))))
T c= cINJ f0 f1 f2 c/\ ! c==> cIN b0 f1 cIN * f0 b0 f2 ! ! c==> c/\ cIN b0 f1 c/\ cIN b1 f1 c= * f0 b0 * f0 b1 c= b0 b1
D SURJ
A |- (!t. (!s. (!f. ((((SURJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. ((x IN t) ==> (?y. ((y IN s) /\ ((f y) = x))))))))))
T c= cSURJ f0 f1 f2 c/\ ! c==> cIN b0 f1 cIN * f0 b0 f2 ! c==> cIN b0 f2 c? / c/\ cIN b1 f1 c= * f0 b1 b0
D BIJ
A |- (!f. (!s. (!t. ((((BIJ f) s) t) = ((((INJ f) s) t) /\ (((SURJ f) s) t))))))
T c= cBIJ f0 f1 f2 c/\ cINJ f0 f1 f2 cSURJ f0 f1 f2
D IN_SET_OF_LIST
A |- (!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l))))
T c= cIN f0 * part cset_of_list f1 cMEM f0 f1
D Seq.size
A |- (sizel = LENGTH)
T c= part csizel part cLENGTH
D Seq.index_mem
A |- (!x. (!s. ((((indexl x) s) < (sizel s)) = ((MEM x) s))))
T c= c< cindexl f0 f1 csizel f1 cMEM f0 f1
D Seq.mem_nth
A |- (!x0. (!s. (!n. ((n < (sizel s)) ==> ((MEM (((nth x0) s) n)) s)))))
T c==> c< f0 csizel f1 cMEM cnth f2 f1 f0 f1
D Seq.index_uniq
A |- (!x0. (!i. (!s. ((i < (sizel s)) ==> ((uniq s) ==> (((indexl (((nth x0) s) i)) s) = i))))))
T c==> c< f0 csizel f1 c==> cuniq f1 c= cindexl cnth f2 f1 f0 f1 f0
D Seq.nth_uniq
A |- (!x0. (!s. (!i. (!j. ((i < (sizel s)) ==> ((j < (sizel s)) ==> ((uniq s) ==> (((((nth x0) s) i) = (((nth x0) s) j)) = (i = j)))))))))
T c==> c< f0 csizel f1 c==> c< f2 csizel f1 c==> cuniq f1 c= c= cnth f3 f1 f0 cnth f3 f1 f2 c= f0 f2
D Seq2.EL_nth
A |- (!x0. (!s. (!i. ((i < (sizel s)) ==> (((EL i) s) = (((nth x0) s) i))))))
T c==> c< f0 csizel f1 c= cEL f0 f1 cnth f2 f1 f0
D Seq2.EL_index
A |- (!x. (!s. (((MEM x) s) ==> (((EL ((indexl x) s)) s) = x))))
T c==> cMEM f0 f1 c= cEL cindexl f0 f1 f1 f0
D Seq2.uniq_index_inj
A |- (!x. (!y. (!s. (((uniq s) /\ (((MEM x) s) /\ ((MEM y) s))) ==> ((((indexl x) s) = ((indexl y) s)) = (x = y))))))
T c==> c/\ cuniq f0 c/\ cMEM f1 f0 cMEM f2 f0 c= c= cindexl f1 f0 cindexl f2 f0 c= f1 f2
+ |- ((((EL ((indexl x) s2)) s2) = x) ==> (((EL ((indexl x) s2)) s2) = x))
T c==> c= cEL cindexl f0 f1 f1 f0 c= cEL cindexl f0 f1 f1 f0
+ |- ((((MEM ((EL ((indexl x) s1)) s2)) s2) = T) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2))
T c==> c= cMEM cEL cindexl f0 f1 f2 f2 cT cMEM cEL cindexl f0 f1 f2 f2
+ (sizel = LENGTH) |- (LENGTH = sizel)
T c==> c= part csizel part cLENGTH c= part cLENGTH part csizel
+ (uniq s1), ((sizel s1) = (sizel s2)), ((MEM x) s2) |- ((\y. (((MEM y) s1) /\ (((EL ((indexl y) s1)) s2) = x))) (((nth (@ UNIV)) s1) ((indexl x) s2)))
T c==> cuniq f0 c==> c= csizel f0 csizel f1 c==> cMEM f2 f1 * / c/\ cMEM b0 f0 c= cEL cindexl b0 f0 f1 f2 cnth c@ part cUNIV f0 cindexl f2 f1
+ |- ((((x IN (set_of_list s2)) = (x IN (set_of_list s2))) ==> (((x IN (set_of_list s2)) ==> ((?y. ((y IN (set_of_list s1)) /\ (((\x. ((EL ((indexl x) s1)) s2)) y) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((\x. ((EL ((indexl x) s1)) s2)) y) = x)))) = ((x IN (set_of_list s2)) ==> q')))) = (((x IN (set_of_list s2)) ==> ((?y. ((y IN (set_of_list s1)) /\ (((\x. ((EL ((indexl x) s1)) s2)) y) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((\x. ((EL ((indexl x) s1)) s2)) y) = x)))) = ((x IN (set_of_list s2)) ==> q'))))
T c= c==> c= cIN f0 * part cset_of_list f1 cIN f0 * part cset_of_list f1 c==> c==> cIN f0 * part cset_of_list f1 c= c? / c/\ cIN b0 * part cset_of_list f2 c= * / cEL cindexl b1 f2 f1 b0 f0 f3 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b0 * part cset_of_list f2 c= * / cEL cindexl b1 f2 f1 b0 f0 c==> cIN f0 * part cset_of_list f1 f3 c==> c==> cIN f0 * part cset_of_list f1 c= c? / c/\ cIN b0 * part cset_of_list f2 c= * / cEL cindexl b1 f2 f1 b0 f0 f3 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b0 * part cset_of_list f2 c= * / cEL cindexl b1 f2 f1 b0 f0 c==> cIN f0 * part cset_of_list f1 f3
+ (uniq s1), (uniq s2), ((sizel s1) = (sizel s2)) |- (!x. (!y. ((((MEM x) s1) /\ (((MEM y) s1) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y))))
T c==> cuniq f0 c==> cuniq f1 c==> c= csizel f0 csizel f1 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= cEL cindexl b0 f0 f1 cEL cindexl b1 f0 f1 c= b0 b1
+ |- (((!l. ((x IN (set_of_list l)) = ((MEM x) l))) ==> ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l)) = ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l))
T c= c==> ! c= cIN f0 * part cset_of_list b0 cMEM f0 b0 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1
+ |- (((((((indexl x) s2) < (sizel s1)) /\ (uniq s1)) ==> (((indexl (((nth (@ UNIV)) s1) ((indexl x) s2))) s1) = ((indexl x) s2))) ==> (((EL ((indexl (((nth (@ UNIV)) s1) ((indexl x) s2))) s1)) s2) = x)) = (((EL ((indexl (((nth (@ UNIV)) s1) ((indexl x) s2))) s1)) s2) = x))
T c= c==> c==> c/\ c< cindexl f0 f1 csizel f2 cuniq f2 c= cindexl cnth c@ part cUNIV f2 cindexl f0 f1 f2 cindexl f0 f1 c= cEL cindexl cnth c@ part cUNIV f2 cindexl f0 f1 f2 f1 f0 c= cEL cindexl cnth c@ part cUNIV f2 cindexl f0 f1 f2 f1 f0
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ |- ((\s. (!f. ((((SURJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. ((x IN t) ==> (?y. ((y IN s) /\ ((f y) = x))))))))) s)
T * / ! c= cSURJ b1 b0 f0 c/\ ! c==> cIN b2 b0 cIN * b1 b2 f0 ! c==> cIN b2 f0 c? / c/\ cIN b3 b0 c= * b1 b3 b2 f1
- (uniq s1), (uniq s2), ((sizel s1) = (sizel s2)) |- (((MEM x) s1) ==> ((((MEM y) s1) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2))) ==> (x = y)))
T c==> cuniq f0 c==> cuniq f1 c==> c= csizel f0 csizel f1 c==> cMEM f2 f0 c==> c/\ cMEM f3 f0 c= cEL cindexl f2 f0 f1 cEL cindexl f3 f0 f1 c= f2 f3
+ |- (((!s. ((((indexl x) s) < (sizel s)) = ((MEM x) s))) ==> ((\s. ((((indexl x) s) < (sizel s)) = ((MEM x) s))) s)) = ((\s. ((((indexl x) s) < (sizel s)) = ((MEM x) s))) s))
T c= c==> ! c= c< cindexl f0 b0 csizel b0 cMEM f0 b0 * / c= c< cindexl f0 b0 csizel b0 cMEM f0 b0 f1 * / c= c< cindexl f0 b0 csizel b0 cMEM f0 b0 f1
+ (uniq s1), ((sizel s1) = (sizel s2)), ((MEM x) s2) |- (((((indexl x) s2) < (sizel s1)) ==> (((MEM (((nth (@ UNIV)) s1) ((indexl x) s2))) s1) = T)) ==> (((MEM (((nth (@ UNIV)) s1) ((indexl x) s2))) s1) /\ (((EL ((indexl (((nth (@ UNIV)) s1) ((indexl x) s2))) s1)) s2) = x)))
T c==> cuniq f0 c==> c= csizel f0 csizel f1 c==> cMEM f2 f1 c==> c==> c< cindexl f2 f1 csizel f0 c= cMEM cnth c@ part cUNIV f0 cindexl f2 f1 f0 cT c/\ cMEM cnth c@ part cUNIV f0 cindexl f2 f1 f0 c= cEL cindexl cnth c@ part cUNIV f0 cindexl f2 f1 f0 f1 f2
+ ((sizel s1) = (sizel s2)) |- ((!x. (((MEM x) s2) ==> (?y. (((MEM y) s1) /\ (((EL ((indexl y) s1)) s2) = x))))) = ((!x. (((MEM x) s1) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2))) /\ (!x. (((MEM x) s2) ==> (?y. (((MEM y) s1) /\ (((EL ((indexl y) s1)) s2) = x)))))))
T c==> c= csizel f0 csizel f1 c= ! c==> cMEM b0 f1 c? / c/\ cMEM b1 f0 c= cEL cindexl b1 f0 f1 b0 c/\ ! c==> cMEM b0 f0 cMEM cEL cindexl b0 f0 f1 f1 ! c==> cMEM b0 f1 c? / c/\ cMEM b1 f0 c= cEL cindexl b1 f0 f1 b0
+ (uniq s1), (uniq s2), ((sizel s1) = (sizel s2)) |- (((!x. (((MEM x) s1) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2))) /\ (!x. (!y. ((((MEM x) s1) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y))))) /\ ((!x. (((MEM x) s1) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2)))) /\ (!x. ((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))))))
T c==> cuniq f0 c==> cuniq f1 c==> c= csizel f0 csizel f1 c/\ c/\ ! c==> cMEM b0 f0 cMEM cEL cindexl b0 f0 f1 f1 ! ! c==> c/\ cMEM b0 f0 c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b0 f0 f1 cEL cindexl b1 f0 f1 c= b0 b1 c/\ ! c==> cMEM b0 f0 cIN cEL cindexl b0 f0 f1 * part cset_of_list f1 ! c==> cIN b0 * part cset_of_list f1 c? / c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b1 f0 f1 b0
+ (n < (LENGTH l)) |- ((n < (LENGTH l)) /\ (((MEM ((EL n) l)) l) = T))
T c==> c< f0 cLENGTH f1 c/\ c< f0 cLENGTH f1 c= cMEM cEL f0 f1 f1 cT
+ ((((indexl x) s1) = ((indexl y) s1)) = (x = y)) |- (((x = y) ==> (x = y)) = ((((indexl x) s1) = ((indexl y) s1)) ==> (x = y)))
T c==> c= c= cindexl f0 f1 cindexl f2 f1 c= f0 f2 c= c==> c= f0 f2 c= f0 f2 c==> c= cindexl f0 f1 cindexl f2 f1 c= f0 f2
+ (uniq s1), ((sizel s1) = (sizel s2)), ((MEM x) s2) |- ((((MEM (((nth (@ UNIV)) s1) ((indexl x) s2))) s1) = T) ==> (((MEM (((nth (@ UNIV)) s1) ((indexl x) s2))) s1) /\ (((EL ((indexl (((nth (@ UNIV)) s1) ((indexl x) s2))) s1)) s2) = x)))
T c==> cuniq f0 c==> c= csizel f0 csizel f1 c==> cMEM f2 f1 c==> c= cMEM cnth c@ part cUNIV f0 cindexl f2 f1 f0 cT c/\ cMEM cnth c@ part cUNIV f0 cindexl f2 f1 f0 c= cEL cindexl cnth c@ part cUNIV f0 cindexl f2 f1 f0 f1 f2
+ ((sizel s1) = (sizel s2)), ((MEM x) s1) |- (((((indexl x) s1) < (LENGTH s2)) ==> (((MEM ((EL ((indexl x) s1)) s2)) s2) = T)) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2))
T c==> c= csizel f0 csizel f1 c==> cMEM f2 f0 c==> c==> c< cindexl f2 f0 cLENGTH f1 c= cMEM cEL cindexl f2 f0 f1 f1 cT cMEM cEL cindexl f2 f0 f1 f1
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ |- ((((EL ((indexl (((nth (@ UNIV)) s1) ((indexl x) s2))) s1)) s2) = x) = (T /\ (((EL ((indexl (((nth (@ UNIV)) s1) ((indexl x) s2))) s1)) s2) = x)))
T c= c= cEL cindexl cnth c@ part cUNIV f0 cindexl f1 f2 f0 f2 f1 c/\ cT c= cEL cindexl cnth c@ part cUNIV f0 cindexl f1 f2 f0 f2 f1
+ ((MEM y) s1) |- (((indexl y) s1) < (sizel s1))
T c==> cMEM f0 f1 c< cindexl f0 f1 csizel f1
+ (uniq s1), ((MEM x) s2) |- ((((indexl x) s2) < (sizel s2)) /\ (uniq s1))
T c==> cuniq f0 c==> cMEM f1 f2 c/\ c< cindexl f1 f2 csizel f2 cuniq f0
- (((i < (sizel s)) /\ (j < (sizel s))) /\ (uniq s)) |- ((((i < (sizel s)) /\ (j < (sizel s))) /\ (uniq s)) /\ (((((nth x0) s) i) = (((nth x0) s) j)) = (i = j)))
T c==> c/\ c/\ c< f0 csizel f1 c< f2 csizel f1 cuniq f1 c/\ c/\ c/\ c< f0 csizel f1 c< f2 csizel f1 cuniq f1 c= c= cnth f3 f1 f0 cnth f3 f1 f2 c= f0 f2
+ |- ((((!x. (((MEM x) s1) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2))) /\ (!x. (!y. ((((MEM x) s1) /\ (((MEM y) s1) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y))))) /\ ((!x. (((MEM x) s1) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2))) /\ (!x. ((x IN (set_of_list s2)) ==> (?y. (((MEM y) s1) /\ (((EL ((indexl y) s1)) s2) = x))))))) = (((!x. (((MEM x) s1) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2))) /\ (!x. (!y. ((((MEM x) s1) /\ (((MEM y) s1) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y))))) /\ ((!x. (((MEM x) s1) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2))) /\ (!x. ((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))))))))
T c= c/\ c/\ ! c==> cMEM b0 f0 cMEM cEL cindexl b0 f0 f1 f1 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= cEL cindexl b0 f0 f1 cEL cindexl b1 f0 f1 c= b0 b1 c/\ ! c==> cMEM b0 f0 cMEM cEL cindexl b0 f0 f1 f1 ! c==> cIN b0 * part cset_of_list f1 c? / c/\ cMEM b1 f0 c= cEL cindexl b1 f0 f1 b0 c/\ c/\ ! c==> cMEM b0 f0 cMEM cEL cindexl b0 f0 f1 f1 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= cEL cindexl b0 f0 f1 cEL cindexl b1 f0 f1 c= b0 b1 c/\ ! c==> cMEM b0 f0 cMEM cEL cindexl b0 f0 f1 f1 ! c==> cIN b0 * part cset_of_list f1 c? / c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b1 f0 f1 b0
+ (uniq s1), (uniq s2), ((sizel s1) = (sizel s2)) |- (((!x. ((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2)))) /\ (!x. (!y. (((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y))))) /\ ((!x. ((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2)))) /\ (!x. ((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))))))
T c==> cuniq f0 c==> cuniq f1 c==> c= csizel f0 csizel f1 c/\ c/\ ! c==> cIN b0 * part cset_of_list f0 cIN cEL cindexl b0 f0 f1 * part cset_of_list f1 ! ! c==> c/\ cIN b0 * part cset_of_list f0 c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b0 f0 f1 cEL cindexl b1 f0 f1 c= b0 b1 c/\ ! c==> cIN b0 * part cset_of_list f0 cIN cEL cindexl b0 f0 f1 * part cset_of_list f1 ! c==> cIN b0 * part cset_of_list f1 c? / c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b1 f0 f1 b0
+ |- ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((\x. ((EL ((indexl x) s1)) s2)) x) = ((\x. ((EL ((indexl x) s1)) s2)) y)))) ==> (x = y)) = (((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)))
T c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= * / cEL cindexl b0 f1 f3 f0 * / cEL cindexl b0 f1 f3 f2 c= f0 f2 c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2
- |- (((!q'. (((x IN (set_of_list s1)) = p') ==> ((p' ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = q')) ==> (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = (p' ==> q'))))) ==> ((\q'. (((x IN (set_of_list s1)) = p') ==> ((p' ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = q')) ==> (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = (p' ==> q'))))) q')) = ((\q'. (((x IN (set_of_list s1)) = p') ==> ((p' ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = q')) ==> (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 * part cset_of_list f1 f2 c==> c==> f2 c= cIN cEL cindexl f0 f1 f3 * part cset_of_list f3 b0 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f3 * part cset_of_list f3 c==> f2 b0 * / c==> c= cIN f0 * part cset_of_list f1 f2 c==> c==> f2 c= cIN cEL cindexl f0 f1 f3 * part cset_of_list f3 b0 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f3 * part cset_of_list f3 c==> f2 b0 f4 * / c==> c= cIN f0 * part cset_of_list f1 f2 c==> c==> f2 c= cIN cEL cindexl f0 f1 f3 * part cset_of_list f3 b0 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f3 * part cset_of_list f3 c==> f2 b0 f4
+ ((((indexl x) s1) = ((indexl y) s1)) = (x = y)) |- (((((indexl x) s1) = ((indexl y) s1)) = (x = y)) /\ ((((indexl x) s1) = ((indexl y) s1)) ==> (x = y)))
T c==> c= c= cindexl f0 f1 cindexl f2 f1 c= f0 f2 c/\ c= c= cindexl f0 f1 cindexl f2 f1 c= f0 f2 c==> c= cindexl f0 f1 cindexl f2 f1 c= f0 f2
+ |- (LENGTH = sizel)
T c= part cLENGTH part csizel
+ |- ((\i. (!s. (((i < (sizel s)) /\ (uniq s)) ==> (((indexl (((nth x0) s) i)) s) = i)))) i)
T * / ! c==> c/\ c< b0 csizel b1 cuniq b1 c= cindexl cnth f0 b1 b0 b1 b0 f1
+ (uniq s1), ((MEM x) s2) |- (((MEM x) s2) /\ (uniq s1))
T c==> cuniq f0 c==> cMEM f1 f2 c/\ cMEM f1 f2 cuniq f0
- (uniq s1) |- ((uniq s1) /\ (((uniq s2) /\ ((sizel s1) = (sizel s2))) ==> (((BIJ (\x. ((EL ((indexl x) s1)) s2))) (set_of_list s1)) (set_of_list s2))))
T c==> cuniq f0 c/\ cuniq f0 c==> c/\ cuniq f1 c= csizel f0 csizel f1 cBIJ / cEL cindexl b0 f0 f1 * part cset_of_list f0 * part cset_of_list f1
- |- ((\p'. (!q'. (((x IN (set_of_list s1)) = p') ==> ((p' ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = q')) ==> (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * part cset_of_list f1 b0 c==> c==> b0 c= cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 b1 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 c==> b0 b1 f3
- |- ((((x IN (set_of_list s1)) ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = (((EL ((indexl x) s1)) s2) IN (set_of_list s2)))) ==> (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = ((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))))) = (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = ((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2)))))
T c= c==> c==> cIN f0 * part cset_of_list f1 c= cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2
+ |- (((!t. (!s. (!f. ((((INJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y))))))))) ==> ((\t. (!s. (!f. ((((INJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y))))))))) t)) = ((\t. (!s. (!f. ((((INJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y))))))))) t))
T c= c==> ! ! ! c= cINJ b2 b1 b0 c/\ ! c==> cIN b3 b1 cIN * b2 b3 b0 ! ! c==> c/\ cIN b3 b1 c/\ cIN b4 b1 c= * b2 b3 * b2 b4 c= b3 b4 * / ! ! c= cINJ b2 b1 b0 c/\ ! c==> cIN b3 b1 cIN * b2 b3 b0 ! ! c==> c/\ cIN b3 b1 c/\ cIN b4 b1 c= * b2 b3 * b2 b4 c= b3 b4 f0 * / ! ! c= cINJ b2 b1 b0 c/\ ! c==> cIN b3 b1 cIN * b2 b3 b0 ! ! c==> c/\ cIN b3 b1 c/\ cIN b4 b1 c= * b2 b3 * b2 b4 c= b3 b4 f0
- (uniq s1), (uniq s2) |- ((uniq s2) /\ (((sizel s1) = (sizel s2)) ==> (((BIJ (\x. ((EL ((indexl x) s1)) s2))) (set_of_list s1)) (set_of_list s2))))
T c==> cuniq f0 c==> cuniq f1 c/\ cuniq f1 c==> c= csizel f0 csizel f1 cBIJ / cEL cindexl b0 f0 f1 * part cset_of_list f0 * part cset_of_list f1
- (uniq s1), (uniq s2), ((sizel s1) = (sizel s2)), ((MEM x) s1), ((MEM y) s1) |- (((MEM y) s1) /\ ((((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)) ==> (x = y)))
T c==> cuniq f0 c==> cuniq f1 c==> c= csizel f0 csizel f1 c==> cMEM f2 f0 c==> cMEM f3 f0 c/\ cMEM f3 f0 c==> c= cEL cindexl f2 f0 f1 cEL cindexl f3 f0 f1 c= f2 f3
+ ((sizel s1) = (sizel s2)), ((MEM x) s1) |- (((((MEM ((EL ((indexl x) s1)) s2)) s2) = T) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2)) = ((((indexl x) s1) < (LENGTH s2)) /\ ((((MEM ((EL ((indexl x) s1)) s2)) s2) = T) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2))))
T c==> c= csizel f0 csizel f1 c==> cMEM f2 f0 c= c==> c= cMEM cEL cindexl f2 f0 f1 f1 cT cMEM cEL cindexl f2 f0 f1 f1 c/\ c< cindexl f2 f0 cLENGTH f1 c==> c= cMEM cEL cindexl f2 f0 f1 f1 cT cMEM cEL cindexl f2 f0 f1 f1
+ |- (((x IN (set_of_list s2)) ==> ((?y. ((y IN (set_of_list s1)) /\ (((\x. ((EL ((indexl x) s1)) s2)) y) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((\x. ((EL ((indexl x) s1)) s2)) y) = x)))) = ((x IN (set_of_list s2)) ==> q')))
T c==> c==> cIN f0 * part cset_of_list f1 c= c? / c/\ cIN b0 * part cset_of_list f2 c= * / cEL cindexl b1 f2 f1 b0 f0 f3 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b0 * part cset_of_list f2 c= * / cEL cindexl b1 f2 f1 b0 f0 c==> cIN f0 * part cset_of_list f1 f3
- (uniq s1), (uniq s2), ((sizel s1) = (sizel s2)), ((MEM x) s1) |- (((MEM x) s1) /\ ((((MEM y) s1) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2))) ==> (x = y)))
T c==> cuniq f0 c==> cuniq f1 c==> c= csizel f0 csizel f1 c==> cMEM f2 f0 c/\ cMEM f2 f0 c==> c/\ cMEM f3 f0 c= cEL cindexl f2 f0 f1 cEL cindexl f3 f0 f1 c= f2 f3
+ (((MEM ((EL ((indexl x) s1)) s2)) s2) = T) |- (T = ((MEM ((EL ((indexl x) s1)) s2)) s2))
T c==> c= cMEM cEL cindexl f0 f1 f2 f2 cT c= cT cMEM cEL cindexl f0 f1 f2 f2
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\s. (((MEM x) s) ==> (((EL ((indexl x) s)) s) = x))) s)
T * / c==> cMEM f0 b0 c= cEL cindexl f0 b0 b0 f0 f1
+ (uniq s1), ((MEM x) s1), ((MEM y) s1) |- ((((indexl x) s1) = ((indexl y) s1)) ==> (x = y))
T c==> cuniq f0 c==> cMEM f1 f0 c==> cMEM f2 f0 c==> c= cindexl f1 f0 cindexl f2 f0 c= f1 f2
+ |- ((((!x. (((MEM x) s1) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2)))) /\ (!x. (!y. ((((MEM x) s1) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y))))) /\ ((!x. ((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2)))) /\ (!x. ((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))))))) = (((!x. (((MEM x) s1) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2)))) /\ (!x. (!y. (((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y))))) /\ ((!x. ((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2)))) /\ (!x. ((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))))))))
T c= c/\ c/\ ! c==> cMEM b0 f0 cIN cEL cindexl b0 f0 f1 * part cset_of_list f1 ! ! c==> c/\ cMEM b0 f0 c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b0 f0 f1 cEL cindexl b1 f0 f1 c= b0 b1 c/\ ! c==> cIN b0 * part cset_of_list f0 cIN cEL cindexl b0 f0 f1 * part cset_of_list f1 ! c==> cIN b0 * part cset_of_list f1 c? / c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b1 f0 f1 b0 c/\ c/\ ! c==> cMEM b0 f0 cIN cEL cindexl b0 f0 f1 * part cset_of_list f1 ! ! c==> c/\ cIN b0 * part cset_of_list f0 c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b0 f0 f1 cEL cindexl b1 f0 f1 c= b0 b1 c/\ ! c==> cIN b0 * part cset_of_list f0 cIN cEL cindexl b0 f0 f1 * part cset_of_list f1 ! c==> cIN b0 * part cset_of_list f1 c? / c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b1 f0 f1 b0
+ |- (((!x. (!s. (((MEM x) s) ==> (((EL ((indexl x) s)) s) = x)))) ==> ((\x. (!s. (((MEM x) s) ==> (((EL ((indexl x) s)) s) = x)))) x)) = ((\x. (!s. (((MEM x) s) ==> (((EL ((indexl x) s)) s) = x)))) x))
T c= c==> ! ! c==> cMEM b0 b1 c= cEL cindexl b0 b1 b1 b0 * / ! c==> cMEM b0 b1 c= cEL cindexl b0 b1 b1 b0 f0 * / ! c==> cMEM b0 b1 c= cEL cindexl b0 b1 b1 b0 f0
+ (uniq s2), ((MEM x) s1), ((MEM y) s1) |- (((((indexl x) s1) < (sizel s1)) /\ (((indexl y) s1) < (sizel s1))) /\ (uniq s2))
T c==> cuniq f0 c==> cMEM f1 f2 c==> cMEM f3 f2 c/\ c/\ c< cindexl f1 f2 csizel f2 c< cindexl f3 f2 csizel f2 cuniq f0
- |- (((!q'. ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) = p') ==> ((p' ==> ((x = y) = q')) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (p' ==> q'))))) ==> ((\q'. ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) = p') ==> ((p' ==> ((x = y) = q')) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (p' ==> q'))))) q')) = ((\q'. ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) = p') ==> ((p' ==> ((x = y) = q')) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 f4 c==> c==> f4 c= c= f0 f2 b0 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> f4 b0 * / c==> c= c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 f4 c==> c==> f4 c= c= f0 f2 b0 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> f4 b0 f5 * / c==> c= c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 f4 c==> c==> f4 c= c= f0 f2 b0 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> f4 b0 f5
+ ((sizel s1) = (sizel s2)), ((MEM x) s1) |- ((((indexl x) s1) < (LENGTH s2)) /\ ((((MEM ((EL ((indexl x) s1)) s2)) s2) = T) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2)))
T c==> c= csizel f0 csizel f1 c==> cMEM f2 f0 c/\ c< cindexl f2 f0 cLENGTH f1 c==> c= cMEM cEL cindexl f2 f0 f1 f1 cT cMEM cEL cindexl f2 f0 f1 f1
+ (uniq s1), (uniq s2), ((sizel s1) = (sizel s2)), ((MEM x) s1), ((MEM y) s1) |- ((((((((indexl x) s1) < (sizel s2)) /\ (((indexl y) s1) < (sizel s2))) /\ (uniq s2)) /\ ((((((nth (@ UNIV)) s2) ((indexl x) s1)) = (((nth (@ UNIV)) s2) ((indexl y) s1))) = (((indexl x) s1) = ((indexl y) s1))) ==> (((((nth (@ UNIV)) s2) ((indexl x) s1)) = (((nth (@ UNIV)) s2) ((indexl y) s1))) ==> (x = y)))) ==> (((((((indexl x) s1) < (sizel s2)) /\ (((indexl y) s1) < (sizel s2))) /\ (uniq s2)) ==> (((((nth (@ UNIV)) s2) ((indexl x) s1)) = (((nth (@ UNIV)) s2) ((indexl y) s1))) = (((indexl x) s1) = ((indexl y) s1)))) ==> (((((nth (@ UNIV)) s2) ((indexl x) s1)) = (((nth (@ UNIV)) s2) ((indexl y) s1))) ==> (x = y)))) = (((((((indexl x) s1) < (sizel s2)) /\ (((indexl y) s1) < (sizel s2))) /\ (uniq s2)) ==> (((((nth (@ UNIV)) s2) ((indexl x) s1)) = (((nth (@ UNIV)) s2) ((indexl y) s1))) = (((indexl x) s1) = ((indexl y) s1)))) ==> (((((nth (@ UNIV)) s2) ((indexl x) s1)) = (((nth (@ UNIV)) s2) ((indexl y) s1))) ==> (x = y))))
T c==> cuniq f0 c==> cuniq f1 c==> c= csizel f0 csizel f1 c==> cMEM f2 f0 c==> cMEM f3 f0 c= c==> c/\ c/\ c/\ c< cindexl f2 f0 csizel f1 c< cindexl f3 f0 csizel f1 cuniq f1 c==> c= c= cnth c@ part cUNIV f1 cindexl f2 f0 cnth c@ part cUNIV f1 cindexl f3 f0 c= cindexl f2 f0 cindexl f3 f0 c==> c= cnth c@ part cUNIV f1 cindexl f2 f0 cnth c@ part cUNIV f1 cindexl f3 f0 c= f2 f3 c==> c==> c/\ c/\ c< cindexl f2 f0 csizel f1 c< cindexl f3 f0 csizel f1 cuniq f1 c= c= cnth c@ part cUNIV f1 cindexl f2 f0 cnth c@ part cUNIV f1 cindexl f3 f0 c= cindexl f2 f0 cindexl f3 f0 c==> c= cnth c@ part cUNIV f1 cindexl f2 f0 cnth c@ part cUNIV f1 cindexl f3 f0 c= f2 f3 c==> c==> c/\ c/\ c< cindexl f2 f0 csizel f1 c< cindexl f3 f0 csizel f1 cuniq f1 c= c= cnth c@ part cUNIV f1 cindexl f2 f0 cnth c@ part cUNIV f1 cindexl f3 f0 c= cindexl f2 f0 cindexl f3 f0 c==> c= cnth c@ part cUNIV f1 cindexl f2 f0 cnth c@ part cUNIV f1 cindexl f3 f0 c= f2 f3
+ (((indexl (((nth (@ UNIV)) s1) ((indexl x) s2))) s1) = ((indexl x) s2)), ((MEM x) s2) |- ((((indexl (((nth (@ UNIV)) s1) ((indexl x) s2))) s1) = ((indexl x) s2)) /\ (((EL ((indexl (((nth (@ UNIV)) s1) ((indexl x) s2))) s1)) s2) = x))
T c==> c= cindexl cnth c@ part cUNIV f0 cindexl f1 f2 f0 cindexl f1 f2 c==> cMEM f1 f2 c/\ c= cindexl cnth c@ part cUNIV f0 cindexl f1 f2 f0 cindexl f1 f2 c= cEL cindexl cnth c@ part cUNIV f0 cindexl f1 f2 f0 f2 f1
+ |- ((\f. ((((INJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y))))))) f)
T * / c= cINJ b0 f0 f1 c/\ ! c==> cIN b1 f0 cIN * b0 b1 f1 ! ! c==> c/\ cIN b1 f0 c/\ cIN b2 f0 c= * b0 b1 * b0 b2 c= b1 b2 f2
+ |- ((((MEM x) s2) /\ (uniq s1)) = ((((indexl x) s2) < (sizel s2)) /\ (uniq s1)))
T c= c/\ cMEM f0 f1 cuniq f2 c/\ c< cindexl f0 f1 csizel f1 cuniq f2
+ |- (((!i. (!j. ((((i < (sizel s)) /\ (j < (sizel s))) /\ (uniq s)) ==> (((((nth x0) s) i) = (((nth x0) s) j)) = (i = j))))) ==> ((\i. (!j. ((((i < (sizel s)) /\ (j < (sizel s))) /\ (uniq s)) ==> (((((nth x0) s) i) = (((nth x0) s) j)) = (i = j))))) i)) = ((\i. (!j. ((((i < (sizel s)) /\ (j < (sizel s))) /\ (uniq s)) ==> (((((nth x0) s) i) = (((nth x0) s) j)) = (i = j))))) i))
T c= c==> ! ! c==> c/\ c/\ c< b0 csizel f0 c< b1 csizel f0 cuniq f0 c= c= cnth f1 f0 b0 cnth f1 f0 b1 c= b0 b1 * / ! c==> c/\ c/\ c< b0 csizel f0 c< b1 csizel f0 cuniq f0 c= c= cnth f1 f0 b0 cnth f1 f0 b1 c= b0 b1 f2 * / ! c==> c/\ c/\ c< b0 csizel f0 c< b1 csizel f0 cuniq f0 c= c= cnth f1 f0 b0 cnth f1 f0 b1 c= b0 b1 f2
+ |- (((!s. (!n. ((n < (sizel s)) ==> ((MEM (((nth x0) s) n)) s)))) ==> ((\s. (!n. ((n < (sizel s)) ==> ((MEM (((nth x0) s) n)) s)))) s)) = ((\s. (!n. ((n < (sizel s)) ==> ((MEM (((nth x0) s) n)) s)))) s))
T c= c==> ! ! c==> c< b1 csizel b0 cMEM cnth f0 b0 b1 b0 * / ! c==> c< b1 csizel b0 cMEM cnth f0 b0 b1 b0 f1 * / ! c==> c< b1 csizel b0 cMEM cnth f0 b0 b1 b0 f1
- |- (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = ((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))))
T c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0
+ |- ((((!x. ((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2)))) /\ (!x. (!y. (((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y))))) /\ ((!x. ((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2)))) /\ (!x. ((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))))))) = (((!x. ((x IN (set_of_list s1)) ==> (((\x. ((EL ((indexl x) s1)) s2)) x) IN (set_of_list s2)))) /\ (!x. (!y. (((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((\x. ((EL ((indexl x) s1)) s2)) x) = ((\x. ((EL ((indexl x) s1)) s2)) y)))) ==> (x = y))))) /\ ((!x. ((x IN (set_of_list s1)) ==> (((\x. ((EL ((indexl x) s1)) s2)) x) IN (set_of_list s2)))) /\ (!x. ((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((\x. ((EL ((indexl x) s1)) s2)) y) = x))))))))
T c= c/\ c/\ ! c==> cIN b0 * part cset_of_list f0 cIN cEL cindexl b0 f0 f1 * part cset_of_list f1 ! ! c==> c/\ cIN b0 * part cset_of_list f0 c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b0 f0 f1 cEL cindexl b1 f0 f1 c= b0 b1 c/\ ! c==> cIN b0 * part cset_of_list f0 cIN cEL cindexl b0 f0 f1 * part cset_of_list f1 ! c==> cIN b0 * part cset_of_list f1 c? / c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b1 f0 f1 b0 c/\ c/\ ! c==> cIN b0 * part cset_of_list f0 cIN * / cEL cindexl b1 f0 f1 b0 * part cset_of_list f1 ! ! c==> c/\ cIN b0 * part cset_of_list f0 c/\ cIN b1 * part cset_of_list f0 c= * / cEL cindexl b2 f0 f1 b0 * / cEL cindexl b2 f0 f1 b1 c= b0 b1 c/\ ! c==> cIN b0 * part cset_of_list f0 cIN * / cEL cindexl b1 f0 f1 b0 * part cset_of_list f1 ! c==> cIN b0 * part cset_of_list f1 c? / c/\ cIN b1 * part cset_of_list f0 c= * / cEL cindexl b2 f0 f1 b1 b0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((\f. ((((SURJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. ((x IN t) ==> (?y. ((y IN s) /\ ((f y) = x)))))))) f)
T * / c= cSURJ b0 f0 f1 c/\ ! c==> cIN b1 f0 cIN * b0 b1 f1 ! c==> cIN b1 f1 c? / c/\ cIN b2 f0 c= * b0 b2 b1 f2
+ |- ((\f. (!s. (!t. ((((BIJ f) s) t) = ((((INJ f) s) t) /\ (((SURJ f) s) t)))))) f)
T * / ! ! c= cBIJ b0 b1 b2 c/\ cINJ b0 b1 b2 cSURJ b0 b1 b2 f0
+ (uniq s1), (uniq s2), ((sizel s1) = (sizel s2)), ((MEM x) s1), ((MEM y) s1) |- (((((nth (@ UNIV)) s2) ((indexl x) s1)) = ((EL ((indexl y) s1)) s2)) ==> (x = y))
T c==> cuniq f0 c==> cuniq f1 c==> c= csizel f0 csizel f1 c==> cMEM f2 f0 c==> cMEM f3 f0 c==> c= cnth c@ part cUNIV f1 cindexl f2 f0 cEL cindexl f3 f0 f1 c= f2 f3
- |- ((!y. t) = t)
T c= ! f0 f0
+ |- (((!s. (!f. ((((INJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))))))) ==> ((\s. (!f. ((((INJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))))))) s)) = ((\s. (!f. ((((INJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y)))))))) s))
T c= c==> ! ! c= cINJ b1 b0 f0 c/\ ! c==> cIN b2 b0 cIN * b1 b2 f0 ! ! c==> c/\ cIN b2 b0 c/\ cIN b3 b0 c= * b1 b2 * b1 b3 c= b2 b3 * / ! c= cINJ b1 b0 f0 c/\ ! c==> cIN b2 b0 cIN * b1 b2 f0 ! ! c==> c/\ cIN b2 b0 c/\ cIN b3 b0 c= * b1 b2 * b1 b3 c= b2 b3 f1 * / ! c= cINJ b1 b0 f0 c/\ ! c==> cIN b2 b0 cIN * b1 b2 f0 ! ! c==> c/\ cIN b2 b0 c/\ cIN b3 b0 c= * b1 b2 * b1 b3 c= b2 b3 f1
- |- ((\p'. (!q'. (((x IN (set_of_list s2)) = p') ==> ((p' ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * part cset_of_list f1 b0 c==> c==> b0 c= c? / c/\ cIN b2 * part cset_of_list f2 c= cEL cindexl b2 f2 f1 f0 b1 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b2 * part cset_of_list f2 c= cEL cindexl b2 f2 f1 f0 c==> b0 b1 f3
+ |- ((((!x. (((MEM x) s1) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2))) /\ (!x. (!y. ((((MEM x) s1) /\ (((MEM y) s1) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y))))) /\ ((!x. (((MEM x) s1) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2))) /\ (!x. ((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))))))) = (((!x. (((MEM x) s1) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2))) /\ (!x. (!y. ((((MEM x) s1) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y))))) /\ ((!x. (((MEM x) s1) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2))) /\ (!x. ((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))))))))
T c= c/\ c/\ ! c==> cMEM b0 f0 cMEM cEL cindexl b0 f0 f1 f1 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= cEL cindexl b0 f0 f1 cEL cindexl b1 f0 f1 c= b0 b1 c/\ ! c==> cMEM b0 f0 cMEM cEL cindexl b0 f0 f1 f1 ! c==> cIN b0 * part cset_of_list f1 c? / c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b1 f0 f1 b0 c/\ c/\ ! c==> cMEM b0 f0 cMEM cEL cindexl b0 f0 f1 f1 ! ! c==> c/\ cMEM b0 f0 c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b0 f0 f1 cEL cindexl b1 f0 f1 c= b0 b1 c/\ ! c==> cMEM b0 f0 cMEM cEL cindexl b0 f0 f1 f1 ! c==> cIN b0 * part cset_of_list f1 c? / c/\ cIN b1 * part cset_of_list f0 c= cEL cindexl b1 f0 f1 b0
+ (uniq s1), (uniq s2), (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)), ((sizel s1) = (sizel s2)), ((MEM x) s1), ((MEM y) s1) |- (x = y)
T c==> cuniq f0 c==> cuniq f1 c==> c= cEL cindexl f2 f0 f1 cEL cindexl f3 f0 f1 c==> c= csizel f0 csizel f1 c==> cMEM f2 f0 c==> cMEM f3 f0 c= f2 f3
+ (((MEM ((EL ((indexl x) s1)) s2)) s2) = T) |- ((((MEM ((EL ((indexl x) s1)) s2)) s2) = T) /\ ((MEM ((EL ((indexl x) s1)) s2)) s2))
T c==> c= cMEM cEL cindexl f0 f1 f2 f2 cT c/\ c= cMEM cEL cindexl f0 f1 f2 f2 cT cMEM cEL cindexl f0 f1 f2 f2
- |- (((x IN (set_of_list s1)) = p') ==> ((p' ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = q')) ==> (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = (p' ==> q'))))
T c==> c= cIN f0 * part cset_of_list f1 f2 c==> c==> f2 c= cIN cEL cindexl f0 f1 f3 * part cset_of_list f3 f4 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f3 * part cset_of_list f3 c==> f2 f4
+ (uniq s1), (((MEM (((nth (@ UNIV)) s1) ((indexl x) s2))) s1) = T), ((sizel s1) = (sizel s2)), ((MEM x) s2) |- (((MEM (((nth (@ UNIV)) s1) ((indexl x) s2))) s1) /\ (((EL ((indexl (((nth (@ UNIV)) s1) ((indexl x) s2))) s1)) s2) = x))
T c==> cuniq f0 c==> c= cMEM cnth c@ part cUNIV f0 cindexl f1 f2 f0 cT c==> c= csizel f0 csizel f2 c==> cMEM f1 f2 c/\ cMEM cnth c@ part cUNIV f0 cindexl f1 f2 f0 c= cEL cindexl cnth c@ part cUNIV f0 cindexl f1 f2 f0 f2 f1
- |- ((((x IN (set_of_list s2)) = (x IN (set_of_list s2))) ==> (((x IN (set_of_list s2)) ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = ((x IN (set_of_list s2)) ==> q')))) = (((x IN (set_of_list s2)) ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = ((x IN (set_of_list s2)) ==> q'))))
T c= c==> c= cIN f0 * part cset_of_list f1 cIN f0 * part cset_of_list f1 c==> c==> cIN f0 * part cset_of_list f1 c= c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 f3 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 c==> cIN f0 * part cset_of_list f1 f3 c==> c==> cIN f0 * part cset_of_list f1 c= c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 f3 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 c==> cIN f0 * part cset_of_list f1 f3
+ (((EL ((indexl y) s1)) s2) = (((nth (@ UNIV)) s2) ((indexl y) s1))) |- ((((((nth (@ UNIV)) s2) ((indexl x) s1)) = (((nth (@ UNIV)) s2) ((indexl y) s1))) ==> (x = y)) = (((((nth (@ UNIV)) s2) ((indexl x) s1)) = ((EL ((indexl y) s1)) s2)) ==> (x = y)))
T c==> c= cEL cindexl f0 f1 f2 cnth c@ part cUNIV f2 cindexl f0 f1 c= c==> c= cnth c@ part cUNIV f2 cindexl f3 f1 cnth c@ part cUNIV f2 cindexl f0 f1 c= f3 f0 c==> c= cnth c@ part cUNIV f2 cindexl f3 f1 cEL cindexl f0 f1 f2 c= f3 f0
+ (uniq s1), ((MEM x) s1), ((MEM y) s1) |- ((((((indexl x) s1) = ((indexl y) s1)) = (x = y)) ==> ((((indexl x) s1) = ((indexl y) s1)) ==> (x = y))) = (((uniq s1) /\ (((MEM x) s1) /\ ((MEM y) s1))) /\ (((((indexl x) s1) = ((indexl y) s1)) = (x = y)) ==> ((((indexl x) s1) = ((indexl y) s1)) ==> (x = y)))))
T c==> cuniq f0 c==> cMEM f1 f0 c==> cMEM f2 f0 c= c==> c= c= cindexl f1 f0 cindexl f2 f0 c= f1 f2 c==> c= cindexl f1 f0 cindexl f2 f0 c= f1 f2 c/\ c/\ cuniq f0 c/\ cMEM f1 f0 cMEM f2 f0 c==> c= c= cindexl f1 f0 cindexl f2 f0 c= f1 f2 c==> c= cindexl f1 f0 cindexl f2 f0 c= f1 f2
+ (((MEM (((nth (@ UNIV)) s1) ((indexl x) s2))) s1) = T) |- ((T /\ (((EL ((indexl (((nth (@ UNIV)) s1) ((indexl x) s2))) s1)) s2) = x)) = (((MEM (((nth (@ UNIV)) s1) ((indexl x) s2))) s1) /\ (((EL ((indexl (((nth (@ UNIV)) s1) ((indexl x) s2))) s1)) s2) = x)))
T c==> c= cMEM cnth c@ part cUNIV f0 cindexl f1 f2 f0 cT c= c/\ cT c= cEL cindexl cnth c@ part cUNIV f0 cindexl f1 f2 f0 f2 f1 c/\ cMEM cnth c@ part cUNIV f0 cindexl f1 f2 f0 c= cEL cindexl cnth c@ part cUNIV f0 cindexl f1 f2 f0 f2 f1
+ (uniq s1), (uniq s2), ((sizel s1) = (sizel s2)), ((MEM x) s1), ((MEM y) s1) |- ((((((indexl x) s1) < (sizel s2)) /\ (((indexl y) s1) < (sizel s2))) /\ (uniq s2)) /\ ((((((nth (@ UNIV)) s2) ((indexl x) s1)) = (((nth (@ UNIV)) s2) ((indexl y) s1))) = (((indexl x) s1) = ((indexl y) s1))) ==> (((((nth (@ UNIV)) s2) ((indexl x) s1)) = (((nth (@ UNIV)) s2) ((indexl y) s1))) ==> (x = y))))
T c==> cuniq f0 c==> cuniq f1 c==> c= csizel f0 csizel f1 c==> cMEM f2 f0 c==> cMEM f3 f0 c/\ c/\ c/\ c< cindexl f2 f0 csizel f1 c< cindexl f3 f0 csizel f1 cuniq f1 c==> c= c= cnth c@ part cUNIV f1 cindexl f2 f0 cnth c@ part cUNIV f1 cindexl f3 f0 c= cindexl f2 f0 cindexl f3 f0 c==> c= cnth c@ part cUNIV f1 cindexl f2 f0 cnth c@ part cUNIV f1 cindexl f3 f0 c= f2 f3
+ (uniq s1), (uniq s2), (((EL ((indexl x) s1)) s2) = (((nth (@ UNIV)) s2) ((indexl x) s1))), ((sizel s1) = (sizel s2)), ((MEM x) s1), ((MEM y) s1) |- ((((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)) ==> (x = y))
T c==> cuniq f0 c==> cuniq f1 c==> c= cEL cindexl f2 f0 f1 cnth c@ part cUNIV f1 cindexl f2 f0 c==> c= csizel f0 csizel f1 c==> cMEM f2 f0 c==> cMEM f3 f0 c==> c= cEL cindexl f2 f0 f1 cEL cindexl f3 f0 f1 c= f2 f3
+ ((sizel s1) = (sizel s2)), ((MEM y) s1) |- (((((EL ((indexl y) s1)) s2) = (((nth (@ UNIV)) s2) ((indexl y) s1))) ==> (((((nth (@ UNIV)) s2) ((indexl x) s1)) = ((EL ((indexl y) s1)) s2)) ==> (x = y))) = ((((indexl y) s1) < (sizel s2)) /\ ((((EL ((indexl y) s1)) s2) = (((nth (@ UNIV)) s2) ((indexl y) s1))) ==> (((((nth (@ UNIV)) s2) ((indexl x) s1)) = ((EL ((indexl y) s1)) s2)) ==> (x = y)))))
T c==> c= csizel f0 csizel f1 c==> cMEM f2 f0 c= c==> c= cEL cindexl f2 f0 f1 cnth c@ part cUNIV f1 cindexl f2 f0 c==> c= cnth c@ part cUNIV f1 cindexl f3 f0 cEL cindexl f2 f0 f1 c= f3 f2 c/\ c< cindexl f2 f0 csizel f1 c==> c= cEL cindexl f2 f0 f1 cnth c@ part cUNIV f1 cindexl f2 f0 c==> c= cnth c@ part cUNIV f1 cindexl f3 f0 cEL cindexl f2 f0 f1 c= f3 f2
+ (uniq s1), (uniq s2), ((sizel s1) = (sizel s2)), (((MEM x) s1) /\ (((MEM y) s1) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) |- ((((MEM x) s1) /\ (((MEM y) s1) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) /\ (x = y))
T c==> cuniq f0 c==> cuniq f1 c==> c= csizel f0 csizel f1 c==> c/\ cMEM f2 f0 c/\ cMEM f3 f0 c= cEL cindexl f2 f0 f1 cEL cindexl f3 f0 f1 c/\ c/\ cMEM f2 f0 c/\ cMEM f3 f0 c= cEL cindexl f2 f0 f1 cEL cindexl f3 f0 f1 c= f2 f3
+ |- ((((((indexl x) s1) < (LENGTH s2)) ==> (((MEM ((EL ((indexl x) s1)) s2)) s2) = T)) ==> ((MEM ((EL ((indexl x) s1)) s2)) s2)) = ((MEM ((EL ((indexl x) s1)) s2)) s2))
T c= c==> c==> c< cindexl f0 f1 cLENGTH f2 c= cMEM cEL cindexl f0 f1 f2 f2 cT cMEM cEL cindexl f0 f1 f2 f2 cMEM cEL cindexl f0 f1 f2 f2
+ |- (((!f. ((((SURJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. ((x IN t) ==> (?y. ((y IN s) /\ ((f y) = x)))))))) ==> ((\f. ((((SURJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. ((x IN t) ==> (?y. ((y IN s) /\ ((f y) = x)))))))) f)) = ((\f. ((((SURJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. ((x IN t) ==> (?y. ((y IN s) /\ ((f y) = x)))))))) f))
T c= c==> ! c= cSURJ b0 f0 f1 c/\ ! c==> cIN b1 f0 cIN * b0 b1 f1 ! c==> cIN b1 f1 c? / c/\ cIN b2 f0 c= * b0 b2 b1 * / c= cSURJ b0 f0 f1 c/\ ! c==> cIN b1 f0 cIN * b0 b1 f1 ! c==> cIN b1 f1 c? / c/\ cIN b2 f0 c= * b0 b2 b1 f2 * / c= cSURJ b0 f0 f1 c/\ ! c==> cIN b1 f0 cIN * b0 b1 f1 ! c==> cIN b1 f1 c? / c/\ cIN b2 f0 c= * b0 b2 b1 f2
+ |- (((!n. ((n < (LENGTH l)) ==> ((MEM ((EL n) l)) l))) ==> ((\n. ((n < (LENGTH l)) ==> ((MEM ((EL n) l)) l))) n)) = ((\n. ((n < (LENGTH l)) ==> ((MEM ((EL n) l)) l))) n))
T c= c==> ! c==> c< b0 cLENGTH f0 cMEM cEL b0 f0 f0 * / c==> c< b0 cLENGTH f0 cMEM cEL b0 f0 f0 f1 * / c==> c< b0 cLENGTH f0 cMEM cEL b0 f0 f0 f1
+ ((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) |- (((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) /\ ((x = y) = (x = y)))
T c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c/\ c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= c= f0 f2 c= f0 f2
- |- ((?y. t) = t)
T c= c? / f0 f0
+ |- ((\s. (((i < (sizel s)) /\ (uniq s)) ==> (((indexl (((nth x0) s) i)) s) = i))) s)
T * / c==> c/\ c< f0 csizel b0 cuniq b0 c= cindexl cnth f1 b0 f0 b0 f0 f2
+ ((sizel s1) = (sizel s2)), ((MEM x) s1) |- (((((EL ((indexl x) s1)) s2) = (((nth (@ UNIV)) s2) ((indexl x) s1))) ==> ((((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)) ==> (x = y))) = ((((indexl x) s1) < (sizel s2)) /\ ((((EL ((indexl x) s1)) s2) = (((nth (@ UNIV)) s2) ((indexl x) s1))) ==> ((((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)) ==> (x = y)))))
T c==> c= csizel f0 csizel f1 c==> cMEM f2 f0 c= c==> c= cEL cindexl f2 f0 f1 cnth c@ part cUNIV f1 cindexl f2 f0 c==> c= cEL cindexl f2 f0 f1 cEL cindexl f3 f0 f1 c= f2 f3 c/\ c< cindexl f2 f0 csizel f1 c==> c= cEL cindexl f2 f0 f1 cnth c@ part cUNIV f1 cindexl f2 f0 c==> c= cEL cindexl f2 f0 f1 cEL cindexl f3 f0 f1 c= f2 f3
+ |- (((!f. ((((INJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y))))))) ==> ((\f. ((((INJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y))))))) f)) = ((\f. ((((INJ f) s) t) = ((!x. ((x IN s) ==> ((f x) IN t))) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y))))))) f))
T c= c==> ! c= cINJ b0 f0 f1 c/\ ! c==> cIN b1 f0 cIN * b0 b1 f1 ! ! c==> c/\ cIN b1 f0 c/\ cIN b2 f0 c= * b0 b1 * b0 b2 c= b1 b2 * / c= cINJ b0 f0 f1 c/\ ! c==> cIN b1 f0 cIN * b0 b1 f1 ! ! c==> c/\ cIN b1 f0 c/\ cIN b2 f0 c= * b0 b1 * b0 b2 c= b1 b2 f2 * / c= cINJ b0 f0 f1 c/\ ! c==> cIN b1 f0 cIN * b0 b1 f1 ! ! c==> c/\ cIN b1 f0 c/\ cIN b2 f0 c= * b0 b1 * b0 b2 c= b1 b2 f2
- ((uniq s) /\ (((MEM x) s) /\ ((MEM y) s))) |- (((uniq s) /\ (((MEM x) s) /\ ((MEM y) s))) /\ ((((indexl x) s) = ((indexl y) s)) = (x = y)))
T c==> c/\ cuniq f0 c/\ cMEM f1 f0 cMEM f2 f0 c/\ c/\ cuniq f0 c/\ cMEM f1 f0 cMEM f2 f0 c= c= cindexl f1 f0 cindexl f2 f0 c= f1 f2
- |- (((!p'. (!q'. ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) = p') ==> ((p' ==> ((x = y) = q')) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) = p') ==> ((p' ==> ((x = y) = q')) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) = p') ==> ((p' ==> ((x = y) = q')) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 b0 c==> c==> b0 c= c= f0 f2 b1 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> b0 b1 * / ! c==> c= c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 b0 c==> c==> b0 c= c= f0 f2 b1 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> b0 b1 f4 * / ! c==> c= c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 b0 c==> c==> b0 c= c= f0 f2 b1 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> b0 b1 f4
- ((MEM x) s2) |- (T = ((MEM x) s2))
T c==> cMEM f0 f1 c= cT cMEM f0 f1
- |- ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) = p') ==> ((p' ==> ((x = y) = q')) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (p' ==> q'))))
T c==> c= c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 f4 c==> c==> f4 c= c= f0 f2 f5 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> f4 f5
- |- (((x IN (set_of_list s2)) ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = ((x IN (set_of_list s2)) ==> q')))
T c==> c==> cIN f0 * part cset_of_list f1 c= c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 f3 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 c==> cIN f0 * part cset_of_list f1 f3
- ((MEM x) s) |- (((MEM x) s) /\ (((EL ((indexl x) s)) s) = x))
T c==> cMEM f0 f1 c/\ cMEM f0 f1 c= cEL cindexl f0 f1 f1 f0
- |- ((x IN (set_of_list s2)) ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))))
T c==> cIN f0 * part cset_of_list f1 c= c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0
- |- ((\p'. (!q'. ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) = p') ==> ((p' ==> ((x = y) = q')) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 b0 c==> c==> b0 c= c= f0 f2 b1 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> b0 b1 f4
- |- (((x IN (set_of_list s2)) = p') ==> ((p' ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = (p' ==> q'))))
T c==> c= cIN f0 * part cset_of_list f1 f2 c==> c==> f2 c= c? / c/\ cIN b0 * part cset_of_list f3 c= cEL cindexl b0 f3 f1 f0 f4 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b0 * part cset_of_list f3 c= cEL cindexl b0 f3 f1 f0 c==> f2 f4
- |- ((((x IN (set_of_list s1)) = (x IN (set_of_list s1))) ==> (((x IN (set_of_list s1)) ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = q')) ==> (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = ((x IN (set_of_list s1)) ==> q')))) = (((x IN (set_of_list s1)) ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = q')) ==> (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = ((x IN (set_of_list s1)) ==> q'))))
T c= c==> c= cIN f0 * part cset_of_list f1 cIN f0 * part cset_of_list f1 c==> c==> cIN f0 * part cset_of_list f1 c= cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 f3 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 c==> cIN f0 * part cset_of_list f1 f3 c==> c==> cIN f0 * part cset_of_list f1 c= cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 f3 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 c==> cIN f0 * part cset_of_list f1 f3
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- (((EL ((indexl x) s2)) s2) = x) |- ((x = x) = (((EL ((indexl x) s2)) s2) = x))
T c==> c= cEL cindexl f0 f1 f1 f0 c= c= f0 f0 c= cEL cindexl f0 f1 f1 f0
- |- (((x IN (set_of_list s1)) ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = q')) ==> (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = ((x IN (set_of_list s1)) ==> q')))
T c==> c==> cIN f0 * part cset_of_list f1 c= cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 f3 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 c==> cIN f0 * part cset_of_list f1 f3
- |- ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> ((x = y) = q')) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> q')))
T c==> c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= c= f0 f2 f4 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 f4
- (uniq s1), ((uniq s2) /\ ((sizel s1) = (sizel s2))) |- (((uniq s2) /\ ((sizel s1) = (sizel s2))) /\ (((BIJ (\x. ((EL ((indexl x) s1)) s2))) (set_of_list s1)) (set_of_list s2)))
T c==> cuniq f0 c==> c/\ cuniq f1 c= csizel f0 csizel f1 c/\ c/\ cuniq f1 c= csizel f0 csizel f1 cBIJ / cEL cindexl b0 f0 f1 * part cset_of_list f0 * part cset_of_list f1
- ((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) |- (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2))
T c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- (((!b. ((T /\ b) = b)) ==> ((\b. ((T /\ b) = b)) b)) = ((\b. ((T /\ b) = b)) b))
T c= c==> ! c= c/\ cT b0 b0 * / c= c/\ cT b0 b0 f0 * / c= c/\ cT b0 b0 f0
- (x IN (set_of_list s2)) |- ((x IN (set_of_list s2)) = T)
T c==> cIN f0 * part cset_of_list f1 c= cIN f0 * part cset_of_list f1 cT
- |- ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)))
T c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2
- |- ((x IN (set_of_list s1)) ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = (((EL ((indexl x) s1)) s2) IN (set_of_list s2))))
T c==> cIN f0 * part cset_of_list f1 c= cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2
- |- (((!p'. (!q'. (((x IN (set_of_list s1)) = p') ==> ((p' ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = q')) ==> (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x IN (set_of_list s1)) = p') ==> ((p' ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = q')) ==> (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x IN (set_of_list s1)) = p') ==> ((p' ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = q')) ==> (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 * part cset_of_list f1 b0 c==> c==> b0 c= cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 b1 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 c==> b0 b1 * / ! c==> c= cIN f0 * part cset_of_list f1 b0 c==> c==> b0 c= cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 b1 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 c==> b0 b1 f3 * / ! c==> c= cIN f0 * part cset_of_list f1 b0 c==> c==> b0 c= cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 b1 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 c==> b0 b1 f3
- (i < (sizel s)) |- ((i < (sizel s)) /\ (((EL i) s) = (((nth (@ UNIV)) s) i)))
T c==> c< f0 csizel f1 c/\ c< f0 csizel f1 c= cEL f0 f1 cnth c@ part cUNIV f1 f0
- |- (((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) = ((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2))))) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> ((x = y) = q')) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> q')))) = ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> ((x = y) = q')) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> q'))))
T c= c==> c= c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c==> c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= c= f0 f2 f4 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 f4 c==> c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= c= f0 f2 f4 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 f4
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\b. ((T /\ b) = b)) b)
T * / c= c/\ cT b0 b0 f0
- ((i < (sizel s)) /\ (uniq s)) |- (((i < (sizel s)) /\ (uniq s)) /\ (((indexl (((nth x0) s) i)) s) = i))
T c==> c/\ c< f0 csizel f1 cuniq f1 c/\ c/\ c< f0 csizel f1 cuniq f1 c= cindexl cnth f2 f1 f0 f1 f0
- |- (((!q'. (((x IN (set_of_list s2)) = p') ==> ((p' ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = (p' ==> q'))))) ==> ((\q'. (((x IN (set_of_list s2)) = p') ==> ((p' ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = (p' ==> q'))))) q')) = ((\q'. (((x IN (set_of_list s2)) = p') ==> ((p' ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 * part cset_of_list f1 f2 c==> c==> f2 c= c? / c/\ cIN b1 * part cset_of_list f3 c= cEL cindexl b1 f3 f1 f0 b0 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b1 * part cset_of_list f3 c= cEL cindexl b1 f3 f1 f0 c==> f2 b0 * / c==> c= cIN f0 * part cset_of_list f1 f2 c==> c==> f2 c= c? / c/\ cIN b1 * part cset_of_list f3 c= cEL cindexl b1 f3 f1 f0 b0 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b1 * part cset_of_list f3 c= cEL cindexl b1 f3 f1 f0 c==> f2 b0 f4 * / c==> c= cIN f0 * part cset_of_list f1 f2 c==> c==> f2 c= c? / c/\ cIN b1 * part cset_of_list f3 c= cEL cindexl b1 f3 f1 f0 b0 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b1 * part cset_of_list f3 c= cEL cindexl b1 f3 f1 f0 c==> f2 b0 f4
- ((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) |- ((y IN (set_of_list s1)) = T)
T c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= cIN f2 * part cset_of_list f1 cT
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- (x IN (set_of_list s2)) |- ((x IN (set_of_list s2)) /\ ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))))
T c==> cIN f0 * part cset_of_list f1 c/\ cIN f0 * part cset_of_list f1 c= c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0
- |- ((\q'. (((x IN (set_of_list s1)) = p') ==> ((p' ==> ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = q')) ==> (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * part cset_of_list f1 f2 c==> c==> f2 c= cIN cEL cindexl f0 f1 f3 * part cset_of_list f3 b0 c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f3 * part cset_of_list f3 c==> f2 b0 f4
- (uniq s1), (uniq s2), ((sizel s1) = (sizel s2)), (((MEM y) s1) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2))), ((MEM x) s1) |- ((((MEM y) s1) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2))) /\ (x = y))
T c==> cuniq f0 c==> cuniq f1 c==> c= csizel f0 csizel f1 c==> c/\ cMEM f2 f0 c= cEL cindexl f3 f0 f1 cEL cindexl f2 f0 f1 c==> cMEM f3 f0 c/\ c/\ cMEM f2 f0 c= cEL cindexl f3 f0 f1 cEL cindexl f2 f0 f1 c= f3 f2
- |- (((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> ((x = y) = (x = y))) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)))) = ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y))))
T c= c==> c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= c= f0 f2 c= f0 f2 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2
- |- (T = (x = x))
T c= cT c= f0 f0
- ((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) |- ((x IN (set_of_list s1)) = T)
T c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= cIN f0 * part cset_of_list f1 cT
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- ((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) |- (y IN (set_of_list s1))
T c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 cIN f2 * part cset_of_list f1
- |- (((!p'. (!q'. (((x IN (set_of_list s2)) = p') ==> ((p' ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x IN (set_of_list s2)) = p') ==> ((p' ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x IN (set_of_list s2)) = p') ==> ((p' ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 * part cset_of_list f1 b0 c==> c==> b0 c= c? / c/\ cIN b2 * part cset_of_list f2 c= cEL cindexl b2 f2 f1 f0 b1 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b2 * part cset_of_list f2 c= cEL cindexl b2 f2 f1 f0 c==> b0 b1 * / ! c==> c= cIN f0 * part cset_of_list f1 b0 c==> c==> b0 c= c? / c/\ cIN b2 * part cset_of_list f2 c= cEL cindexl b2 f2 f1 f0 b1 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b2 * part cset_of_list f2 c= cEL cindexl b2 f2 f1 f0 c==> b0 b1 f3 * / ! c==> c= cIN f0 * part cset_of_list f1 b0 c==> c==> b0 c= c? / c/\ cIN b2 * part cset_of_list f2 c= cEL cindexl b2 f2 f1 f0 b1 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b2 * part cset_of_list f2 c= cEL cindexl b2 f2 f1 f0 c==> b0 b1 f3
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (x IN (set_of_list s1)) |- ((x IN (set_of_list s1)) /\ ((((EL ((indexl x) s1)) s2) IN (set_of_list s2)) = (((EL ((indexl x) s1)) s2) IN (set_of_list s2))))
T c==> cIN f0 * part cset_of_list f1 c/\ cIN f0 * part cset_of_list f1 c= cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- (uniq s1), (uniq s2), ((sizel s1) = (sizel s2)) |- (((sizel s1) = (sizel s2)) /\ (((BIJ (\x. ((EL ((indexl x) s1)) s2))) (set_of_list s1)) (set_of_list s2)))
T c==> cuniq f0 c==> cuniq f1 c==> c= csizel f0 csizel f1 c/\ c= csizel f0 csizel f1 cBIJ / cEL cindexl b0 f0 f1 * part cset_of_list f0 * part cset_of_list f1
- |- ((\q'. ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) = p') ==> ((p' ==> ((x = y) = q')) ==> ((((x IN (set_of_list s1)) /\ ((y IN (set_of_list s1)) /\ (((EL ((indexl x) s1)) s2) = ((EL ((indexl y) s1)) s2)))) ==> (x = y)) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 f4 c==> c==> f4 c= c= f0 f2 b0 c= c==> c/\ cIN f0 * part cset_of_list f1 c/\ cIN f2 * part cset_of_list f1 c= cEL cindexl f0 f1 f3 cEL cindexl f2 f1 f3 c= f0 f2 c==> f4 b0 f5
- |- (((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))) = ((x IN (set_of_list s1)) ==> (((EL ((indexl x) s1)) s2) IN (set_of_list s2))))
T c= c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2 c==> cIN f0 * part cset_of_list f1 cIN cEL cindexl f0 f1 f2 * part cset_of_list f2
- |- ((((x IN (set_of_list s2)) ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))))) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = ((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))))) = (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = ((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))))))
T c= c==> c==> cIN f0 * part cset_of_list f1 c= c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0 c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b0 * part cset_of_list f2 c= cEL cindexl b0 f2 f1 f0
- |- ((\q'. (((x IN (set_of_list s2)) = p') ==> ((p' ==> ((?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x))) = q')) ==> (((x IN (set_of_list s2)) ==> (?y. ((y IN (set_of_list s1)) /\ (((EL ((indexl y) s1)) s2) = x)))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * part cset_of_list f1 f2 c==> c==> f2 c= c? / c/\ cIN b1 * part cset_of_list f3 c= cEL cindexl b1 f3 f1 f0 b0 c= c==> cIN f0 * part cset_of_list f1 c? / c/\ cIN b1 * part cset_of_list f3 c= cEL cindexl b1 f3 f1 f0 c==> f2 b0 f4
