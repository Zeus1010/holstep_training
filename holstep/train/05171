N List_hypermap_iso.darts_of_list_split_same
C |- (!L. (!d. (((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((perm_eq (list_of_darts ((split_list_hyp L) d))) (list_of_darts L)))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cperm_eq clist_of_darts csplit_list_hyp f0 f1 clist_of_darts f0
D TRUTH
A |- T
T cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D ssreflect_eq_def
A |- (!v. (!P. (((ssreflect_eq v) P) = P)))
T c= cssreflect_eq f0 f1 f1
D bool_elim
A |- (!P. (((P T) /\ (P F)) ==> (!x. (P x))))
T c==> c/\ * f0 cT * f0 cF ! * f0 b0
D Seq.cats0
A |- (!s. (((cat s) NIL) = s))
T c= ccat f0 cNIL f0
D Seq.rotr
A |- (!n. (!s. (((rotr n) s) = ((rot ((sizel s) - n)) s))))
T c= crotr f0 f1 crot c- csizel f1 f0 f1
D Seq.size_rot
A |- (!n0. (!s. ((sizel ((rot n0) s)) = (sizel s))))
T c= csizel crot f0 f1 csizel f1
D Seq.perm_eq_refl
A |- (!s. ((perm_eq s) s))
T cperm_eq f0 f0
D Seq.perm_eq_sym
A |- (!s1. (!s2. (((perm_eq s1) s2) = ((perm_eq s2) s1))))
T c= cperm_eq f0 f1 cperm_eq f1 f0
D Seq.perm_eq_trans
A |- (!s2. (!s1. (!s3. (((perm_eq s1) s2) ==> (((perm_eq s2) s3) ==> ((perm_eq s1) s3))))))
T c==> cperm_eq f0 f1 c==> cperm_eq f1 f2 cperm_eq f0 f2
D Seq.perm_cat2l
A |- (!s1. (!s2. (!s3. (((perm_eq ((cat s1) s2)) ((cat s1) s3)) = ((perm_eq s2) s3)))))
T c= cperm_eq ccat f0 f1 ccat f0 f2 cperm_eq f1 f2
D Seq.perm_cat2r
A |- (!s1. (!s2. (!s3. (((perm_eq ((cat s2) s1)) ((cat s3) s1)) = ((perm_eq s2) s3)))))
T c= cperm_eq ccat f0 f1 ccat f2 f1 cperm_eq f0 f2
D Seq.size_rotr
A |- (!n0. (!s. ((sizel ((rotr n0) s)) = (sizel s))))
T c= csizel crotr f0 f1 csizel f1
D Seq.foldr
A |- (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))
T c/\ c= cfoldr f0 f1 cCONS f2 f3 * * f0 f2 cfoldr f0 f1 f3 c= cfoldr f0 f1 cNIL f1
D Seq2.perm_eq_rot
A |- (!n. (!s. ((perm_eq ((rot n) s)) s)))
T cperm_eq crot f0 f1 f1
D List_hypermap.list_of_darts
A |- (!L. ((list_of_darts L) = (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L)))
T c= clist_of_darts f0 cfoldr / / ccat clist_pairs b0 b1 cNIL f0
D List_hypermap.list_of_darts_cat
A |- (!s1. (!s2. ((list_of_darts ((cat s1) s2)) = ((cat (list_of_darts s1)) (list_of_darts s2)))))
T c= clist_of_darts ccat f0 f1 ccat clist_of_darts f0 clist_of_darts f1
D List_hypermap.rot_list_pairs
A |- (!s. (!n. (((rot n) (list_pairs s)) = (list_pairs ((rot n) s)))))
T c= crot f0 clist_pairs f1 clist_pairs crot f0 f1
D List_hypermap_iso.split_list_face
A |- (!f. ((split_list_face f) = (((COND ((sizel f) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS f) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f)) ((CONS ((CONS (HD f)) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f))) NIL)))))
T c= csplit_list_face f0 cCOND c<= csizel f0 cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 f0 cCONS cCONS cHD f0 cdropl cNUMERAL cBIT0 cBIT1 c_0 f0 cNIL
D List_hypermap_iso.split_list_hyp_alt
A |- (!L. (!d. (((MEM d) (list_of_darts L)) ==> (((LET (\f. (\n. (LET_END (((split_list_hyp L) d) = ((cat ((take n) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))))) ((find_pair_list L) d)) ((indexl ((find_pair_list L) d)) L)))))
T c==> cMEM f0 clist_of_darts f1 cLET / / cLET_END c= csplit_list_hyp f1 f0 ccat ctake b1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs b0 b0 cdropl c+ b1 cNUMERAL cBIT1 c_0 f1 cfind_pair_list f1 f0 cindexl cfind_pair_list f1 f0 f1
D List_hypermap_iso.d_not_in_dart_split_eq
A |- (!L. (!d. ((~ ((MEM d) (list_of_darts L))) ==> (((split_list_hyp L) d) = L))))
T c==> c~ cMEM f0 clist_of_darts f1 c= csplit_list_hyp f1 f0 f1
D List_hypermap_iso.list_eq_cat_find_pair_list
A |- (!L. (!d. (((MEM d) (list_of_darts L)) ==> (((LET (\f. (\n. (LET_END (L = ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))))) ((find_pair_list L) d)) ((indexl ((find_pair_list L) d)) L)))))
T c==> cMEM f0 clist_of_darts f1 cLET / / cLET_END c= f1 ccat ctake b1 f1 ccat cCONS b0 cNIL cdropl c+ b1 cNUMERAL cBIT1 c_0 f1 cfind_pair_list f1 f0 cindexl cfind_pair_list f1 f0 f1
+ |- (((perm_eq (list_pairs f)) ((rot ((sizel f) - (NUMERAL (BIT1 _0)))) (list_pairs ((rot k) f)))) = ((perm_eq (list_pairs f)) (list_pairs ((rot ((sizel f) - (NUMERAL (BIT1 _0)))) ((rot k) f)))))
T c= cperm_eq clist_pairs f0 crot c- csizel f0 cNUMERAL cBIT1 c_0 clist_pairs crot f1 f0 cperm_eq clist_pairs f0 clist_pairs crot c- csizel f0 cNUMERAL cBIT1 c_0 crot f1 f0
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- ((((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 c==> c= csplit_list_hyp f0 f1 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
- |- (!f. (((\f. (((find_pair_list L) d) = f)) f) ==> (?f. (((find_pair_list L) d) = f))))
T c==> * / c= cfind_pair_list f0 f1 b0 f2 c? / c= cfind_pair_list f0 f1 b0
+ |- ((perm_eq (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot k) f))) NIL)))
T cperm_eq cfoldr / / ccat clist_pairs b0 b1 cNIL cCONS f0 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot f1 f0 cNIL
+ |- (((!x. (((\k. (((indexl d) (list_pairs f)) = k)) x) ==> ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL))))) ==> ((?k. (((indexl d) (list_pairs f)) = k)) ==> ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL))))) = ((?k. (((indexl d) (list_pairs f)) = k)) ==> ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)))))
T c= c==> ! c==> * / c= cindexl f0 clist_pairs f1 b1 b0 cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL c==> c? / c= cindexl f0 clist_pairs f1 b0 cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL c==> c? / c= cindexl f0 clist_pairs f1 b0 cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL
- |- (((!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 b0 * / c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 b0 f4 * / c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 b0 f4
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- ((((MEM d) (list_of_darts L)) ==> (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 c==> c==> cMEM f1 clist_of_darts f0 c= f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cperm_eq clist_of_darts f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
+ |- ((\s1. (!s2. ((list_of_darts ((cat s1) s2)) = ((cat (list_of_darts s1)) (list_of_darts s2))))) s1)
T * / ! c= clist_of_darts ccat b0 b1 ccat clist_of_darts b0 clist_of_darts b1 f0
+ ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) /\ (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c/\ cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1
- |- ((((find_pair_list L) d) = f) ==> (?f. (((find_pair_list L) d) = f)))
T c==> c= cfind_pair_list f0 f1 f2 c? / c= cfind_pair_list f0 f1 b0
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- (~ ((MEM d) (list_of_darts L)))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c~ cMEM f1 clist_of_darts f2
- (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) |- ((((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))) = T)
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c= c==> cperm_eq f2 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 f3 cperm_eq f2 f3 cT
- |- (!f'. (((\f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) f') ==> (?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f'))))
T c==> * / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 f2 c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0
- |- (((!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b0 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 b0 * / c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b0 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 b0 f4 * / c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b0 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 b0 f4
+ |- (((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))))) = ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))))
T c= c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1
+ |- (((!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) ==> ((perm_eq (list_pairs f)) ((rot ((sizel f) - (NUMERAL (BIT1 _0)))) ((rot k) (list_pairs f))))) = ((perm_eq (list_pairs f)) ((rot ((sizel f) - (NUMERAL (BIT1 _0)))) ((rot k) (list_pairs f)))))
T c= c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 cperm_eq clist_pairs f1 crot c- csizel f1 cNUMERAL cBIT1 c_0 crot f0 clist_pairs f1 cperm_eq clist_pairs f1 crot c- csizel f1 cNUMERAL cBIT1 c_0 crot f0 clist_pairs f1
- ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!x. (P x)))
T c==> c/\ * f0 cT * f0 cF c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((\x. (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))) x)
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 * / c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 b0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1 f3
+ |- ((\L. (!d. (((MEM d) (list_of_darts L)) ==> (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))) L)
T * / ! c==> cMEM b1 clist_of_darts b0 c= b0 ccat ctake cindexl cfind_pair_list b0 b1 b0 b0 ccat cCONS cfind_pair_list b0 b1 cNIL cdropl c+ cindexl cfind_pair_list b0 b1 b0 cNUMERAL cBIT1 c_0 b0 f0
+ |- (((perm_eq ((cat (list_of_darts ((take n) L))) ((cat (list_of_darts ((CONS f) NIL))) (list_of_darts ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) ((cat (list_of_darts ((take n) L))) (list_of_darts ((cat (split_list_face f')) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) = ((perm_eq ((cat (list_of_darts ((take n) L))) ((cat (list_of_darts ((CONS f) NIL))) (list_of_darts ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take n) L)) ((cat (split_list_face f')) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))))
T c= cperm_eq ccat clist_of_darts ctake f0 f1 ccat clist_of_darts cCONS f2 cNIL clist_of_darts cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 ccat clist_of_darts ctake f0 f1 clist_of_darts ccat csplit_list_face f3 cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 cperm_eq ccat clist_of_darts ctake f0 f1 ccat clist_of_darts cCONS f2 cNIL clist_of_darts cdropl c+ f0 cNUMERAL cBIT1 c_0 f1 clist_of_darts ccat ctake f0 f1 ccat csplit_list_face f3 cdropl c+ f0 cNUMERAL cBIT1 c_0 f1
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) |- (((perm_eq (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) = ((perm_eq (list_of_darts L)) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))
T c==> c= f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 c= cperm_eq clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cperm_eq clist_of_darts f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
+ |- (P = ((ssreflect_eq mem_d) P))
T c= f0 cssreflect_eq f1 f0
- |- ((?f. (((find_pair_list L) d) = f)) ==> (?f. (((find_pair_list L) d) = f)))
T c==> c? / c= cfind_pair_list f0 f1 b0 c? / c= cfind_pair_list f0 f1 b0
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- ((perm_eq (list_of_darts L)) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 cperm_eq clist_of_darts f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
+ |- (?k. (((indexl d) (list_pairs f)) = k))
T c? / c= cindexl f0 clist_pairs f1 b0
+ |- ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 f4 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 f4
+ (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) |- (((!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) ==> ((\s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) s1)) = ((\s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) s1))
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c= c==> ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 * / ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 f2 * / ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 f2
+ |- (((!s1. (!s2. (!s3. (((perm_eq ((cat s1) s2)) ((cat s1) s3)) = ((perm_eq s2) s3))))) ==> ((\s1. (!s2. (!s3. (((perm_eq ((cat s1) s2)) ((cat s1) s3)) = ((perm_eq s2) s3))))) s1)) = ((\s1. (!s2. (!s3. (((perm_eq ((cat s1) s2)) ((cat s1) s3)) = ((perm_eq s2) s3))))) s1))
T c= c==> ! ! ! c= cperm_eq ccat b0 b1 ccat b0 b2 cperm_eq b1 b2 * / ! ! c= cperm_eq ccat b0 b1 ccat b0 b2 cperm_eq b1 b2 f0 * / ! ! c= cperm_eq ccat b0 b1 ccat b0 b2 cperm_eq b1 b2 f0
- ((\n. (((indexl f) L) = n)) n) |- (((\n. (((indexl f) L) = n)) n) /\ (?n. (((indexl f) L) = n)))
T c==> * / c= cindexl f0 f1 b0 f2 c/\ * / c= cindexl f0 f1 b0 f2 c? / c= cindexl f0 f1 b0
- (((find_pair_list L) d) = f) |- ((((find_pair_list L) d) = f) /\ (?f. (((find_pair_list L) d) = f)))
T c==> c= cfind_pair_list f0 f1 f2 c/\ c= cfind_pair_list f0 f1 f2 c? / c= cfind_pair_list f0 f1 b0
- |- ((?x. (((MEM d) (list_of_darts L)) = x)) ==> (?x. (((MEM d) (list_of_darts L)) = x)))
T c==> c? / c= cMEM f0 clist_of_darts f1 b0 c? / c= cMEM f0 clist_of_darts f1 b0
+ (((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- ((((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) /\ ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))
T c==> c= csplit_list_hyp f0 f1 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 c/\ c= csplit_list_hyp f0 f1 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
+ |- ((perm_eq (list_pairs f)) (list_pairs ((rot ((sizel f) - (NUMERAL (BIT1 _0)))) ((rot k) f))))
T cperm_eq clist_pairs f0 clist_pairs crot c- csizel f0 cNUMERAL cBIT1 c_0 crot f1 f0
+ |- ((\q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 b0 f4
- (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) |- (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))
T c==> ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 ! c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0
+ |- ((\n0. (!s. ((sizel ((rot n0) s)) = (sizel s)))) n0)
T * / ! c= csizel crot b0 b1 csizel b1 f0
+ |- (((?x. (((MEM d) (list_of_darts L)) = x)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))
T c= c==> c? / c= cMEM f0 clist_of_darts f1 b0 cperm_eq clist_of_darts f1 clist_of_darts csplit_list_hyp f1 f0 cperm_eq clist_of_darts f1 clist_of_darts csplit_list_hyp f1 f0
- (((indexl d) (list_pairs f)) = k), (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f') |- (((rotr (NUMERAL (BIT1 _0))) ((rot k) f)) = f')
T c==> c= cindexl f0 clist_pairs f1 f2 c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f3 c= crotr cNUMERAL cBIT1 c_0 crot f2 f1 f3
- (((MEM d) (list_of_darts L)) = x) |- ((\x. (((MEM d) (list_of_darts L)) = x)) x)
T c==> c= cMEM f0 clist_of_darts f1 f2 * / c= cMEM f0 clist_of_darts f1 b0 f2
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ |- ((\s3. (((perm_eq ((cat s1) s2)) ((cat s1) s3)) = ((perm_eq s2) s3))) s3)
T * / c= cperm_eq ccat f0 f1 ccat f0 b0 cperm_eq f1 b0 f2
+ (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f'), (((find_pair_list L) d) = f), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((perm_eq ((cat (list_of_darts ((take n) L))) ((cat (list_of_darts ((CONS f) NIL))) (list_of_darts ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) ((cat (list_of_darts ((take n) L))) ((cat (list_of_darts (split_list_face f'))) (list_of_darts ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 c==> c= cfind_pair_list f3 f0 f1 c==> c<= csizel cfind_pair_list f3 f0 cNUMERAL cBIT1 cBIT1 c_0 cperm_eq ccat clist_of_darts ctake f4 f3 ccat clist_of_darts cCONS f1 cNIL clist_of_darts cdropl c+ f4 cNUMERAL cBIT1 c_0 f3 ccat clist_of_darts ctake f4 f3 ccat clist_of_darts csplit_list_face f2 clist_of_darts cdropl c+ f4 cNUMERAL cBIT1 c_0 f3
+ |- (?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f'))
T c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0
+ |- (((perm_eq (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot k) f))) NIL))) = ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot k) f))) NIL))))
T c= cperm_eq cfoldr / / ccat clist_pairs b0 b1 cNIL cCONS f0 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot f1 f0 cNIL cperm_eq clist_of_darts cCONS f0 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot f1 f0 cNIL
+ |- ((\s. ((perm_eq ((rot n) s)) s)) s)
T * / cperm_eq crot f0 b0 b0 f1
+ ((\f. (((find_pair_list L) d) = f)) f) |- (((((find_pair_list L) d) = f) ==> ((perm_eq (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))) = ((perm_eq (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))
T c==> * / c= cfind_pair_list f0 f1 b0 f2 c= c==> c= cfind_pair_list f0 f1 f2 cperm_eq clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cperm_eq clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
- |- ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 f4 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 f4
+ (((find_pair_list L) d) = f), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((perm_eq (list_of_darts ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take n) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c==> c= cfind_pair_list f0 f1 f2 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cperm_eq clist_of_darts ccat ctake f3 f0 ccat cCONS f2 cNIL cdropl c+ f3 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake f3 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cdropl c+ f3 cNUMERAL cBIT1 c_0 f0
+ |- (((!s1. (!s2. (((perm_eq s1) s2) = ((perm_eq s2) s1)))) ==> ((\s1. (!s2. (((perm_eq s1) s2) = ((perm_eq s2) s1)))) s1)) = ((\s1. (!s2. (((perm_eq s1) s2) = ((perm_eq s2) s1)))) s1))
T c= c==> ! ! c= cperm_eq b0 b1 cperm_eq b1 b0 * / ! c= cperm_eq b0 b1 cperm_eq b1 b0 f0 * / ! c= cperm_eq b0 b1 cperm_eq b1 b0 f0
+ |- ((\s. ((sizel ((rot n0) s)) = (sizel s))) s)
T * / c= csizel crot f0 b0 csizel b0 f1
- |- (((!p'. (!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> b0 b1 f3 * / ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> b0 b1 f3
+ (((MEM d) (list_of_darts L)) = x) |- ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))
T c==> c= cMEM f0 clist_of_darts f1 f2 c= c==> cssreflect_eq f3 c= cMEM f0 clist_of_darts f1 f2 cperm_eq clist_of_darts f1 clist_of_darts csplit_list_hyp f1 f0 cperm_eq clist_of_darts f1 clist_of_darts csplit_list_hyp f1 f0
+ (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f') |- (((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts (((COND ((sizel ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f')) ((CONS ((CONS (HD f')) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f'))) NIL))))) = ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts (((COND ((sizel ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS f') NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f')) ((CONS ((CONS (HD f')) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f'))) NIL))))))
T c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 c= cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCOND c<= csizel crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 f2 cCONS cCONS cHD f2 cdropl cNUMERAL cBIT0 cBIT1 c_0 f2 cNIL cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCOND c<= csizel crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS f2 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 f2 cCONS cCONS cHD f2 cdropl cNUMERAL cBIT0 cBIT1 c_0 f2 cNIL
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((!x. (((\x. (((MEM d) (list_of_darts L)) = x)) x) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))) ==> ((?x. (((MEM d) (list_of_darts L)) = x)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))) = ((?x. (((MEM d) (list_of_darts L)) = x)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= c==> ! c==> * / c= cMEM f1 clist_of_darts f0 b1 b0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1 c==> c? / c= cMEM f1 clist_of_darts f0 b0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1 c==> c? / c= cMEM f1 clist_of_darts f0 b0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
+ |- ((\v. (!P. (((ssreflect_eq v) P) = P))) v)
T * / ! c= cssreflect_eq b0 b1 b1 f0
+ |- ((((MEM d) (list_of_darts L)) = ((MEM d) (list_of_darts L))) = ((\x. (((MEM d) (list_of_darts L)) = x)) ((MEM d) (list_of_darts L))))
T c= c= cMEM f0 clist_of_darts f1 cMEM f0 clist_of_darts f1 * / c= cMEM f0 clist_of_darts f1 b0 cMEM f0 clist_of_darts f1
- |- ((\x. (!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))))) x)
T * / ! ! ! c/\ c= cfoldr b2 b3 cCONS b0 b1 * * b2 b0 cfoldr b2 b3 b1 c= cfoldr b2 b3 cNIL b3 f0
+ (((find_pair_list L) d) = f), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((perm_eq (list_of_darts ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))))
T c==> c= cfind_pair_list f0 f1 f2 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cperm_eq clist_of_darts ccat ctake cindexl f2 f0 f0 ccat cCONS f2 cNIL cdropl c+ cindexl f2 f0 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake cindexl f2 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cdropl c+ cindexl f2 f0 cNUMERAL cBIT1 c_0 f0
- |- (!x. (((\x. (((MEM d) (list_of_darts L)) = x)) x) ==> (?x. (((MEM d) (list_of_darts L)) = x))))
T c==> * / c= cMEM f0 clist_of_darts f1 b0 f2 c? / c= cMEM f0 clist_of_darts f1 b0
+ ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- ((MEM d) (list_of_darts L))
T c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cMEM f1 clist_of_darts f2
- |- ((((find_pair_list L) d) = f) = ((\f. (((find_pair_list L) d) = f)) f))
T c= c= cfind_pair_list f0 f1 f2 * / c= cfind_pair_list f0 f1 b0 f2
+ |- ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))))
T c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1
+ |- (((!f. ((split_list_face f) = (((COND ((sizel f) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS f) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f)) ((CONS ((CONS (HD f)) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f))) NIL))))) ==> ((\f. ((split_list_face f) = (((COND ((sizel f) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS f) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f)) ((CONS ((CONS (HD f)) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f))) NIL))))) f)) = ((\f. ((split_list_face f) = (((COND ((sizel f) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS f) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f)) ((CONS ((CONS (HD f)) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f))) NIL))))) f))
T c= c==> ! c= csplit_list_face b0 cCOND c<= csizel b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 b0 cCONS cCONS cHD b0 cdropl cNUMERAL cBIT0 cBIT1 c_0 b0 cNIL * / c= csplit_list_face b0 cCOND c<= csizel b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 b0 cCONS cCONS cHD b0 cdropl cNUMERAL cBIT0 cBIT1 c_0 b0 cNIL f0 * / c= csplit_list_face b0 cCOND c<= csizel b0 cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 b0 cCONS cCONS cHD b0 cdropl cNUMERAL cBIT0 cBIT1 c_0 b0 cNIL f0
+ (((find_pair_list L) d) = f), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((!x. (((\f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) x) ==> ((perm_eq (list_of_darts ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take n) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))))) ==> ((?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) ==> ((perm_eq (list_of_darts ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take n) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))))) = ((?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) ==> ((perm_eq (list_of_darts ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take n) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))))
T c==> c= cfind_pair_list f0 f1 f2 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= c==> ! c==> * / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 b1 b0 cperm_eq clist_of_darts ccat ctake f3 f0 ccat cCONS f2 cNIL cdropl c+ f3 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake f3 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cdropl c+ f3 cNUMERAL cBIT1 c_0 f0 c==> c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 b0 cperm_eq clist_of_darts ccat ctake f3 f0 ccat cCONS f2 cNIL cdropl c+ f3 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake f3 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cdropl c+ f3 cNUMERAL cBIT1 c_0 f0 c==> c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 b0 cperm_eq clist_of_darts ccat ctake f3 f0 ccat cCONS f2 cNIL cdropl c+ f3 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake f3 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cdropl c+ f3 cNUMERAL cBIT1 c_0 f0
- |- ((((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f') = ((\f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) f'))
T c= c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 * / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 f2
+ ((list_pairs ((rot n) s)) = ((rot n) (list_pairs s))) |- (((rot n) (list_pairs s)) = (list_pairs ((rot n) s)))
T c==> c= clist_pairs crot f0 f1 crot f0 clist_pairs f1 c= crot f0 clist_pairs f1 clist_pairs crot f0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) |- ((\s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) s1)
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 * / ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 f2
- (((MEM d) (list_of_darts L)) = x) |- (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))
T c==> c= cMEM f0 clist_of_darts f1 f2 c= cperm_eq clist_of_darts f1 clist_of_darts csplit_list_hyp f1 f0 cperm_eq clist_of_darts f1 clist_of_darts csplit_list_hyp f1 f0
+ |- ((perm_eq (((\list. (\a. ((cat (list_pairs list)) a))) f) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) NIL))) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot k) f))) NIL)))
T cperm_eq * * / / ccat clist_pairs b0 b1 f0 cfoldr / / ccat clist_pairs b0 b1 cNIL cNIL cfoldr / / ccat clist_pairs b0 b1 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot f1 f0 cNIL
+ |- (((!p'. (!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT b0 c==> c==> b0 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b1 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT b0 c==> c==> b0 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b1 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> b0 b1 f3 * / ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT b0 c==> c==> b0 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b1 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> b0 b1 f3
- (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) |- ((!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3))) = T)
T c==> ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c= ! c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 cT
+ |- ((\n. ((list_pairs ((rot n) s)) = ((rot n) (list_pairs s)))) n)
T * / c= clist_pairs crot b0 f0 crot b0 clist_pairs f0 f1
+ (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f'), (((find_pair_list L) d) = f), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts (((COND ((sizel ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS f') NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f')) ((CONS ((CONS (HD f')) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f'))) NIL)))))
T c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 c==> c= cfind_pair_list f3 f0 f1 c==> c<= csizel cfind_pair_list f3 f0 cNUMERAL cBIT1 cBIT1 c_0 cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCOND c<= csizel crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS f2 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 f2 cCONS cCONS cHD f2 cdropl cNUMERAL cBIT0 cBIT1 c_0 f2 cNIL
- |- (((!x. (((\f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) x) ==> (?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')))) ==> ((?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) ==> (?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')))) = ((?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) ==> (?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f'))))
T c= c==> ! c==> * / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b1 b0 c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b1 c==> c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 c==> c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0
+ |- ((((foldr f) z0) NIL) = z0)
T c= cfoldr f0 f1 cNIL f1
+ (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f'), (((find_pair_list L) d) = f), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f') /\ ((perm_eq (list_of_darts ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take n) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))))
T c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 c==> c= cfind_pair_list f3 f0 f1 c==> c<= csizel cfind_pair_list f3 f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 cperm_eq clist_of_darts ccat ctake f4 f3 ccat cCONS f1 cNIL cdropl c+ f4 cNUMERAL cBIT1 c_0 f3 clist_of_darts ccat ctake f4 f3 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cdropl c+ f4 cNUMERAL cBIT1 c_0 f3
+ (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) |- (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 ! c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0
+ |- (((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) = ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L))))) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> q')))) = ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> q'))))
T c= c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 f3 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 f3 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3
+ ((\k. (((indexl d) (list_pairs f)) = k)) k) |- (((((indexl d) (list_pairs f)) = k) ==> ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)))) = ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL))))
T c==> * / c= cindexl f0 clist_pairs f1 b0 f2 c= c==> c= cindexl f0 clist_pairs f1 f2 cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL
+ (((find_pair_list L) d) = f), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((((\n. (((indexl f) L) = n)) n) ==> ((perm_eq (list_of_darts ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))))) = T)
T c==> c= cfind_pair_list f0 f1 f2 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= c==> * / c= cindexl f2 f0 b0 f3 cperm_eq clist_of_darts ccat ctake cindexl f2 f0 f0 ccat cCONS f2 cNIL cdropl c+ cindexl f2 f0 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake cindexl f2 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cdropl c+ cindexl f2 f0 cNUMERAL cBIT1 c_0 f0 cT
- ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = T)
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cT
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
+ (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f') |- (((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts (((COND ((sizel ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((CONS ((CONS (HD f')) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f'))) NIL))))) = ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts (((COND ((sizel ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f')) ((CONS ((CONS (HD f')) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f'))) NIL))))))
T c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 c= cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCOND c<= csizel crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cCONS cCONS cHD f2 cdropl cNUMERAL cBIT0 cBIT1 c_0 f2 cNIL cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCOND c<= csizel crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 f2 cCONS cCONS cHD f2 cdropl cNUMERAL cBIT0 cBIT1 c_0 f2 cNIL
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) /\ (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 cF cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1 c/\ c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 cT cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1 c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 cF cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
+ |- (((!L. (!d. (((MEM d) (list_of_darts L)) ==> (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))) ==> ((\L. (!d. (((MEM d) (list_of_darts L)) ==> (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))) L)) = ((\L. (!d. (((MEM d) (list_of_darts L)) ==> (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))) L))
T c= c==> ! ! c==> cMEM b1 clist_of_darts b0 c= b0 ccat ctake cindexl cfind_pair_list b0 b1 b0 b0 ccat cCONS cfind_pair_list b0 b1 cNIL cdropl c+ cindexl cfind_pair_list b0 b1 b0 cNUMERAL cBIT1 c_0 b0 * / ! c==> cMEM b1 clist_of_darts b0 c= b0 ccat ctake cindexl cfind_pair_list b0 b1 b0 b0 ccat cCONS cfind_pair_list b0 b1 cNIL cdropl c+ cindexl cfind_pair_list b0 b1 b0 cNUMERAL cBIT1 c_0 b0 f0 * / ! c==> cMEM b1 clist_of_darts b0 c= b0 ccat ctake cindexl cfind_pair_list b0 b1 b0 b0 ccat cCONS cfind_pair_list b0 b1 cNIL cdropl c+ cindexl cfind_pair_list b0 b1 b0 cNUMERAL cBIT1 c_0 b0 f0
+ |- (!k. (((\k. (((indexl d) (list_pairs f)) = k)) k) ==> ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)))))
T c==> * / c= cindexl f0 clist_pairs f1 b0 f2 cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL
+ |- ((\L. (!d. (((MEM d) (list_of_darts L)) ==> (((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))) L)
T * / ! c==> cMEM b1 clist_of_darts b0 c= csplit_list_hyp b0 b1 ccat ctake cindexl cfind_pair_list b0 b1 b0 b0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl b1 clist_pairs cfind_pair_list b0 b1 cfind_pair_list b0 b1 cdropl c+ cindexl cfind_pair_list b0 b1 b0 cNUMERAL cBIT1 c_0 b0 f0
+ |- ((perm_eq ((cat (list_pairs f)) NIL)) ((cat (list_pairs ((rotr (NUMERAL (BIT1 _0))) ((rot k) f)))) NIL))
T cperm_eq ccat clist_pairs f0 cNIL ccat clist_pairs crotr cNUMERAL cBIT1 c_0 crot f1 f0 cNIL
- |- ((!d. t) = t)
T c= ! f0 f0
+ |- ((\s2. ((list_of_darts ((cat s1) s2)) = ((cat (list_of_darts s1)) (list_of_darts s2)))) s2)
T * / c= clist_of_darts ccat f0 b0 ccat clist_of_darts f0 clist_of_darts b0 f1
+ |- ((\P. (P = ((ssreflect_eq mem_d) P))) P)
T * / c= b0 cssreflect_eq f0 b0 f1
+ |- ((perm_eq (((\list. (\a. ((cat (list_pairs list)) a))) f) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) NIL))) (((\list. (\a. ((cat (list_pairs list)) a))) ((rotr (NUMERAL (BIT1 _0))) ((rot k) f))) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) NIL)))
T cperm_eq * * / / ccat clist_pairs b0 b1 f0 cfoldr / / ccat clist_pairs b0 b1 cNIL cNIL * * / / ccat clist_pairs b0 b1 crotr cNUMERAL cBIT1 c_0 crot f1 f0 cfoldr / / ccat clist_pairs b0 b1 cNIL cNIL
+ |- ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts (((COND T) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((CONS ((CONS (HD ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))))) NIL)))))
T cperm_eq clist_of_darts cCONS f0 cNIL clist_of_darts cCOND cT cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cCONS cCONS cHD crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cdropl cNUMERAL cBIT0 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL
+ |- ((\s. (((cat s) NIL) = s)) s)
T * / c= ccat b0 cNIL b0 f0
+ |- ((\s2. (!s3. (((perm_eq ((cat s1) s2)) ((cat s1) s3)) = ((perm_eq s2) s3)))) s2)
T * / ! c= cperm_eq ccat f0 b0 ccat f0 b1 cperm_eq b0 b1 f1
+ (((find_pair_list L) d) = f), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((((\f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) f') ==> ((perm_eq (list_of_darts ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take n) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))) = T)
T c==> c= cfind_pair_list f0 f1 f2 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= c==> * / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 b0 f3 cperm_eq clist_of_darts ccat ctake f4 f0 ccat cCONS f2 cNIL cdropl c+ f4 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake f4 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cdropl c+ f4 cNUMERAL cBIT1 c_0 f0 cT
- ((MEM d) (list_of_darts L)) |- (((MEM d) (list_of_darts L)) /\ (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))
T c==> cMEM f0 clist_of_darts f1 c/\ cMEM f0 clist_of_darts f1 c= f1 ccat ctake cindexl cfind_pair_list f1 f0 f1 f1 ccat cCONS cfind_pair_list f1 f0 cNIL cdropl c+ cindexl cfind_pair_list f1 f0 f1 cNUMERAL cBIT1 c_0 f1
+ |- ((perm_eq (list_pairs f)) ((cat (list_pairs ((rotr (NUMERAL (BIT1 _0))) ((rot k) f)))) NIL))
T cperm_eq clist_pairs f0 ccat clist_pairs crotr cNUMERAL cBIT1 c_0 crot f1 f0 cNIL
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (((MEM d) (list_of_darts L)) /\ ((((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 c/\ cMEM f1 clist_of_darts f0 c==> c= csplit_list_hyp f0 f1 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
+ (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) |- ((\s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3))) s3)
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 * / c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 f3
+ (((split_list_hyp L) d) = L) |- ((((split_list_hyp L) d) = L) /\ ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))
T c==> c= csplit_list_hyp f0 f1 f0 c/\ c= csplit_list_hyp f0 f1 f0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
- ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cT
+ |- (((!s2. (!s3. (((perm_eq ((cat s2) s1)) ((cat s3) s1)) = ((perm_eq s2) s3)))) ==> ((\s2. (!s3. (((perm_eq ((cat s2) s1)) ((cat s3) s1)) = ((perm_eq s2) s3)))) s2)) = ((\s2. (!s3. (((perm_eq ((cat s2) s1)) ((cat s3) s1)) = ((perm_eq s2) s3)))) s2))
T c= c==> ! ! c= cperm_eq ccat b0 f0 ccat b1 f0 cperm_eq b0 b1 * / ! c= cperm_eq ccat b0 f0 ccat b1 f0 cperm_eq b0 b1 f1 * / ! c= cperm_eq ccat b0 f0 ccat b1 f0 cperm_eq b0 b1 f1
+ |- ((!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) ==> ((perm_eq (list_pairs f)) ((rot ((sizel f) - (NUMERAL (BIT1 _0)))) ((rot k) (list_pairs f)))))
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 cperm_eq clist_pairs f1 crot c- csizel f1 cNUMERAL cBIT1 c_0 crot f0 clist_pairs f1
+ (((find_pair_list L) d) = f), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f') ==> ((perm_eq (list_of_darts ((cat ((take n) L)) ((cat ((CONS f) NIL)) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take n) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (n + (NUMERAL (BIT1 _0)))) L))))))
T c==> c= cfind_pair_list f0 f1 f2 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 f3 cperm_eq clist_of_darts ccat ctake f4 f0 ccat cCONS f2 cNIL cdropl c+ f4 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake f4 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cdropl c+ f4 cNUMERAL cBIT1 c_0 f0
+ |- (((!s2. (!s3. (((perm_eq ((cat s1) s2)) ((cat s1) s3)) = ((perm_eq s2) s3)))) ==> ((\s2. (!s3. (((perm_eq ((cat s1) s2)) ((cat s1) s3)) = ((perm_eq s2) s3)))) s2)) = ((\s2. (!s3. (((perm_eq ((cat s1) s2)) ((cat s1) s3)) = ((perm_eq s2) s3)))) s2))
T c= c==> ! ! c= cperm_eq ccat f0 b0 ccat f0 b1 cperm_eq b0 b1 * / ! c= cperm_eq ccat f0 b0 ccat f0 b1 cperm_eq b0 b1 f1 * / ! c= cperm_eq ccat f0 b0 ccat f0 b1 cperm_eq b0 b1 f1
+ |- ((((find_pair_list L) d) = ((find_pair_list L) d)) = ((\f. (((find_pair_list L) d) = f)) ((find_pair_list L) d)))
T c= c= cfind_pair_list f0 f1 cfind_pair_list f0 f1 * / c= cfind_pair_list f0 f1 b0 cfind_pair_list f0 f1
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- ((((MEM d) (list_of_darts L)) ==> (((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 c==> c==> cMEM f1 clist_of_darts f0 c= csplit_list_hyp f0 f1 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
+ |- (((perm_eq (((\list. (\a. ((cat (list_pairs list)) a))) f) NIL)) (((\list. (\a. ((cat (list_pairs list)) a))) ((rotr (NUMERAL (BIT1 _0))) ((rot k) f))) NIL)) = ((perm_eq (((\list. (\a. ((cat (list_pairs list)) a))) f) NIL)) (((\list. (\a. ((cat (list_pairs list)) a))) ((rotr (NUMERAL (BIT1 _0))) ((rot k) f))) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) NIL))))
T c= cperm_eq * * / / ccat clist_pairs b0 b1 f0 cNIL * * / / ccat clist_pairs b0 b1 crotr cNUMERAL cBIT1 c_0 crot f1 f0 cNIL cperm_eq * * / / ccat clist_pairs b0 b1 f0 cNIL * * / / ccat clist_pairs b0 b1 crotr cNUMERAL cBIT1 c_0 crot f1 f0 cfoldr / / ccat clist_pairs b0 b1 cNIL cNIL
+ |- ((T /\ ((perm_eq ((rot ((sizel f) - (NUMERAL (BIT1 _0)))) ((rot k) (list_pairs f)))) ((rot k) (list_pairs f)))) = (T /\ ((perm_eq ((rot k) (list_pairs f))) ((rot ((sizel f) - (NUMERAL (BIT1 _0)))) ((rot k) (list_pairs f))))))
T c= c/\ cT cperm_eq crot c- csizel f0 cNUMERAL cBIT1 c_0 crot f1 clist_pairs f0 crot f1 clist_pairs f0 c/\ cT cperm_eq crot f1 clist_pairs f0 crot c- csizel f0 cNUMERAL cBIT1 c_0 crot f1 clist_pairs f0
+ (((find_pair_list L) d) = f), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts (((COND T) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((CONS ((CONS (HD ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))))) NIL))))) = ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts (((COND ((sizel f) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((CONS ((CONS (HD ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))))) NIL))))))
T c==> c= cfind_pair_list f0 f1 f2 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= cperm_eq clist_of_darts cCONS f2 cNIL clist_of_darts cCOND cT cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cCONS cCONS cHD crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cdropl cNUMERAL cBIT0 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cNIL cperm_eq clist_of_darts cCONS f2 cNIL clist_of_darts cCOND c<= csizel f2 cNUMERAL cBIT1 cBIT1 c_0 cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cCONS cCONS cHD crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cdropl cNUMERAL cBIT0 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cNIL
- (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) |- ((!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) /\ (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))))
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c/\ ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1
+ |- (((!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 b0 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 b0 f4 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 b0 f4
+ |- (((!P. (((ssreflect_eq v) P) = P)) ==> ((\P. (((ssreflect_eq v) P) = P)) P)) = ((\P. (((ssreflect_eq v) P) = P)) P))
T c= c==> ! c= cssreflect_eq f0 b0 b0 * / c= cssreflect_eq f0 b0 b0 f1 * / c= cssreflect_eq f0 b0 b0 f1
- ((\f. (((find_pair_list L) d) = f)) f) |- (((((find_pair_list L) d) = f) ==> (?f. (((find_pair_list L) d) = f))) = (?f. (((find_pair_list L) d) = f)))
T c==> * / c= cfind_pair_list f0 f1 b0 f2 c= c==> c= cfind_pair_list f0 f1 f2 c? / c= cfind_pair_list f0 f1 b0 c? / c= cfind_pair_list f0 f1 b0
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) /\ (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))) ==> (!x. (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))))) = (!x. (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= c==> c/\ c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 cT cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1 c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 cF cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1 ! c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 b0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1 ! c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 b0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (!f. (((\f. (((find_pair_list L) d) = f)) f) ==> ((perm_eq (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 ! c==> * / c= cfind_pair_list f0 f1 b1 b0 cperm_eq clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
- ((\k. (((indexl d) (list_pairs f)) = k)) k) |- (((\k. (((indexl d) (list_pairs f)) = k)) k) /\ (?k. (((indexl d) (list_pairs f)) = k)))
T c==> * / c= cindexl f0 clist_pairs f1 b0 f2 c/\ * / c= cindexl f0 clist_pairs f1 b0 f2 c? / c= cindexl f0 clist_pairs f1 b0
+ (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) /\ ((perm_eq (list_of_darts L)) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))
T c==> c= f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cperm_eq clist_of_darts f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
+ |- ((\P. (((ssreflect_eq v) P) = P)) P)
T * / c= cssreflect_eq f0 b0 b0 f1
- |- ((\p'. (!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b1 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> b0 b1 f3
- |- ((((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f') ==> (?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')))
T c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0
+ |- ((\f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))
T * / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1
+ |- (((!s. ((sizel ((rotr n0) s)) = (sizel s))) ==> ((\s. ((sizel ((rotr n0) s)) = (sizel s))) s)) = ((\s. ((sizel ((rotr n0) s)) = (sizel s))) s))
T c= c==> ! c= csizel crotr f0 b0 csizel b0 * / c= csizel crotr f0 b0 csizel b0 f1 * / c= csizel crotr f0 b0 csizel b0 f1
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
+ (((find_pair_list L) d) = f), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((!x. (((\n. (((indexl f) L) = n)) x) ==> ((perm_eq (list_of_darts ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L))))))) ==> ((?n. (((indexl f) L) = n)) ==> ((perm_eq (list_of_darts ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L))))))) = ((?n. (((indexl f) L) = n)) ==> ((perm_eq (list_of_darts ((cat ((take ((indexl f) L)) L)) ((cat ((CONS f) NIL)) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take ((indexl f) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (((indexl f) L) + (NUMERAL (BIT1 _0)))) L)))))))
T c==> c= cfind_pair_list f0 f1 f2 c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= c==> ! c==> * / c= cindexl f2 f0 b1 b0 cperm_eq clist_of_darts ccat ctake cindexl f2 f0 f0 ccat cCONS f2 cNIL cdropl c+ cindexl f2 f0 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake cindexl f2 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cdropl c+ cindexl f2 f0 cNUMERAL cBIT1 c_0 f0 c==> c? / c= cindexl f2 f0 b0 cperm_eq clist_of_darts ccat ctake cindexl f2 f0 f0 ccat cCONS f2 cNIL cdropl c+ cindexl f2 f0 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake cindexl f2 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cdropl c+ cindexl f2 f0 cNUMERAL cBIT1 c_0 f0 c==> c? / c= cindexl f2 f0 b0 cperm_eq clist_of_darts ccat ctake cindexl f2 f0 f0 ccat cCONS f2 cNIL cdropl c+ cindexl f2 f0 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake cindexl f2 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 cdropl c+ cindexl f2 f0 cNUMERAL cBIT1 c_0 f0
+ |- (((!s3. (((perm_eq ((cat s1) s2)) ((cat s1) s3)) = ((perm_eq s2) s3))) ==> ((\s3. (((perm_eq ((cat s1) s2)) ((cat s1) s3)) = ((perm_eq s2) s3))) s3)) = ((\s3. (((perm_eq ((cat s1) s2)) ((cat s1) s3)) = ((perm_eq s2) s3))) s3))
T c= c==> ! c= cperm_eq ccat f0 f1 ccat f0 b0 cperm_eq f1 b0 * / c= cperm_eq ccat f0 f1 ccat f0 b0 cperm_eq f1 b0 f2 * / c= cperm_eq ccat f0 f1 ccat f0 b0 cperm_eq f1 b0 f2
+ |- (((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL))) = ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts (((COND T) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((CONS ((CONS (HD ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))))) NIL))))))
T c= cperm_eq clist_of_darts cCONS f0 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cperm_eq clist_of_darts cCONS f0 cNIL clist_of_darts cCOND cT cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cCONS cCONS cHD crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cdropl cNUMERAL cBIT0 cBIT1 c_0 crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL
+ |- (((((MEM d) (list_of_darts L)) ==> (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))) = ((perm_eq (list_of_darts L)) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))
T c= c==> c==> cMEM f0 clist_of_darts f1 c= f1 ccat ctake cindexl cfind_pair_list f1 f0 f1 f1 ccat cCONS cfind_pair_list f1 f0 cNIL cdropl c+ cindexl cfind_pair_list f1 f0 f1 cNUMERAL cBIT1 c_0 f1 cperm_eq clist_of_darts f1 clist_of_darts ccat ctake cindexl cfind_pair_list f1 f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs cfind_pair_list f1 f0 cfind_pair_list f1 f0 cdropl c+ cindexl cfind_pair_list f1 f0 f1 cNUMERAL cBIT1 c_0 f1 cperm_eq clist_of_darts f1 clist_of_darts ccat ctake cindexl cfind_pair_list f1 f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs cfind_pair_list f1 f0 cfind_pair_list f1 f0 cdropl c+ cindexl cfind_pair_list f1 f0 f1 cNUMERAL cBIT1 c_0 f1
+ |- (T /\ ((perm_eq ((rot k) (list_pairs f))) ((rot ((sizel f) - (NUMERAL (BIT1 _0)))) ((rot k) (list_pairs f)))))
T c/\ cT cperm_eq crot f0 clist_pairs f1 crot c- csizel f1 cNUMERAL cBIT1 c_0 crot f0 clist_pairs f1
- |- (((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L))))) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> q')))) = ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> q'))))
T c= c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 f3 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 f3 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3
- ((\k. (((indexl d) (list_pairs f)) = k)) k) |- (((((indexl d) (list_pairs f)) = k) ==> (?k. (((indexl d) (list_pairs f)) = k))) = (?k. (((indexl d) (list_pairs f)) = k)))
T c==> * / c= cindexl f0 clist_pairs f1 b0 f2 c= c==> c= cindexl f0 clist_pairs f1 f2 c? / c= cindexl f0 clist_pairs f1 b0 c? / c= cindexl f0 clist_pairs f1 b0
+ ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- ((((~ ((MEM d) (list_of_darts L))) /\ ((((split_list_hyp L) d) = L) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))) ==> (((~ ((MEM d) (list_of_darts L))) ==> (((split_list_hyp L) d) = L)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))) = (((~ ((MEM d) (list_of_darts L))) ==> (((split_list_hyp L) d) = L)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= c==> c/\ c~ cMEM f1 clist_of_darts f2 c==> c= csplit_list_hyp f2 f1 f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> c==> c~ cMEM f1 clist_of_darts f2 c= csplit_list_hyp f2 f1 f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> c==> c~ cMEM f1 clist_of_darts f2 c= csplit_list_hyp f2 f1 f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1
+ (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f'), (((find_pair_list L) d) = f), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((perm_eq ((cat (list_of_darts ((take n) L))) ((cat (list_of_darts ((CONS f) NIL))) (list_of_darts ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take n) L)) ((cat (split_list_face f')) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 c==> c= cfind_pair_list f3 f0 f1 c==> c<= csizel cfind_pair_list f3 f0 cNUMERAL cBIT1 cBIT1 c_0 cperm_eq ccat clist_of_darts ctake f4 f3 ccat clist_of_darts cCONS f1 cNIL clist_of_darts cdropl c+ f4 cNUMERAL cBIT1 c_0 f3 clist_of_darts ccat ctake f4 f3 ccat csplit_list_face f2 cdropl c+ f4 cNUMERAL cBIT1 c_0 f3
+ ((\f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) f') |- (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')
T c==> * / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 f2 c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2
+ ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (((((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((MEM d) (list_of_darts L)) /\ ((((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))))
T c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= c==> c= csplit_list_hyp f2 f1 ccat ctake cindexl cfind_pair_list f2 f1 f2 f2 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f2 f1 cfind_pair_list f2 f1 cdropl c+ cindexl cfind_pair_list f2 f1 f2 cNUMERAL cBIT1 c_0 f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c/\ cMEM f1 clist_of_darts f2 c==> c= csplit_list_hyp f2 f1 ccat ctake cindexl cfind_pair_list f2 f1 f2 f2 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f2 f1 cfind_pair_list f2 f1 cdropl c+ cindexl cfind_pair_list f2 f1 f2 cNUMERAL cBIT1 c_0 f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1
- |- (((!x. (((\k. (((indexl d) (list_pairs f)) = k)) x) ==> (?k. (((indexl d) (list_pairs f)) = k)))) ==> ((?k. (((indexl d) (list_pairs f)) = k)) ==> (?k. (((indexl d) (list_pairs f)) = k)))) = ((?k. (((indexl d) (list_pairs f)) = k)) ==> (?k. (((indexl d) (list_pairs f)) = k))))
T c= c==> ! c==> * / c= cindexl f0 clist_pairs f1 b1 b0 c? / c= cindexl f0 clist_pairs f1 b1 c==> c? / c= cindexl f0 clist_pairs f1 b0 c? / c= cindexl f0 clist_pairs f1 b0 c==> c? / c= cindexl f0 clist_pairs f1 b0 c? / c= cindexl f0 clist_pairs f1 b0
- |- ((\p'. (!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> b0 b1 f3
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((((MEM d) (list_of_darts L)) = x) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> c= cMEM f1 clist_of_darts f0 f2 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
- (~ ((MEM d) (list_of_darts L))) |- ((~ ((MEM d) (list_of_darts L))) /\ (((split_list_hyp L) d) = L))
T c==> c~ cMEM f0 clist_of_darts f1 c/\ c~ cMEM f0 clist_of_darts f1 c= csplit_list_hyp f1 f0 f1
+ ((\n. (((indexl f) L) = n)) n) |- (((indexl f) L) = n)
T c==> * / c= cindexl f0 f1 b0 f2 c= cindexl f0 f1 f2
+ |- (((?k. (((indexl d) (list_pairs f)) = k)) ==> ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)))) = ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL))))
T c= c==> c? / c= cindexl f0 clist_pairs f1 b0 cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL
+ |- ((((indexl d) (list_pairs f)) = k) ==> ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL))))
T c==> c= cindexl f0 clist_pairs f1 f2 cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNIL
- (((find_pair_list L) d) = f) |- ((\f. (((find_pair_list L) d) = f)) f)
T c==> c= cfind_pair_list f0 f1 f2 * / c= cfind_pair_list f0 f1 b0 f2
+ |- ((((~ ((MEM d) (list_of_darts L))) ==> (((split_list_hyp L) d) = L)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))
T c= c==> c==> c~ cMEM f0 clist_of_darts f1 c= csplit_list_hyp f1 f0 f1 cperm_eq clist_of_darts f1 clist_of_darts csplit_list_hyp f1 f0 cperm_eq clist_of_darts f1 clist_of_darts csplit_list_hyp f1 f0
- |- (((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L)))) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> q')))) = ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> q'))))
T c= c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 cssreflect_eq f0 cMEM f1 clist_of_darts f2 c==> c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 f3 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3 c==> c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 f3 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3
+ (((MEM d) (list_of_darts L)) = x), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))
T c==> c= cMEM f0 clist_of_darts f1 f2 c==> c<= csizel cfind_pair_list f1 f0 cNUMERAL cBIT1 cBIT1 c_0 cperm_eq clist_of_darts f1 clist_of_darts csplit_list_hyp f1 f0
+ |- (((!n. ((list_pairs ((rot n) s)) = ((rot n) (list_pairs s)))) ==> ((\n. ((list_pairs ((rot n) s)) = ((rot n) (list_pairs s)))) n)) = ((\n. ((list_pairs ((rot n) s)) = ((rot n) (list_pairs s)))) n))
T c= c==> ! c= clist_pairs crot b0 f0 crot b0 clist_pairs f0 * / c= clist_pairs crot b0 f0 crot b0 clist_pairs f0 f1 * / c= clist_pairs crot b0 f0 crot b0 clist_pairs f0 f1
- |- ((((indexl d) (list_pairs f)) = k) = ((\k. (((indexl d) (list_pairs f)) = k)) k))
T c= c= cindexl f0 clist_pairs f1 f2 * / c= cindexl f0 clist_pairs f1 b0 f2
+ |- (((perm_eq (((\list. (\a. ((cat (list_pairs list)) a))) f) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) NIL))) (((\list. (\a. ((cat (list_pairs list)) a))) ((rotr (NUMERAL (BIT1 _0))) ((rot k) f))) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) NIL))) = ((perm_eq (((\list. (\a. ((cat (list_pairs list)) a))) f) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) NIL))) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot k) f))) NIL))))
T c= cperm_eq * * / / ccat clist_pairs b0 b1 f0 cfoldr / / ccat clist_pairs b0 b1 cNIL cNIL * * / / ccat clist_pairs b0 b1 crotr cNUMERAL cBIT1 c_0 crot f1 f0 cfoldr / / ccat clist_pairs b0 b1 cNIL cNIL cperm_eq * * / / ccat clist_pairs b0 b1 f0 cfoldr / / ccat clist_pairs b0 b1 cNIL cNIL cfoldr / / ccat clist_pairs b0 b1 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot f1 f0 cNIL
- ((\f. (((find_pair_list L) d) = f)) f) |- (((\f. (((find_pair_list L) d) = f)) f) /\ (?f. (((find_pair_list L) d) = f)))
T c==> * / c= cfind_pair_list f0 f1 b0 f2 c/\ * / c= cfind_pair_list f0 f1 b0 f2 c? / c= cfind_pair_list f0 f1 b0
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((((\f. (((find_pair_list L) d) = f)) f) ==> ((perm_eq (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))) = T)
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= c==> * / c= cfind_pair_list f0 f1 b0 f2 cperm_eq clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cT
+ |- (?x. (((MEM d) (list_of_darts L)) = x))
T c? / c= cMEM f0 clist_of_darts f1 b0
- |- ((((indexl f) L) = n) ==> (?n. (((indexl f) L) = n)))
T c==> c= cindexl f0 f1 f2 c? / c= cindexl f0 f1 b0
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (!x. (P x))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF ! * f0 b0
+ |- (((perm_eq ((cat (list_pairs f)) NIL)) ((cat (list_pairs ((rotr (NUMERAL (BIT1 _0))) ((rot k) f)))) NIL)) = ((perm_eq (((\list. (\a. ((cat (list_pairs list)) a))) f) NIL)) (((\list. (\a. ((cat (list_pairs list)) a))) ((rotr (NUMERAL (BIT1 _0))) ((rot k) f))) NIL)))
T c= cperm_eq ccat clist_pairs f0 cNIL ccat clist_pairs crotr cNUMERAL cBIT1 c_0 crot f1 f0 cNIL cperm_eq * * / / ccat clist_pairs b0 b1 f0 cNIL * * / / ccat clist_pairs b0 b1 crotr cNUMERAL cBIT1 c_0 crot f1 f0 cNIL
+ (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f') |- (((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts (((COND ((sizel ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS f') NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f')) ((CONS ((CONS (HD f')) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f'))) NIL))))) = ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts (((COND ((sizel f') <= (NUMERAL (BIT1 (BIT1 _0))))) ((CONS f') NIL)) ((CONS ((take (NUMERAL (BIT1 (BIT1 _0)))) f')) ((CONS ((CONS (HD f')) ((dropl (NUMERAL (BIT0 (BIT1 _0)))) f'))) NIL))))))
T c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 c= cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCOND c<= csizel crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS f2 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 f2 cCONS cCONS cHD f2 cdropl cNUMERAL cBIT0 cBIT1 c_0 f2 cNIL cperm_eq clist_of_darts cCONS f1 cNIL clist_of_darts cCOND c<= csizel f2 cNUMERAL cBIT1 cBIT1 c_0 cCONS f2 cNIL cCONS ctake cNUMERAL cBIT1 cBIT1 c_0 f2 cCONS cCONS cHD f2 cdropl cNUMERAL cBIT0 cBIT1 c_0 f2 cNIL
+ (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) |- (((!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3))) ==> ((\s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3))) s3)) = ((\s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3))) s3))
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c= c==> ! c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 * / c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 f3 * / c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 f3
+ |- ((\L. ((list_of_darts L) = (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L))) L)
T * / c= clist_of_darts b0 cfoldr / / ccat clist_pairs b1 b2 cNIL b0 f0
+ |- (((!s. (((cat s) NIL) = s)) ==> ((\s. (((cat s) NIL) = s)) s)) = ((\s. (((cat s) NIL) = s)) s))
T c= c==> ! c= ccat b0 cNIL b0 * / c= ccat b0 cNIL b0 f0 * / c= ccat b0 cNIL b0 f0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- ((\x. (((MEM d) (list_of_darts L)) = x)) x) |- (((\x. (((MEM d) (list_of_darts L)) = x)) x) /\ (?x. (((MEM d) (list_of_darts L)) = x)))
T c==> * / c= cMEM f0 clist_of_darts f1 b0 f2 c/\ * / c= cMEM f0 clist_of_darts f1 b0 f2 c? / c= cMEM f0 clist_of_darts f1 b0
- |- ((\z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))) z0)
T * / c/\ c= cfoldr f0 b0 cCONS f1 f2 * * f0 f1 cfoldr f0 b0 f2 c= cfoldr f0 b0 cNIL b0 f3
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (((((MEM d) (list_of_darts L)) /\ ((L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))) ==> ((((MEM d) (list_of_darts L)) ==> (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))) = ((((MEM d) (list_of_darts L)) ==> (L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 c= c==> c/\ cMEM f1 clist_of_darts f0 c==> c= f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cperm_eq clist_of_darts f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 c==> c==> cMEM f1 clist_of_darts f0 c= f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cperm_eq clist_of_darts f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 c==> c==> cMEM f1 clist_of_darts f0 c= f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cperm_eq clist_of_darts f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))), ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (((MEM d) (list_of_darts L)) /\ ((L = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 c/\ cMEM f1 clist_of_darts f0 c==> c= f0 ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 cperm_eq clist_of_darts f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
- (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) |- (((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)) = T)
T c==> ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c= c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 f3 cperm_eq f2 f3 cT
+ |- ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = F)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> q')))
T c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 f3 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cF cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3
- (((MEM d) (list_of_darts L)) = x) |- (x = ((MEM d) (list_of_darts L)))
T c==> c= cMEM f0 clist_of_darts f1 f2 c= f2 cMEM f0 clist_of_darts f1
+ (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f') |- (f' = ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)))
T c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 c= f2 crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1
+ |- ((((split_list_hyp L) d) = L) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))
T c==> c= csplit_list_hyp f0 f1 f0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
- (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))), ((perm_eq s1) ((rot k) (list_pairs f))) |- (((perm_eq s1) ((rot k) (list_pairs f))) /\ (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3)))
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c==> cperm_eq f2 crot f0 clist_pairs f1 c/\ cperm_eq f2 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 f3 cperm_eq f2 f3
+ |- ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> q')))
T c==> c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 f3 c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3
- (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))), (((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) |- ((!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) /\ ((perm_eq s1) s3))
T c==> ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 f3 c/\ ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 cperm_eq f2 f3
- |- ((!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) ==> (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))))
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((perm_eq (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cperm_eq clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
+ |- ((\s2. (!s3. (((perm_eq ((cat s2) s1)) ((cat s3) s1)) = ((perm_eq s2) s3)))) s2)
T * / ! c= cperm_eq ccat b0 f0 ccat b1 f0 cperm_eq b0 b1 f1
+ |- ((perm_eq (list_of_darts ((CONS f) NIL))) (list_of_darts ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) NIL)))
T cperm_eq clist_of_darts cCONS f0 cNIL clist_of_darts cCONS crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f0 f0 cNIL
+ |- ((((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = T)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))))
T c= c==> cssreflect_eq f0 c= cMEM f1 clist_of_darts f2 cT cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1
+ |- (((perm_eq (((\list. (\a. ((cat (list_pairs list)) a))) f) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) NIL))) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot k) f))) NIL))) = ((perm_eq (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) ((CONS f) NIL))) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) ((CONS ((rotr (NUMERAL (BIT1 _0))) ((rot k) f))) NIL))))
T c= cperm_eq * * / / ccat clist_pairs b0 b1 f0 cfoldr / / ccat clist_pairs b0 b1 cNIL cNIL cfoldr / / ccat clist_pairs b0 b1 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot f1 f0 cNIL cperm_eq cfoldr / / ccat clist_pairs b0 b1 cNIL cCONS f0 cNIL cfoldr / / ccat clist_pairs b0 b1 cNIL cCONS crotr cNUMERAL cBIT1 c_0 crot f1 f0 cNIL
+ |- (((!L. ((list_of_darts L) = (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L))) ==> ((\L. ((list_of_darts L) = (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L))) L)) = ((\L. ((list_of_darts L) = (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L))) L))
T c= c==> ! c= clist_of_darts b0 cfoldr / / ccat clist_pairs b1 b2 cNIL b0 * / c= clist_of_darts b0 cfoldr / / ccat clist_pairs b1 b2 cNIL b0 f0 * / c= clist_of_darts b0 cfoldr / / ccat clist_pairs b1 b2 cNIL b0 f0
- ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- (((~ ((MEM d) (list_of_darts L))) ==> (((MEM d) (list_of_darts L)) = F)) = (((MEM d) (list_of_darts L)) = F))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= c==> c~ cMEM f1 clist_of_darts f2 c= cMEM f1 clist_of_darts f2 cF c= cMEM f1 clist_of_darts f2 cF
- |- ((\f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))) f)
T * / ! c/\ c= cfoldr b0 b1 cCONS f0 f1 * * b0 f0 cfoldr b0 b1 f1 c= cfoldr b0 b1 cNIL b1 f2
+ |- ((T /\ ((perm_eq ((rot k) (list_pairs f))) ((rot ((sizel f) - (NUMERAL (BIT1 _0)))) ((rot k) (list_pairs f))))) = (((perm_eq ((rot k) (list_pairs f))) (list_pairs f)) /\ ((perm_eq ((rot k) (list_pairs f))) ((rot ((sizel f) - (NUMERAL (BIT1 _0)))) ((rot k) (list_pairs f))))))
T c= c/\ cT cperm_eq crot f0 clist_pairs f1 crot c- csizel f1 cNUMERAL cBIT1 c_0 crot f0 clist_pairs f1 c/\ cperm_eq crot f0 clist_pairs f1 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 crot c- csizel f1 cNUMERAL cBIT1 c_0 crot f0 clist_pairs f1
+ (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f'), (((find_pair_list L) d) = f), ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- ((perm_eq ((cat (list_of_darts ((take n) L))) ((cat (list_of_darts ((CONS f) NIL))) (list_of_darts ((dropl (n + (NUMERAL (BIT1 _0)))) L))))) ((cat (list_of_darts ((take n) L))) (list_of_darts ((cat (split_list_face f')) ((dropl (n + (NUMERAL (BIT1 _0)))) L)))))
T c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 c==> c= cfind_pair_list f3 f0 f1 c==> c<= csizel cfind_pair_list f3 f0 cNUMERAL cBIT1 cBIT1 c_0 cperm_eq ccat clist_of_darts ctake f4 f3 ccat clist_of_darts cCONS f1 cNIL clist_of_darts cdropl c+ f4 cNUMERAL cBIT1 c_0 f3 ccat clist_of_darts ctake f4 f3 clist_of_darts ccat csplit_list_face f2 cdropl c+ f4 cNUMERAL cBIT1 c_0 f3
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((\f. (((find_pair_list L) d) = f)) f) ==> ((perm_eq (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat ((CONS ((find_pair_list L) d)) NIL)) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))) (list_of_darts ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L))))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> * / c= cfind_pair_list f0 f1 b0 f2 cperm_eq clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat cCONS cfind_pair_list f0 f1 cNIL cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0 clist_of_darts ccat ctake cindexl cfind_pair_list f0 f1 f0 f0 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs cfind_pair_list f0 f1 cfind_pair_list f0 f1 cdropl c+ cindexl cfind_pair_list f0 f1 f0 cNUMERAL cBIT1 c_0 f0
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> cssreflect_eq f2 cMEM f1 clist_of_darts f0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((perm_eq (list_of_darts ((split_list_hyp L) d))) (list_of_darts L)))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 cperm_eq clist_of_darts csplit_list_hyp f0 f1 clist_of_darts f0
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((!x. (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))) ==> ((\x. (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))) x)) = ((\x. (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))) x))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c= c==> ! c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 b0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1 * / c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 b0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1 f3 * / c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 b0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1 f3
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (((\x. (((MEM d) (list_of_darts L)) = x)) x) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 c==> * / c= cMEM f1 clist_of_darts f0 b0 f2 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
+ |- (((perm_eq (list_pairs f)) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) ((rot ((sizel f) - (NUMERAL (BIT1 _0)))) ((rot k) (list_pairs f)))))
T c/\ cperm_eq clist_pairs f0 crot f1 clist_pairs f0 cperm_eq crot f1 clist_pairs f0 crot c- csizel f0 cNUMERAL cBIT1 c_0 crot f1 clist_pairs f0
+ (((split_list_hyp L) d) = L) |- (((perm_eq (list_of_darts L)) (list_of_darts L)) = ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))
T c==> c= csplit_list_hyp f0 f1 f0 c= cperm_eq clist_of_darts f0 clist_of_darts f0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
+ ((sizel ((find_pair_list L) d)) <= (NUMERAL (BIT1 (BIT1 _0)))) |- (!x. (((ssreflect_eq mem_d) (((MEM d) (list_of_darts L)) = x)) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))))
T c==> c<= csizel cfind_pair_list f0 f1 cNUMERAL cBIT1 cBIT1 c_0 ! c==> cssreflect_eq f2 c= cMEM f1 clist_of_darts f0 b0 cperm_eq clist_of_darts f0 clist_of_darts csplit_list_hyp f0 f1
- |- ((!s1. (!s2. (((perm_eq s1) s2) = ((perm_eq s2) s1)))) = ((!n. (!s. ((perm_eq ((rot n) s)) s))) /\ (!s1. (!s2. (((perm_eq s1) s2) = ((perm_eq s2) s1))))))
T c= ! ! c= cperm_eq b0 b1 cperm_eq b1 b0 c/\ ! ! cperm_eq crot b0 b1 b1 ! ! c= cperm_eq b0 b1 cperm_eq b1 b0
+ |- (((perm_eq (list_pairs f)) (list_pairs ((rotr (NUMERAL (BIT1 _0))) ((rot k) f)))) = ((perm_eq (list_pairs f)) ((cat (list_pairs ((rotr (NUMERAL (BIT1 _0))) ((rot k) f)))) NIL)))
T c= cperm_eq clist_pairs f0 clist_pairs crotr cNUMERAL cBIT1 c_0 crot f1 f0 cperm_eq clist_pairs f0 ccat clist_pairs crotr cNUMERAL cBIT1 c_0 crot f1 f0 cNIL
- ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = T)
T c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 cT
- |- ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> q')))
T c==> c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 f3 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3
- |- ((((MEM d) (list_of_darts L)) = x) ==> (?x. (((MEM d) (list_of_darts L)) = x)))
T c==> c= cMEM f0 clist_of_darts f1 f2 c? / c= cMEM f0 clist_of_darts f1 b0
- (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) |- ((\s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3))) s3)
T c==> ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 * / c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 f3
- (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))), ((perm_eq s1) ((rot k) (list_pairs f))) |- (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c==> cperm_eq f2 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 f3 cperm_eq f2 f3
- ((MEM d) (list_of_darts L)) |- (((MEM d) (list_of_darts L)) /\ (((split_list_hyp L) d) = ((cat ((take ((indexl ((find_pair_list L) d)) L)) L)) ((cat (split_list_face ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs ((find_pair_list L) d)))) ((find_pair_list L) d))))) ((dropl (((indexl ((find_pair_list L) d)) L) + (NUMERAL (BIT1 _0)))) L)))))
T c==> cMEM f0 clist_of_darts f1 c/\ cMEM f0 clist_of_darts f1 c= csplit_list_hyp f1 f0 ccat ctake cindexl cfind_pair_list f1 f0 f1 f1 ccat csplit_list_face crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs cfind_pair_list f1 f0 cfind_pair_list f1 f0 cdropl c+ cindexl cfind_pair_list f1 f0 f1 cNUMERAL cBIT1 c_0 f1
- (((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) |- ((!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) ==> ((perm_eq s1) s3))
T c==> c/\ cperm_eq f0 crot f1 clist_pairs f2 cperm_eq crot f1 clist_pairs f2 f3 c==> ! ! c==> c/\ cperm_eq b0 crot f1 clist_pairs f2 cperm_eq crot f1 clist_pairs f2 b1 cperm_eq b0 b1 cperm_eq f0 f3
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- ((\s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))))) s)
T * / ! ! c/\ c= cfoldr b1 b2 cCONS f0 b0 * * b1 f0 cfoldr b1 b2 b0 c= cfoldr b1 b2 cNIL b2 f1
- (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))), (((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) |- ((perm_eq s1) s3)
T c==> ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 f3 cperm_eq f2 f3
- |- (!k. (((\k. (((indexl d) (list_pairs f)) = k)) k) ==> (?k. (((indexl d) (list_pairs f)) = k))))
T c==> * / c= cindexl f0 clist_pairs f1 b0 f2 c? / c= cindexl f0 clist_pairs f1 b0
- |- ((!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) ==> (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))))
T c==> ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1
- |- ((((MEM d) (list_of_darts L)) = x) = ((\x. (((MEM d) (list_of_darts L)) = x)) x))
T c= c= cMEM f0 clist_of_darts f1 f2 * / c= cMEM f0 clist_of_darts f1 b0 f2
- |- ((((\n. (((indexl f) L) = n)) n) ==> (?n. (((indexl f) L) = n))) = T)
T c= c==> * / c= cindexl f0 f1 b0 f2 c? / c= cindexl f0 f1 b0 cT
- |- ((?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) ==> (?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')))
T c==> c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0
- (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))), (((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) |- ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) /\ ((perm_eq s1) s3))
T c==> ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 f3 c/\ c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 f3 cperm_eq f2 f3
- (((indexl d) (list_pairs f)) = k) |- ((((indexl d) (list_pairs f)) = k) /\ (?k. (((indexl d) (list_pairs f)) = k)))
T c==> c= cindexl f0 clist_pairs f1 f2 c/\ c= cindexl f0 clist_pairs f1 f2 c? / c= cindexl f0 clist_pairs f1 b0
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((((P T) /\ (P F)) ==> (!x. (P x))) = T)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c= c==> c/\ * f0 cT * f0 cF ! * f0 b0 cT
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- ((\q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 b0 f4
- ((\f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) f') |- (((((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f') ==> (?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f'))) = (?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')))
T c==> * / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 f2 c= c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0
- (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f') |- ((((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f') /\ (?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')))
T c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 c/\ c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0
- |- (((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))))) = ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))))
T c= c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1
- (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) |- (((!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) ==> (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3))))) = (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))))
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c= c==> ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1
- (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) |- (((!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3))) ==> ((\s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3))) s3)) = ((\s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3))) s3))
T c==> ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c= c==> ! c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 * / c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 f3 * / c==> c/\ cperm_eq f2 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 f3
- (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) |- ((!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) /\ (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))))
T c==> ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c/\ ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1
- |- (((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x))))) = (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c= c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- |- (((!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))) ==> ((\z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))) z0)) = ((\z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))) z0))
T c= c==> ! c/\ c= cfoldr f0 b0 cCONS f1 f2 * * f0 f1 cfoldr f0 b0 f2 c= cfoldr f0 b0 cNIL b0 * / c/\ c= cfoldr f0 b0 cCONS f1 f2 * * f0 f1 cfoldr f0 b0 f2 c= cfoldr f0 b0 cNIL b0 f3 * / c/\ c= cfoldr f0 b0 cCONS f1 f2 * * f0 f1 cfoldr f0 b0 f2 c= cfoldr f0 b0 cNIL b0 f3
- |- ((\q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b0 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 b0 f4
- ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (((MEM d) (list_of_darts L)) = T)
T c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= cMEM f1 clist_of_darts f2 cT
- ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- (T = (~ ((MEM d) (list_of_darts L))))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cT c~ cMEM f1 clist_of_darts f2
- |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) |- (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 ! c==> cperm_eq f2 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0
- |- ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))))
T c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1
- |- ((((indexl d) (list_pairs f)) = k) ==> (?k. (((indexl d) (list_pairs f)) = k)))
T c==> c= cindexl f0 clist_pairs f1 f2 c? / c= cindexl f0 clist_pairs f1 b0
- |- (((!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))))) ==> ((\s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))))) s)) = ((\s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))))) s))
T c= c==> ! ! ! c/\ c= cfoldr b1 b2 cCONS f0 b0 * * b1 f0 cfoldr b1 b2 b0 c= cfoldr b1 b2 cNIL b2 * / ! ! c/\ c= cfoldr b1 b2 cCONS f0 b0 * * b1 f0 cfoldr b1 b2 b0 c= cfoldr b1 b2 cNIL b2 f1 * / ! ! c/\ c= cfoldr b1 b2 cCONS f0 b0 * * b1 f0 cfoldr b1 b2 b0 c= cfoldr b1 b2 cNIL b2 f1
- ((\x. (((MEM d) (list_of_darts L)) = x)) x) |- (((((MEM d) (list_of_darts L)) = x) ==> (?x. (((MEM d) (list_of_darts L)) = x))) = (?x. (((MEM d) (list_of_darts L)) = x)))
T c==> * / c= cMEM f0 clist_of_darts f1 b0 f2 c= c==> c= cMEM f0 clist_of_darts f1 f2 c? / c= cMEM f0 clist_of_darts f1 b0 c? / c= cMEM f0 clist_of_darts f1 b0
- |- ((?k. (((indexl d) (list_pairs f)) = k)) ==> (?k. (((indexl d) (list_pairs f)) = k)))
T c==> c? / c= cindexl f0 clist_pairs f1 b0 c? / c= cindexl f0 clist_pairs f1 b0
- (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) |- ((\s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3)))) s3)
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 * / c==> cperm_eq f2 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 f3
- |- (((!p'. (!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b1 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b1 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> b0 b1 f3 * / ! c==> c= cssreflect_eq f0 cMEM f1 clist_of_darts f2 b0 c==> c==> b0 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 b1 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> b0 b1 f3
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (((P T) /\ (P F)) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ c/\ * f0 cT * f0 cF ! * f0 b0
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- |- (((!x. (((\n. (((indexl f) L) = n)) x) ==> (?n. (((indexl f) L) = n)))) ==> ((?n. (((indexl f) L) = n)) ==> (?n. (((indexl f) L) = n)))) = ((?n. (((indexl f) L) = n)) ==> (?n. (((indexl f) L) = n))))
T c= c==> ! c==> * / c= cindexl f0 f1 b1 b0 c? / c= cindexl f0 f1 b1 c==> c? / c= cindexl f0 f1 b0 c? / c= cindexl f0 f1 b0 c==> c? / c= cindexl f0 f1 b0 c? / c= cindexl f0 f1 b0
- (((MEM d) (list_of_darts L)) = x) |- ((((MEM d) (list_of_darts L)) = x) /\ (?x. (((MEM d) (list_of_darts L)) = x)))
T c==> c= cMEM f0 clist_of_darts f1 f2 c/\ c= cMEM f0 clist_of_darts f1 f2 c? / c= cMEM f0 clist_of_darts f1 b0
- |- (((!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))) ==> ((\f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))) f)) = ((\f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))) f))
T c= c==> ! ! c/\ c= cfoldr b0 b1 cCONS f0 f1 * * b0 f0 cfoldr b0 b1 f1 c= cfoldr b0 b1 cNIL b1 * / ! c/\ c= cfoldr b0 b1 cCONS f0 f1 * * b0 f0 cfoldr b0 b1 f1 c= cfoldr b0 b1 cNIL b1 f2 * / ! c/\ c= cfoldr b0 b1 cCONS f0 f1 * * b0 f0 cfoldr b0 b1 f1 c= cfoldr b0 b1 cNIL b1 f2
- ((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) = F)
T c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cMEM f1 clist_of_darts f2 cF
- (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) |- (((!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3)))) ==> ((\s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3)))) s3)) = ((\s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3)))) s3))
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c= c==> ! c==> cperm_eq f2 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 * / c==> cperm_eq f2 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 f3 * / c==> cperm_eq f2 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 f3
- |- ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> q')))
T c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 f3 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3
- |- (((!x. (!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))))) ==> ((\x. (!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))))) x)) = ((\x. (!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))))) x))
T c= c==> ! ! ! ! c/\ c= cfoldr b2 b3 cCONS b0 b1 * * b2 b0 cfoldr b2 b3 b1 c= cfoldr b2 b3 cNIL b3 * / ! ! ! c/\ c= cfoldr b2 b3 cCONS b0 b1 * * b2 b0 cfoldr b2 b3 b1 c= cfoldr b2 b3 cNIL b3 f0 * / ! ! ! c/\ c= cfoldr b2 b3 cCONS b0 b1 * * b2 b0 cfoldr b2 b3 b1 c= cfoldr b2 b3 cNIL b3 f0
- |- (((!x. (((\f. (((find_pair_list L) d) = f)) x) ==> (?f. (((find_pair_list L) d) = f)))) ==> ((?f. (((find_pair_list L) d) = f)) ==> (?f. (((find_pair_list L) d) = f)))) = ((?f. (((find_pair_list L) d) = f)) ==> (?f. (((find_pair_list L) d) = f))))
T c= c==> ! c==> * / c= cfind_pair_list f0 f1 b1 b0 c? / c= cfind_pair_list f0 f1 b1 c==> c? / c= cfind_pair_list f0 f1 b0 c? / c= cfind_pair_list f0 f1 b0 c==> c? / c= cfind_pair_list f0 f1 b0 c? / c= cfind_pair_list f0 f1 b0
- (((indexl f) L) = n) |- ((\n. (((indexl f) L) = n)) n)
T c==> c= cindexl f0 f1 f2 * / c= cindexl f0 f1 b0 f2
- |- ((((\k. (((indexl d) (list_pairs f)) = k)) k) ==> (?k. (((indexl d) (list_pairs f)) = k))) = T)
T c= c==> * / c= cindexl f0 clist_pairs f1 b0 f2 c? / c= cindexl f0 clist_pairs f1 b0 cT
- ((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) |- (T = ((MEM d) (list_of_darts L)))
T c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= cT cMEM f1 clist_of_darts f2
- (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f') |- ((\f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) f')
T c==> c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 f2 * / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 f2
- |- ((~ F) = T)
T c= c~ cF cT
- |- ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) = p') ==> ((p' ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 f3 c==> c==> f3 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 f4 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> f3 f4
- |- ((!n. (!s. ((perm_eq ((rot n) s)) s))) /\ (!s1. (!s2. (((perm_eq s1) s2) = ((perm_eq s2) s1)))))
T c/\ ! ! cperm_eq crot b0 b1 b1 ! ! c= cperm_eq b0 b1 cperm_eq b1 b0
- |- ((((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_of_darts L)))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))))
T c= c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1
- |- (((!x. (((\x. (((MEM d) (list_of_darts L)) = x)) x) ==> (?x. (((MEM d) (list_of_darts L)) = x)))) ==> ((?x. (((MEM d) (list_of_darts L)) = x)) ==> (?x. (((MEM d) (list_of_darts L)) = x)))) = ((?x. (((MEM d) (list_of_darts L)) = x)) ==> (?x. (((MEM d) (list_of_darts L)) = x))))
T c= c==> ! c==> * / c= cMEM f0 clist_of_darts f1 b1 b0 c? / c= cMEM f0 clist_of_darts f1 b1 c==> c? / c= cMEM f0 clist_of_darts f1 b0 c? / c= cMEM f0 clist_of_darts f1 b0 c==> c? / c= cMEM f0 clist_of_darts f1 b0 c? / c= cMEM f0 clist_of_darts f1 b0
- (!s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) |- ((\s1. (!s3. ((((perm_eq s1) ((rot k) (list_pairs f))) /\ ((perm_eq ((rot k) (list_pairs f))) s3)) ==> ((perm_eq s1) s3)))) s1)
T c==> ! ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 * / ! c==> c/\ cperm_eq b0 crot f0 clist_pairs f1 cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 f2
- (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) |- ((!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3)))) = T)
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c= ! c==> cperm_eq f2 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b0 cperm_eq f2 b0 cT
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- (!n. (((\n. (((indexl f) L) = n)) n) ==> (?n. (((indexl f) L) = n))))
T c==> * / c= cindexl f0 f1 b0 f2 c? / c= cindexl f0 f1 b0
- |- (((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> (((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))) = ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))))) = ((((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d)))) = (((ssreflect_eq mem_d) ((MEM d) (list_of_darts L))) ==> ((perm_eq (list_of_darts L)) (list_of_darts ((split_list_hyp L) d))))))
T c= c==> c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 c= cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c= c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1 c==> cssreflect_eq f0 cMEM f1 clist_of_darts f2 cperm_eq clist_of_darts f2 clist_of_darts csplit_list_hyp f2 f1
- |- ((((\x. (((MEM d) (list_of_darts L)) = x)) x) ==> (?x. (((MEM d) (list_of_darts L)) = x))) = T)
T c= c==> * / c= cMEM f0 clist_of_darts f1 b0 f2 c? / c= cMEM f0 clist_of_darts f1 b0 cT
- |- ((((\f. (((find_pair_list L) d) = f)) f) ==> (?f. (((find_pair_list L) d) = f))) = T)
T c= c==> * / c= cfind_pair_list f0 f1 b0 f2 c? / c= cfind_pair_list f0 f1 b0 cT
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
- |- (((\a. (f a)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (f' = ((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f))) |- (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')
T c==> c= f0 crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 c= crotr cNUMERAL cBIT1 c_0 crot cindexl f1 clist_pairs f2 f2 f0
- (((indexl f) L) = n) |- ((((indexl f) L) = n) /\ (?n. (((indexl f) L) = n)))
T c==> c= cindexl f0 f1 f2 c/\ c= cindexl f0 f1 f2 c? / c= cindexl f0 f1 b0
- ((perm_eq s1) ((rot k) (list_pairs f))) |- ((!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3)))
T c==> cperm_eq f0 crot f1 clist_pairs f2 c==> ! ! c==> cperm_eq b0 crot f1 clist_pairs f2 c==> cperm_eq crot f1 clist_pairs f2 b1 cperm_eq b0 b1 c==> cperm_eq crot f1 clist_pairs f2 f3 cperm_eq f0 f3
- ((\f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) f') |- (((\f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) f') /\ (?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')))
T c==> * / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 f2 c/\ * / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 f2 c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0
- ((\n. (((indexl f) L) = n)) n) |- (((((indexl f) L) = n) ==> (?n. (((indexl f) L) = n))) = (?n. (((indexl f) L) = n)))
T c==> * / c= cindexl f0 f1 b0 f2 c= c==> c= cindexl f0 f1 f2 c? / c= cindexl f0 f1 b0 c? / c= cindexl f0 f1 b0
- |- ((((indexl f) L) = n) = ((\n. (((indexl f) L) = n)) n))
T c= c= cindexl f0 f1 f2 * / c= cindexl f0 f1 b0 f2
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- (!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))), ((perm_eq s1) ((rot k) (list_pairs f))) |- ((!s1. (!s3. (((perm_eq s1) ((rot k) (list_pairs f))) ==> (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3))))) /\ (((perm_eq ((rot k) (list_pairs f))) s3) ==> ((perm_eq s1) s3)))
T c==> ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c==> cperm_eq f2 crot f0 clist_pairs f1 c/\ ! ! c==> cperm_eq b0 crot f0 clist_pairs f1 c==> cperm_eq crot f0 clist_pairs f1 b1 cperm_eq b0 b1 c==> cperm_eq crot f0 clist_pairs f1 f3 cperm_eq f2 f3
- |- ((((\f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f')) f') ==> (?f'. (((rotr (NUMERAL (BIT1 _0))) ((rot ((indexl d) (list_pairs f))) f)) = f'))) = T)
T c= c==> * / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 f2 c? / c= crotr cNUMERAL cBIT1 c_0 crot cindexl f0 clist_pairs f1 f1 b0 cT
- |- ((?n. (((indexl f) L) = n)) ==> (?n. (((indexl f) L) = n)))
T c==> c? / c= cindexl f0 f1 b0 c? / c= cindexl f0 f1 b0
- (((indexl d) (list_pairs f)) = k) |- ((\k. (((indexl d) (list_pairs f)) = k)) k)
T c==> c= cindexl f0 clist_pairs f1 f2 * / c= cindexl f0 clist_pairs f1 b0 f2
