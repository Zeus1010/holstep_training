N Tame_list.index_rot
C |- (!s. (!x. ((((MEM x) s) /\ (~ (x = (HD s)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) s))) = ((indexl x) s)))))
T c==> c/\ cMEM f0 f1 c~ c= f0 cHD f1 c= cSUC cindexl f0 crot cNUMERAL cBIT1 c_0 f1 cindexl f0 f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D HD
A |- ((HD ((CONS h) t)) = h)
T c= cHD cCONS f0 f1 f0
D MEM
A |- ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t))))
T c/\ c= cMEM f0 cNIL cF c= cMEM f0 cCONS f1 f2 c\/ c= f0 f1 cMEM f0 f2
D Seq.cats1
A |- (!s. (!z. (((cat s) ((CONS z) NIL)) = ((rcons s) z))))
T c= ccat f0 cCONS f1 cNIL crcons f0 f1
D Seq.find
A |- (!a. (!x. (!s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s'))))))))
T c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS f1 f2 cCOND * f0 f1 cNUMERAL c_0 cSUC cfind f0 f2
D Seq.find_cat
A |- (!a. (!s1. (!s2. (((find a) ((cat s1) s2)) = (((COND ((has a) s1)) ((find a) s1)) ((sizel s1) + ((find a) s2)))))))
T c= cfind f0 ccat f1 f2 cCOND chas f0 f1 cfind f0 f1 c+ csizel f1 cfind f0 f2
D Seq.pred1
A |- (!a. ((pred1 a) = (\x. (x = a))))
T c= * part cpred1 f0 / c= b0 f0
D Seq.rot1_cons
A |- (!x. (!s. (((rot (NUMERAL (BIT1 _0))) ((CONS x) s)) = ((rcons s) x))))
T c= crot cNUMERAL cBIT1 c_0 cCONS f0 f1 crcons f1 f0
D Seq.has_pred1
A |- (!x. (!s. (((has (pred1 x)) s) = ((MEM x) s))))
T c= chas * part cpred1 f0 f1 cMEM f0 f1
D Seq.index
A |- (!x. ((indexl x) = (find (pred1 x))))
T c= * part cindexl f0 * part cfind * part cpred1 f0
- |- ((~ (_10073923 = _10073924)) \/ ((pred1 _10073923) = (pred1 _10073924)))
T c\/ c~ c= f0 f1 c= * part cpred1 f0 * part cpred1 f1
- |- (((((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))) ==> (((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))))) = (((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))))
T c= c==> c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF
- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- ((\x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) _10073898)
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 * / c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 f3
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ |- (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s'))))
T c= cfind f0 cCONS f1 f2 cCOND * f0 f1 cNUMERAL c_0 cSUC cfind f0 f2
+ |- ((\x. (!s. (((has (pred1 x)) s) = ((MEM x) s)))) x)
T * / ! c= chas * part cpred1 b0 b1 cMEM b0 b1 f0
+ (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))), (~ (x = h)), ((x = h) \/ ((MEM x) t)) |- ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c~ c= f1 f2 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF
+ |- ((\a. (!s1. (!s2. (((find a) ((cat s1) s2)) = (((COND ((has a) s1)) ((find a) s1)) ((sizel s1) + ((find a) s2))))))) a)
T * / ! ! c= cfind b0 ccat b1 b2 cCOND chas b0 b1 cfind b0 b1 c+ csizel b1 cfind b0 b2 f0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (_10073925 = _10073927), (_10073926 = _10073928) |- ((_10073926 = _10073928) /\ (((find _10073925) _10073926) = ((find _10073927) _10073928)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cfind f0 f2 cfind f1 f3
- |- ((~ (h = h)) ==> (h = h))
T c==> c~ c= f0 f0 c= f0 f0
+ |- ((\a. ((pred1 a) = (\x. (x = a)))) a)
T * / c= * part cpred1 b0 / c= b1 b0 f0
- |- ((~ (_10073931 = _10073932)) \/ ((BIT1 _10073931) = (BIT1 _10073932)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) |- ((((x = h) \/ ((MEM x) t)) /\ (~ (x = h))) ==> ((SUC ((find (\x'. (x' = x))) ((rcons t) h))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t)))))
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c/\ c\/ c= f1 f2 cMEM f1 f0 c~ c= f1 f2 c= cSUC cfind / c= b0 f1 crcons f0 f2 cCOND c= f2 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f0
- (_10073925 = _10073927) |- ((_10073926 = _10073928) ==> (((find _10073925) _10073926) = ((find _10073927) _10073928)))
T c==> c= f0 f1 c==> c= f2 f3 c= cfind f0 f2 cfind f1 f3
- (_10073941 = _10073943) |- ((_10073941 = _10073943) /\ ((~ (_10073942 = _10073944)) \/ (((indexl _10073941) _10073942) = ((indexl _10073943) _10073944))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cindexl f0 f2 cindexl f1 f3
+ |- ((\s. (((has (pred1 x)) s) = ((MEM x) s))) s)
T * / c= chas * part cpred1 f0 b0 cMEM f0 b0 f1
+ |- (!h. (((\h. ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) h) ==> F))
T c==> * / c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b1 f1 c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c/\ c= f0 b0 c/\ c~ c= f0 b0 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 f2 cF
- |- ((~ (_10073913 = _10073914)) \/ ((sizel _10073913) = (sizel _10073914)))
T c\/ c~ c= f0 f1 c= csizel f0 csizel f1
+ |- ((\a. (!x. (!s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s')))))))) a)
T * / ! ! c/\ c= cfind b0 cNIL cNUMERAL c_0 c= cfind b0 cCONS b1 b2 cCOND * b0 b1 cNUMERAL c_0 cSUC cfind b0 b2 f0
+ ((\h. ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) h) |- ((((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) ==> F) = F)
T c==> * / c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b1 f1 c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c/\ c= f0 b0 c/\ c~ c= f0 b0 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 f2 c= c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 cF cF
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1
+ |- (T = (!x. ((((MEM x) NIL) /\ (~ (x = (HD NIL)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) NIL))) = ((indexl x) NIL)))))
T c= cT ! c==> c/\ cMEM b0 cNIL c~ c= b0 cHD cNIL c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 cNIL cindexl b0 cNIL
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((\x. (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))))) x)
T * / ! c==> ! c==> c/\ cMEM b2 f0 c~ c= b2 cHD f0 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 f0 cindexl b2 f0 c==> c\/ c= b0 b1 cMEM b0 f0 c==> c~ c= b0 b1 c==> c~ c= cCOND cMEM b0 f0 cfind * part cpred1 b0 f0 c+ csizel f0 cfind * part cpred1 b0 cCONS b1 cNIL cfind * part cpred1 b0 f0 cF f1
- ((x = h) \/ ((MEM x) t)) |- (((x = h) \/ ((MEM x) t)) = T)
T c==> c\/ c= f0 f1 cMEM f0 f2 c= c\/ c= f0 f1 cMEM f0 f2 cT
+ |- (((!a. ((pred1 a) = (\x. (x = a)))) ==> ((\a. ((pred1 a) = (\x. (x = a)))) a)) = ((\a. ((pred1 a) = (\x. (x = a)))) a))
T c= c==> ! c= * part cpred1 b0 / c= b1 b0 * / c= * part cpred1 b0 / c= b1 b0 f0 * / c= * part cpred1 b0 / c= b1 b0 f0
+ |- ((\x'. (x' = a)) = (pred1 a))
T c= / c= b0 f0 * part cpred1 f0
+ |- ((\x. ((indexl x) = (find (pred1 x)))) x)
T * / c= * part cindexl b0 * part cfind * part cpred1 b0 f0
+ |- ((((MEM x) t) = F) ==> ((!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))))) = (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))))
T c==> c= cMEM f0 f1 cF c= ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c\/ c= f0 b0 cMEM f0 f1 c==> c~ c= f0 b0 c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (!x. ((((MEM x) ((CONS h) t)) /\ (~ (x = (HD ((CONS h) t))))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) ((CONS h) t)))) = ((indexl x) ((CONS h) t)))))) = T)
T c= c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 ! c==> c/\ cMEM b0 cCONS f1 f0 c~ c= b0 cHD cCONS f1 f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 cCONS f1 f0 cindexl b0 cCONS f1 f0 cT
- (~ F), ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c/\ c~ cF cF
- (_10073941 = _10073943) |- ((_10073942 = _10073944) ==> (((indexl _10073941) _10073942) = ((indexl _10073943) _10073944)))
T c==> c= f0 f1 c==> c= f2 f3 c= cindexl f0 f2 cindexl f1 f3
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))), (~ (x = h)), ((x = h) \/ ((MEM x) t)) |- ((((COND ((has (\x'. (x' = x))) t)) ((find (\x'. (x' = x))) t)) ((sizel t) + ((find (\x'. (x' = x))) ((CONS h) NIL)))) = ((find (\x'. (x' = x))) t))
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c~ c= f1 f2 c==> c\/ c= f1 f2 cMEM f1 f0 c= cCOND chas / c= b0 f1 f0 cfind / c= b0 f1 f0 c+ csizel f0 cfind / c= b0 f1 cCONS f2 cNIL cfind / c= b0 f1 f0
+ (((MEM x) t) = F) |- ((((MEM x) t) = F) /\ ((!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))))) = (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))))
T c==> c= cMEM f0 f1 cF c/\ c= cMEM f0 f1 cF c= ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c\/ c= f0 b0 cMEM f0 f1 c==> c~ c= f0 b0 c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1
- (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))), (~ (x = h)), (~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))), ((x = h) \/ ((MEM x) t)) |- F
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 c==> c\/ c= f1 f2 cMEM f1 f0 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (~ (((MEM x) t) \/ (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) |- ((~ (((MEM x) t) \/ (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) /\ F)
T c==> c~ c\/ cMEM f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 c/\ c~ c\/ cMEM f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 cF
- |- ((_10073923 = _10073924) ==> ((pred1 _10073923) = (pred1 _10073924)))
T c==> c= f0 f1 c= * part cpred1 f0 * part cpred1 f1
- |- ((_10073919 = _10073921) ==> ((~ (_10073920 = _10073922)) \/ ((_10073919 + _10073920) = (_10073921 + _10073922))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c+ f0 f2 c+ f1 f3
- (_10073923 = _10073924) |- ((_10073923 = _10073924) /\ ((pred1 _10073923) = (pred1 _10073924)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part cpred1 f0 * part cpred1 f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((\a. ((\x. (x = a)) = (pred1 a))) a)
T * / c= / c= b1 b0 * part cpred1 b0 f0
+ |- (((!x. (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))))) ==> ((\x. (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))))) x)) = ((\x. (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))))) x))
T c= c==> ! ! c==> ! c==> c/\ cMEM b2 f0 c~ c= b2 cHD f0 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 f0 cindexl b2 f0 c==> c\/ c= b0 b1 cMEM b0 f0 c==> c~ c= b0 b1 c==> c~ c= cCOND cMEM b0 f0 cfind * part cpred1 b0 f0 c+ csizel f0 cfind * part cpred1 b0 cCONS b1 cNIL cfind * part cpred1 b0 f0 cF * / ! c==> ! c==> c/\ cMEM b2 f0 c~ c= b2 cHD f0 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 f0 cindexl b2 f0 c==> c\/ c= b0 b1 cMEM b0 f0 c==> c~ c= b0 b1 c==> c~ c= cCOND cMEM b0 f0 cfind * part cpred1 b0 f0 c+ csizel f0 cfind * part cpred1 b0 cCONS b1 cNIL cfind * part cpred1 b0 f0 cF f1 * / ! c==> ! c==> c/\ cMEM b2 f0 c~ c= b2 cHD f0 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 f0 cindexl b2 f0 c==> c\/ c= b0 b1 cMEM b0 f0 c==> c~ c= b0 b1 c==> c~ c= cCOND cMEM b0 f0 cfind * part cpred1 b0 f0 c+ csizel f0 cfind * part cpred1 b0 cCONS b1 cNIL cfind * part cpred1 b0 f0 cF f1
+ |- ((\t. (!x. (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))))) t)
T * / ! ! c==> ! c==> c/\ cMEM b3 b0 c~ c= b3 cHD b0 c= cSUC cindexl b3 crot cNUMERAL cBIT1 c_0 b0 cindexl b3 b0 c==> c\/ c= b1 b2 cMEM b1 b0 c==> c~ c= b1 b2 c==> c~ c= cCOND cMEM b1 b0 cfind * part cpred1 b1 b0 c+ csizel b0 cfind * part cpred1 b1 cCONS b2 cNIL cfind * part cpred1 b1 b0 cF f0
+ |- ((!h. (!t. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (!x. ((((MEM x) ((CONS h) t)) /\ (~ (x = (HD ((CONS h) t))))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) ((CONS h) t)))) = ((indexl x) ((CONS h) t)))))))) = ((!x. ((((MEM x) NIL) /\ (~ (x = (HD NIL)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) NIL))) = ((indexl x) NIL)))) /\ (!h. (!t. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (!x. ((((MEM x) ((CONS h) t)) /\ (~ (x = (HD ((CONS h) t))))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) ((CONS h) t)))) = ((indexl x) ((CONS h) t))))))))))
T c= ! ! c==> ! c==> c/\ cMEM b2 b1 c~ c= b2 cHD b1 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 b1 cindexl b2 b1 ! c==> c/\ cMEM b2 cCONS b0 b1 c~ c= b2 cHD cCONS b0 b1 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 cCONS b0 b1 cindexl b2 cCONS b0 b1 c/\ ! c==> c/\ cMEM b0 cNIL c~ c= b0 cHD cNIL c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 cNIL cindexl b0 cNIL ! ! c==> ! c==> c/\ cMEM b2 b1 c~ c= b2 cHD b1 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 b1 cindexl b2 b1 ! c==> c/\ cMEM b2 cCONS b0 b1 c~ c= b2 cHD cCONS b0 b1 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 cCONS b0 b1 cindexl b2 cCONS b0 b1
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?h. t) = t)
T c= c? / f0 f0
- (_10073909 = _10073911), (_10073910 = _10073912) |- ((_10073910 = _10073912) /\ (((MEM _10073911) _10073912) \/ (~ ((MEM _10073909) _10073910))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2
- |- ((_10073929 = _10073930) ==> ((HD _10073929) = (HD _10073930)))
T c==> c= f0 f1 c= cHD f0 cHD f1
+ ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- (~ (x = h))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c~ c= f0 f2
+ |- (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t)))
T c= cMEM f0 cCONS f1 f2 c\/ c= f0 f1 cMEM f0 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1
- |- ((_10073939 = _10073940) ==> ((SUC _10073939) = (SUC _10073940)))
T c==> c= f0 f1 c= cSUC f0 cSUC f1
+ (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))), (((x = h) \/ ((MEM x) t)) /\ (~ (x = h))), ((x = h) \/ ((MEM x) t)) |- ((SUC ((find (\x'. (x' = x))) ((rcons t) h))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))))
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c/\ c\/ c= f1 f2 cMEM f1 f0 c~ c= f1 f2 c==> c\/ c= f1 f2 cMEM f1 f0 c= cSUC cfind / c= b0 f1 crcons f0 f2 cCOND c= f2 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f0
+ |- (((!s1. (!s2. (((find a) ((cat s1) s2)) = (((COND ((has a) s1)) ((find a) s1)) ((sizel s1) + ((find a) s2)))))) ==> ((\s1. (!s2. (((find a) ((cat s1) s2)) = (((COND ((has a) s1)) ((find a) s1)) ((sizel s1) + ((find a) s2)))))) s1)) = ((\s1. (!s2. (((find a) ((cat s1) s2)) = (((COND ((has a) s1)) ((find a) s1)) ((sizel s1) + ((find a) s2)))))) s1))
T c= c==> ! ! c= cfind f0 ccat b0 b1 cCOND chas f0 b0 cfind f0 b0 c+ csizel b0 cfind f0 b1 * / ! c= cfind f0 ccat b0 b1 cCOND chas f0 b0 cfind f0 b0 c+ csizel b0 cfind f0 b1 f1 * / ! c= cfind f0 ccat b0 b1 cCOND chas f0 b0 cfind f0 b0 c+ csizel b0 cfind f0 b1 f1
- |- ((~ (_10073915 = _10073917)) \/ ((~ (_10073916 = _10073918)) \/ (((CONS _10073915) _10073916) = ((CONS _10073917) _10073918))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- (_10073909 = _10073911) |- ((_10073909 = _10073911) /\ ((~ (_10073910 = _10073912)) \/ (((MEM _10073911) _10073912) \/ (~ ((MEM _10073909) _10073910)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2
- (_10073913 = _10073914) |- ((_10073913 = _10073914) /\ ((sizel _10073913) = (sizel _10073914)))
T c==> c= f0 f1 c/\ c= f0 f1 c= csizel f0 csizel f1
- |- ((_10073909 = _10073911) ==> ((~ (_10073910 = _10073912)) \/ (((MEM _10073911) _10073912) \/ (~ ((MEM _10073909) _10073910)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2
- |- ((((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))) = ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))))
T c= c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF
- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- ((~ F) ==> F)
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c==> c~ cF cF
+ ((\h. ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) h) |- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))
T c==> * / c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b1 f1 c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c/\ c= f0 b0 c/\ c~ c= f0 b0 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 f2 c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1
- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- (!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t))))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1
+ (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) |- ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ (!x. ((((MEM x) ((CONS h) t)) /\ (~ (x = (HD ((CONS h) t))))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) ((CONS h) t)))) = ((indexl x) ((CONS h) t))))))
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c/\ ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 ! c==> c/\ cMEM b0 cCONS f1 f0 c~ c= b0 cHD cCONS f1 f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 cCONS f1 f0 cindexl b0 cCONS f1 f0
+ |- ((\s. (!z. (((rcons s) z) = ((cat s) ((CONS z) NIL))))) s)
T * / ! c= crcons b0 b1 ccat b0 cCONS b1 cNIL f0
- |- (((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ (?h. ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) = (?h. ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))))
T c= c/\ ! c\/ c\/ c~ cMEM b0 f0 c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c? / c/\ c= f1 b0 c/\ c~ c= f1 b0 c~ c= c+ csizel f0 cfind * part cpred1 f1 cCONS b0 cNIL cfind * part cpred1 f1 f0 c? / c/\ ! c\/ c\/ c~ cMEM b1 f0 c= b1 cHD f0 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f0 cindexl b1 f0 c/\ c= f1 b0 c/\ c~ c= f1 b0 c~ c= c+ csizel f0 cfind * part cpred1 f1 cCONS b0 cNIL cfind * part cpred1 f1 f0
+ (~ (x = h)) |- (((~ (h = x)) ==> ((h = x) = F)) = ((h = x) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- (~ (x = h)) |- ((x = h) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
- (_10073919 = _10073921), (_10073920 = _10073922) |- ((_10073920 = _10073922) /\ ((_10073919 + _10073920) = (_10073921 + _10073922)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c+ f0 f2 c+ f1 f3
- (_10073919 = _10073921) |- ((_10073919 = _10073921) /\ ((~ (_10073920 = _10073922)) \/ ((_10073919 + _10073920) = (_10073921 + _10073922))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c+ f0 f2 c+ f1 f3
- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- (((~ ((MEM _10073898) t)) \/ ((_10073898 = (HD t)) \/ ((SUC ((indexl _10073898) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl _10073898) t)))) = ((~ ((MEM _10073898) t)) \/ ((_10073898 = (HD t)) \/ ((SUC ((indexl _10073898) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl _10073898) t)))))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c= c\/ c~ cMEM f3 f1 c\/ c= f3 cHD f1 c= cSUC cindexl f3 crot cNUMERAL cBIT1 c_0 f1 cindexl f3 f1 c\/ c~ cMEM f3 f1 c\/ c= f3 cHD f1 c= cSUC cindexl f3 crot cNUMERAL cBIT1 c_0 f1 cindexl f3 f1
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- (((((COND ((has (pred1 x)) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)) = ((((COND ((has (\x'. (x' = x))) t)) ((find (\x'. (x' = x))) t)) ((sizel t) + ((find (\x'. (x' = x))) ((CONS h) NIL)))) = ((find (\x'. (x' = x))) t)))
T c= c= cCOND chas * part cpred1 f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c= cCOND chas / c= b0 f0 f1 cfind / c= b0 f0 f1 c+ csizel f1 cfind / c= b0 f0 cCONS f2 cNIL cfind / c= b0 f0 f1
+ (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) |- (!x. ((((x = h) \/ ((MEM x) t)) /\ (~ (x = h))) ==> ((SUC ((find (\x'. (x' = x))) ((rcons t) h))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))))))
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 ! c==> c/\ c\/ c= b0 f1 cMEM b0 f0 c~ c= b0 f1 c= cSUC cfind / c= b1 b0 crcons f0 f1 cCOND c= f1 b0 cNUMERAL c_0 cSUC cfind / c= b1 b0 f0
+ |- (((!x. ((indexl x) = (find (pred1 x)))) ==> ((\x. ((indexl x) = (find (pred1 x)))) x)) = ((\x. ((indexl x) = (find (pred1 x)))) x))
T c= c==> ! c= * part cindexl b0 * part cfind * part cpred1 b0 * / c= * part cindexl b0 * part cfind * part cpred1 b0 f0 * / c= * part cindexl b0 * part cfind * part cpred1 b0 f0
+ |- ((\s1. (!s2. (((find a) ((cat s1) s2)) = (((COND ((has a) s1)) ((find a) s1)) ((sizel s1) + ((find a) s2)))))) s1)
T * / ! c= cfind f0 ccat b0 b1 cCOND chas f0 b0 cfind f0 b0 c+ csizel b0 cfind f0 b1 f1
- |- ((?h'. ((x = h) /\ ((~ (x = h')) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h') NIL))) = ((find (pred1 x)) t)))))) = ((x = h) /\ (?h. ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))
T c= c? / c/\ c= f0 f1 c/\ c~ c= f0 b0 c~ c= c+ csizel f2 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f2 c/\ c= f0 f1 c? / c/\ c~ c= f0 b0 c~ c= c+ csizel f2 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f2
- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- (((~ ((MEM _10073898) t)) \/ (_10073898 = (HD t))) \/ ((SUC ((indexl _10073898) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl _10073898) t)))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c\/ c\/ c~ cMEM f3 f1 c= f3 cHD f1 c= cSUC cindexl f3 crot cNUMERAL cBIT1 c_0 f1 cindexl f3 f1
- (((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))) |- ((((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))) /\ (((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))))
T c==> c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c/\ c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF
+ |- (((!s. (!z. (((rcons s) z) = ((cat s) ((CONS z) NIL))))) ==> ((\s. (!z. (((rcons s) z) = ((cat s) ((CONS z) NIL))))) s)) = ((\s. (!z. (((rcons s) z) = ((cat s) ((CONS z) NIL))))) s))
T c= c==> ! ! c= crcons b0 b1 ccat b0 cCONS b1 cNIL * / ! c= crcons b0 b1 ccat b0 cCONS b1 cNIL f0 * / ! c= crcons b0 b1 ccat b0 cCONS b1 cNIL f0
+ |- (((h = h) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ (((cat s) ((CONS z) NIL)) = ((rcons s) z)) |- (((rcons s) z) = ((cat s) ((CONS z) NIL)))
T c==> c= ccat f0 cCONS f1 cNIL crcons f0 f1 c= crcons f0 f1 ccat f0 cCONS f1 cNIL
- (_10073941 = _10073943), (_10073942 = _10073944) |- ((_10073942 = _10073944) /\ (((indexl _10073941) _10073942) = ((indexl _10073943) _10073944)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cindexl f0 f2 cindexl f1 f3
+ |- (((!x'. (((\h. ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) x') ==> F)) ==> ((?h. ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) ==> F)) = ((?h. ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) ==> F))
T c= c==> ! c==> * / c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b2 f1 c= b2 cHD f1 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 f1 cindexl b2 f1 c/\ c= f0 b1 c/\ c~ c= f0 b1 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS b1 cNIL cfind * part cpred1 f0 f1 b0 cF c==> c? / c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b1 f1 c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c/\ c= f0 b0 c/\ c~ c= f0 b0 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 cF c==> c? / c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b1 f1 c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c/\ c= f0 b0 c/\ c~ c= f0 b0 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 cF
+ ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- (((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) /\ F)
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c/\ c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 cF
- |- ((_10073936 = _10073938) ==> ((~ (_10073935 = _10073937)) \/ (((rot _10073935) _10073936) = ((rot _10073937) _10073938))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= crot f2 f0 crot f3 f1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((!x. ((((x = h) \/ ((MEM x) t)) /\ (~ (x = h))) ==> ((SUC ((find (pred1 x)) ((rcons t) h))) = (((COND ((pred1 x) h)) (NUMERAL _0)) (SUC ((find (pred1 x)) t)))))) = (!x. ((((MEM x) ((CONS h) t)) /\ (~ (x = (HD ((CONS h) t))))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) ((CONS h) t)))) = ((indexl x) ((CONS h) t))))))
T c= ! c==> c/\ c\/ c= b0 f0 cMEM b0 f1 c~ c= b0 f0 c= cSUC cfind * part cpred1 b0 crcons f1 f0 cCOND cpred1 b0 f0 cNUMERAL c_0 cSUC cfind * part cpred1 b0 f1 ! c==> c/\ cMEM b0 cCONS f0 f1 c~ c= b0 cHD cCONS f0 f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 cCONS f0 f1 cindexl b0 cCONS f0 f1
+ |- ((?h. ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) ==> F)
T c==> c? / c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b1 f1 c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c/\ c= f0 b0 c/\ c~ c= f0 b0 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 cF
- (_10073933 = _10073934) |- ((_10073933 = _10073934) /\ ((NUMERAL _10073933) = (NUMERAL _10073934)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- (_10073931 = _10073932) |- ((_10073931 = _10073932) /\ ((BIT1 _10073931) = (BIT1 _10073932)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (~ (((MEM x) t) \/ (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) |- (?h. ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))))
T c==> c~ c\/ cMEM f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 c? / c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b1 f1 c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c/\ c= f0 b0 c/\ c~ c= f0 b0 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1
- |- ((~ (_10073933 = _10073934)) \/ ((NUMERAL _10073933) = (NUMERAL _10073934)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- ((\s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s')))))) s')
T * / c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS f1 b0 cCOND * f0 f1 cNUMERAL c_0 cSUC cfind f0 b0 f2
+ |- (!x. ((((MEM x) NIL) /\ (~ (x = (HD NIL)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) NIL))) = ((indexl x) NIL))))
T c==> c/\ cMEM f0 cNIL c~ c= f0 cHD cNIL c= cSUC cindexl f0 crot cNUMERAL cBIT1 c_0 cNIL cindexl f0 cNIL
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((!x'. (((~ ((MEM x') t)) \/ (x' = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) = ((!x. ((~ ((MEM x) t)) \/ (x = (HD t)))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t))))
T c= ! c\/ c\/ c~ cMEM b0 f0 c= b0 cHD f0 c= cSUC cindexl f1 crot cNUMERAL cBIT1 c_0 f0 cindexl f1 f0 c\/ ! c\/ c~ cMEM b0 f0 c= b0 cHD f0 c= cSUC cindexl f1 crot cNUMERAL cBIT1 c_0 f0 cindexl f1 f0
+ |- (((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)) = ((((COND ((has (pred1 x)) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))
T c= c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c= cCOND chas * part cpred1 f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1
+ (h = x) |- (x = h)
T c==> c= f0 f1 c= f1 f0
- |- ((~ (_10073939 = _10073940)) \/ ((SUC _10073939) = (SUC _10073940)))
T c\/ c~ c= f0 f1 c= cSUC f0 cSUC f1
- (_10073915 = _10073917) |- ((_10073916 = _10073918) ==> (((CONS _10073915) _10073916) = ((CONS _10073917) _10073918)))
T c==> c= f0 f1 c==> c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) |- (((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t))) = T)
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c= c==> c/\ cMEM f1 f0 c~ c= f1 cHD f0 c= cSUC cindexl f1 crot cNUMERAL cBIT1 c_0 f0 cindexl f1 f0 cT
+ |- (((!x. ((((MEM x) NIL) /\ (~ (x = (HD NIL)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) NIL))) = ((indexl x) NIL)))) /\ (!h. (!t. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (!x. ((((MEM x) ((CONS h) t)) /\ (~ (x = (HD ((CONS h) t))))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) ((CONS h) t)))) = ((indexl x) ((CONS h) t))))))))) ==> (!s. (!x. ((((MEM x) s) /\ (~ (x = (HD s)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) s))) = ((indexl x) s))))))
T c==> c/\ ! c==> c/\ cMEM b0 cNIL c~ c= b0 cHD cNIL c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 cNIL cindexl b0 cNIL ! ! c==> ! c==> c/\ cMEM b2 b1 c~ c= b2 cHD b1 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 b1 cindexl b2 b1 ! c==> c/\ cMEM b2 cCONS b0 b1 c~ c= b2 cHD cCONS b0 b1 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 cCONS b0 b1 cindexl b2 cCONS b0 b1 ! ! c==> c/\ cMEM b1 b0 c~ c= b1 cHD b0 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 b0 cindexl b1 b0
- |- ((_10073933 = _10073934) ==> ((NUMERAL _10073933) = (NUMERAL _10073934)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- (((!t. (!x. (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))))) ==> ((\t. (!x. (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))))) t)) = ((\t. (!x. (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))))) t))
T c= c==> ! ! ! c==> ! c==> c/\ cMEM b3 b0 c~ c= b3 cHD b0 c= cSUC cindexl b3 crot cNUMERAL cBIT1 c_0 b0 cindexl b3 b0 c==> c\/ c= b1 b2 cMEM b1 b0 c==> c~ c= b1 b2 c==> c~ c= cCOND cMEM b1 b0 cfind * part cpred1 b1 b0 c+ csizel b0 cfind * part cpred1 b1 cCONS b2 cNIL cfind * part cpred1 b1 b0 cF * / ! ! c==> ! c==> c/\ cMEM b3 b0 c~ c= b3 cHD b0 c= cSUC cindexl b3 crot cNUMERAL cBIT1 c_0 b0 cindexl b3 b0 c==> c\/ c= b1 b2 cMEM b1 b0 c==> c~ c= b1 b2 c==> c~ c= cCOND cMEM b1 b0 cfind * part cpred1 b1 b0 c+ csizel b0 cfind * part cpred1 b1 cCONS b2 cNIL cfind * part cpred1 b1 b0 cF f0 * / ! ! c==> ! c==> c/\ cMEM b3 b0 c~ c= b3 cHD b0 c= cSUC cindexl b3 crot cNUMERAL cBIT1 c_0 b0 cindexl b3 b0 c==> c\/ c= b1 b2 cMEM b1 b0 c==> c~ c= b1 b2 c==> c~ c= cCOND cMEM b1 b0 cfind * part cpred1 b1 b0 c+ csizel b0 cfind * part cpred1 b1 cCONS b2 cNIL cfind * part cpred1 b1 b0 cF f0
+ ((\h. ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) h) |- (((\h. ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) h) /\ F)
T c==> * / c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b1 f1 c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c/\ c= f0 b0 c/\ c~ c= f0 b0 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 f2 c/\ * / c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b1 f1 c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c/\ c= f0 b0 c/\ c~ c= f0 b0 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 f2 cF
- |- ((((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))) ==> (((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))))
T c==> c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF
- (_10073919 = _10073921) |- ((_10073920 = _10073922) ==> ((_10073919 + _10073920) = (_10073921 + _10073922)))
T c==> c= f0 f1 c==> c= f2 f3 c= c+ f0 f2 c+ f1 f3
+ |- (((~ ((MEM x) t)) /\ (?h. ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) = (?h. ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))))
T c= c/\ c~ cMEM f0 f1 c? / c/\ ! c\/ c\/ c~ cMEM b1 f1 c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c/\ c= f0 b0 c/\ c~ c= f0 b0 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 c? / c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b1 f1 c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c/\ c= f0 b0 c/\ c~ c= f0 b0 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1
+ |- ((!t. (!x. (((MEM x) t) \/ (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))))) = (!t. (!x. (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))))))
T c= ! ! c\/ cMEM b1 b0 ! c==> ! c==> c/\ cMEM b3 b0 c~ c= b3 cHD b0 c= cSUC cindexl b3 crot cNUMERAL cBIT1 c_0 b0 cindexl b3 b0 c==> c= b1 b2 c==> c~ c= b1 b2 c= c+ csizel b0 cfind * part cpred1 b1 cCONS b2 cNIL cfind * part cpred1 b1 b0 ! ! ! c==> ! c==> c/\ cMEM b3 b0 c~ c= b3 cHD b0 c= cSUC cindexl b3 crot cNUMERAL cBIT1 c_0 b0 cindexl b3 b0 c==> c\/ c= b1 b2 cMEM b1 b0 c==> c~ c= b1 b2 c==> c~ c= cCOND cMEM b1 b0 cfind * part cpred1 b1 b0 c+ csizel b0 cfind * part cpred1 b1 cCONS b2 cNIL cfind * part cpred1 b1 b0 cF
+ |- (((((((MEM x) t) = F) ==> ((!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))))) = (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) /\ ((((MEM x) t) = T) ==> ((!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))))) = T))) ==> ((!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))))) = (((~ ((MEM x) t)) \/ T) /\ (((MEM x) t) \/ (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))))) = ((!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))))) = (((~ ((MEM x) t)) \/ T) /\ (((MEM x) t) \/ (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))))))
T c= c==> c/\ c==> c= cMEM f0 f1 cF c= ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c\/ c= f0 b0 cMEM f0 f1 c==> c~ c= f0 b0 c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 c==> c= cMEM f0 f1 cT c= ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c\/ c= f0 b0 cMEM f0 f1 c==> c~ c= f0 b0 c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 cT c= ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c\/ c= f0 b0 cMEM f0 f1 c==> c~ c= f0 b0 c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 c/\ c\/ c~ cMEM f0 f1 cT c\/ cMEM f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 c= ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c\/ c= f0 b0 cMEM f0 f1 c==> c~ c= f0 b0 c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 c/\ c\/ c~ cMEM f0 f1 cT c\/ cMEM f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1
+ ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1
+ |- (((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F) = ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))
T c= c==> c~ c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 cF c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1
+ |- (((!z. (((rcons s) z) = ((cat s) ((CONS z) NIL)))) ==> ((\z. (((rcons s) z) = ((cat s) ((CONS z) NIL)))) z)) = ((\z. (((rcons s) z) = ((cat s) ((CONS z) NIL)))) z))
T c= c==> ! c= crcons f0 b0 ccat f0 cCONS b0 cNIL * / c= crcons f0 b0 ccat f0 cCONS b0 cNIL f1 * / c= crcons f0 b0 ccat f0 cCONS b0 cNIL f1
+ |- ((!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))))) = (((~ ((MEM x) t)) \/ T) /\ (((MEM x) t) \/ (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))))
T c= ! c==> ! c==> c/\ cMEM b1 f0 c~ c= b1 cHD f0 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f0 cindexl b1 f0 c==> c\/ c= f1 b0 cMEM f1 f0 c==> c~ c= f1 b0 c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS b0 cNIL cfind * part cpred1 f1 f0 c/\ c\/ c~ cMEM f1 f0 cT c\/ cMEM f1 f0 ! c==> ! c==> c/\ cMEM b1 f0 c~ c= b1 cHD f0 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f0 cindexl b1 f0 c==> c= f1 b0 c==> c~ c= f1 b0 c= c+ csizel f0 cfind * part cpred1 f1 cCONS b0 cNIL cfind * part cpred1 f1 f0
+ |- (((((MEM x) t) = T) ==> ((!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))))) = T)) = (((((MEM x) t) = F) ==> ((!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))))) = (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) /\ ((((MEM x) t) = T) ==> ((!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))))) = T))))
T c= c==> c= cMEM f0 f1 cT c= ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c\/ c= f0 b0 cMEM f0 f1 c==> c~ c= f0 b0 c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 cT c/\ c==> c= cMEM f0 f1 cF c= ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c\/ c= f0 b0 cMEM f0 f1 c==> c~ c= f0 b0 c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 c==> c= cMEM f0 f1 cT c= ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c\/ c= f0 b0 cMEM f0 f1 c==> c~ c= f0 b0 c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 cT
+ |- (!t. (!x. (((MEM x) t) \/ (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))))
T c\/ cMEM f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1
- (_10073929 = _10073930) |- ((_10073929 = _10073930) /\ ((HD _10073929) = (HD _10073930)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cHD f0 cHD f1
- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- ((~ ((MEM _10073898) t)) \/ ((_10073898 = (HD t)) \/ ((SUC ((indexl _10073898) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl _10073898) t))))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c\/ c~ cMEM f3 f1 c\/ c= f3 cHD f1 c= cSUC cindexl f3 crot cNUMERAL cBIT1 c_0 f1 cindexl f3 f1
- |- ((~ (_10073925 = _10073927)) \/ ((~ (_10073926 = _10073928)) \/ (((find _10073925) _10073926) = ((find _10073927) _10073928))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cfind f0 f2 cfind f1 f3
+ |- (((~ (((MEM x) t) \/ (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) ==> F) = (((MEM x) t) \/ (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))))
T c= c==> c~ c\/ cMEM f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 cF c\/ cMEM f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1
- ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) |- (((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) /\ ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))))
T c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c/\ c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF
- |- ((_10073931 = _10073932) ==> ((BIT1 _10073931) = (BIT1 _10073932)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- (((!s. (((has (pred1 x)) s) = ((MEM x) s))) ==> ((\s. (((has (pred1 x)) s) = ((MEM x) s))) s)) = ((\s. (((has (pred1 x)) s) = ((MEM x) s))) s))
T c= c==> ! c= chas * part cpred1 f0 b0 cMEM f0 b0 * / c= chas * part cpred1 f0 b0 cMEM f0 b0 f1 * / c= chas * part cpred1 f0 b0 cMEM f0 b0 f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (_10073939 = _10073940) |- ((_10073939 = _10073940) /\ ((SUC _10073939) = (SUC _10073940)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cSUC f0 cSUC f1
- (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) |- ((\x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) x)
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 * / c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 f1
+ (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))), (((x = h) \/ ((MEM x) t)) /\ (~ (x = h))) |- ((((x = h) \/ ((MEM x) t)) /\ (~ (x = h))) /\ ((SUC ((find (\x'. (x' = x))) ((rcons t) h))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t)))))
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c/\ c\/ c= f1 f2 cMEM f1 f0 c~ c= f1 f2 c/\ c/\ c\/ c= f1 f2 cMEM f1 f0 c~ c= f1 f2 c= cSUC cfind / c= b0 f1 crcons f0 f2 cCOND c= f2 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f0
+ |- (((!a. (!s1. (!s2. (((find a) ((cat s1) s2)) = (((COND ((has a) s1)) ((find a) s1)) ((sizel s1) + ((find a) s2))))))) ==> ((\a. (!s1. (!s2. (((find a) ((cat s1) s2)) = (((COND ((has a) s1)) ((find a) s1)) ((sizel s1) + ((find a) s2))))))) a)) = ((\a. (!s1. (!s2. (((find a) ((cat s1) s2)) = (((COND ((has a) s1)) ((find a) s1)) ((sizel s1) + ((find a) s2))))))) a))
T c= c==> ! ! ! c= cfind b0 ccat b1 b2 cCOND chas b0 b1 cfind b0 b1 c+ csizel b1 cfind b0 b2 * / ! ! c= cfind b0 ccat b1 b2 cCOND chas b0 b1 cfind b0 b1 c+ csizel b1 cfind b0 b2 f0 * / ! ! c= cfind b0 ccat b1 b2 cCOND chas b0 b1 cfind b0 b1 c+ csizel b1 cfind b0 b2 f0
- (_10073936 = _10073938) |- ((_10073935 = _10073937) ==> (((rot _10073935) _10073936) = ((rot _10073937) _10073938)))
T c==> c= f0 f1 c==> c= f2 f3 c= crot f2 f0 crot f3 f1
- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- ((~ ((MEM x) t)) = (~ ((MEM h) t)))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c= c~ cMEM f0 f1 c~ cMEM f2 f1
+ |- ((\s. (((rot (NUMERAL (BIT1 _0))) ((CONS x) s)) = ((rcons s) x))) s)
T * / c= crot cNUMERAL cBIT1 c_0 cCONS f0 b0 crcons b0 f0 f1
+ |- ((!x. ((((x = h) \/ ((MEM x) t)) /\ (~ (x = h))) ==> ((SUC ((find (\x'. (x' = x))) ((rcons t) h))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t)))))) = (!x. ((((x = h) \/ ((MEM x) t)) /\ (~ (x = h))) ==> ((SUC ((find (pred1 x)) ((rcons t) h))) = (((COND ((pred1 x) h)) (NUMERAL _0)) (SUC ((find (pred1 x)) t)))))))
T c= ! c==> c/\ c\/ c= b0 f0 cMEM b0 f1 c~ c= b0 f0 c= cSUC cfind / c= b1 b0 crcons f1 f0 cCOND c= f0 b0 cNUMERAL c_0 cSUC cfind / c= b1 b0 f1 ! c==> c/\ c\/ c= b0 f0 cMEM b0 f1 c~ c= b0 f0 c= cSUC cfind * part cpred1 b0 crcons f1 f0 cCOND cpred1 b0 f0 cNUMERAL c_0 cSUC cfind * part cpred1 b0 f1
+ |- ((((!x. ((((MEM x) NIL) /\ (~ (x = (HD NIL)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) NIL))) = ((indexl x) NIL)))) /\ (!h. (!t. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (!x. ((((MEM x) ((CONS h) t)) /\ (~ (x = (HD ((CONS h) t))))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) ((CONS h) t)))) = ((indexl x) ((CONS h) t))))))))) ==> (!s. (!x. ((((MEM x) s) /\ (~ (x = (HD s)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) s))) = ((indexl x) s)))))) = (!s. (!x. ((((MEM x) s) /\ (~ (x = (HD s)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) s))) = ((indexl x) s))))))
T c= c==> c/\ ! c==> c/\ cMEM b0 cNIL c~ c= b0 cHD cNIL c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 cNIL cindexl b0 cNIL ! ! c==> ! c==> c/\ cMEM b2 b1 c~ c= b2 cHD b1 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 b1 cindexl b2 b1 ! c==> c/\ cMEM b2 cCONS b0 b1 c~ c= b2 cHD cCONS b0 b1 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 cCONS b0 b1 cindexl b2 cCONS b0 b1 ! ! c==> c/\ cMEM b1 b0 c~ c= b1 cHD b0 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 b0 cindexl b1 b0 ! ! c==> c/\ cMEM b1 b0 c~ c= b1 cHD b0 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 b0 cindexl b1 b0
+ ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- ((~ (x = h)) = (~ (h = h)))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c= c~ c= f0 f2 c~ c= f2 f2
+ (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))), (~ (x = h)), ((x = h) \/ ((MEM x) t)) |- ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c~ c= f1 f2 c==> c\/ c= f1 f2 cMEM f1 f0 c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0
+ |- (((!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))) ==> ((\h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))) h)) = ((\h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))) h))
T c= c==> ! c==> ! c==> c/\ cMEM b1 f0 c~ c= b1 cHD f0 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f0 cindexl b1 f0 c==> c\/ c= f1 b0 cMEM f1 f0 c==> c~ c= f1 b0 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS b0 cNIL cfind * part cpred1 f1 f0 cF * / c==> ! c==> c/\ cMEM b1 f0 c~ c= b1 cHD f0 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f0 cindexl b1 f0 c==> c\/ c= f1 b0 cMEM f1 f0 c==> c~ c= f1 b0 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS b0 cNIL cfind * part cpred1 f1 f0 cF f2 * / c==> ! c==> c/\ cMEM b1 f0 c~ c= b1 cHD f0 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f0 cindexl b1 f0 c==> c\/ c= f1 b0 cMEM f1 f0 c==> c~ c= f1 b0 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS b0 cNIL cfind * part cpred1 f1 f0 cF f2
- |- ((~ (_10073936 = _10073938)) \/ ((~ (_10073935 = _10073937)) \/ (((rot _10073935) _10073936) = ((rot _10073937) _10073938))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= crot f2 f0 crot f3 f1
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ (~ (((MEM x) t) \/ (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) |- (((?h. ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) ==> F) = F)
T c==> c~ c\/ cMEM f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 c= c==> c? / c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b1 f1 c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c/\ c= f0 b0 c/\ c~ c= f0 b0 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 cF cF
+ |- (((!s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s')))))) ==> ((\s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s')))))) s')) = ((\s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s')))))) s'))
T c= c==> ! c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS f1 b0 cCOND * f0 f1 cNUMERAL c_0 cSUC cfind f0 b0 * / c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS f1 b0 cCOND * f0 f1 cNUMERAL c_0 cSUC cfind f0 b0 f2 * / c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS f1 b0 cCOND * f0 f1 cNUMERAL c_0 cSUC cfind f0 b0 f2
+ |- ((!x. (((MEM x) t) \/ (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))))) = T)
T c= ! c\/ cMEM b0 f0 ! c==> ! c==> c/\ cMEM b2 f0 c~ c= b2 cHD f0 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 f0 cindexl b2 f0 c==> c= b0 b1 c==> c~ c= b0 b1 c= c+ csizel f0 cfind * part cpred1 b0 cCONS b1 cNIL cfind * part cpred1 b0 f0 cT
- |- ((?h. ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) = ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ (?h. ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))))
T c= c? / c/\ ! c\/ c\/ c~ cMEM b1 f0 c= b1 cHD f0 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f0 cindexl b1 f0 c/\ c= f1 b0 c/\ c~ c= f1 b0 c~ c= c+ csizel f0 cfind * part cpred1 f1 cCONS b0 cNIL cfind * part cpred1 f1 f0 c/\ ! c\/ c\/ c~ cMEM b0 f0 c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c? / c/\ c= f1 b0 c/\ c~ c= f1 b0 c~ c= c+ csizel f0 cfind * part cpred1 f1 cCONS b0 cNIL cfind * part cpred1 f1 f0
- (_10073925 = _10073927) |- ((_10073925 = _10073927) /\ ((~ (_10073926 = _10073928)) \/ (((find _10073925) _10073926) = ((find _10073927) _10073928))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cfind f0 f2 cfind f1 f3
- |- ((~ (_10073941 = _10073943)) \/ ((~ (_10073942 = _10073944)) \/ (((indexl _10073941) _10073942) = ((indexl _10073943) _10073944))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cindexl f0 f2 cindexl f1 f3
- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- (F = F)
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c= cF cF
+ |- ((\h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))) h)
T * / c==> ! c==> c/\ cMEM b1 f0 c~ c= b1 cHD f0 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f0 cindexl b1 f0 c==> c\/ c= f1 b0 cMEM f1 f0 c==> c~ c= f1 b0 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS b0 cNIL cfind * part cpred1 f1 f0 cF f2
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ |- ((F ==> t) = T)
T c= c==> cF f0 cT
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) |- (((((x = h) \/ ((MEM x) t)) /\ (~ (x = h))) ==> ((SUC ((find (\x'. (x' = x))) ((rcons t) h))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))))) = T)
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c= c==> c/\ c\/ c= f1 f2 cMEM f1 f0 c~ c= f1 f2 c= cSUC cfind / c= b0 f1 crcons f0 f2 cCOND c= f2 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f0 cT
+ |- (((find a) NIL) = (NUMERAL _0))
T c= cfind f0 cNIL cNUMERAL c_0
- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- (((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((\x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) _10073898)) = ((\x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) _10073898))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c= c==> ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 * / c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 f3 * / c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 f3
+ |- ((((b = F) ==> (x = x0)) /\ ((b = T) ==> (x = x1))) ==> (x = (((~ b) \/ x1) /\ (b \/ x0))))
T c==> c/\ c==> c= f0 cF c= f1 f2 c==> c= f0 cT c= f1 f3 c= f1 c/\ c\/ c~ f0 f3 c\/ f0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ |- ((F /\ t) = F)
T c= c/\ cF f0 cF
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ |- ((((MEM x) t) = T) ==> ((!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))))) = T))
T c==> c= cMEM f0 f1 cT c= ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c\/ c= f0 b0 cMEM f0 f1 c==> c~ c= f0 b0 c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 cT
+ ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- (~ (h = h))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c~ c= f2 f2
- (_10073915 = _10073917) |- ((_10073915 = _10073917) /\ ((~ (_10073916 = _10073918)) \/ (((CONS _10073915) _10073916) = ((CONS _10073917) _10073918))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- (_10073909 = _10073911), (_10073910 = _10073912) |- (((((MEM _10073909) _10073910) = ((MEM _10073911) _10073912)) ==> (((MEM _10073911) _10073912) \/ (~ ((MEM _10073909) _10073910)))) = (((MEM _10073911) _10073912) \/ (~ ((MEM _10073909) _10073910))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cMEM f0 f2 cMEM f1 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2 c\/ cMEM f1 f3 c~ cMEM f0 f2
+ |- ((((MEM x) t) \/ (!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> ((x = h) ==> ((~ (x = h)) ==> (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) = T)
T c= c\/ cMEM f0 f1 ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c= f0 b0 c==> c~ c= f0 b0 c= c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 cT
- ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) |- ((((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))))
T c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF
- |- ((~ (_10073909 = _10073911)) \/ ((~ (_10073910 = _10073912)) \/ (((MEM _10073911) _10073912) \/ (~ ((MEM _10073909) _10073910)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2
+ (~ (x = h)) |- (~ (h = x))
T c==> c~ c= f0 f1 c~ c= f1 f0
- (_10073909 = _10073911) |- ((_10073910 = _10073912) ==> (((MEM _10073911) _10073912) \/ (~ ((MEM _10073909) _10073910))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cMEM f1 f3 c~ cMEM f0 f2
+ |- ((\s2. (((find a) ((cat s1) s2)) = (((COND ((has a) s1)) ((find a) s1)) ((sizel s1) + ((find a) s2))))) s2)
T * / c= cfind f0 ccat f1 b0 cCOND chas f0 f1 cfind f0 f1 c+ csizel f1 cfind f0 b0 f2
+ ((pred1 a) = (\x. (x = a))) |- ((\x. (x = a)) = (pred1 a))
T c==> c= * part cpred1 f0 / c= b0 f0 c= / c= b0 f0 * part cpred1 f0
+ |- (((!s2. (((find a) ((cat s1) s2)) = (((COND ((has a) s1)) ((find a) s1)) ((sizel s1) + ((find a) s2))))) ==> ((\s2. (((find a) ((cat s1) s2)) = (((COND ((has a) s1)) ((find a) s1)) ((sizel s1) + ((find a) s2))))) s2)) = ((\s2. (((find a) ((cat s1) s2)) = (((COND ((has a) s1)) ((find a) s1)) ((sizel s1) + ((find a) s2))))) s2))
T c= c==> ! c= cfind f0 ccat f1 b0 cCOND chas f0 f1 cfind f0 f1 c+ csizel f1 cfind f0 b0 * / c= cfind f0 ccat f1 b0 cCOND chas f0 f1 cfind f0 f1 c+ csizel f1 cfind f0 b0 f2 * / c= cfind f0 ccat f1 b0 cCOND chas f0 f1 cfind f0 f1 c+ csizel f1 cfind f0 b0 f2
- (_10073915 = _10073917), (_10073916 = _10073918) |- ((_10073916 = _10073918) /\ (((CONS _10073915) _10073916) = ((CONS _10073917) _10073918)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- |- ((_10073913 = _10073914) ==> ((sizel _10073913) = (sizel _10073914)))
T c==> c= f0 f1 c= csizel f0 csizel f1
+ (~ (x = h)) |- ((h = x) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
+ |- ((!x. ((((MEM x) NIL) /\ (~ (x = (HD NIL)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) NIL))) = ((indexl x) NIL)))) /\ (!h. (!t. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (!x. ((((MEM x) ((CONS h) t)) /\ (~ (x = (HD ((CONS h) t))))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) ((CONS h) t)))) = ((indexl x) ((CONS h) t)))))))))
T c/\ ! c==> c/\ cMEM b0 cNIL c~ c= b0 cHD cNIL c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 cNIL cindexl b0 cNIL ! ! c==> ! c==> c/\ cMEM b2 b1 c~ c= b2 cHD b1 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 b1 cindexl b2 b1 ! c==> c/\ cMEM b2 cCONS b0 b1 c~ c= b2 cHD cCONS b0 b1 c= cSUC cindexl b2 crot cNUMERAL cBIT1 c_0 cCONS b0 b1 cindexl b2 cCONS b0 b1
+ ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- ((h = h) ==> F)
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c==> c= f2 f2 cF
+ (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))), (~ (x = h)), ((x = h) \/ ((MEM x) t)) |- (((find (\x'. (x' = x))) ((rcons t) h)) = ((find (\x'. (x' = x))) t))
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c~ c= f1 f2 c==> c\/ c= f1 f2 cMEM f1 f0 c= cfind / c= b0 f1 crcons f0 f2 cfind / c= b0 f1 f0
+ (((rcons s) z) = ((cat s) ((CONS z) NIL))) |- (((cat s) ((CONS z) NIL)) = ((rcons s) z))
T c==> c= crcons f0 f1 ccat f0 cCONS f1 cNIL c= ccat f0 cCONS f1 cNIL crcons f0 f1
- ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))), (((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))) |- (((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) /\ ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))))
T c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c/\ c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF
- |- ((~ (_10073919 = _10073921)) \/ ((~ (_10073920 = _10073922)) \/ ((_10073919 + _10073920) = (_10073921 + _10073922))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c+ f0 f2 c+ f1 f3
+ ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- (x = h)
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c= f0 f2
+ |- (!h. (!t. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (!x. ((((MEM x) ((CONS h) t)) /\ (~ (x = (HD ((CONS h) t))))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) ((CONS h) t)))) = ((indexl x) ((CONS h) t))))))))
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 ! c==> c/\ cMEM b0 cCONS f1 f0 c~ c= b0 cHD cCONS f1 f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 cCONS f1 f0 cindexl b0 cCONS f1 f0
- |- ((!h. (P h)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))))
T c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF
+ |- ((\z. (((rcons s) z) = ((cat s) ((CONS z) NIL)))) z)
T * / c= crcons f0 b0 ccat f0 cCONS b0 cNIL f1
+ |- (((!x. (!s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s'))))))) ==> ((\x. (!s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s'))))))) x)) = ((\x. (!s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s'))))))) x))
T c= c==> ! ! c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS b0 b1 cCOND * f0 b0 cNUMERAL c_0 cSUC cfind f0 b1 * / ! c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS b0 b1 cCOND * f0 b0 cNUMERAL c_0 cSUC cfind f0 b1 f1 * / ! c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS b0 b1 cCOND * f0 b0 cNUMERAL c_0 cSUC cfind f0 b1 f1
+ |- (((!x. (!s. (((rot (NUMERAL (BIT1 _0))) ((CONS x) s)) = ((rcons s) x)))) ==> ((\x. (!s. (((rot (NUMERAL (BIT1 _0))) ((CONS x) s)) = ((rcons s) x)))) x)) = ((\x. (!s. (((rot (NUMERAL (BIT1 _0))) ((CONS x) s)) = ((rcons s) x)))) x))
T c= c==> ! ! c= crot cNUMERAL cBIT1 c_0 cCONS b0 b1 crcons b1 b0 * / ! c= crot cNUMERAL cBIT1 c_0 cCONS b0 b1 crcons b1 b0 f0 * / ! c= crot cNUMERAL cBIT1 c_0 cCONS b0 b1 crcons b1 b0 f0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- (((!s. (((rot (NUMERAL (BIT1 _0))) ((CONS x) s)) = ((rcons s) x))) ==> ((\s. (((rot (NUMERAL (BIT1 _0))) ((CONS x) s)) = ((rcons s) x))) s)) = ((\s. (((rot (NUMERAL (BIT1 _0))) ((CONS x) s)) = ((rcons s) x))) s))
T c= c==> ! c= crot cNUMERAL cBIT1 c_0 cCONS f0 b0 crcons b0 f0 * / c= crot cNUMERAL cBIT1 c_0 cCONS f0 b0 crcons b0 f0 f1 * / c= crot cNUMERAL cBIT1 c_0 cCONS f0 b0 crcons b0 f0 f1
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
+ (((MEM x) t) = T) |- ((((MEM x) t) = T) /\ ((!h. ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t)))))) = T))
T c==> c= cMEM f0 f1 cT c/\ c= cMEM f0 f1 cT c= ! c==> ! c==> c/\ cMEM b1 f1 c~ c= b1 cHD f1 c= cSUC cindexl b1 crot cNUMERAL cBIT1 c_0 f1 cindexl b1 f1 c==> c\/ c= f0 b0 cMEM f0 f1 c==> c~ c= f0 b0 c= cCOND cMEM f0 f1 cfind * part cpred1 f0 f1 c+ csizel f1 cfind * part cpred1 f0 cCONS b0 cNIL cfind * part cpred1 f0 f1 cT
+ |- ((\x. (!s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s'))))))) x)
T * / ! c/\ c= cfind f0 cNIL cNUMERAL c_0 c= cfind f0 cCONS b0 b1 cCOND * f0 b0 cNUMERAL c_0 cSUC cfind f0 b1 f1
- |- ((!x'. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x') ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x') t)))) = (((~ ((MEM x) t)) \/ (x = (HD t))) \/ (!x. ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))))
T c= ! c\/ c\/ c~ cMEM f0 f1 c= f0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c\/ c\/ c~ cMEM f0 f1 c= f0 cHD f1 ! c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1
- |- ((~ (_10073929 = _10073930)) \/ ((HD _10073929) = (HD _10073930)))
T c\/ c~ c= f0 f1 c= cHD f0 cHD f1
+ |- (((!a. (!x. (!s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s')))))))) ==> ((\a. (!x. (!s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s')))))))) a)) = ((\a. (!x. (!s'. ((((find a) NIL) = (NUMERAL _0)) /\ (((find a) ((CONS x) s')) = (((COND (a x)) (NUMERAL _0)) (SUC ((find a) s')))))))) a))
T c= c==> ! ! ! c/\ c= cfind b0 cNIL cNUMERAL c_0 c= cfind b0 cCONS b1 b2 cCOND * b0 b1 cNUMERAL c_0 cSUC cfind b0 b2 * / ! ! c/\ c= cfind b0 cNIL cNUMERAL c_0 c= cfind b0 cCONS b1 b2 cCOND * b0 b1 cNUMERAL c_0 cSUC cfind b0 b2 f0 * / ! ! c/\ c= cfind b0 cNIL cNUMERAL c_0 c= cfind b0 cCONS b1 b2 cCOND * b0 b1 cNUMERAL c_0 cSUC cfind b0 b2 f0
+ (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))), (~ (x = h)), ((x = h) \/ ((MEM x) t)) |- ((SUC ((find (\x'. (x' = x))) ((rcons t) h))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t))))
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c~ c= f1 f2 c==> c\/ c= f1 f2 cMEM f1 f0 c= cSUC cfind / c= b0 f1 crcons f0 f2 cCOND c= f2 f1 cNUMERAL c_0 cSUC cfind / c= b0 f1 f0
- |- ((?h. (P /\ (Q h))) = (P /\ (?h. (Q h))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- |- ((_10073941 = _10073943) ==> ((~ (_10073942 = _10073944)) \/ (((indexl _10073941) _10073942) = ((indexl _10073943) _10073944))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cindexl f0 f2 cindexl f1 f3
- |- ((?h'. ((x = h') /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t)))))) = ((?h. (x = h)) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))
T c= c? / c/\ c= f0 b0 c/\ c~ c= f0 f1 c~ c= c+ csizel f2 cfind * part cpred1 f0 cCONS f1 cNIL cfind * part cpred1 f0 f2 c/\ c? / c= f0 b0 c/\ c~ c= f0 f1 c~ c= c+ csizel f2 cfind * part cpred1 f0 cCONS f1 cNIL cfind * part cpred1 f0 f2
- |- (((\x'. (f x')) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((_10073915 = _10073917) ==> ((~ (_10073916 = _10073918)) \/ (((CONS _10073915) _10073916) = ((CONS _10073917) _10073918))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
+ |- (((!a. ((\x. (x = a)) = (pred1 a))) ==> ((\a. ((\x. (x = a)) = (pred1 a))) a)) = ((\a. ((\x. (x = a)) = (pred1 a))) a))
T c= c==> ! c= / c= b1 b0 * part cpred1 b0 * / c= / c= b1 b0 * part cpred1 b0 f0 * / c= / c= b1 b0 * part cpred1 b0 f0
+ (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) |- (!x. ((((x = h) \/ ((MEM x) t)) /\ (~ (x = h))) ==> ((SUC ((find (pred1 x)) ((rcons t) h))) = (((COND ((pred1 x) h)) (NUMERAL _0)) (SUC ((find (pred1 x)) t))))))
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 ! c==> c/\ c\/ c= b0 f1 cMEM b0 f0 c~ c= b0 f1 c= cSUC cfind * part cpred1 b0 crcons f0 f1 cCOND cpred1 b0 f1 cNUMERAL c_0 cSUC cfind * part cpred1 b0 f0
- ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))), (((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))) |- ((((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))) ==> ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F))))) /\ ((!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) ==> (((x = h) \/ ((MEM x) t)) ==> ((~ (x = h)) ==> ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) ==> F)))))
T c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c/\ c==> c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF
- (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))), (~ (x = h)), (~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))), ((x = h) \/ ((MEM x) t)) |- ((~ ((((COND ((MEM x) t)) ((find (pred1 x)) t)) ((sizel t) + ((find (pred1 x)) ((CONS h) NIL)))) = ((find (pred1 x)) t))) /\ F)
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c~ c= f1 f2 c==> c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 c==> c\/ c= f1 f2 cMEM f1 f0 c/\ c~ c= cCOND cMEM f1 f0 cfind * part cpred1 f1 f0 c+ csizel f0 cfind * part cpred1 f1 cCONS f2 cNIL cfind * part cpred1 f1 f0 cF
- (~ (h = h)) |- ((~ (h = h)) /\ (h = h))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- (_10073936 = _10073938) |- ((_10073936 = _10073938) /\ ((~ (_10073935 = _10073937)) \/ (((rot _10073935) _10073936) = ((rot _10073937) _10073938))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= crot f2 f0 crot f3 f1
+ (~ (x = h)) |- (((SUC ((find (\x'. (x' = x))) ((rcons t) h))) = (SUC ((find (\x'. (x' = x))) t))) = ((SUC ((find (\x'. (x' = x))) ((rcons t) h))) = (((COND (h = x)) (NUMERAL _0)) (SUC ((find (\x'. (x' = x))) t)))))
T c==> c~ c= f0 f1 c= c= cSUC cfind / c= b0 f0 crcons f2 f1 cSUC cfind / c= b0 f0 f2 c= cSUC cfind / c= b0 f0 crcons f2 f1 cCOND c= f1 f0 cNUMERAL c_0 cSUC cfind / c= b0 f0 f2
- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- (~ ((MEM h) t))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c~ cMEM f2 f1
- |- ((_10073925 = _10073927) ==> ((~ (_10073926 = _10073928)) \/ (((find _10073925) _10073926) = ((find _10073927) _10073928))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cfind f0 f2 cfind f1 f3
- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- ((~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))) = (~ (((sizel t) + ((find (pred1 h)) ((CONS h) NIL))) = ((find (pred1 h)) t))))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c= c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c~ c= c+ csizel f1 cfind * part cpred1 f2 cCONS f2 cNIL cfind * part cpred1 f2 f1
- ((~ ((MEM x) t)) /\ ((!x. (((~ ((MEM x) t)) \/ (x = (HD t))) \/ ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) /\ ((x = h) /\ ((~ (x = h)) /\ (~ (((sizel t) + ((find (pred1 x)) ((CONS h) NIL))) = ((find (pred1 x)) t))))))) |- (~ (((sizel t) + ((find (pred1 h)) ((CONS h) NIL))) = ((find (pred1 h)) t)))
T c==> c/\ c~ cMEM f0 f1 c/\ ! c\/ c\/ c~ cMEM b0 f1 c= b0 cHD f1 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f1 cindexl b0 f1 c/\ c= f0 f2 c/\ c~ c= f0 f2 c~ c= c+ csizel f1 cfind * part cpred1 f0 cCONS f2 cNIL cfind * part cpred1 f0 f1 c~ c= c+ csizel f1 cfind * part cpred1 f2 cCONS f2 cNIL cfind * part cpred1 f2 f1
- (_10073935 = _10073937), (_10073936 = _10073938) |- ((_10073935 = _10073937) /\ (((rot _10073935) _10073936) = ((rot _10073937) _10073938)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= crot f0 f2 crot f1 f3
- |- ((?h. ((P h) /\ Q)) = ((?h. (P h)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- (!x. ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))) |- ((((MEM x) t) /\ (~ (x = (HD t)))) ==> ((SUC ((indexl x) ((rot (NUMERAL (BIT1 _0))) t))) = ((indexl x) t)))
T c==> ! c==> c/\ cMEM b0 f0 c~ c= b0 cHD f0 c= cSUC cindexl b0 crot cNUMERAL cBIT1 c_0 f0 cindexl b0 f0 c==> c/\ cMEM f1 f0 c~ c= f1 cHD f0 c= cSUC cindexl f1 crot cNUMERAL cBIT1 c_0 f0 cindexl f1 f0
