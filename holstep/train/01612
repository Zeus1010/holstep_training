N Terminal.vv_quad_split_short
C |- (!vv. ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\f. (LET_END ((((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((V SUBSET ball_annulus) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (V , (E , f))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))))))))))))) ==> (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i))))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))
T cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cSUBSET b0 part cball_annulus c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b3 * f0 b4 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b3 * f0 b4 c/\ cconvex_local_fan c, b0 c, b1 b2 ! ! c==> c/\ c< b3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b4 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b3 * f0 b4 c= b3 b4 c? / c/\ c< b3 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b3 * f0 c+ b3 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b3 cNUMERAL cBIT1 c_0 * f0 c+ b3 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b3 * f0 c+ b3 cNUMERAL cBIT1 c_0 * f0 c+ b3 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b3 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b3 cNUMERAL cBIT1 cBIT1 c_0 * f0 b3 * * part cIMAGE / c, * f0 b2 * f0 cSUC b2 part cUNIV * * part cIMAGE / * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY part cUNIV * * part cIMAGE f0 part cUNIV
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D Ssrnat.mul0n
A |- (!n. (((NUMERAL _0) * n) = (NUMERAL _0)))
T c= c* cNUMERAL c_0 f0 cNUMERAL c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D Ssrnat.mul1n
A |- (!n. (((NUMERAL (BIT1 _0)) * n) = n))
T c= c* cNUMERAL cBIT1 c_0 f0 f0
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D DIST_SYM
A |- (!x. (!y. ((distance (x , y)) = (distance (y , x)))))
T c= cdistance c, f0 f1 cdistance c, f1 f0
D Terminal.MOD_4_EXPLICIT
A |- ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0))))))))))
T c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
D Terminal.periodic_vv_inj
A |- (!vv. (!k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) ==> (!i. (!j. (((vv i) = (vv j)) = ((i MOD k) = (j MOD k))))))))
T c==> c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b0 f1 c/\ c< b1 f1 c= * f0 b0 * f0 b1 c= b0 b1 ! ! c= c= * f0 b0 * f0 b1 c= cMOD b0 f1 cMOD b1 f1
D Terminal.vv_quad_split012
A |- (!vv. ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\f. (LET_END ((((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((V SUBSET ball_annulus) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (V , (E , f))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))))))))))))) ==> (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) (((tau3 (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))
T cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cSUBSET b0 part cball_annulus c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b3 * f0 b4 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b3 * f0 b4 c/\ cconvex_local_fan c, b0 c, b1 b2 ! ! c==> c/\ c< b3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b4 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b3 * f0 b4 c= b3 b4 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * * part cIMAGE / c, * f0 b2 * f0 cSUC b2 part cUNIV * * part cIMAGE / * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY part cUNIV * * part cIMAGE f0 part cUNIV
D Terminal.vv_quad_split123
A |- (!vv. ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\f. (LET_END ((((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((V SUBSET ball_annulus) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (V , (E , f))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))))))))))))) ==> (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0)))))) (((tau3 (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))
T cLET / cLET_END cLET / cLET_END cLET / cLET_END c==> c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cSUBSET b0 part cball_annulus c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b3 * f0 b4 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b3 * f0 b4 c/\ cconvex_local_fan c, b0 c, b1 b2 ! ! c==> c/\ c< b3 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b4 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b3 * f0 b4 c= b3 b4 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 ctau3 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * * part cIMAGE / c, * f0 b2 * f0 cSUC b2 part cUNIV * * part cIMAGE / * * part cINSERT * f0 b1 * * part cINSERT * f0 cSUC b1 part cEMPTY part cUNIV * * part cIMAGE f0 part cUNIV
+ (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- (~ ((real_le (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c~ creal_le cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
+ |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) = (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))))
T c= c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1
- |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) ==> (!i. (!j. (((vv i) = (vv j)) = ((i MOD k) = (j MOD k))))))) ==> ((\k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) ==> (!i. (!j. (((vv i) = (vv j)) = ((i MOD k) = (j MOD k))))))) k)) = ((\k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) ==> (!i. (!j. (((vv i) = (vv j)) = ((i MOD k) = (j MOD k))))))) k))
T c= c==> ! c==> c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 ! ! c= c= * f0 b1 * f0 b2 c= cMOD b1 b0 cMOD b2 b0 * / c==> c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 ! ! c= c= * f0 b1 * f0 b2 c= cMOD b1 b0 cMOD b2 b0 f1 * / c==> c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 ! ! c= c= * f0 b1 * f0 b2 c= cMOD b1 b0 cMOD b2 b0 f1
- |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8394406)) /\ (((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)) \/ ((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8394406)) /\ (((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)) \/ ((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8394406)) /\ (((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)) \/ ((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (T = ((((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = ((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))
T c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cT c/\ c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))), (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), (convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))), ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((NUMERAL _0) < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv (NUMERAL _0)) , (vv ((NUMERAL _0) + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv ((NUMERAL _0) + (NUMERAL (BIT1 _0)))) , (vv ((NUMERAL _0) + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL _0))) (vv ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (vv ((NUMERAL _0) + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv ((NUMERAL _0) + (NUMERAL (BIT0 (BIT1 _0)))))) (vv ((NUMERAL _0) + (NUMERAL (BIT1 (BIT1 _0)))))) (vv (NUMERAL _0)))))))
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c==> creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))), ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i)))))))
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c==> c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))), (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), (convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) ==> (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i))))))))
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ |- (((NUMERAL _0) < (NUMERAL (BIT0 (BIT1 _0)))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cT
- |- (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ F), (~ (P b)), (P c), (b = c) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
- |- (~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- (((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F) = F)
T c= c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF cF
- |- ((~ (_8394426 = _8394427)) \/ ((BIT1 _8394426) = (BIT1 _8394427)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- (!i. (!vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j)))))))
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 ! ! ! c==> c? / c/\ c/\ cperiodic b1 b3 c/\ c~ c= b3 cNUMERAL c_0 ! ! c==> c/\ c< b4 b3 c/\ c< b4 b3 c= * b1 b4 * b1 b4 c= b4 b4 * f0 c= cMOD b0 b3 cMOD b2 b3 * f0 c= * b1 b0 * b1 b2
- |- ((_8394432 = _8394434) ==> ((~ (_8394433 = _8394435)) \/ ((_8394432 , _8394433) = (_8394434 , _8394435))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- ((!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j))))) = T)
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 c= ! c==> c? / c/\ c/\ cperiodic f0 b1 c/\ c~ c= b1 cNUMERAL c_0 ! ! c==> c/\ c< b2 b1 c/\ c< b3 b1 c= * f0 b2 * f0 b3 c= b2 b3 * f1 c= cMOD f2 b1 cMOD b0 b1 * f1 c= * f0 f2 * f0 b0 cT
+ |- ((((real_le x) y) \/ ((real_le y) x)) = ((~ ((real_le x) y)) ==> ((real_le y) x)))
T c= c\/ creal_le f0 f1 creal_le f1 f0 c==> c~ creal_le f0 f1 creal_le f1 f0
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((\k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD k) = ((NUMERAL _0) MOD k)))) (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / c/\ c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 cMOD cNUMERAL c_0 b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 ! ! c==> c/\ c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b2 f1 c/\ c< b3 f1 c= * f0 b2 * f0 b3 c= b2 b3 * b1 c= cMOD f2 f1 cMOD b0 f1 * b1 c= * f0 f2 * f0 b0
+ |- ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c)
T * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (P c), (b = c) |- (P b)
T c==> * f0 f1 c==> c= f2 f1 * f0 f2
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j)))))
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 ! c==> c? / c/\ c/\ cperiodic f0 b1 c/\ c~ c= b1 cNUMERAL c_0 ! ! c==> c/\ c< b2 b1 c/\ c< b3 b1 c= * f0 b2 * f0 b3 c= b2 b3 * f1 c= cMOD f2 b1 cMOD b0 b1 * f1 c= * f0 f2 * f0 b0
+ |- ((((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((IMAGE vv) UNIV) SUBSET ball_annulus) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))))))))))))) ==> (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0)))))) (((tau3 (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))))))
T c==> c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 ctau3 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0
- |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((b = c) ==> (!P. ((P c) ==> (P b)))) = T)
T c= c==> c= f0 f1 ! c==> * b0 f1 * b0 f0 cT
+ |- ((\P. (!i. (!vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j)))))))) P)
T * / ! ! ! c==> c? / c/\ c/\ cperiodic b2 b4 c/\ c~ c= b4 cNUMERAL c_0 ! ! c==> c/\ c< b5 b4 c/\ c< b5 b4 c= * b2 b5 * b2 b5 c= b5 b5 * b0 c= cMOD b1 b4 cMOD b3 b4 * b0 c= * b2 b1 * b2 b3 f0
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. v))
T * / ! c= * / * b0 b2 b1 * b0 b1 / b0
+ |- (!vv. ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> (~ (!x. (!y. ((distance (x , y)) = (distance (y , x)))))))))
T c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c~ ! ! c= cdistance c, b0 b1 cdistance c, b1 b0
- |- (T = ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((NUMERAL (BIT1 _0)) < (NUMERAL (BIT0 (BIT1 _0))))))))
T c= cT c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\vv. ((((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((IMAGE vv) UNIV) SUBSET ball_annulus) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))))))))))))) ==> (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0)))))) (((tau3 (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))))))) vv)
T * / c==> c/\ cperiodic b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cSUBSET * * part cIMAGE b0 part cUNIV part cball_annulus c/\ creal_lt cdistance c, * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * b0 b1 * b0 b2 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * b0 b1 * b0 b2 c/\ cconvex_local_fan c, * * part cIMAGE b0 part cUNIV c, * * part cIMAGE / * * part cINSERT * b0 b1 * * part cINSERT * b0 cSUC b1 part cEMPTY part cUNIV * * part cIMAGE / c, * b0 b1 * b0 cSUC b1 part cUNIV ! ! c==> c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * b0 b1 * b0 b2 c= b1 b2 c= creal_sub creal_add creal_mul crho_fun cvector_norm * b0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * b0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * b0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 * b0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * b0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 ctau3 * b0 cNUMERAL cBIT1 cBIT1 c_0 * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT1 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- ((\j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j)))))) j)
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 * / ! c==> c/\ c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b2 f1 c/\ c< b3 f1 c= * f0 b2 * f0 b3 c= b2 b3 * b1 c= cMOD f2 f1 cMOD b0 f1 * b1 c= * f0 f2 * f0 b0 f3
+ (((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) |- (((!j. (((vv i) = (vv j)) = ((i MOD k) = (j MOD k)))) ==> ((\j. (((vv i) = (vv j)) = ((i MOD k) = (j MOD k)))) j)) = ((\j. (((vv i) = (vv j)) = ((i MOD k) = (j MOD k)))) j))
T c==> c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b0 f1 c/\ c< b1 f1 c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c= c= * f0 f2 * f0 b0 c= cMOD f2 f1 cMOD b0 f1 * / c= c= * f0 f2 * f0 b0 c= cMOD f2 f1 cMOD b0 f1 f3 * / c= c= * f0 f2 * f0 b0 c= cMOD f2 f1 cMOD b0 f1 f3
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))), (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), (convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((IMAGE vv) UNIV) SUBSET ball_annulus) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))))))))))))
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1
- |- (((vv (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (vv (NUMERAL _0))) = ((\x. ((\v. v) x)) ((vv (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (vv (NUMERAL _0)))))
T c= c= * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 * / * / b1 b0 c= * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0
+ ((\k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) k) |- ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))
T c==> * / c/\ c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 * f1 c= cMOD f2 b0 cMOD f3 b0 f4 c/\ c/\ cperiodic f0 f4 c/\ c~ c= f4 cNUMERAL c_0 ! ! c==> c/\ c< b0 f4 c/\ c< b1 f4 c= * f0 b0 * f0 b1 c= b0 b1 * f1 c= cMOD f2 f4 cMOD f3 f4
+ |- ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0))))))
T c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (!vv. ((((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((IMAGE vv) UNIV) SUBSET ball_annulus) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))))))))))))) ==> (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i)))))))))
T c==> c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
+ (_8394420 = _8394422), (_8394421 = _8394423) |- ((_8394421 = _8394423) /\ (((real_le _8394422) _8394423) \/ (~ ((real_le _8394420) _8394421))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) |- (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) /\ ((!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) ==> (P ((vv i) = (vv j)))))
T c==> c/\ c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b0 f1 c/\ c< b1 f1 c= * f0 b0 * f0 b1 c= b0 b1 * f2 c= cMOD f3 f1 cMOD f4 f1 c/\ c/\ c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b0 f1 c/\ c< b1 f1 c= * f0 b0 * f0 b1 c= b0 b1 * f2 c= cMOD f3 f1 cMOD f4 f1 c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 * f2 c= * f0 f3 * f0 f4
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) |- ((\j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j)))))) j)
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 * / c==> c~ c= * f0 f1 * f0 b0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 b0 f2
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- (_8394432 = _8394434), (_8394433 = _8394435) |- ((_8394433 = _8394435) /\ ((_8394432 , _8394433) = (_8394434 , _8394435)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))), (?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) |- ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) /\ (P ((vv i) = (vv j))))
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 c==> c? / c/\ c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 * f1 c= cMOD f2 b0 cMOD f3 b0 c/\ c? / c/\ c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 * f1 c= cMOD f2 b0 cMOD f3 b0 * f1 c= * f0 f2 * f0 f3
+ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD k) = ((NUMERAL _0) MOD k))))
T c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c/\ c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 cMOD cNUMERAL c_0 b0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((int_le (int_of_num (NUMERAL _0))) _8394406) ==> (_8394406 = _8394406))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c= f0 f0
+ (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- (((distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))) = (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) /\ (~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c/\ c= cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))), (convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))), ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i)))))))
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c==> cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c==> c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
- |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i)))))))
T c==> c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
+ |- ((((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((IMAGE vv) UNIV) SUBSET ball_annulus) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))))))))))))) ==> (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) (((tau3 (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))))))
T c==> c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0
+ |- ((((NUMERAL _0) < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv (NUMERAL _0)) , (vv ((NUMERAL _0) + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv ((NUMERAL _0) + (NUMERAL (BIT1 _0)))) , (vv ((NUMERAL _0) + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL _0))) (vv ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (vv ((NUMERAL _0) + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv ((NUMERAL _0) + (NUMERAL (BIT0 (BIT1 _0)))))) (vv ((NUMERAL _0) + (NUMERAL (BIT1 (BIT1 _0)))))) (vv (NUMERAL _0))))))) = ((\i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i))))))) (NUMERAL _0)))
T c= c/\ c< cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0 cNUMERAL c_0
- |- ((_8394424 = _8394425) ==> ((BIT0 _8394424) = (BIT0 _8394425)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))) |- (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))
T c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> c/\ c< f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 f1 * f0 f2 c= f1 f2
- ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) |- (((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) /\ ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))
T c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c/\ c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
+ |- ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> F)
T c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cF
+ ((\k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) k) |- ((((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> ((!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) ==> (P ((vv i) = (vv j))))) = ((!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) ==> (P ((vv i) = (vv j)))))
T c==> * / c/\ c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 * f1 c= cMOD f2 b0 cMOD f3 b0 f4 c= c==> c/\ c/\ cperiodic f0 f4 c/\ c~ c= f4 cNUMERAL c_0 ! ! c==> c/\ c< b0 f4 c/\ c< b1 f4 c= * f0 b0 * f0 b1 c= b0 b1 * f1 c= cMOD f2 f4 cMOD f3 f4 c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 * f1 c= * f0 f2 * f0 f3 c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 * f1 c= * f0 f2 * f0 f3
+ |- ((!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))) = T)
T c= ! c==> c/\ c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b1 f1 c/\ c< b2 f1 c= * f0 b1 * f0 b2 c= b1 b2 * b0 c= cMOD f2 f1 cMOD f3 f1 * b0 c= * f0 f2 * f0 f3 cT
- (b = c) |- ((P c) = (P c))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- (!vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j))))))
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 ! ! c==> c? / c/\ c/\ cperiodic b0 b2 c/\ c~ c= b2 cNUMERAL c_0 ! ! c==> c/\ c< b3 b2 c/\ c< b4 b2 c= * b0 b3 * b0 b4 c= b3 b4 * f0 c= cMOD f1 b2 cMOD b1 b2 * f0 c= * b0 f1 * b0 b1
- |- (((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- (((!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))) ==> ((\P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))) P)) = ((\P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))) P))
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 c= c==> ! c==> c/\ c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b1 f1 c/\ c< b2 f1 c= * f0 b1 * f0 b2 c= b1 b2 * b0 c= cMOD f2 f1 cMOD f3 f1 * b0 c= * f0 f2 * f0 f3 * / c==> c/\ c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b1 f1 c/\ c< b2 f1 c= * f0 b1 * f0 b2 c= b1 b2 * b0 c= cMOD f2 f1 cMOD f3 f1 * b0 c= * f0 f2 * f0 f3 f4 * / c==> c/\ c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b1 f1 c/\ c< b2 f1 c= * f0 b1 * f0 b2 c= b1 b2 * b0 c= cMOD f2 f1 cMOD f3 f1 * b0 c= * f0 f2 * f0 f3 f4
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- ((!i. (!vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j))))))) = T)
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 c= ! ! ! c==> c? / c/\ c/\ cperiodic b1 b3 c/\ c~ c= b3 cNUMERAL c_0 ! ! c==> c/\ c< b4 b3 c/\ c< b4 b3 c= * b1 b4 * b1 b4 c= b4 b4 * f0 c= cMOD b0 b3 cMOD b2 b3 * f0 c= * b1 b0 * b1 b2 cT
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))), (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), (convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))), ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) /\ (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i))))))))
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c==> creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- ((!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) /\ (!P. (!i. (!vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j)))))))))
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 c/\ ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 ! ! ! ! c==> c? / c/\ c/\ cperiodic b2 b4 c/\ c~ c= b4 cNUMERAL c_0 ! ! c==> c/\ c< b5 b4 c/\ c< b5 b4 c= * b2 b5 * b2 b5 c= b5 b5 * b0 c= cMOD b1 b4 cMOD b3 b4 * b0 c= * b2 b1 * b2 b3
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))), ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i)))))))
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c==> c/\ ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
+ |- (((~ (_8394420 = _8394422)) \/ ((~ (_8394421 = _8394423)) \/ (((real_le _8394422) _8394423) \/ (~ ((real_le _8394420) _8394421))))) = ((~ ((real_le _8394420) _8394421)) \/ ((~ (_8394420 = _8394422)) \/ ((~ (_8394421 = _8394423)) \/ ((real_le _8394422) _8394423)))))
T c= c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2 c\/ c~ creal_le f0 f2 c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 creal_le f1 f3
+ (!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) |- (((!x. (((real_le x) _8394416) \/ ((real_le _8394416) x))) ==> ((\x. (((real_le x) _8394416) \/ ((real_le _8394416) x))) _8394417)) = ((\x. (((real_le x) _8394416) \/ ((real_le _8394416) x))) _8394417))
T c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c= c==> ! c\/ creal_le b0 f0 creal_le f0 b0 * / c\/ creal_le b0 f0 creal_le f0 b0 f1 * / c\/ creal_le b0 f0 creal_le f0 b0 f1
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?k. t) = t)
T c= c? / f0 f0
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) |- (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 ! c==> c~ c= * f0 f1 * f0 b0 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 f1 * f0 b0
+ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))) |- ((\i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))) i)
T c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 * / ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 f1
+ |- ((!x. ((~ ((real_le x) y)) ==> ((real_le y) x))) = T)
T c= ! c==> c~ creal_le b0 f0 creal_le f0 b0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) = ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))
T c= c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))) = (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))), (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) /\ (~ (!x. (!y. ((distance (x , y)) = (distance (y , x)))))))
T c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c/\ ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c~ ! ! c= cdistance c, b0 b1 cdistance c, b1 b0
- |- ((_8394436 = _8394437) ==> ((distance _8394436) = (distance _8394437)))
T c==> c= f0 f1 c= cdistance f0 cdistance f1
+ |- ((~ (_8394420 = _8394422)) \/ ((~ (_8394421 = _8394423)) \/ (((real_le _8394422) _8394423) \/ (~ ((real_le _8394420) _8394421)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
+ |- ((\i. (!vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j))))))) i)
T * / ! ! c==> c? / c/\ c/\ cperiodic b1 b3 c/\ c~ c= b3 cNUMERAL c_0 ! ! c==> c/\ c< b4 b3 c/\ c< b4 b3 c= * b1 b4 * b1 b4 c= b4 b4 * f0 c= cMOD b0 b3 cMOD b2 b3 * f0 c= * b1 b0 * b1 b2 f1
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- ((!vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j)))))) = T)
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 c= ! ! c==> c? / c/\ c/\ cperiodic b0 b2 c/\ c~ c= b2 cNUMERAL c_0 ! ! c==> c/\ c< b3 b2 c/\ c< b4 b2 c= * b0 b3 * b0 b4 c= b3 b4 * f0 c= cMOD f1 b2 cMOD b1 b2 * f0 c= * b0 f1 * b0 b1 cT
- (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))), ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) |- (((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) /\ (~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
+ ((((IMAGE vv) UNIV) SUBSET ball_annulus) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))))))))))))), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i)))))))
T c==> c/\ cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (_8394432 = _8394434)) \/ ((~ (_8394433 = _8394435)) \/ ((_8394432 , _8394433) = (_8394434 , _8394435))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((vv (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (vv (NUMERAL _0)))
T c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))), (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), (convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i))))))))
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
+ |- (!b. (!c. ((b = c) ==> (!P. ((P c) ==> (P b))))))
T c==> c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (~ (P b)), (P c), (b = c) |- ((~ (P b)) /\ F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ * f0 f1 cF
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) |- (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cT
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))), (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), (convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (T = (((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((IMAGE vv) UNIV) SUBSET ball_annulus) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))))))))))))))
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cT c/\ cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- |- (T = (~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))))
T c= cT c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))
T c==> c==> f0 c= f1 f2 ! c==> c/\ f0 * b0 f2 * b0 f1
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))), (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), (~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))), (convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((\i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i))))))) (NUMERAL (BIT1 _0)))
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c==> cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0 cNUMERAL cBIT1 c_0
- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ (b = c) |- ((b = c) /\ (!P. ((P c) ==> (P b))))
T c==> c= f0 f1 c/\ c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))), (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) /\ F)
T c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c/\ ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
+ (_8394420 = _8394422) |- ((_8394420 = _8394422) /\ ((~ (_8394421 = _8394423)) \/ (((real_le _8394422) _8394423) \/ (~ ((real_le _8394420) _8394421)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (_8394420 = _8394422) |- ((_8394421 = _8394423) ==> (((real_le _8394422) _8394423) \/ (~ ((real_le _8394420) _8394421))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2
+ (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- (((~ ((real_le (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0)))))) = ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c= c==> c~ creal_le cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0
+ (!x. (!y. ((distance (x , y)) = (distance (y , x))))) |- ((distance (_8394418 , _8394419)) = (distance (_8394419 , _8394418)))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c= cdistance c, f0 f1 cdistance c, f1 f0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) |- ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0)))))
T c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0
+ (!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) |- (!y. (!x. (((real_le x) y) \/ ((real_le y) x))))
T c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 ! ! c\/ creal_le b1 b0 creal_le b0 b1
+ (!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))), (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- (~ (!x. (!y. ((distance (x , y)) = (distance (y , x))))))
T c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c~ ! ! c= cdistance c, b0 b1 cdistance c, b1 b0
+ (P c), (b = c) |- ((~ (P b)) ==> F)
T c==> * f0 f1 c==> c= f2 f1 c==> c~ * f0 f2 cF
- (!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))), (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- ((~ ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0)))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))
T c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> c~ creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0
- |- ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
+ (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (~ ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0)))))))
T c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c/\ c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c~ creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- (((!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j)))))))) ==> ((\i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j)))))))) i)) = ((\i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j)))))))) i))
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 c= c==> ! ! ! ! c==> c/\ c/\ cperiodic b1 f0 c/\ c~ c= f0 cNUMERAL c_0 ! ! c==> c/\ c< b4 f0 c/\ c< b4 f0 c= * b1 b4 * b1 b4 c= b4 b4 * b3 c= cMOD b0 f0 cMOD b2 f0 * b3 c= * b1 b0 * b1 b2 * / ! ! ! c==> c/\ c/\ cperiodic b1 f0 c/\ c~ c= f0 cNUMERAL c_0 ! ! c==> c/\ c< b4 f0 c/\ c< b4 f0 c= * b1 b4 * b1 b4 c= b4 b4 * b3 c= cMOD b0 f0 cMOD b2 f0 * b3 c= * b1 b0 * b1 b2 f1 * / ! ! ! c==> c/\ c/\ cperiodic b1 f0 c/\ c~ c= f0 cNUMERAL c_0 ! ! c==> c/\ c< b4 f0 c/\ c< b4 f0 c= * b1 b4 * b1 b4 c= b4 b4 * b3 c= cMOD b0 f0 cMOD b2 f0 * b3 c= * b1 b0 * b1 b2 f1
+ (~ (P b)), (b = c) |- (~ (P c))
T c==> c~ * f0 f1 c==> c= f1 f2 c~ * f0 f2
+ ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) |- (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cT
+ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))) |- ((((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)) = T)
T c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c= c==> c/\ c< f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< f2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 f1 * f0 f2 c= f1 f2 cT
- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (T = (((~ (_8394420 = _8394422)) \/ ((~ (_8394421 = _8394423)) \/ (((real_le _8394422) _8394423) \/ (~ ((real_le _8394420) _8394421))))) = ((~ ((real_le _8394420) _8394421)) \/ ((~ (_8394420 = _8394422)) \/ ((~ (_8394421 = _8394423)) \/ ((real_le _8394422) _8394423))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ creal_le f1 f3 c~ creal_le f0 f2 c\/ c~ creal_le f0 f2 c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 creal_le f1 f3
+ |- ((((~ (~ ((~ ((real_le x) y)) /\ (~ ((real_le y) x))))) ==> F) ==> (~ ((~ ((real_le x) y)) /\ (~ ((real_le y) x))))) = (~ ((~ ((real_le x) y)) /\ (~ ((real_le y) x)))))
T c= c==> c==> c~ c~ c/\ c~ creal_le f0 f1 c~ creal_le f1 f0 cF c~ c/\ c~ creal_le f0 f1 c~ creal_le f1 f0 c~ c/\ c~ creal_le f0 f1 c~ creal_le f1 f0
- |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _8394406) ==> (_8394406 = _8394406))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c= f0 f0
- |- (((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0)))
T c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) = ((!b. (!c. ((T ==> (b = c)) ==> (!P. ((T /\ (P c)) ==> (P b)))))) /\ (!b. (!c. ((F ==> (b = c)) ==> (!P. ((F /\ (P c)) ==> (P b))))))))
T c= ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ ! ! c==> c==> cT c= b0 b1 ! c==> c/\ cT * b2 b1 * b2 b0 ! ! c==> c==> cF c= b0 b1 ! c==> c/\ cF * b2 b1 * b2 b0
+ |- (((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> (~ (!x. (!y. ((distance (x , y)) = (distance (y , x)))))))) = T)
T c= c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c~ ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cT
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)) = ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))
T c= c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
+ ((\k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) k) |- (((\k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) k) /\ ((!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) ==> (P ((vv i) = (vv j)))))
T c==> * / c/\ c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 * f1 c= cMOD f2 b0 cMOD f3 b0 f4 c/\ * / c/\ c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 * f1 c= cMOD f2 b0 cMOD f3 b0 f4 c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 * f1 c= * f0 f2 * f0 f3
+ |- ((~ ((real_le _8394420) _8394421)) \/ ((~ (_8394420 = _8394422)) \/ ((~ (_8394421 = _8394423)) \/ ((real_le _8394422) _8394423))))
T c\/ c~ creal_le f0 f1 c\/ c~ c= f0 f2 c\/ c~ c= f1 f3 creal_le f2 f3
- (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8394406)) /\ (((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)) \/ ((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8394406)) /\ (((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)) \/ ((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
- |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _8394406)) /\ (((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)) \/ ((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)))) = (~ (((int_le (int_of_num (NUMERAL _0))) _8394406) ==> (_8394406 = _8394406))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c= f0 f0
+ |- ((!vv. ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> (~ (!x. (!y. ((distance (x , y)) = (distance (y , x))))))))) = (!vv. ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))))
T c= ! c==> c~ c==> c~ creal_le cdistance c, * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b2 b1 creal_le b1 b2 c~ ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 ! c==> c~ c==> c~ creal_le cdistance c, * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b2 b1 creal_le b1 b2 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 cF
+ (((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) |- (!j. (((vv i) = (vv j)) = ((i MOD k) = (j MOD k))))
T c==> c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b0 f1 c/\ c< b1 f1 c= * f0 b0 * f0 b1 c= b0 b1 ! c= c= * f0 f2 * f0 b0 c= cMOD f2 f1 cMOD b0 f1
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))), (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), (~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))), (convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i))))))))
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c==> cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- (((~ (P b)) ==> F) = (P b))
T c= c==> c~ * f0 f1 cF * f0 f1
+ (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)
T c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- |- (((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((~ (~ ((~ ((real_le x) y)) /\ (~ ((real_le y) x))))) ==> F)
T c==> c~ c~ c/\ c~ creal_le f0 f1 c~ creal_le f1 f0 cF
- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ |- ((\vv. (!k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) ==> (!i. (!j. (((vv i) = (vv j)) = ((i MOD k) = (j MOD k)))))))) vv)
T * / ! c==> c/\ cperiodic b0 b1 c/\ c~ c= b1 cNUMERAL c_0 ! ! c==> c/\ c< b2 b1 c/\ c< b3 b1 c= * b0 b2 * b0 b3 c= b2 b3 ! ! c= c= * b0 b2 * b0 b3 c= cMOD b2 b1 cMOD b3 b1 f0
+ ((vv (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (vv (NUMERAL _0))) |- ((((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0)))))) (((tau3 (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0))))))) = (((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0)))))) (((tau3 (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (vv (NUMERAL (BIT1 _0))))))))
T c==> c= * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c= c/\ creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 ctau3 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 c/\ creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 ctau3 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0
+ |- ((\vv. ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) vv)
T * / c==> c~ c==> c~ creal_le cdistance c, * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b2 b1 creal_le b1 b2 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 cF f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- (((!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j)))))) ==> ((\j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j)))))) j)) = ((\j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j)))))) j))
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 c= c==> ! ! c==> c/\ c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b2 f1 c/\ c< b3 f1 c= * f0 b2 * f0 b3 c= b2 b3 * b1 c= cMOD f2 f1 cMOD b0 f1 * b1 c= * f0 f2 * f0 b0 * / ! c==> c/\ c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b2 f1 c/\ c< b3 f1 c= * f0 b2 * f0 b3 c= b2 b3 * b1 c= cMOD f2 f1 cMOD b0 f1 * b1 c= * f0 f2 * f0 b0 f3 * / ! c==> c/\ c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b2 f1 c/\ c< b3 f1 c= * f0 b2 * f0 b3 c= b2 b3 * b1 c= cMOD f2 f1 cMOD b0 f1 * b1 c= * f0 f2 * f0 b0 f3
+ (!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) |- ((~ ((real_le _8394417) _8394416)) ==> ((real_le _8394416) _8394417))
T c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> c~ creal_le f0 f1 creal_le f1 f0
+ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))))))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i)))))))
T c==> c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!i. (!vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j))))))) ==> ((\i. (!vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j))))))) i)) = ((\i. (!vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j))))))) i))
T c= c==> ! ! ! c==> c? / c/\ c/\ cperiodic b1 b3 c/\ c~ c= b3 cNUMERAL c_0 ! ! c==> c/\ c< b4 b3 c/\ c< b4 b3 c= * b1 b4 * b1 b4 c= b4 b4 * f0 c= cMOD b0 b3 cMOD b2 b3 * f0 c= * b1 b0 * b1 b2 * / ! ! c==> c? / c/\ c/\ cperiodic b1 b3 c/\ c~ c= b3 cNUMERAL c_0 ! ! c==> c/\ c< b4 b3 c/\ c< b4 b3 c= * b1 b4 * b1 b4 c= b4 b4 * f0 c= cMOD b0 b3 cMOD b2 b3 * f0 c= * b1 b0 * b1 b2 f1 * / ! ! c==> c? / c/\ c/\ cperiodic b1 b3 c/\ c~ c= b3 cNUMERAL c_0 ! ! c==> c/\ c< b4 b3 c/\ c< b4 b3 c= * b1 b4 * b1 b4 c= b4 b4 * f0 c= cMOD b0 b3 cMOD b2 b3 * f0 c= * b1 b0 * b1 b2 f1
+ ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) |- (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cT
- |- (((~ ((NUMERAL _0) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((NUMERAL _0) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)) = (((NUMERAL _0) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F))
T c= c==> c~ c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF c= c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
+ |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
+ |- ((((NUMERAL (BIT1 _0)) < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0)))) , (vv ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL (BIT1 _0)))) (vv ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))) (vv ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))))) (vv ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))))) (vv (NUMERAL (BIT1 _0)))))))) = ((\i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i))))))) (NUMERAL (BIT1 _0))))
T c= c/\ c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 * / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0 cNUMERAL cBIT1 c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (((!vv. ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) ==> ((\vv. ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) vv)) = ((\vv. ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) vv))
T c= c==> ! c==> c~ c==> c~ creal_le cdistance c, * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b2 b1 creal_le b1 b2 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 cF * / c==> c~ c==> c~ creal_le cdistance c, * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b2 b1 creal_le b1 b2 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 cF f0 * / c==> c~ c==> c~ creal_le cdistance c, * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b2 b1 creal_le b1 b2 c==> ! ! c= cdistance c, b1 b2 cdistance c, b2 b1 cF f0
+ (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- (~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))))
T c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
+ |- (((!f. (!y. (((\x. (f x)) y) = (f y)))) ==> ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. v))) = ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. v)))
T c= c==> ! ! c= * / * b0 b2 b1 * b0 b1 * / ! c= * / * b0 b2 b1 * b0 b1 / b0 * / ! c= * / * b0 b2 b1 * b0 b1 / b0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j)))))))) = T)
T c= ! ! ! ! c==> c/\ c/\ cperiodic b1 f0 c/\ c~ c= f0 cNUMERAL c_0 ! ! c==> c/\ c< b4 f0 c/\ c< b4 f0 c= * b1 b4 * b1 b4 c= b4 b4 * b3 c= cMOD b0 f0 cMOD b2 f0 * b3 c= * b1 b0 * b1 b2 cT
- |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) x)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i)))))))
T c==> c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
- ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) |- ((((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))
T c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
+ |- ((\vv. ((((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((IMAGE vv) UNIV) SUBSET ball_annulus) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))))))))))))) ==> (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) (((tau3 (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))))))) vv)
T * / c==> c/\ cperiodic b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ cSUBSET * * part cIMAGE b0 part cUNIV part cball_annulus c/\ creal_lt cdistance c, * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * b0 b1 * b0 b2 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * b0 b1 * b0 b2 c/\ cconvex_local_fan c, * * part cIMAGE b0 part cUNIV c, * * part cIMAGE / * * part cINSERT * b0 b1 * * part cINSERT * b0 cSUC b1 part cEMPTY part cUNIV * * part cIMAGE / c, * b0 b1 * b0 cSUC b1 part cUNIV ! ! c==> c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * b0 b1 * b0 b2 c= b1 b2 c= creal_sub creal_add creal_mul crho_fun cvector_norm * b0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * b0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * b0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 * b0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * b0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * b0 cNUMERAL c_0 * b0 cNUMERAL cBIT1 c_0 * b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 * b0 cNUMERAL c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i)))))))
T c==> c/\ ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
- (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- (((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) ==> (~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
+ (P c), (b = c) |- ((P c) /\ (P b))
T c==> * f0 f1 c==> c= f2 f1 c/\ * f0 f1 * f0 f2
- |- (((int_of_num x) = (int_of_num x)) = ((((NUMERAL _0) + x) = x) /\ ((NUMERAL _0) < (NUMERAL (BIT0 (BIT1 _0))))))
T c= c= cint_of_num f0 cint_of_num f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c< cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
- (_8394428 = _8394429) |- ((_8394428 = _8394429) /\ ((NUMERAL _8394428) = (NUMERAL _8394429)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (_8394430 = _8394431) |- ((_8394430 = _8394431) /\ ((vv _8394430) = (vv _8394431)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * f2 f0 * f2 f1
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- (((!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))) ==> ((\vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))) vv)) = ((\vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))) vv))
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 c= c==> ! ! ! c==> c/\ c/\ cperiodic b0 f0 c/\ c~ c= f0 cNUMERAL c_0 ! ! c==> c/\ c< b3 f0 c/\ c< b4 f0 c= * b0 b3 * b0 b4 c= b3 b4 * b2 c= cMOD f1 f0 cMOD b1 f0 * b2 c= * b0 f1 * b0 b1 * / ! ! c==> c/\ c/\ cperiodic b0 f0 c/\ c~ c= f0 cNUMERAL c_0 ! ! c==> c/\ c< b3 f0 c/\ c< b4 f0 c= * b0 b3 * b0 b4 c= b3 b4 * b2 c= cMOD f1 f0 cMOD b1 f0 * b2 c= * b0 f1 * b0 b1 f2 * / ! ! c==> c/\ c/\ cperiodic b0 f0 c/\ c~ c= f0 cNUMERAL c_0 ! ! c==> c/\ c< b3 f0 c/\ c< b4 f0 c= * b0 b3 * b0 b4 c= b3 b4 * b2 c= cMOD f1 f0 cMOD b1 f0 * b2 c= * b0 f1 * b0 b1 f2
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- ((\vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))) vv)
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 * / ! ! c==> c/\ c/\ cperiodic b0 f0 c/\ c~ c= f0 cNUMERAL c_0 ! ! c==> c/\ c< b3 f0 c/\ c< b4 f0 c= * b0 b3 * b0 b4 c= b3 b4 * b2 c= cMOD f1 f0 cMOD b1 f0 * b2 c= * b0 f1 * b0 b1 f2
- (_8394426 = _8394427) |- ((_8394426 = _8394427) /\ ((BIT1 _8394426) = (BIT1 _8394427)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0))))))))
T c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))
T c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
+ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))))))))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i)))))))
T c==> c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
+ |- (((!P. (!i. (!vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j)))))))) ==> ((\P. (!i. (!vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j)))))))) P)) = ((\P. (!i. (!vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j)))))))) P))
T c= c==> ! ! ! ! c==> c? / c/\ c/\ cperiodic b2 b4 c/\ c~ c= b4 cNUMERAL c_0 ! ! c==> c/\ c< b5 b4 c/\ c< b5 b4 c= * b2 b5 * b2 b5 c= b5 b5 * b0 c= cMOD b1 b4 cMOD b3 b4 * b0 c= * b2 b1 * b2 b3 * / ! ! ! c==> c? / c/\ c/\ cperiodic b2 b4 c/\ c~ c= b4 cNUMERAL c_0 ! ! c==> c/\ c< b5 b4 c/\ c< b5 b4 c= * b2 b5 * b2 b5 c= b5 b5 * b0 c= cMOD b1 b4 cMOD b3 b4 * b0 c= * b2 b1 * b2 b3 f0 * / ! ! ! c==> c? / c/\ c/\ cperiodic b2 b4 c/\ c~ c= b4 cNUMERAL c_0 ! ! c==> c/\ c< b5 b4 c/\ c< b5 b4 c= * b2 b5 * b2 b5 c= b5 b5 * b0 c= cMOD b1 b4 cMOD b3 b4 * b0 c= * b2 b1 * b2 b3 f0
- |- ((~ (_8394428 = _8394429)) \/ ((NUMERAL _8394428) = (NUMERAL _8394429)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 cF
+ |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0))
T c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((NUMERAL (BIT1 _0)) < (NUMERAL (BIT0 (BIT1 _0)))))))
T c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ (!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))), (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), (~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))), (convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i)))))))
T c==> ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c==> cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
+ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) |- ((((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0)))))) (((tau3 (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))))) = (((NUMERAL _0) < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv (NUMERAL _0)) , (vv ((NUMERAL _0) + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv ((NUMERAL _0) + (NUMERAL (BIT1 _0)))) , (vv ((NUMERAL _0) + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL _0))) (vv ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) (vv ((NUMERAL _0) + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv ((NUMERAL _0) + (NUMERAL (BIT0 (BIT1 _0)))))) (vv ((NUMERAL _0) + (NUMERAL (BIT1 (BIT1 _0)))))) (vv (NUMERAL _0))))))))
T c==> creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c= c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 cNUMERAL c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0
+ |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ |- (~ (~ (((real_le x) y) \/ ((real_le y) x))))
T c~ c~ c\/ creal_le f0 f1 creal_le f1 f0
+ |- (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j)))))))))
T c==> c/\ c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b0 f1 c/\ c< b1 f1 c= * f0 b0 * f0 b1 c= b0 b1 * f2 c= cMOD f3 f1 cMOD f4 f1 * f2 c= * f0 f3 * f0 f4
- |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) x)) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) x))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((\x. ((\v. v) x)) ((vv (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (vv (NUMERAL _0))))
T c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / * / b1 b0 c= * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0
- |- ((_8394428 = _8394429) ==> ((NUMERAL _8394428) = (NUMERAL _8394429)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (_8394436 = _8394437)) \/ ((distance _8394436) = (distance _8394437)))
T c\/ c~ c= f0 f1 c= cdistance f0 cdistance f1
- (~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) |- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) /\ F)
T c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ |- (((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j))))
T c==> c? / c/\ c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 * f1 c= cMOD f2 b0 cMOD f3 b0 * f1 c= * f0 f2 * f0 f3
+ |- (((~ ((real_le x) y)) ==> ((real_le y) x)) = T)
T c= c==> c~ creal_le f0 f1 creal_le f1 f0 cT
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ (~ (P b)), (P c), (b = c) |- F
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 cF
- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((p ==> (~ p)) = (~ p))
T c= c==> f0 c~ f0 c~ f0
- |- ((_8394430 = _8394431) ==> ((vv _8394430) = (vv _8394431)))
T c==> c= f0 f1 c= * f2 f0 * f2 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))), (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- F
T c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cF
+ |- ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD k) = ((NUMERAL _0) MOD k)))) = (?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ ((\x. ((\v. v) x)) (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD k) = ((NUMERAL _0) MOD k))))))
T c= c? / c/\ c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 cMOD cNUMERAL c_0 b0 c? / c/\ c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 * / * / b2 b1 c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 cMOD cNUMERAL c_0 b0
- |- (T = ((((real_le _8394417) _8394416) \/ ((real_le _8394416) _8394417)) = (((real_le _8394416) _8394417) \/ ((real_le _8394417) _8394416))))
T c= cT c= c\/ creal_le f0 f1 creal_le f1 f0 c\/ creal_le f1 f0 creal_le f0 f1
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ (b = c) |- ((P c) ==> (P b))
T c==> c= f0 f1 c==> * f2 f1 * f2 f0
+ |- (((real_le x) y) \/ ((real_le y) x))
T c\/ creal_le f0 f1 creal_le f1 f0
+ |- ((\k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) ==> (!i. (!j. (((vv i) = (vv j)) = ((i MOD k) = (j MOD k))))))) k)
T * / c==> c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 ! ! c= c= * f0 b1 * f0 b2 c= cMOD b1 b0 cMOD b2 b0 f1
- |- (((NUMERAL _0) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))), ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) |- ((!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) /\ (P ((vv i) = (vv j))))
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 c==> c/\ c/\ cperiodic f0 f1 c/\ c~ c= f1 cNUMERAL c_0 ! ! c==> c/\ c< b0 f1 c/\ c< b1 f1 c= * f0 b0 * f0 b1 c= b0 b1 * f2 c= cMOD f3 f1 cMOD f4 f1 c/\ ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 * f2 c= * f0 f3 * f0 f4
+ |- ((\t. (t \/ (~ t))) ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))))
T * / c\/ b0 c~ b0 creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
+ |- (!y. (((\x. ((\v. v) x)) y) = ((\v. v) y)))
T c= * / * / b1 b0 f0 * / b0 f0
- (b = c) |- (F = F)
T c==> c= f0 f1 c= cF cF
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- (((real_le (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) ==> (~ ((real_le (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> creal_le cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c~ creal_le cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j))))) j)
T * / c==> c? / c/\ c/\ cperiodic f0 b1 c/\ c~ c= b1 cNUMERAL c_0 ! ! c==> c/\ c< b2 b1 c/\ c< b3 b1 c= * f0 b2 * f0 b3 c= b2 b3 * f1 c= cMOD f2 b1 cMOD b0 b1 * f1 c= * f0 f2 * f0 b0 f3
+ (~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) |- ((((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0)))))) (((tau3 (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))))) = (((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0)))))) (((tau3 (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0))))))))
T c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c= c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 ctau3 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 c/\ creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 ctau3 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))) |- (((!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))) ==> ((\j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))) j)) = ((\j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))) j))
T c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c= c==> ! c==> c/\ c< f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 f1 * f0 b0 c= f1 b0 * / c==> c/\ c< f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 f1 * f0 b0 c= f1 b0 f2 * / c==> c/\ c< f1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 f1 * f0 b0 c= f1 b0 f2
+ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j)))), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ ((\x. ((\v. v) x)) (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD k) = ((NUMERAL _0) MOD k))))) ==> ((\x. ((\v. v) x)) ((vv (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (vv (NUMERAL _0))))) = ((\x. ((\v. v) x)) ((vv (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (vv (NUMERAL _0)))))
T c==> ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c==> c? / c/\ c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 * / * / b2 b1 c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 cMOD cNUMERAL c_0 b0 * / * / b1 b0 c= * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 * / * / b1 b0 c= * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0
+ (!k. (!i. (!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))))) |- (((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j)))) = T)
T c==> ! ! ! ! ! c==> c/\ c/\ cperiodic b2 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b5 b0 c/\ c< b5 b0 c= * b2 b5 * b2 b5 c= b5 b5 * b4 c= cMOD b1 b0 cMOD b3 b0 * b4 c= * b2 b1 * b2 b3 c= c==> c? / c/\ c/\ cperiodic f0 b0 c/\ c~ c= b0 cNUMERAL c_0 ! ! c==> c/\ c< b1 b0 c/\ c< b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 * f1 c= cMOD f2 b0 cMOD f3 b0 * f1 c= * f0 f2 * f0 f3 cT
+ ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = T)
T c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cT
- |- ((_8394426 = _8394427) ==> ((BIT1 _8394426) = (BIT1 _8394427)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8394406)) /\ (((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)) \/ ((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ |- ((\vv. (!j. ((?k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k))))) ==> (P ((vv i) = (vv j)))))) vv)
T * / ! c==> c? / c/\ c/\ cperiodic b0 b2 c/\ c~ c= b2 cNUMERAL c_0 ! ! c==> c/\ c< b3 b2 c/\ c< b4 b2 c= * b0 b3 * b0 b4 c= b3 b4 * f0 c= cMOD f1 b2 cMOD b1 b2 * f0 c= * b0 f1 * b0 b1 f2
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
+ |- (((!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) ==> ((\a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) a)) = ((\a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) a))
T c= c==> ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 * / ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 f0 * / ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 f0
+ |- ((\y. (((\x. ((\v. v) x)) y) = ((\v. v) y))) ((vv (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (vv (NUMERAL _0))))
T * / c= * / * / b2 b1 b0 * / b1 b0 c= * f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0
+ |- (((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) \/ (~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))))
T c\/ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))) b)
T * / ! c==> c==> f0 c= b0 b1 ! c==> c/\ f0 * b2 b1 * b2 b0 f1
+ |- (~ ((~ ((real_le x) y)) /\ (~ ((real_le y) x))))
T c~ c/\ c~ creal_le f0 f1 c~ creal_le f1 f0
+ |- (((!vv. (!k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) ==> (!i. (!j. (((vv i) = (vv j)) = ((i MOD k) = (j MOD k)))))))) ==> ((\vv. (!k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) ==> (!i. (!j. (((vv i) = (vv j)) = ((i MOD k) = (j MOD k)))))))) vv)) = ((\vv. (!k. ((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) ==> (!i. (!j. (((vv i) = (vv j)) = ((i MOD k) = (j MOD k)))))))) vv))
T c= c==> ! ! c==> c/\ cperiodic b0 b1 c/\ c~ c= b1 cNUMERAL c_0 ! ! c==> c/\ c< b2 b1 c/\ c< b3 b1 c= * b0 b2 * b0 b3 c= b2 b3 ! ! c= c= * b0 b2 * b0 b3 c= cMOD b2 b1 cMOD b3 b1 * / ! c==> c/\ cperiodic b0 b1 c/\ c~ c= b1 cNUMERAL c_0 ! ! c==> c/\ c< b2 b1 c/\ c< b3 b1 c= * b0 b2 * b0 b3 c= b2 b3 ! ! c= c= * b0 b2 * b0 b3 c= cMOD b2 b1 cMOD b3 b1 f0 * / ! c==> c/\ cperiodic b0 b1 c/\ c~ c= b1 cNUMERAL c_0 ! ! c==> c/\ c< b2 b1 c/\ c< b3 b1 c= * b0 b2 * b0 b3 c= b2 b3 ! ! c= c= * b0 b2 * b0 b3 c= cMOD b2 b1 cMOD b3 b1 f0
- |- ((~ ((distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))) = (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))) = (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))))
T c==> c~ c= cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c= cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
+ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ (((real_lt (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((!i. (!j. ((~ ((vv i) = (vv j))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance ((vv i) , (vv j))))))) /\ ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) /\ (!i. (!j. (((i < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((j < (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((vv i) = (vv j)))) ==> (i = j))))))))))), ((real_lt (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), (((IMAGE vv) UNIV) SUBSET ball_annulus), ((periodic vv) (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (?i. ((i < (NUMERAL (BIT0 (BIT1 _0)))) /\ (((real_le (distance ((vv i) , (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))))) (distance ((vv (i + (NUMERAL (BIT1 _0)))) , (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))))) /\ (((real_sub ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL _0))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 _0)))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 _0)))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL _0))))) ((real_add ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT0 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0))))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL (BIT1 _0)))))) ((real_mul (rho_fun (vector_norm (vv (NUMERAL (BIT1 (BIT1 _0))))))) ((((azim (vec (NUMERAL _0))) (vv (NUMERAL (BIT1 (BIT1 _0))))) (vv (NUMERAL _0))) (vv (NUMERAL (BIT0 (BIT1 _0)))))))))) ((real_mul ((real_add pi) sol0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_add (((tau3 (vv i)) (vv (i + (NUMERAL (BIT1 _0))))) (vv (i + (NUMERAL (BIT0 (BIT1 _0))))))) (((tau3 (vv (i + (NUMERAL (BIT0 (BIT1 _0)))))) (vv (i + (NUMERAL (BIT1 (BIT1 _0)))))) (vv i)))))))
T c==> c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ creal_lt cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ ! ! c==> c~ c= * f0 b0 * f0 b1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 b0 * f0 b1 c/\ cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV ! ! c==> c/\ c< b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * f0 b0 * f0 b1 c= b0 b1 c==> creal_lt cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cSUBSET * * part cIMAGE f0 part cUNIV part cball_annulus c==> cperiodic f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c/\ c< b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le cdistance c, * f0 b0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_sub creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_add creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT0 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 creal_mul crho_fun cvector_norm * f0 cNUMERAL cBIT1 cBIT1 c_0 cazim cvec cNUMERAL c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_add cpi csol0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add ctau3 * f0 b0 * f0 c+ b0 cNUMERAL cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 ctau3 * f0 c+ b0 cNUMERAL cBIT0 cBIT1 c_0 * f0 c+ b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0
+ (convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) |- ((convex_local_fan (((IMAGE vv) UNIV) , (((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV) , ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV)))) = T)
T c==> cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV c= cconvex_local_fan c, * * part cIMAGE f0 part cUNIV c, * * part cIMAGE / * * part cINSERT * f0 b0 * * part cINSERT * f0 cSUC b0 part cEMPTY part cUNIV * * part cIMAGE / c, * f0 b0 * f0 cSUC b0 part cUNIV cT
+ (!x. (!y. ((distance (x , y)) = (distance (y , x))))) |- (((!y. ((distance (_8394418 , y)) = (distance (y , _8394418)))) ==> ((\y. ((distance (_8394418 , y)) = (distance (y , _8394418)))) _8394419)) = ((\y. ((distance (_8394418 , y)) = (distance (y , _8394418)))) _8394419))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c= c==> ! c= cdistance c, f0 b0 cdistance c, b0 f0 * / c= cdistance c, f0 b0 cdistance c, b0 f0 f1 * / c= cdistance c, f0 b0 cdistance c, b0 f0 f1
+ |- ((!vv. (!j. (!P. (((((periodic vv) k) /\ ((~ (k = (NUMERAL _0))) /\ (!i. (!j. (((i < k) /\ ((j < k) /\ ((vv i) = (vv j)))) ==> (i = j)))))) /\ (P ((i MOD k) = (j MOD k)))) ==> (P ((vv i) = (vv j))))))) = T)
T c= ! ! ! c==> c/\ c/\ cperiodic b0 f0 c/\ c~ c= f0 cNUMERAL c_0 ! ! c==> c/\ c< b3 f0 c/\ c< b4 f0 c= * b0 b3 * b0 b4 c= b3 b4 * b2 c= cMOD f1 f0 cMOD b1 f0 * b2 c= * b0 f1 * b0 b1 cT
+ (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) /\ F)
T c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c/\ c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cF
+ |- (((!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) ==> ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c)) = ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c))
T c= c==> ! c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2 * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0)))
T c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (b = c) |- (((P c) ==> (P b)) = T)
T c==> c= f0 f1 c= c==> * f2 f1 * f2 f0 cT
- |- (((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))
T c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8394406)) /\ (((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)) \/ ((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
- |- ((real_of_int (int_of_num n)) = (real_of_num n))
T c= creal_of_int cint_of_num f0 creal_of_num f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- (~ (P c)), (P c) |- ((~ (P c)) /\ (P c))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- (F = (~ T))
T c= cF c~ cT
- |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num x)) ==> ((int_of_num x) = (int_of_num x))) = ((int_of_num x) = (int_of_num x)))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c= cint_of_num f0 cint_of_num f0 c= cint_of_num f0 cint_of_num f0
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((real_le (real_of_num m)) (real_neg (real_of_num n))) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))
T c= creal_le creal_of_num f0 creal_neg creal_of_num f1 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((((NUMERAL _0) + x) = x) /\ ((NUMERAL _0) < (NUMERAL (BIT0 (BIT1 _0)))))
T c/\ c= c+ cNUMERAL c_0 f0 f0 c< cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (~ ((NUMERAL _0) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c~ c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- |- ((int_le (int_of_num (NUMERAL _0))) (int_of_num x))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
- |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- ((((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) ==> (((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))))
T c==> c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((~ (_8394430 = _8394431)) \/ ((vv _8394430) = (vv _8394431)))
T c\/ c~ c= f0 f1 c= * f2 f0 * f2 f1
- (_8394432 = _8394434) |- ((_8394432 = _8394434) /\ ((~ (_8394433 = _8394435)) \/ ((_8394432 , _8394433) = (_8394434 , _8394435))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ T) = F)
T c= c~ cT cF
- |- ((NUMERAL (BIT1 _0)) < (NUMERAL (BIT0 (BIT1 _0))))
T c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((!x'. (((real_le x) y) \/ ((real_le y) x'))) = (((real_le x) y) \/ (!x. ((real_le y) x))))
T c= ! c\/ creal_le f0 f1 creal_le f1 b0 c\/ creal_le f0 f1 ! creal_le f1 b0
- |- ((NUMERAL _0) < (NUMERAL (BIT0 (BIT1 _0))))
T c< cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
- (_8394436 = _8394437) |- ((_8394436 = _8394437) /\ ((distance _8394436) = (distance _8394437)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cdistance f0 cdistance f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) ==> (((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))) = (((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))))
T c= c==> c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))) |- ((~ ((distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0)))) = (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0)))) = (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c= cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
- (((real_ge (real_of_int _8394406)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) |- F
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ ((distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0)))) = (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0)))))))) |- ((~ ((distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0)))) = (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0)))))))) /\ ((distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0)))) = (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c= cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))))
T c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))), (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- ((~ F) ==> F)
T c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> c~ cF cF
- (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))), ((real_le (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) |- (((real_le (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) /\ (~ ((real_le (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))))
T c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> creal_le cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ creal_le cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c~ creal_le cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (_8394424 = _8394425) |- ((_8394424 = _8394425) /\ ((BIT0 _8394424) = (BIT0 _8394425)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _8394406)) /\ (((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)) \/ ((real_le ((real_add (real_of_int _8394406)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _8394406)))))) |- (((real_ge (real_of_int _8394406)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))), (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))), (~ ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0)))))) |- ((~ ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0)))))) /\ ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))
T c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> c~ creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c/\ c~ creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (P c) |- ((~ (P c)) ==> (P c))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- |- ((!x'. (((real_le x') y) \/ ((real_le y) x))) = ((!x. ((real_le x) y)) \/ ((real_le y) x)))
T c= ! c\/ creal_le b0 f0 creal_le f0 f1 c\/ ! creal_le b0 f0 creal_le f0 f1
- (~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) |- (((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) = F)
T c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c= creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) = ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c= c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((~ (_8394424 = _8394425)) \/ ((BIT0 _8394424) = (BIT0 _8394425)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((NUMERAL (BIT1 _0)) < (NUMERAL (BIT0 (BIT1 _0))))))
T c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((\f. (f f)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (~ ((distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))) = (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) |- ((~ ((distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))) = (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) /\ ((distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))) = (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))))
T c==> c~ c= cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 c= cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
- ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))), (((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) |- ((((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) /\ ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))
T c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c/\ c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- |- ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((NUMERAL (BIT1 _0)) < (NUMERAL (BIT0 (BIT1 _0)))))
T c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- (!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))), (!x. (!y. ((distance (x , y)) = (distance (y , x))))), (~ F), (~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) |- ((~ F) /\ F)
T c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 c==> c~ cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c/\ c~ cF cF
- |- ((int_of_num x) = (int_of_num x))
T c= cint_of_num f0 cint_of_num f0
- (_8394432 = _8394434) |- ((_8394433 = _8394435) ==> ((_8394432 , _8394433) = (_8394434 , _8394435)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((NUMERAL _0) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- (~ (P b)), (P c), (b = c) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c==> c~ cF cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (~ (~ T))
T c~ c~ cT
- (((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) |- ((((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) /\ (((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))))
T c==> c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c/\ c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0)) |- ((NUMERAL _0) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c==> c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0)) = F)) = (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0)) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 cF c= c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 cF
- ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))), (((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) ==> ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F)))) |- (((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))) /\ ((~ ((~ ((real_le (distance ((vv (NUMERAL _0)) , (vv (NUMERAL (BIT0 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((real_le (distance ((vv (NUMERAL (BIT1 _0))) , (vv (NUMERAL (BIT1 (BIT1 _0))))))) (distance ((vv (NUMERAL (BIT0 (BIT1 _0)))) , (vv (NUMERAL _0))))))) ==> ((!y. (!x. ((~ ((real_le x) y)) ==> ((real_le y) x)))) ==> ((!x. (!y. ((distance (x , y)) = (distance (y , x))))) ==> F))))
T c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c==> c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c/\ c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF c==> c~ c==> c~ creal_le cdistance c, * f0 cNUMERAL c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 creal_le cdistance c, * f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0 cdistance c, * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL c_0 c==> ! ! c==> c~ creal_le b1 b0 creal_le b0 b1 c==> ! ! c= cdistance c, b0 b1 cdistance c, b1 b0 cF
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
