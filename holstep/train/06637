N More_lemma2.indexf1_final_lemmas
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((is_restricted (hypermap_of_list L)) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((((indexf (FST ((next_el ((find_face L) x)) x))) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cis_restricted chypermap_of_list f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c= cindexf cFST cnext_el cfind_face f0 f3 f3 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 cNUMERAL c_0 cfind_face f0 f3
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Seq.allP
A |- (!a. (!s. ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))))
T c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0
D Seq2.mem_next_el
A |- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s))))
T c==> cMEM f0 f1 cMEM cnext_el f1 f0 f1
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.MEMf_MAP
A |- (!f. (!x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))))
T c==> cMEM f0 f1 cMEM * f2 f0 cMAP f2 f1
D Tame_list.next_eln_indexf
A |- (!n. (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) n) x) = y) /\ (n < (sizel s)))))) ==> ((((indexf x) y) s) = n))))))
T c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 f3 f0 f2 c< f3 csizel f1 c= cindexf f0 f2 f1 f3
D Tame_list.indexf_n
A |- (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf x) y) s)) x) = y)))))
T c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 cuniq f1 c= cPOWER * part cnext_el f1 cindexf f0 f2 f1 f0 f2
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Tame_list.LYNVPSU
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((all uniq) ((quotient_list L) N)))))))
T c==> cmarked_list f0 f1 f2 f3 call part cuniq cquotient_list f0 f1
D Tame_list.quotient_list_core
A |- (!L. (!N. (((quotient_list L) N) = ((MAP (core L)) N))))
T c= cquotient_list f0 f1 cMAP * part ccore f0 f1
D Pwssrat.f_list_power_next_el
A |- (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
D Pplhulj.marked_list_of_dart
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))))
T c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0
D Pbflhet.properties_of_ytrans0
A |- (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) i)) f)) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) <= (((indexf w) (((((ytrans L) N) r) x) i)) f)) /\ ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i)))))))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c/\ c= cfind_face f0 f3 f5 c= cnext_el f5 f3 f6 c/\ c= cindexf f6 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 cindexf f6 cytrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 f4 c/\ c< cindexf f6 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 cindexf f6 cztrans f0 f1 f2 f3 f4 f5 c/\ c<= cindexf f6 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 cindexf f6 cytrans f0 f1 f2 f3 f4 f5 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 f4
D Hojodcm.ytrans_mem_rtrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2
D Reduction2.trans0
A |- (!L. (!N. (!r. (!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))))))))
T c/\ c= crtrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cntrans f0 f1 f2 f3 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 f2 f3 cNUMERAL c_0 cl'y f0 f2 f3 c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cl'z f0 f1 f2 f3
D Reduction2.transform_assumption_v2_lemma
A |- (!L. (transform_assumption_v2 L))
T ctransform_assumption_v2 f0
D More_lemma2.MEM_CORE
A |- (!L. (!N. (!r. (!x. (!k. ((((MEM d) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST d)) ((core L) r))))))))
T c==> c/\ cMEM f0 f1 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f1 f4 c~ cfinal_list f2 f1 cMEM cFST f0 ccore f2 f1
D More_lemma2.next_power_core_w
A |- (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5
D More_lemma2.indexf_y_lt_sizel
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((is_restricted (hypermap_of_list L)) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) < (sizel ((core L) r))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cis_restricted chypermap_of_list f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 f5 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 csizel ccore f0 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), (((find_face L) x) = f), ((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))), ((((marked_list L) N) r) x) |- ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cfind_face f0 f2 f4 c==> c==> c/\ cMEM cFST f3 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f2 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 f4 cFST f3 cFST cytrans f0 f5 f1 f2 cNUMERAL c_0 c< cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 f4 csizel ccore f0 f1 c= cindexf cFST f3 cFST cytrans f0 f5 f1 f2 cNUMERAL c_0 ccore f0 f1 cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 f4 c==> cmarked_list f0 f5 f1 f2 c= cindexf cFST f3 cFST cytrans f0 f5 f1 f2 cNUMERAL c_0 ccore f0 f1 cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 f4
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d)
T * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (FST w)) ((core L) r)) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) ==> ((uniq ((core L) r)) ==> ((transform_assumption_v2 L) ==> (((((indexf w) y) f) = (((indexf w) y) r)) ==> (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) ==> (((MEM y) r) ==> (((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cuniq ccore f0 f1 c==> ctransform_assumption_v2 f0 c==> c= cindexf f4 f6 f2 cindexf f4 f6 f1 c==> c< cindexf f4 f6 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM f6 f1 c==> c= cl'y f0 f1 f3 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f6 f1 cFST f4 cFST f6 c< cindexf f4 f6 f1 csizel ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (FST w)) ((core L) r)) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) ==> ((uniq ((core L) r)) ==> ((transform_assumption_v2 L) ==> (((((indexf w) y) f) = (((indexf w) y) r)) ==> (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) ==> (((MEM y) r) ==> (((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c/\ cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cuniq ccore f0 f1 c==> ctransform_assumption_v2 f0 c==> c= cindexf f4 f6 f2 cindexf f4 f6 f1 c==> c< cindexf f4 f6 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM f6 f1 c==> c= cl'y f0 f1 f3 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f6 f1 cFST f4 cFST f6 c< cindexf f4 f6 f1 csizel ccore f0 f1
- |- ((uniq ((core L) r)) ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))
T c==> cuniq ccore f0 f1 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (FST w)) ((core L) r)) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) ==> ((uniq ((core L) r)) ==> ((transform_assumption_v2 L) ==> (((((indexf w) y) f) = (((indexf w) y) r)) ==> (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) ==> (((MEM y) r) ==> (((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cuniq ccore f0 f1 c==> ctransform_assumption_v2 f0 c==> c= cindexf f4 f6 f2 cindexf f4 f6 f1 c==> c< cindexf f4 f6 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM f6 f1 c==> c= cl'y f0 f1 f3 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f6 f1 cFST f4 cFST f6 c< cindexf f4 f6 f1 csizel ccore f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) ==> ((uniq ((core L) r)) ==> ((transform_assumption_v2 L) ==> (((((indexf w) y) f) = (((indexf w) y) r)) ==> (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) ==> (((MEM y) r) ==> (((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cuniq ccore f0 f1 c==> ctransform_assumption_v2 f0 c==> c= cindexf f4 f6 f2 cindexf f4 f6 f1 c==> c< cindexf f4 f6 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM f6 f1 c==> c= cl'y f0 f1 f3 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f6 f1 cFST f4 cFST f6 c< cindexf f4 f6 f1 csizel ccore f0 f1
+ |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f5 f1 f3 c~ cfinal_list f0 f1 cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ |- (((!L'. (!N'. (!r'. (!x'. (!k. ((((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N') r') x') /\ (~ ((final_list L') r')))))) ==> ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L') r')))))))) ==> ((\L'. (!N'. (!r'. (!x'. (!k. ((((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N') r') x') /\ (~ ((final_list L') r')))))) ==> ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L') r')))))))) L)) = ((\L'. (!N'. (!r'. (!x'. (!k. ((((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r') /\ ((good_list L') /\ ((good_list_nodes L') /\ (((((marked_list L') N') r') x') /\ (~ ((final_list L') r')))))) ==> ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L') r')))))))) L))
T c= c==> ! ! ! ! ! c==> c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore b0 b2 * / ! ! ! ! c==> c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore b0 b2 f0 * / ! ! ! ! c==> c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore b0 b2 f0
+ |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((is_restricted (hypermap_of_list L)) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) < (sizel ((core L) r)))))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((is_restricted (hypermap_of_list L)) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) < (sizel ((core L) r)))))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((is_restricted (hypermap_of_list L)) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) < (sizel ((core L) r)))))) r))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cis_restricted chypermap_of_list f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cfind_face f0 b1 f2 c= cnext_el f2 b1 f3 c< cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 csizel ccore f0 b0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cis_restricted chypermap_of_list f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cfind_face f0 b1 f2 c= cnext_el f2 b1 f3 c< cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 csizel ccore f0 b0 f4 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cis_restricted chypermap_of_list f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cfind_face f0 b1 f2 c= cnext_el f2 b1 f3 c< cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 csizel ccore f0 b0 f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c==> c==> cmarked_list f0 f5 f1 f3 cMEM f3 clist_of_darts f0 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ |- (((!s. ((((MEM (FST w)) s) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) s) /\ ((uniq s) /\ (((((POWER (next_el s)) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel s)))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) s) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)))) ==> ((\s. ((((MEM (FST w)) s) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) s) /\ ((uniq s) /\ (((((POWER (next_el s)) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel s)))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) s) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)))) ((core L) r))) = ((\s. ((((MEM (FST w)) s) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) s) /\ ((uniq s) /\ (((((POWER (next_el s)) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel s)))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) s) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)))) ((core L) r)))
T c= c==> ! c==> c/\ cMEM cFST f0 b0 c/\ cMEM cFST cytrans f1 f2 f3 f4 cNUMERAL c_0 b0 c/\ cuniq b0 c/\ c= cPOWER * part cnext_el b0 cindexf f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f2 f3 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 f5 csizel b0 c= cindexf cFST f0 cFST cytrans f1 f2 f3 f4 cNUMERAL c_0 b0 cindexf f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 f5 * / c==> c/\ cMEM cFST f0 b0 c/\ cMEM cFST cytrans f1 f2 f3 f4 cNUMERAL c_0 b0 c/\ cuniq b0 c/\ c= cPOWER * part cnext_el b0 cindexf f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f2 f3 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 f5 csizel b0 c= cindexf cFST f0 cFST cytrans f1 f2 f3 f4 cNUMERAL c_0 b0 cindexf f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 f5 ccore f1 f3 * / c==> c/\ cMEM cFST f0 b0 c/\ cMEM cFST cytrans f1 f2 f3 f4 cNUMERAL c_0 b0 c/\ cuniq b0 c/\ c= cPOWER * part cnext_el b0 cindexf f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f2 f3 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 f5 csizel b0 c= cindexf cFST f0 cFST cytrans f1 f2 f3 f4 cNUMERAL c_0 b0 cindexf f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 f5 ccore f1 f3
- |- ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y)))
T c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
+ (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ |- ((\x'. (!k. ((((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x') /\ (~ ((final_list L) r)))))) ==> ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r))))) x)
T * / ! c==> c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 f3
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) = (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 c/\ cuniq ccore f0 f2 c/\ c= cPOWER * part cnext_el ccore f0 f2 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 cFST f4 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 csizel ccore f0 f2 c/\ cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 c/\ cuniq ccore f0 f2 c/\ c= cPOWER * part cnext_el ccore f0 f2 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 cFST f4 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 csizel ccore f0 f2
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ ((\y. ((((l'y L) r) x) = y)) y) |- ((((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((l'y L) r) x)) r)) (FST w)) = (FST (((l'y L) r) x))) /\ ((((indexf w) (((l'y L) r) x)) r) < (sizel ((core L) r))))) = (((((POWER (next_el ((core L) r))) (((indexf w) (((l'y L) r) x)) r)) (FST w)) = (FST (((l'y L) r) x))) /\ ((((indexf w) (((l'y L) r) x)) r) < (sizel ((core L) r)))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cl'y f0 f1 f2 f1 cFST f4 cFST cl'y f0 f1 f2 c< cindexf f4 cl'y f0 f1 f2 f1 csizel ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cl'y f0 f1 f2 f1 cFST f4 cFST cl'y f0 f1 f2 c< cindexf f4 cl'y f0 f1 f2 f1 csizel ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((marked_list L) N) r) x) |- ((((\f. (((find_face L) x) = f)) f) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x)))) = T)
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> cmarked_list f0 f4 f1 f2 c= c==> * / c= cfind_face f0 f2 b0 f5 c= cindexf cFST f3 cFST cytrans f0 f4 f1 f2 cNUMERAL c_0 ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f2 cNUMERAL c_0 cfind_face f0 f2 cT
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ |- ((\s. ((((MEM w) s) /\ (((MEM y) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf w) y) s)) w) = y))) r)
T * / c==> c/\ cMEM f0 b0 c/\ cMEM f1 b0 cuniq b0 c= cPOWER * part cnext_el b0 cindexf f0 f1 b0 f0 f1 f2
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ |- ((!w. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((is_restricted (hypermap_of_list L)) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) < (sizel ((core L) r))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cis_restricted chypermap_of_list b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cfind_face b1 b4 f0 c= cnext_el f0 b4 b0 c< cindexf b0 cytrans b1 b2 b3 b4 cNUMERAL c_0 b3 csizel ccore b1 b3 cT
- |- ((((find_face L) x) = f) = ((\f. (((find_face L) x) = f)) f))
T c= c= cfind_face f0 f1 f2 * / c= cfind_face f0 f1 b0 f2
- ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((\w. (((next_el ((find_face L) x)) x) = w)) w) /\ (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c/\ * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
+ |- ((((uniq ((core L) r)) ==> (((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))) ==> (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))) = ((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) = (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))) = ((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))
T c= c==> c==> cuniq ccore f0 f1 c= c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c= c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f3 cuniq ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c= c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f3 cuniq ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1
+ (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ |- (((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) x) = (((POWER (next_el ((find_face L) x))) (SUC (NUMERAL _0))) x))) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))) = (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC cNUMERAL c_0 f1 c/\ cMEM cFST f2 ccore f0 f3 c/\ cMEM cFST cytrans f0 f4 f3 f1 cNUMERAL c_0 ccore f0 f3 c/\ cuniq ccore f0 f3 c/\ c= cPOWER * part cnext_el ccore f0 f3 cindexf f2 cytrans f0 f4 f3 f1 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f4 f3 f1 cNUMERAL c_0 c< cindexf f2 cytrans f0 f4 f3 f1 cNUMERAL c_0 f5 csizel ccore f0 f3 c/\ cMEM cFST f2 ccore f0 f3 c/\ cMEM cFST cytrans f0 f4 f3 f1 cNUMERAL c_0 ccore f0 f3 c/\ cuniq ccore f0 f3 c/\ c= cPOWER * part cnext_el ccore f0 f3 cindexf f2 cytrans f0 f4 f3 f1 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f4 f3 f1 cNUMERAL c_0 c< cindexf f2 cytrans f0 f4 f3 f1 cNUMERAL c_0 f5 csizel ccore f0 f3
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> cmarked_list f0 f4 f1 f2 c==> c= cfind_face f0 f2 f5 c= cindexf cFST f3 cFST cytrans f0 f4 f1 f2 cNUMERAL c_0 ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f2 cNUMERAL c_0 cfind_face f0 f2
+ |- (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = p') ==> ((p' ==> (((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = q')) ==> (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))) = (p' ==> q'))))
T c==> c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 f3 c==> c==> f3 c= c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f2 f1 f5 cNUMERAL c_0 f6 cFST f4 cFST cytrans f0 f2 f1 f5 cNUMERAL c_0 c< cindexf f4 cytrans f0 f2 f1 f5 cNUMERAL c_0 f6 csizel ccore f0 f1 f7 c= c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f2 f1 f5 cNUMERAL c_0 f6 cFST f4 cFST cytrans f0 f2 f1 f5 cNUMERAL c_0 c< cindexf f4 cytrans f0 f2 f1 f5 cNUMERAL c_0 f6 csizel ccore f0 f1 c==> f3 f7
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((marked_list L) N) r) x) |- ((?f. (((find_face L) x) = f)) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> cmarked_list f0 f4 f1 f2 c==> c? / c= cfind_face f0 f2 b0 c= cindexf cFST f3 cFST cytrans f0 f4 f1 f2 cNUMERAL c_0 ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f2 cNUMERAL c_0 cfind_face f0 f2
+ (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((is_restricted (hypermap_of_list L)) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))) |- ((((indexf (FST ((next_el ((find_face L) x)) x))) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x)))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c= cindexf cFST cnext_el cfind_face f0 f3 f3 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f1 f2 f3 cNUMERAL c_0 cfind_face f0 f3
+ |- (((?f. (((find_face L) x) = f)) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x)))) = ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x))))
T c= c==> c? / c= cfind_face f0 f1 b0 c= cindexf cFST f2 cFST cytrans f0 f3 f4 f1 cNUMERAL c_0 ccore f0 f4 cindexf f2 cytrans f0 f3 f4 f1 cNUMERAL c_0 cfind_face f0 f1 c= cindexf cFST f2 cFST cytrans f0 f3 f4 f1 cNUMERAL c_0 ccore f0 f4 cindexf f2 cytrans f0 f3 f4 f1 cNUMERAL c_0 cfind_face f0 f1
+ |- (((!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) ==> ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) x)) = ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c= c==> cMEM cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c/\ cMEM cFST cytrans f0 f2 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f2 f1 f3 cNUMERAL c_0 f5 cFST f4 cFST cytrans f0 f2 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f2 f1 f3 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c~ cfinal_list f0 f1 cMEM cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c/\ cMEM cFST cytrans f0 f2 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f2 f1 f3 cNUMERAL c_0 f5 cFST f4 cFST cytrans f0 f2 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f2 f1 f3 cNUMERAL c_0 f5 csizel ccore f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c/\ cMEM f3 clist_of_darts f0 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ |- (((!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))))) ==> ((\x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))))) x)) = ((\x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))))) x))
T c= c==> ! c/\ c= crtrans f0 f1 f2 b0 cNUMERAL c_0 f2 c/\ c= cntrans f0 f1 f2 b0 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 f2 b0 cNUMERAL c_0 cl'y f0 f2 b0 c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cl'z f0 f1 f2 b0 * / c/\ c= crtrans f0 f1 f2 b0 cNUMERAL c_0 f2 c/\ c= cntrans f0 f1 f2 b0 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 f2 b0 cNUMERAL c_0 cl'y f0 f2 b0 c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cl'z f0 f1 f2 b0 f3 * / c/\ c= crtrans f0 f1 f2 b0 cNUMERAL c_0 f2 c/\ c= cntrans f0 f1 f2 b0 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 f2 b0 cNUMERAL c_0 cl'y f0 f2 b0 c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cl'z f0 f1 f2 b0 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM w) r) ==> (((MEM (FST w)) ((core L) r)) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) ==> ((uniq ((core L) r)) ==> ((transform_assumption_v2 L) ==> (((((indexf w) y) f) = (((indexf w) y) r)) ==> (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) ==> (((MEM y) r) ==> (((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c==> cMEM f4 f1 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cuniq ccore f0 f1 c==> ctransform_assumption_v2 f0 c==> c= cindexf f4 f6 f2 cindexf f4 f6 f1 c==> c< cindexf f4 f6 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM f6 f1 c==> c= cl'y f0 f1 f3 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f6 f1 cFST f4 cFST f6 c< cindexf f4 f6 f1 csizel ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((good_list L) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c==> cgood_list f0 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((MEM w) r), ((((marked_list L) N) r) x) |- ((((MEM (FST w)) ((core L) r)) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))) = ((!k. ((((MEM w) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST w)) ((core L) r)))) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f4 c= c==> cMEM cFST f2 ccore f0 f1 c/\ cMEM cFST f2 ccore f0 f1 c/\ cMEM cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> ! c==> c/\ cMEM f2 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f3 f1 f4 c~ cfinal_list f0 f1 cMEM cFST f2 ccore f0 f1 c/\ cMEM cFST f2 ccore f0 f1 c/\ cMEM cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c/\ cMEM f1 f5 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 cs_flag_list f0 f5 f1 f3 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM w) r) ==> (((MEM (FST w)) ((core L) r)) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) ==> ((uniq ((core L) r)) ==> ((transform_assumption_v2 L) ==> (((((indexf w) y) f) = (((indexf w) y) r)) ==> (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) ==> (((MEM y) r) ==> (((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c==> cMEM f4 f1 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cuniq ccore f0 f1 c==> ctransform_assumption_v2 f0 c==> c= cindexf f4 f6 f2 cindexf f4 f6 f1 c==> c< cindexf f4 f6 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM f6 f1 c==> c= cl'y f0 f1 f3 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f6 f1 cFST f4 cFST f6 c< cindexf f4 f6 f1 csizel ccore f0 f1
+ |- (((!r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))))))) ==> ((\r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))))))) r)) = ((\r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))))))) r))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 f2 c/\ c~ cfinal_list f0 b0 c/\ c<= b2 cindexf b1 cytrans f0 f1 b0 f2 cNUMERAL c_0 b0 c/\ c= cfind_face f0 f2 f3 c= cnext_el f3 f2 b1 c= cPOWER * part cnext_el ccore f0 b0 b2 cFST b1 cFST cPOWER * part cnext_el b0 b2 b1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 f2 c/\ c~ cfinal_list f0 b0 c/\ c<= b2 cindexf b1 cytrans f0 f1 b0 f2 cNUMERAL c_0 b0 c/\ c= cfind_face f0 f2 f3 c= cnext_el f3 f2 b1 c= cPOWER * part cnext_el ccore f0 b0 b2 cFST b1 cFST cPOWER * part cnext_el b0 b2 b1 f4 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 f2 c/\ c~ cfinal_list f0 b0 c/\ c<= b2 cindexf b1 cytrans f0 f1 b0 f2 cNUMERAL c_0 b0 c/\ c= cfind_face f0 f2 f3 c= cnext_el f3 f2 b1 c= cPOWER * part cnext_el ccore f0 b0 b2 cFST b1 cFST cPOWER * part cnext_el b0 b2 b1 f4
+ |- (!s. ((((MEM (FST w)) s) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) s) /\ ((uniq s) /\ (((((POWER (next_el s)) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel s)))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) s) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))))
T c==> c/\ cMEM cFST f0 f1 c/\ cMEM cFST cytrans f2 f3 f4 f5 cNUMERAL c_0 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 cindexf f0 cytrans f2 f3 f4 f5 cNUMERAL c_0 f6 cFST f0 cFST cytrans f2 f3 f4 f5 cNUMERAL c_0 c< cindexf f0 cytrans f2 f3 f4 f5 cNUMERAL c_0 f6 csizel f1 c= cindexf cFST f0 cFST cytrans f2 f3 f4 f5 cNUMERAL c_0 f1 cindexf f0 cytrans f2 f3 f4 f5 cNUMERAL c_0 f6
- (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c/\ cMEM cFST f5 ccore f0 f2 c/\ cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 c/\ cuniq ccore f0 f2 c/\ c= cPOWER * part cnext_el ccore f0 f2 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cFST f5 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 csizel ccore f0 f2
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((all uniq) ((quotient_list L) N))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 call part cuniq cquotient_list f0 f1 f2
+ |- (((!w. (!f. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) i)) f)) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) <= (((indexf w) (((((ytrans L) N) r) x) i)) f)) /\ ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))))))))))))) ==> ((\w. (!f. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) i)) f)) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) <= (((indexf w) (((((ytrans L) N) r) x) i)) f)) /\ ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))))))))))))) w)) = ((\w. (!f. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) i)) f)) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) <= (((indexf w) (((((ytrans L) N) r) x) i)) f)) /\ ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))))))))))))) w))
T c= c==> ! ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 crtrans b2 b3 b4 b5 b6 c/\ c= cfind_face b2 b5 b1 c= cnext_el b1 b5 b0 c/\ c= cindexf b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 b1 cindexf b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 crtrans b2 b3 b4 b5 b6 c/\ c< cindexf b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 b1 cindexf b0 cztrans b2 b3 b4 b5 b6 b1 c/\ c<= cindexf b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 b1 cindexf b0 cytrans b2 b3 b4 b5 b6 b1 cMEM cytrans b2 b3 b4 b5 cNUMERAL c_0 crtrans b2 b3 b4 b5 b6 * / ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 crtrans b2 b3 b4 b5 b6 c/\ c= cfind_face b2 b5 b1 c= cnext_el b1 b5 b0 c/\ c= cindexf b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 b1 cindexf b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 crtrans b2 b3 b4 b5 b6 c/\ c< cindexf b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 b1 cindexf b0 cztrans b2 b3 b4 b5 b6 b1 c/\ c<= cindexf b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 b1 cindexf b0 cytrans b2 b3 b4 b5 b6 b1 cMEM cytrans b2 b3 b4 b5 cNUMERAL c_0 crtrans b2 b3 b4 b5 b6 f0 * / ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 crtrans b2 b3 b4 b5 b6 c/\ c= cfind_face b2 b5 b1 c= cnext_el b1 b5 b0 c/\ c= cindexf b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 b1 cindexf b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 crtrans b2 b3 b4 b5 b6 c/\ c< cindexf b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 b1 cindexf b0 cztrans b2 b3 b4 b5 b6 b1 c/\ c<= cindexf b0 cytrans b2 b3 b4 b5 cNUMERAL c_0 b1 cindexf b0 cytrans b2 b3 b4 b5 b6 b1 cMEM cytrans b2 b3 b4 b5 cNUMERAL c_0 crtrans b2 b3 b4 b5 b6 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c==> cMEM f3 clist_of_darts f0 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
- ((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) |- (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) = T)
T c==> c< cindexf f0 f1 f2 cindexf f0 cl'z f3 f4 f5 f6 f2 c= c< cindexf f0 f1 f2 cindexf f0 cl'z f3 f4 f5 f6 f2 cT
+ |- (((!L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) ==> ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L)) = ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) x) = w) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c==> c= cf_list f0 f3 f4 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ |- ((\u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u)))) u)
T * / c==> cMEM f0 b0 cMEM * f1 f0 cMAP f1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!f. (!x. (!L. (!r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 f0 b3 b1 c/\ c~ cfinal_list b2 b3 c/\ c<= b5 cindexf b4 cytrans b2 f0 b3 b1 cNUMERAL c_0 b3 c/\ c= cfind_face b2 b1 b0 c= cnext_el b0 b1 b4 c= cPOWER * part cnext_el ccore b2 b3 b5 cFST b4 cFST cPOWER * part cnext_el b3 b5 b4 cT
+ |- (((!q'. ((((MEM ((core L) r)) ((MAP (core L)) N)) = p') ==> ((p' ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (p' ==> q'))))) ==> ((\q'. ((((MEM ((core L) r)) ((MAP (core L)) N)) = p') ==> ((p' ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (p' ==> q'))))) q')) = ((\q'. ((((MEM ((core L) r)) ((MAP (core L)) N)) = p') ==> ((p' ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cMEM ccore f0 f1 cMAP * part ccore f0 f2 f3 c==> c==> f3 c= cuniq ccore f0 f1 b0 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> f3 b0 * / c==> c= cMEM ccore f0 f1 cMAP * part ccore f0 f2 f3 c==> c==> f3 c= cuniq ccore f0 f1 b0 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> f3 b0 f4 * / c==> c= cMEM ccore f0 f1 cMAP * part ccore f0 f2 f3 c==> c==> f3 c= cuniq ccore f0 f1 b0 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> f3 b0 f4
+ |- ((\s. (((uniq (flatten N)) /\ ((MEM s) N)) ==> (uniq s))) r)
T * / c==> c/\ cuniq cflatten f0 cMEM b0 f0 cuniq b0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)), (((next_el f) x) = w), ((((l'y L) r) x) = y), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 f3 f1 cFST f2 cFST f3 c==> c= cnext_el f4 f5 f2 c==> c= cl'y f0 f1 f5 f3 c==> c= cfind_face f0 f5 f4 c==> cmarked_list f0 f6 f1 f5 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 f3 f1 cFST f2 cFST f3 c< cindexf f2 f3 f1 csizel ccore f0 f1
+ (transform_assumption_v2 L) |- ((transform_assumption_v2 L) = T)
T c==> ctransform_assumption_v2 f0 c= ctransform_assumption_v2 f0 cT
+ |- (((!k. ((((MEM w) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST w)) ((core L) r)))) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))) = (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))
T c= c==> ! c==> c/\ cMEM f0 f1 c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f3 f1 f4 c~ cfinal_list f2 f1 cMEM cFST f0 ccore f2 f1 c/\ cMEM cFST f0 ccore f2 f1 c/\ cMEM cFST cytrans f2 f3 f1 f4 cNUMERAL c_0 ccore f2 f1 c/\ cuniq ccore f2 f1 c/\ c= cPOWER * part cnext_el ccore f2 f1 cindexf f0 cytrans f2 f3 f1 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f2 f3 f1 f4 cNUMERAL c_0 c< cindexf f0 cytrans f2 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f2 f1 c/\ cMEM cFST f0 ccore f2 f1 c/\ cMEM cFST cytrans f2 f3 f1 f4 cNUMERAL c_0 ccore f2 f1 c/\ cuniq ccore f2 f1 c/\ c= cPOWER * part cnext_el ccore f2 f1 cindexf f0 cytrans f2 f3 f1 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f2 f3 f1 f4 cNUMERAL c_0 c< cindexf f0 cytrans f2 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f2 f1
+ |- (((!r. (!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x))))))) ==> ((\r. (!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x))))))) r)) = ((\r. (!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x))))))) r))
T c= c==> ! ! c/\ c= crtrans f0 f1 b0 b1 cNUMERAL c_0 b0 c/\ c= cntrans f0 f1 b0 b1 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 b0 b1 cNUMERAL c_0 cl'y f0 b0 b1 c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cl'z f0 f1 b0 b1 * / ! c/\ c= crtrans f0 f1 b0 b1 cNUMERAL c_0 b0 c/\ c= cntrans f0 f1 b0 b1 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 b0 b1 cNUMERAL c_0 cl'y f0 b0 b1 c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cl'z f0 f1 b0 b1 f2 * / ! c/\ c= crtrans f0 f1 b0 b1 cNUMERAL c_0 b0 c/\ c= cntrans f0 f1 b0 b1 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 b0 b1 cNUMERAL c_0 cl'y f0 b0 b1 c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cl'z f0 f1 b0 b1 f2
+ |- (((!x. (!L. (!r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))))))))) ==> ((\x. (!L. (!r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))))))))) x)) = ((\x. (!L. (!r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))))))))) x))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 f0 b2 b0 c/\ c~ cfinal_list b1 b2 c/\ c<= b4 cindexf b3 cytrans b1 f0 b2 b0 cNUMERAL c_0 b2 c/\ c= cfind_face b1 b0 f1 c= cnext_el f1 b0 b3 c= cPOWER * part cnext_el ccore b1 b2 b4 cFST b3 cFST cPOWER * part cnext_el b2 b4 b3 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 f0 b2 b0 c/\ c~ cfinal_list b1 b2 c/\ c<= b4 cindexf b3 cytrans b1 f0 b2 b0 cNUMERAL c_0 b2 c/\ c= cfind_face b1 b0 f1 c= cnext_el f1 b0 b3 c= cPOWER * part cnext_el ccore b1 b2 b4 cFST b3 cFST cPOWER * part cnext_el b2 b4 b3 f2 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 f0 b2 b0 c/\ c~ cfinal_list b1 b2 c/\ c<= b4 cindexf b3 cytrans b1 f0 b2 b0 cNUMERAL c_0 b2 c/\ c= cfind_face b1 b0 f1 c= cnext_el f1 b0 b3 c= cPOWER * part cnext_el ccore b1 b2 b4 cFST b3 cFST cPOWER * part cnext_el b2 b4 b3 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((marked_list L) N) r) x) |- ((((next_el ((find_face L) x)) x) = w) /\ ((((indexf (FST ((next_el ((find_face L) x)) x))) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> cmarked_list f0 f4 f1 f2 c/\ c= cnext_el cfind_face f0 f2 f2 f3 c= cindexf cFST cnext_el cfind_face f0 f2 f2 cFST cytrans f0 f4 f1 f2 cNUMERAL c_0 ccore f0 f1 cindexf cnext_el cfind_face f0 f2 f2 cytrans f0 f4 f1 f2 cNUMERAL c_0 cfind_face f0 f2
+ |- ((\L. (!r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 f0 b1 f1 c/\ c~ cfinal_list b0 b1 c/\ c<= b3 cindexf b2 cytrans b0 f0 b1 f1 cNUMERAL c_0 b1 c/\ c= cfind_face b0 f1 f2 c= cnext_el f2 f1 b2 c= cPOWER * part cnext_el ccore b0 b1 b3 cFST b2 cFST cPOWER * part cnext_el b1 b3 b2 f3
+ |- (((T ==> ((uniq ((core L) r)) = (uniq ((core L) r)))) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (T ==> (uniq ((core L) r))))) = ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (T ==> (uniq ((core L) r)))))
T c= c==> c==> cT c= cuniq ccore f0 f1 cuniq ccore f0 f1 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> cT cuniq ccore f0 f1 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c==> cT cuniq ccore f0 f1
+ ((MEM r) N) |- (((uniq ((core L) r)) ==> (((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = q')) ==> (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))) = ((uniq ((core L) r)) ==> q')))
T c==> cMEM f0 f1 c==> c==> cuniq ccore f2 f0 c= c/\ cuniq ccore f2 f0 c/\ c= cPOWER * part cnext_el ccore f2 f0 cindexf f3 cytrans f2 f1 f0 f4 cNUMERAL c_0 f5 cFST f3 cFST cytrans f2 f1 f0 f4 cNUMERAL c_0 c< cindexf f3 cytrans f2 f1 f0 f4 cNUMERAL c_0 f5 csizel ccore f2 f0 f6 c= c==> c==> cMEM ccore f2 f0 cMAP * part ccore f2 f1 cuniq ccore f2 f0 c/\ cuniq ccore f2 f0 c/\ c= cPOWER * part cnext_el ccore f2 f0 cindexf f3 cytrans f2 f1 f0 f4 cNUMERAL c_0 f5 cFST f3 cFST cytrans f2 f1 f0 f4 cNUMERAL c_0 c< cindexf f3 cytrans f2 f1 f0 f4 cNUMERAL c_0 f5 csizel ccore f2 f0 c==> cuniq ccore f2 f0 f6
+ |- ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) N)
T * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cfind_face f0 f2 f4 c==> cmarked_list f0 f5 f1 f2 c= cindexf cFST f3 cFST cytrans f0 f5 f1 f2 cNUMERAL c_0 ccore f0 f1 cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 cfind_face f0 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM w) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((uniq ((core L) r)) /\ ((transform_assumption_v2 L) ==> (((((indexf w) y) f) = (((indexf w) y) r)) ==> (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) ==> (((MEM y) r) ==> (((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f4 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c/\ cuniq ccore f0 f1 c==> ctransform_assumption_v2 f0 c==> c= cindexf f4 f6 f2 cindexf f4 f6 f1 c==> c< cindexf f4 f6 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM f6 f1 c==> c= cl'y f0 f1 f3 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f6 f1 cFST f4 cFST f6 c< cindexf f4 f6 f1 csizel ccore f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ |- ((!L. (!N. (!r. (!x. (!k. ((((MEM d) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST d)) ((core L) r)))))))) = T)
T c= ! ! ! ! ! c==> c/\ cMEM f0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST f0 ccore b0 b2 cT
+ |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ |- (((!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))))) ==> ((\n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))))) (((indexf w) (((l'y L) r) x)) r))) = ((\n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))))) (((indexf w) (((l'y L) r) x)) r)))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= b0 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f5 c= cnext_el f5 f3 f4 c= cPOWER * part cnext_el ccore f0 f2 b0 cFST f4 cFST cPOWER * part cnext_el f2 b0 f4 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= b0 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f5 c= cnext_el f5 f3 f4 c= cPOWER * part cnext_el ccore f0 f2 b0 cFST f4 cFST cPOWER * part cnext_el f2 b0 f4 cindexf f4 cl'y f0 f2 f3 f2 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= b0 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f5 c= cnext_el f5 f3 f4 c= cPOWER * part cnext_el ccore f0 f2 b0 cFST f4 cFST cPOWER * part cnext_el f2 b0 f4 cindexf f4 cl'y f0 f2 f3 f2
+ |- (!y. (!s. ((((MEM (FST w)) s) /\ (((MEM y) s) /\ ((uniq s) /\ (((((POWER (next_el s)) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = y) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel s)))))) ==> ((((indexf (FST w)) y) s) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)))))
T c==> c/\ cMEM cFST f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 c/\ c= cPOWER * part cnext_el f1 cindexf f0 cytrans f3 f4 f5 f6 cNUMERAL c_0 f7 cFST f0 f2 c< cindexf f0 cytrans f3 f4 f5 f6 cNUMERAL c_0 f7 csizel f1 c= cindexf cFST f0 f2 f1 cindexf f0 cytrans f3 f4 f5 f6 cNUMERAL c_0 f7
- (((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) |- ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = T)
T c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 c= c==> cMEM ccore f0 f1 cMAP * part ccore f0 f2 cuniq ccore f0 f1 cT
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((MEM (FST w)) ((core L) r)) |- ((((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))) = (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))
T c==> cMEM cFST f0 ccore f1 f2 c= c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((indexf w) (((l'y L) r) x)) f) = (((indexf w) (((l'y L) r) x)) r)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) (((l'y L) r) x)) f) < (((indexf w) ((((l'z L) N) r) x)) f)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((l'y L) r) x)) r), ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (!y. (((\y. ((((l'y L) r) x) = y)) y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((l'y L) r) x)) r)) (FST w)) = (FST (((l'y L) r) x))) /\ ((((indexf w) (((l'y L) r) x)) r) < (sizel ((core L) r))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cindexf f4 cl'y f0 f1 f3 f2 cindexf f4 cl'y f0 f1 f3 f1 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c< cindexf f4 cl'y f0 f1 f3 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'y f0 f1 f3 f1 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 ! c==> * / c= cl'y f0 f1 f3 b1 b0 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cl'y f0 f1 f3 f1 cFST f4 cFST cl'y f0 f1 f3 c< cindexf f4 cl'y f0 f1 f3 f1 csizel ccore f0 f1
+ |- ((!L. (!r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 f0 b1 f1 c/\ c~ cfinal_list b0 b1 c/\ c<= b3 cindexf b2 cytrans b0 f0 b1 f1 cNUMERAL c_0 b1 c/\ c= cfind_face b0 f1 f2 c= cnext_el f2 f1 b2 c= cPOWER * part cnext_el ccore b0 b1 b3 cFST b2 cFST cPOWER * part cnext_el b1 b3 b2 cT
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- (((find_face L) x) = f) |- ((((find_face L) x) = f) /\ (?f. (((find_face L) x) = f)))
T c==> c= cfind_face f0 f1 f2 c/\ c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0
+ |- (((!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) ==> ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N)) = ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N))
T c= c==> ! ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1
+ |- (((!f. (!x. (!L. (!r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))))))))) ==> ((\f. (!x. (!L. (!r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))))))))) f)) = ((\f. (!x. (!L. (!r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))))))))) f))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 f0 b3 b1 c/\ c~ cfinal_list b2 b3 c/\ c<= b5 cindexf b4 cytrans b2 f0 b3 b1 cNUMERAL c_0 b3 c/\ c= cfind_face b2 b1 b0 c= cnext_el b0 b1 b4 c= cPOWER * part cnext_el ccore b2 b3 b5 cFST b4 cFST cPOWER * part cnext_el b3 b5 b4 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 f0 b3 b1 c/\ c~ cfinal_list b2 b3 c/\ c<= b5 cindexf b4 cytrans b2 f0 b3 b1 cNUMERAL c_0 b3 c/\ c= cfind_face b2 b1 b0 c= cnext_el b0 b1 b4 c= cPOWER * part cnext_el ccore b2 b3 b5 cFST b4 cFST cPOWER * part cnext_el b3 b5 b4 f1 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 f0 b3 b1 c/\ c~ cfinal_list b2 b3 c/\ c<= b5 cindexf b4 cytrans b2 f0 b3 b1 cNUMERAL c_0 b3 c/\ c= cfind_face b2 b1 b0 c= cnext_el b0 b1 b4 c= cPOWER * part cnext_el ccore b2 b3 b5 cFST b4 cFST cPOWER * part cnext_el b3 b5 b4 f1
- |- (((!x'. (((\y. ((((l'y L) r) x) = y)) x') ==> (?y. ((((l'y L) r) x) = y)))) ==> ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y)))) = ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y))))
T c= c==> ! c==> * / c= cl'y f0 f1 f2 b1 b0 c? / c= cl'y f0 f1 f2 b1 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) (((indexf w) y) r)) w) = y), ((((l'y L) r) x) = y), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((indexf w) (((l'y L) r) x)) r) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) (((indexf w) (((l'y L) r) x)) r)) (FST w)) = (FST (((POWER (next_el r)) (((indexf w) (((l'y L) r) x)) r)) w)))) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 cindexf f4 f5 f1 f4 f5 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f6 f1 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c<= cindexf f4 cl'y f0 f1 f3 f1 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f3 f2 c= cnext_el f2 f3 f4 c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cl'y f0 f1 f3 f1 cFST f4 cFST cPOWER * part cnext_el f1 cindexf f4 cl'y f0 f1 f3 f1 f4 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f5 f1 cFST f4 cFST f5 c< cindexf f4 f5 f1 csizel ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 cs_flag_list f0 f5 f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((l'y L) r) x) = y), ((((indexf w) (((l'y L) r) x)) f) = (((indexf w) (((l'y L) r) x)) r)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) (((l'y L) r) x)) f) < (((indexf w) ((((l'z L) N) r) x)) f)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((l'y L) r) x)) r), ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cindexf f4 cl'y f0 f1 f3 f2 cindexf f4 cl'y f0 f1 f3 f1 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c< cindexf f4 cl'y f0 f1 f3 f2 cindexf f4 cl'z f0 f6 f1 f3 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cytrans f0 f6 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'y f0 f1 f3 f1 c==> cMEM cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f5 f1 cFST f4 cFST f5 c< cindexf f4 f5 f1 csizel ccore f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((indexf w) (((l'y L) r) x)) f) = (((indexf w) (((l'y L) r) x)) r)), (((find_face L) x) = f), (((((indexf w) (((l'y L) r) x)) f) = (((indexf w) (((l'y L) r) x)) r)) /\ (((((indexf w) (((l'y L) r) x)) f) < (((indexf w) ((((l'z L) N) r) x)) f)) /\ ((MEM (((l'y L) r) x)) r))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((POWER (next_el ((core L) r))) (((indexf w) (((l'y L) r) x)) f)) (FST w)) = (FST (((l'y L) r) x))) /\ ((((indexf w) (((l'y L) r) x)) f) < (sizel ((core L) r))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cindexf f4 cl'y f0 f1 f3 f2 cindexf f4 cl'y f0 f1 f3 f1 c==> c= cfind_face f0 f3 f2 c==> c/\ c= cindexf f4 cl'y f0 f1 f3 f2 cindexf f4 cl'y f0 f1 f3 f1 c/\ c< cindexf f4 cl'y f0 f1 f3 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 cMEM cl'y f0 f1 f3 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cl'y f0 f1 f3 f2 cFST f4 cFST cl'y f0 f1 f3 c< cindexf f4 cl'y f0 f1 f3 f2 csizel ccore f0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) (((indexf w) y) r)) w) = y), ((((l'y L) r) x) = y), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r))))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((indexf w) (((l'y L) r) x)) r) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) (((indexf w) (((l'y L) r) x)) r)) (FST w)) = (FST (((POWER (next_el r)) (((indexf w) (((l'y L) r) x)) r)) w)))) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 cindexf f4 f5 f1 f4 f5 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f6 f1 f3 c= c==> c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f5 f1 cFST f4 cFST f5 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f5 f1 cFST f4 cFST f5 c< cindexf f4 f5 f1 csizel ccore f0 f1 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c<= cindexf f4 cl'y f0 f1 f3 f1 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f3 f2 c= cnext_el f2 f3 f4 c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cl'y f0 f1 f3 f1 cFST f4 cFST cPOWER * part cnext_el f1 cindexf f4 cl'y f0 f1 f3 f1 f4 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f5 f1 cFST f4 cFST f5 c< cindexf f4 f5 f1 csizel ccore f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((MEM x) r) ==> ((MEM ((next_el r) x)) r)) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c==> c==> cMEM f3 f1 cMEM cnext_el f1 f3 f1 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))) = ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cfind_face f0 f2 f4 c==> cmarked_list f0 f5 f1 f2 c= c==> c/\ cMEM cFST f3 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f2 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 f4 cFST f3 cFST cytrans f0 f5 f1 f2 cNUMERAL c_0 c< cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 f4 csizel ccore f0 f1 c= cindexf cFST f3 cFST cytrans f0 f5 f1 f2 cNUMERAL c_0 ccore f0 f1 cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 f4 c= cindexf cFST f3 cFST cytrans f0 f5 f1 f2 cNUMERAL c_0 ccore f0 f1 cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 f4
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), (((find_face L) x) = f), (((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f5 cuniq ccore f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c/\ c==> cMEM ccore f0 f1 cMAP * part ccore f0 f5 cuniq ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((find_face L) x) = f) |- (((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) = ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x))))
T c==> c= cfind_face f0 f1 f2 c= c= cindexf cFST f3 cFST cytrans f0 f4 f5 f1 cNUMERAL c_0 ccore f0 f5 cindexf f3 cytrans f0 f4 f5 f1 cNUMERAL c_0 f2 c= cindexf cFST f3 cFST cytrans f0 f4 f5 f1 cNUMERAL c_0 ccore f0 f5 cindexf f3 cytrans f0 f4 f5 f1 cNUMERAL c_0 cfind_face f0 f1
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((is_restricted (hypermap_of_list L)) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) < (sizel ((core L) r)))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cis_restricted chypermap_of_list b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cfind_face b0 b3 f0 c= cnext_el f0 b3 f1 c< cindexf f1 cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 csizel ccore b0 b2 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST x)) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!k. ((((MEM w) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST w)) ((core L) r)))) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c==> ! c==> c/\ cMEM f4 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f5 f1 f3 c~ cfinal_list f0 f1 cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- ((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))) |- (((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))) = T)
T c==> c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 c= c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
+ |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
+ |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))) = (((((marked_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))))
T c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c/\ cMEM cFST f4 ccore f0 f2 c/\ cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 c/\ cuniq ccore f0 f2 c/\ c= cPOWER * part cnext_el ccore f0 f2 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 cFST f4 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 csizel ccore f0 f2 c==> cmarked_list f0 f1 f2 f3 c/\ cMEM cFST f4 ccore f0 f2 c/\ cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 c/\ cuniq ccore f0 f2 c/\ c= cPOWER * part cnext_el ccore f0 f2 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 cFST f4 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 csizel ccore f0 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((indexf w) (((l'y L) r) x)) f) = (((indexf w) (((l'y L) r) x)) r)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) (((l'y L) r) x)) f) < (((indexf w) ((((l'z L) N) r) x)) f)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((l'y L) r) x)) r), ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((\y. ((((l'y L) r) x) = y)) y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((l'y L) r) x)) r)) (FST w)) = (FST (((l'y L) r) x))) /\ ((((indexf w) (((l'y L) r) x)) r) < (sizel ((core L) r))))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cindexf f4 cl'y f0 f1 f3 f2 cindexf f4 cl'y f0 f1 f3 f1 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c< cindexf f4 cl'y f0 f1 f3 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'y f0 f1 f3 f1 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c= c==> * / c= cl'y f0 f1 f3 b0 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cl'y f0 f1 f3 f1 cFST f4 cFST cl'y f0 f1 f3 c< cindexf f4 cl'y f0 f1 f3 f1 csizel ccore f0 f1 cT
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (FST w)) ((core L) r)) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) ==> ((uniq ((core L) r)) ==> ((transform_assumption_v2 L) ==> (((((indexf w) y) f) = (((indexf w) y) r)) ==> (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) ==> (((MEM y) r) ==> (((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c==> cs_flag_list f0 f5 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cuniq ccore f0 f1 c==> ctransform_assumption_v2 f0 c==> c= cindexf f4 f6 f2 cindexf f4 f6 f1 c==> c< cindexf f4 f6 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM f6 f1 c==> c= cl'y f0 f1 f3 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f6 f1 cFST f4 cFST f6 c< cindexf f4 f6 f1 csizel ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (FST w)) ((core L) r)) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) ==> ((uniq ((core L) r)) ==> ((transform_assumption_v2 L) ==> (((((indexf w) y) f) = (((indexf w) y) r)) ==> (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) ==> (((MEM y) r) ==> (((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c==> cs_flag_list f0 f5 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cuniq ccore f0 f1 c==> ctransform_assumption_v2 f0 c==> c= cindexf f4 f6 f2 cindexf f4 f6 f1 c==> c< cindexf f4 f6 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM f6 f1 c==> c= cl'y f0 f1 f3 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f6 f1 cFST f4 cFST f6 c< cindexf f4 f6 f1 csizel ccore f0 f1
+ ((MEM r) N) |- (((MEM ((core L) r)) ((MAP (core L)) N)) = T)
T c==> cMEM f0 f1 c= cMEM ccore f2 f0 cMAP * part ccore f2 f1 cT
+ |- (((!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) ==> ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)) = ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r))
T c= c==> ! ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((transform_assumption_v2 L) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c==> ctransform_assumption_v2 f0 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ |- (((!L. (transform_assumption_v2 L)) ==> ((\L. (transform_assumption_v2 L)) L)) = ((\L. (transform_assumption_v2 L)) L))
T c= c==> ! ctransform_assumption_v2 b0 * / ctransform_assumption_v2 b0 f0 * / ctransform_assumption_v2 b0 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (?y. ((((l'y L) r) x) = y))
T c? / c= cl'y f0 f1 f2 b0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((indexf w) (((l'y L) r) x)) f) = (((indexf w) (((l'y L) r) x)) r)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) (((l'y L) r) x)) f) < (((indexf w) ((((l'z L) N) r) x)) f)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((l'y L) r) x)) r), ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((?y. ((((l'y L) r) x) = y)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((l'y L) r) x)) r)) (FST w)) = (FST (((l'y L) r) x))) /\ ((((indexf w) (((l'y L) r) x)) r) < (sizel ((core L) r)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cindexf f4 cl'y f0 f1 f3 f2 cindexf f4 cl'y f0 f1 f3 f1 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c< cindexf f4 cl'y f0 f1 f3 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cl'y f0 f1 f3 f1 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c==> c? / c= cl'y f0 f1 f3 b0 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cl'y f0 f1 f3 f1 cFST f4 cFST cl'y f0 f1 f3 c< cindexf f4 cl'y f0 f1 f3 f1 csizel ccore f0 f1
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ (((next_el ((find_face L) x)) x) = w), (((find_face L) x) = f) |- (((next_el f) x) = w)
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c==> c= cfind_face f0 f1 f3 c= cnext_el f3 f1 f2
+ |- ((\L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) i)) f)) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) <= (((indexf w) (((((ytrans L) N) r) x) i)) f)) /\ ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))))))))))) L)
T * / ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 c/\ c= cfind_face b0 b3 f0 c= cnext_el f0 b3 f1 c/\ c= cindexf f1 cytrans b0 b1 b2 b3 cNUMERAL c_0 f0 cindexf f1 cytrans b0 b1 b2 b3 cNUMERAL c_0 crtrans b0 b1 b2 b3 b4 c/\ c< cindexf f1 cytrans b0 b1 b2 b3 cNUMERAL c_0 f0 cindexf f1 cztrans b0 b1 b2 b3 b4 f0 c/\ c<= cindexf f1 cytrans b0 b1 b2 b3 cNUMERAL c_0 f0 cindexf f1 cytrans b0 b1 b2 b3 b4 f0 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 crtrans b0 b1 b2 b3 b4 f2
+ |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((is_restricted (hypermap_of_list L)) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) < (sizel ((core L) r)))))) r)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cis_restricted chypermap_of_list f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cfind_face f0 b1 f2 c= cnext_el f2 b1 f3 c< cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 csizel ccore f0 b0 f4
+ |- ((((((MEM w) r) /\ (((MEM y) r) /\ (uniq r))) ==> ((((POWER (next_el r)) (((indexf w) y) r)) w) = y)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r))))) = (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r)))))
T c= c==> c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 cuniq f1 c= cPOWER * part cnext_el f1 cindexf f0 f2 f1 f0 f2 c/\ c= cPOWER * part cnext_el ccore f3 f1 cindexf f0 f2 f1 cFST f0 cFST f2 c< cindexf f0 f2 f1 csizel ccore f3 f1 c/\ c= cPOWER * part cnext_el ccore f3 f1 cindexf f0 f2 f1 cFST f0 cFST f2 c< cindexf f0 f2 f1 csizel ccore f3 f1
+ |- ((\N. (!f. (!x. (!L. (!r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))))))))))) N)
T * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b0 b4 b2 c/\ c~ cfinal_list b3 b4 c/\ c<= b6 cindexf b5 cytrans b3 b0 b4 b2 cNUMERAL c_0 b4 c/\ c= cfind_face b3 b2 b1 c= cnext_el b1 b2 b5 c= cPOWER * part cnext_el ccore b3 b4 b6 cFST b5 cFST cPOWER * part cnext_el b4 b6 b5 f0
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ |- ((\x. (!L. (!r. (!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))))))))) x)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 f0 b2 b0 c/\ c~ cfinal_list b1 b2 c/\ c<= b4 cindexf b3 cytrans b1 f0 b2 b0 cNUMERAL c_0 b2 c/\ c= cfind_face b1 b0 f1 c= cnext_el f1 b0 b3 c= cPOWER * part cnext_el ccore b1 b2 b4 cFST b3 cFST cPOWER * part cnext_el b2 b4 b3 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((!x'. (((\w. (((next_el ((find_face L) x)) x) = w)) x') ==> ((((indexf (FST ((next_el ((find_face L) x)) x))) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x))))) ==> ((?w. (((next_el ((find_face L) x)) x) = w)) ==> ((((indexf (FST ((next_el ((find_face L) x)) x))) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x))))) = ((?w. (((next_el ((find_face L) x)) x) = w)) ==> ((((indexf (FST ((next_el ((find_face L) x)) x))) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf ((next_el ((find_face L) x)) x)) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c= c==> ! c==> * / c= cnext_el cfind_face f0 f3 f3 b1 b0 c= cindexf cFST cnext_el cfind_face f0 f3 f3 cFST cytrans f0 f2 f1 f3 cNUMERAL c_0 ccore f0 f1 cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f2 f1 f3 cNUMERAL c_0 cfind_face f0 f3 c==> c? / c= cnext_el cfind_face f0 f3 f3 b0 c= cindexf cFST cnext_el cfind_face f0 f3 f3 cFST cytrans f0 f2 f1 f3 cNUMERAL c_0 ccore f0 f1 cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f2 f1 f3 cNUMERAL c_0 cfind_face f0 f3 c==> c? / c= cnext_el cfind_face f0 f3 f3 b0 c= cindexf cFST cnext_el cfind_face f0 f3 f3 cFST cytrans f0 f2 f1 f3 cNUMERAL c_0 ccore f0 f1 cindexf cnext_el cfind_face f0 f3 f3 cytrans f0 f2 f1 f3 cNUMERAL c_0 cfind_face f0 f3
+ |- (((!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) i)) f)) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) <= (((indexf w) (((((ytrans L) N) r) x) i)) f)) /\ ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))))))))) ==> ((\r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) i)) f)) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) <= (((indexf w) (((((ytrans L) N) r) x) i)) f)) /\ ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))))))))) r)) = ((\r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) i)) f)) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) <= (((indexf w) (((((ytrans L) N) r) x) i)) f)) /\ ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))))))))) r))
T c= c==> ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 crtrans f0 f1 b0 b1 b2 c/\ c= cfind_face f0 b1 f2 c= cnext_el f2 b1 f3 c/\ c= cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 f2 cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 crtrans f0 f1 b0 b1 b2 c/\ c< cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 f2 cindexf f3 cztrans f0 f1 b0 b1 b2 f2 c/\ c<= cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 f2 cindexf f3 cytrans f0 f1 b0 b1 b2 f2 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 crtrans f0 f1 b0 b1 b2 * / ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 crtrans f0 f1 b0 b1 b2 c/\ c= cfind_face f0 b1 f2 c= cnext_el f2 b1 f3 c/\ c= cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 f2 cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 crtrans f0 f1 b0 b1 b2 c/\ c< cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 f2 cindexf f3 cztrans f0 f1 b0 b1 b2 f2 c/\ c<= cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 f2 cindexf f3 cytrans f0 f1 b0 b1 b2 f2 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 crtrans f0 f1 b0 b1 b2 f4 * / ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 crtrans f0 f1 b0 b1 b2 c/\ c= cfind_face f0 b1 f2 c= cnext_el f2 b1 f3 c/\ c= cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 f2 cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 crtrans f0 f1 b0 b1 b2 c/\ c< cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 f2 cindexf f3 cztrans f0 f1 b0 b1 b2 f2 c/\ c<= cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 f2 cindexf f3 cytrans f0 f1 b0 b1 b2 f2 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 crtrans f0 f1 b0 b1 b2 f4
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), ((((marked_list L) N) r) x) |- (((\f. (((find_face L) x) = f)) f) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) ((find_face L) x))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> cmarked_list f0 f4 f1 f2 c==> * / c= cfind_face f0 f2 b0 f5 c= cindexf cFST f3 cFST cytrans f0 f4 f1 f2 cNUMERAL c_0 ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f2 cNUMERAL c_0 cfind_face f0 f2
+ |- ((!w. (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))))) = T)
T c= ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= b1 cindexf b0 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 b0 c= cPOWER * part cnext_el ccore f0 f2 b1 cFST b0 cFST cPOWER * part cnext_el f2 b1 b0 cT
+ |- ((\m. (((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) m) x) = (((POWER (next_el ((find_face L) x))) m) x)))) (SUC (NUMERAL _0)))
T * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 cSUC cNUMERAL c_0
+ |- (((!L. (!N. (!r. (!x. (!k. ((((MEM w) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST w)) ((core L) r)))))))) ==> ((\L. (!N. (!r. (!x. (!k. ((((MEM w) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST w)) ((core L) r)))))))) L)) = ((\L. (!N. (!r. (!x. (!k. ((((MEM w) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST w)) ((core L) r)))))))) L))
T c= c==> ! ! ! ! ! c==> c/\ cMEM f0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST f0 ccore b0 b2 * / ! ! ! ! c==> c/\ cMEM f0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST f0 ccore b0 b2 f1 * / ! ! ! ! c==> c/\ cMEM f0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cFST f0 ccore b0 b2 f1
- |- (((uniq ((core L) r)) ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = q')) ==> (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = ((uniq ((core L) r)) ==> q')))
T c==> c==> cuniq ccore f0 f1 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 f6 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> cuniq ccore f0 f1 f6
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((MEM x) r), ((((marked_list L) N) r) x) |- ((((MEM (FST x)) ((core L) r)) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))) = ((!k. ((((MEM x) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST x)) ((core L) r)))) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cMEM f2 f1 c==> cmarked_list f0 f3 f1 f2 c= c==> cMEM cFST f2 ccore f0 f1 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f3 f1 f2 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f3 f1 f2 cNUMERAL c_0 f5 cFST f4 cFST cytrans f0 f3 f1 f2 cNUMERAL c_0 c< cindexf f4 cytrans f0 f3 f1 f2 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> ! c==> c/\ cMEM f2 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f3 f1 f2 c~ cfinal_list f0 f1 cMEM cFST f2 ccore f0 f1 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f3 f1 f2 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f3 f1 f2 cNUMERAL c_0 f5 cFST f4 cFST cytrans f0 f3 f1 f2 cNUMERAL c_0 c< cindexf f4 cytrans f0 f3 f1 f2 cNUMERAL c_0 f5 csizel ccore f0 f1
+ |- (((!x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) ==> ((\x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) x)) = ((\x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) x))
T c= c==> ! ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 * / ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 f1 * / ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 f1
- (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c/\ cMEM cFST f5 ccore f0 f2 c/\ cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 c/\ cuniq ccore f0 f2 c/\ c= cPOWER * part cnext_el ccore f0 f2 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cFST f5 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 csizel ccore f0 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ ((((find_face L) x) = f) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> cmarked_list f0 f5 f1 f3 c/\ c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cnormal_list f0 f5 c==> cMEM f1 f5 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM w) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) ==> ((uniq ((core L) r)) ==> ((transform_assumption_v2 L) ==> (((((indexf w) y) f) = (((indexf w) y) r)) ==> (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) ==> (((MEM y) r) ==> (((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f4 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cuniq ccore f0 f1 c==> ctransform_assumption_v2 f0 c==> c= cindexf f4 f6 f2 cindexf f4 f6 f1 c==> c< cindexf f4 f6 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM f6 f1 c==> c= cl'y f0 f1 f3 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f6 f1 cFST f4 cFST f6 c< cindexf f4 f6 f1 csizel ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 cs_flag_list f0 f5 f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- |- ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f)))
T c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
+ |- ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) x)
T * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ |- ((\f. (!x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u)))))) f)
T * / ! ! c==> cMEM b1 b2 cMEM * b0 b1 cMAP b0 b2 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c/\ cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f5 cuniq ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq ((core L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((l'y L) r) x) = y), ((((indexf w) (((l'y L) r) x)) f) = (((indexf w) (((l'y L) r) x)) r)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) ==> (((MEM y) r) ==> (((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq ccore f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cindexf f4 cl'y f0 f1 f3 f2 cindexf f4 cl'y f0 f1 f3 f1 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cytrans f0 f6 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> cMEM f1 f6 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f6 c==> cs_flag_list f0 f6 f1 f3 c==> cmarked_list f0 f6 f1 f3 c==> c< cindexf f4 f5 f2 cindexf f4 cl'z f0 f6 f1 f3 f2 c==> cMEM f5 f1 c==> c= cl'y f0 f1 f3 f5 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f5 f1 cFST f4 cFST f5 c< cindexf f4 f5 f1 csizel ccore f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el ((find_face L) x)) x) = w), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cfind_face f0 f2 f2 f3 c==> c= cfind_face f0 f2 f4 c==> cmarked_list f0 f5 f1 f2 c==> c==> c/\ cMEM cFST f3 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f2 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 f4 cFST f3 cFST cytrans f0 f5 f1 f2 cNUMERAL c_0 c< cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 f4 csizel ccore f0 f1 c= cindexf cFST f3 cFST cytrans f0 f5 f1 f2 cNUMERAL c_0 ccore f0 f1 cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 f4 c= cindexf cFST f3 cFST cytrans f0 f5 f1 f2 cNUMERAL c_0 ccore f0 f1 cindexf f3 cytrans f0 f5 f1 f2 cNUMERAL c_0 f4
+ |- ((\r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) i)) f)) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) <= (((indexf w) (((((ytrans L) N) r) x) i)) f)) /\ ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) i))))))))) r)
T * / ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 crtrans f0 f1 b0 b1 b2 c/\ c= cfind_face f0 b1 f2 c= cnext_el f2 b1 f3 c/\ c= cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 f2 cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 crtrans f0 f1 b0 b1 b2 c/\ c< cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 f2 cindexf f3 cztrans f0 f1 b0 b1 b2 f2 c/\ c<= cindexf f3 cytrans f0 f1 b0 b1 cNUMERAL c_0 f2 cindexf f3 cytrans f0 f1 b0 b1 b2 f2 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 crtrans f0 f1 b0 b1 b2 f4
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) (((indexf w) y) r)) w) = y), ((((l'y L) r) x) = y), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((POWER (next_el r)) (((indexf w) y) r)) w) = y) /\ (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 cindexf f4 f5 f1 f4 f5 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f6 f1 f3 c/\ c= cPOWER * part cnext_el f1 cindexf f4 f5 f1 f4 f5 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f5 f1 cFST f4 cFST f5 c< cindexf f4 f5 f1 csizel ccore f0 f1
+ ((MEM r) N) |- (((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) ==> ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))) = ((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))
T c==> cMEM f0 f1 c= c==> c==> cMEM ccore f2 f0 cMAP * part ccore f2 f1 cuniq ccore f2 f0 c/\ cuniq ccore f2 f0 c/\ c= cPOWER * part cnext_el ccore f2 f0 cindexf f3 cytrans f2 f1 f0 f4 cNUMERAL c_0 f5 cFST f3 cFST cytrans f2 f1 f0 f4 cNUMERAL c_0 c< cindexf f3 cytrans f2 f1 f0 f4 cNUMERAL c_0 f5 csizel ccore f2 f0 c==> cuniq ccore f2 f0 c/\ c= cPOWER * part cnext_el ccore f2 f0 cindexf f3 cytrans f2 f1 f0 f4 cNUMERAL c_0 f5 cFST f3 cFST cytrans f2 f1 f0 f4 cNUMERAL c_0 c< cindexf f3 cytrans f2 f1 f0 f4 cNUMERAL c_0 f5 csizel ccore f2 f0
+ |- (((!k. ((((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))))) ==> ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)))) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) = (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))
T c= c==> ! c==> c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 c/\ cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 c/\ cuniq ccore f0 f2 c/\ c= cPOWER * part cnext_el ccore f0 f2 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 cFST f4 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 csizel ccore f0 f2 c/\ cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 c/\ cuniq ccore f0 f2 c/\ c= cPOWER * part cnext_el ccore f0 f2 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 cFST f4 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f5 csizel ccore f0 f2
+ |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((is_restricted (hypermap_of_list L)) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) < (sizel ((core L) r))))))) N)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cis_restricted chypermap_of_list f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cfind_face f0 b2 f1 c= cnext_el f1 b2 f2 c< cindexf f2 cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 csizel ccore f0 b1 f3
+ ((MEM r) N) |- ((T ==> ((uniq ((core L) r)) = q')) ==> ((((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))) = (T ==> q')))
T c==> cMEM f0 f1 c==> c==> cT c= cuniq ccore f2 f0 f3 c= c==> cMEM ccore f2 f0 cMAP * part ccore f2 f1 cuniq ccore f2 f0 c==> cT f3
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 f0
- |- ((((uniq ((core L) r)) = (uniq ((core L) r))) ==> (((uniq ((core L) r)) ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = q')) ==> (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = ((uniq ((core L) r)) ==> q')))) = (((uniq ((core L) r)) ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = q')) ==> (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = ((uniq ((core L) r)) ==> q'))))
T c= c==> c= cuniq ccore f0 f1 cuniq ccore f0 f1 c==> c==> cuniq ccore f0 f1 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 f6 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> cuniq ccore f0 f1 f6 c==> c==> cuniq ccore f0 f1 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 f6 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> cuniq ccore f0 f1 f6
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c/\ cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- ((all (\s. (~ (s = NIL)))) N) |- (((all (\s. (~ (s = NIL)))) N) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
- ((MEM r) N) |- (T = ((MEM r) N))
T c==> cMEM f0 f1 c= cT cMEM f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) |- (((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)))
T c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c==> c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
- |- ((((\f. (((find_face L) x) = f)) f) ==> (?f. (((find_face L) x) = f))) = T)
T c= c==> * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> cmarked_list f0 f5 f1 f3 c==> c= cfind_face f0 f3 f2 c==> cnormal_list f0 f5 c==> cMEM f1 f5 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- T |- (T = T)
T c==> cT c= cT cT
- |- (((((l'y L) r) x) = y) = ((\y. ((((l'y L) r) x) = y)) y))
T c= c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- |- (((!x'. (((\w. (((next_el ((find_face L) x)) x) = w)) x') ==> (?w. (((next_el ((find_face L) x)) x) = w)))) ==> ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w)))) = ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w))))
T c= c==> ! c==> * / c= cnext_el cfind_face f0 f1 f1 b1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b1 c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0 c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- (!y. (((\y. ((((l'y L) r) x) = y)) y) ==> (?y. ((((l'y L) r) x) = y))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- (!x. (((MEM x) ((MAP (core L)) N)) ==> (uniq x))) |- (((MEM x) ((MAP (core L)) N)) ==> (uniq x))
T c==> ! c==> cMEM b0 cMAP * part ccore f0 f1 cuniq b0 c==> cMEM f2 cMAP * part ccore f0 f1 cuniq f2
- ((((l'y L) r) x) = y) |- ((\y. ((((l'y L) r) x) = y)) y)
T c==> c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((uniq ((core L) r)) = p') ==> ((p' ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = q')) ==> (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = (p' ==> q'))))
T c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 cFST f3 cFST cytrans f0 f4 f1 f5 cNUMERAL c_0 c< cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 csizel ccore f0 f1 f7 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 cFST f3 cFST cytrans f0 f4 f1 f5 cNUMERAL c_0 c< cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 csizel ccore f0 f1 c==> f2 f7
- ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((((next_el ((find_face L) x)) x) = w) ==> (?w. (((next_el ((find_face L) x)) x) = w))) = (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c= c==> c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((l'y L) r) x) = y) ==> (?y. ((((l'y L) r) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c/\ cMEM cFST f5 ccore f0 f1 c/\ cMEM cFST cytrans f0 f2 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f4 cFST f5 cFST cytrans f0 f2 f1 f3 cNUMERAL c_0 c< cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f4 csizel ccore f0 f1
- ((\f. (((find_face L) x) = f)) f) |- (((((find_face L) x) = f) ==> (?f. (((find_face L) x) = f))) = (?f. (((find_face L) x) = f)))
T c==> * / c= cfind_face f0 f1 b0 f2 c= c==> c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- |- (((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))) ==> ((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))))
T c==> c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5
- |- (((!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = q')) ==> (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = (p' ==> q'))))) ==> ((\q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = q')) ==> (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = (p' ==> q'))))) q')) = ((\q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = q')) ==> (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 cFST f3 cFST cytrans f0 f4 f1 f5 cNUMERAL c_0 c< cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 csizel ccore f0 f1 b0 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 cFST f3 cFST cytrans f0 f4 f1 f5 cNUMERAL c_0 c< cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 csizel ccore f0 f1 c==> f2 b0 * / c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 cFST f3 cFST cytrans f0 f4 f1 f5 cNUMERAL c_0 c< cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 csizel ccore f0 f1 b0 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 cFST f3 cFST cytrans f0 f4 f1 f5 cNUMERAL c_0 c< cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 csizel ccore f0 f1 c==> f2 b0 f7 * / c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 cFST f3 cFST cytrans f0 f4 f1 f5 cNUMERAL c_0 c< cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 csizel ccore f0 f1 b0 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 cFST f3 cFST cytrans f0 f4 f1 f5 cNUMERAL c_0 c< cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 csizel ccore f0 f1 c==> f2 b0 f7
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c/\ c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f5 f1 f3 c==> cnormal_list f0 f5 c==> cMEM f1 f5 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- |- (!f. (((\f. (((find_face L) x) = f)) f) ==> (?f. (((find_face L) x) = f))))
T c==> * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), ((MEM d) (list_of_darts L)) |- ((MEM ((SND d) , (FST d))) (list_of_darts L))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), (((find_face L) x) = f), (((MEM ((core L) r)) ((MAP (core L)) N)) ==> (uniq ((core L) r))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM (FST w)) ((core L) r)), ((MEM (FST x)) ((core L) r)), ((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cf_list f0 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c==> cMEM ccore f0 f1 cMAP * part ccore f0 f5 cuniq ccore f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cMEM f4 f1 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM f1 f5 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f5 c==> cs_flag_list f0 f5 f1 f3 c==> cmarked_list f0 f5 f1 f3 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- (uniq ((core L) r)) |- ((uniq ((core L) r)) /\ ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))
T c==> cuniq ccore f0 f1 c/\ cuniq ccore f0 f1 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1
- (!x. (((MEM x) ((MAP (core L)) N)) ==> (uniq x))) |- ((\x. (((MEM x) ((MAP (core L)) N)) ==> (uniq x))) x)
T c==> ! c==> cMEM b0 cMAP * part ccore f0 f1 cuniq b0 * / c==> cMEM b0 cMAP * part ccore f0 f1 cuniq b0 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c/\ cMEM cFST f5 ccore f0 f1 c/\ cMEM cFST cytrans f0 f2 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f4 cFST f5 cFST cytrans f0 f2 f1 f3 cNUMERAL c_0 c< cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f4 csizel ccore f0 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- ((((indexf w) (((l'y L) r) x)) f) < (((indexf w) ((((l'z L) N) r) x)) f)) |- (((((indexf w) (((l'y L) r) x)) f) < (((indexf w) ((((l'z L) N) r) x)) f)) = T)
T c==> c< cindexf f0 cl'y f1 f2 f3 f4 cindexf f0 cl'z f1 f5 f2 f3 f4 c= c< cindexf f0 cl'y f1 f2 f3 f4 cindexf f0 cl'z f1 f5 f2 f3 f4 cT
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
- (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ ((is_restricted (hypermap_of_list L)) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cis_restricted chypermap_of_list f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c/\ cMEM cFST f5 ccore f0 f2 c/\ cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 c/\ cuniq ccore f0 f2 c/\ c= cPOWER * part cnext_el ccore f0 f2 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cFST f5 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 csizel ccore f0 f2
- |- ((((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (?w. (((next_el ((find_face L) x)) x) = w))) = T)
T c= c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list L) |- ((good_list_nodes L) ==> ((is_restricted (hypermap_of_list L)) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cis_restricted chypermap_of_list f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c/\ cMEM cFST f5 ccore f0 f2 c/\ cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 c/\ cuniq ccore f0 f2 c/\ c= cPOWER * part cnext_el ccore f0 f2 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cFST f5 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 csizel ccore f0 f2
- ((\y. ((((l'y L) r) x) = y)) y) |- ((((((l'y L) r) x) = y) ==> (?y. ((((l'y L) r) x) = y))) = (?y. ((((l'y L) r) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- |- ((((\y. ((((l'y L) r) x) = y)) y) ==> (?y. ((((l'y L) r) x) = y))) = T)
T c= c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (FST w)) ((core L) r)) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) ==> ((uniq ((core L) r)) ==> ((transform_assumption_v2 L) ==> (((((indexf w) y) f) = (((indexf w) y) r)) ==> (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) ==> (((MEM y) r) ==> (((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c/\ cMEM f1 f5 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cuniq ccore f0 f1 c==> ctransform_assumption_v2 f0 c==> c= cindexf f4 f6 f2 cindexf f4 f6 f1 c==> c< cindexf f4 f6 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM f6 f1 c==> c= cl'y f0 f1 f3 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f6 f1 cFST f4 cFST f6 c< cindexf f4 f6 f1 csizel ccore f0 f1
- |- ((((find_face L) x) = f) ==> (?f. (((find_face L) x) = f)))
T c==> c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0
- (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))), ((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))) |- (((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))) /\ ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)))
T c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c==> c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 c/\ c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c==> cMEM f1 f5 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c/\ cnormal_list f0 f5 c==> cMEM f1 f5 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- |- ((\L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))) L)
T * / c= cMEM f0 clist_of_darts b0 cMEM f0 cfind_face b0 f0 f1
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c/\ cMEM cFST f5 ccore f0 f1 c/\ cMEM cFST cytrans f0 f2 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f4 cFST f5 cFST cytrans f0 f2 f1 f3 cNUMERAL c_0 c< cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f4 csizel ccore f0 f1
- |- (((!d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) ==> ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d)) = ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d))
T c= c==> ! ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0 * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM (FST x)) ((core L) r)) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (FST w)) ((core L) r)) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) ==> ((uniq ((core L) r)) ==> ((transform_assumption_v2 L) ==> (((((indexf w) y) f) = (((indexf w) y) r)) ==> (((((indexf w) y) f) < (((indexf w) ((((l'z L) N) r) x)) f)) ==> (((MEM y) r) ==> (((((l'y L) r) x) = y) ==> (((((POWER (next_el ((core L) r))) (((indexf w) y) r)) (FST w)) = (FST y)) /\ ((((indexf w) y) r) < (sizel ((core L) r))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c==> cMEM f1 f5 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM cFST f3 ccore f0 f1 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cFST f4 ccore f0 f1 c==> cMEM cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c==> cuniq ccore f0 f1 c==> ctransform_assumption_v2 f0 c==> c= cindexf f4 f6 f2 cindexf f4 f6 f1 c==> c< cindexf f4 f6 f2 cindexf f4 cl'z f0 f5 f1 f3 f2 c==> cMEM f6 f1 c==> c= cl'y f0 f1 f3 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 f6 f1 cFST f4 cFST f6 c< cindexf f4 f6 f1 csizel ccore f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((next_el ((find_face L) x)) x) = w) ==> (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- |- (!w. (((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (?w. (((next_el ((find_face L) x)) x) = w))))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- ((MEM (((l'y L) r) x)) r) |- (((MEM (((l'y L) r) x)) r) = T)
T c==> cMEM cl'y f0 f1 f2 f1 c= cMEM cl'y f0 f1 f2 f1 cT
- |- (((!p'. (!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = q')) ==> (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = q')) ==> (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = q')) ==> (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cuniq ccore f0 f1 b0 c==> c==> b0 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 b1 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> b0 b1 * / ! c==> c= cuniq ccore f0 f1 b0 c==> c==> b0 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 b1 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> b0 b1 f6 * / ! c==> c= cuniq ccore f0 f1 b0 c==> c==> b0 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 b1 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> b0 b1 f6
- |- ((\q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = q')) ==> (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = (p' ==> q'))))) q')
T * / c==> c= cuniq ccore f0 f1 f2 c==> c==> f2 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 cFST f3 cFST cytrans f0 f4 f1 f5 cNUMERAL c_0 c< cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 csizel ccore f0 f1 b0 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 cFST f3 cFST cytrans f0 f4 f1 f5 cNUMERAL c_0 c< cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f6 csizel ccore f0 f1 c==> f2 b0 f7
- |- ((((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))) = T)
T c= c==> cMEM f0 f1 cMEM * f2 f0 cMAP f2 f1 cT
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))), ((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))) |- ((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) /\ ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)))
T c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c==> c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 c/\ c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5
- ((\f. (((find_face L) x) = f)) f) |- (((\f. (((find_face L) x) = f)) f) /\ (?f. (((find_face L) x) = f)))
T c==> * / c= cfind_face f0 f1 b0 f2 c/\ * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0
- |- (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = ((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))
T c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((\p'. (!q'. (((uniq ((core L) r)) = p') ==> ((p' ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = q')) ==> (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = (p' ==> q')))))) p')
T * / ! c==> c= cuniq ccore f0 f1 b0 c==> c==> b0 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 b1 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> b0 b1 f6
- |- ((((next_el ((find_face L) x)) x) = w) = ((\w. (((next_el ((find_face L) x)) x) = w)) w))
T c= c= cnext_el cfind_face f0 f1 f1 f2 * / c= cnext_el cfind_face f0 f1 f1 b0 f2
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- (((!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))) ==> ((\L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))) L)) = ((\L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))) L))
T c= c==> ! c= cMEM f0 clist_of_darts b0 cMEM f0 cfind_face b0 f0 * / c= cMEM f0 clist_of_darts b0 cMEM f0 cfind_face b0 f0 f1 * / c= cMEM f0 clist_of_darts b0 cMEM f0 cfind_face b0 f0 f1
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\x'. (f x')) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((!x. (((\f. (((find_face L) x) = f)) x) ==> (?f. (((find_face L) x) = f)))) ==> ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f)))) = ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f))))
T c= c==> ! c==> * / c= cfind_face f0 f1 b1 b0 c? / c= cfind_face f0 f1 b1 c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0 c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
- (!x. (((MEM x) ((MAP (core L)) N)) ==> (uniq x))) |- ((((MEM x) ((MAP (core L)) N)) ==> (uniq x)) = T)
T c==> ! c==> cMEM b0 cMAP * part ccore f0 f1 cuniq b0 c= c==> cMEM f2 cMAP * part ccore f0 f1 cuniq f2 cT
- (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L) |- ((is_restricted (hypermap_of_list L)) /\ (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cis_restricted chypermap_of_list f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c/\ cMEM cFST f5 ccore f0 f2 c/\ cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 c/\ cuniq ccore f0 f2 c/\ c= cPOWER * part cnext_el ccore f0 f2 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cFST f5 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 csizel ccore f0 f2
- |- ((((uniq ((core L) r)) ==> ((((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))) = (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))) ==> (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = ((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) = (((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))) = ((uniq ((core L) r)) ==> (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))
T c= c==> c==> cuniq ccore f0 f1 c= c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c= c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1 c==> cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 cFST f2 cFST cytrans f0 f3 f1 f4 cNUMERAL c_0 c< cindexf f2 cytrans f0 f3 f1 f4 cNUMERAL c_0 f5 csizel ccore f0 f1
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c/\ cMEM f1 f5 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- |- ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L) |- (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cnext_el f4 f3 f5 c==> c= cfind_face f0 f3 f4 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c/\ cMEM cFST f5 ccore f0 f2 c/\ cMEM cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 ccore f0 f2 c/\ cuniq ccore f0 f2 c/\ c= cPOWER * part cnext_el ccore f0 f2 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cFST f5 cFST cytrans f0 f1 f2 f3 cNUMERAL c_0 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 csizel ccore f0 f2
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (((find_face L) x) = f) |- ((\f. (((find_face L) x) = f)) f)
T c==> c= cfind_face f0 f1 f2 * / c= cfind_face f0 f1 b0 f2
- (((next_el ((find_face L) x)) x) = w) |- ((\w. (((next_el ((find_face L) x)) x) = w)) w)
T c==> c= cnext_el cfind_face f0 f1 f1 f2 * / c= cnext_el cfind_face f0 f1 f1 b0 f2
- |- ((((((ntrans L) N) r) x) (NUMERAL _0)) = N)
T c= cntrans f0 f1 f2 f3 cNUMERAL c_0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> (((MEM ((SND d) , (FST d))) (list_of_darts L)) = T))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c= cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
- ((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))) |- (((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))) /\ ((((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))) ==> ((((indexf (FST w)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) = (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f))))
T c==> c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 c/\ c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 c==> c/\ cMEM cFST f0 ccore f1 f2 c/\ cMEM cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 c/\ cuniq ccore f1 f2 c/\ c= cPOWER * part cnext_el ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 c< cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5 csizel ccore f1 f2 c= cindexf cFST f0 cFST cytrans f1 f3 f2 f4 cNUMERAL c_0 ccore f1 f2 cindexf f0 cytrans f1 f3 f2 f4 cNUMERAL c_0 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f5 f1 f3 c/\ c= cfind_face f0 f3 f2 c==> cnormal_list f0 f5 c==> cMEM f1 f5 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM (FST w)) ((core L) r)) /\ (((MEM (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) ((core L) r)) /\ ((uniq ((core L) r)) /\ (((((POWER (next_el ((core L) r))) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f)) (FST w)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0)))) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (sizel ((core L) r)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> cMEM f3 f1 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> cmarked_list f0 f5 f1 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f3 c==> cs_flag_list f0 f5 f1 f3 c/\ cMEM cFST f4 ccore f0 f1 c/\ cMEM cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 ccore f0 f1 c/\ cuniq ccore f0 f1 c/\ c= cPOWER * part cnext_el ccore f0 f1 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 cFST f4 cFST cytrans f0 f5 f1 f3 cNUMERAL c_0 c< cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f2 csizel ccore f0 f1
- ((\y. ((((l'y L) r) x) = y)) y) |- (((\y. ((((l'y L) r) x) = y)) y) /\ (?y. ((((l'y L) r) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c/\ * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))
T c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), ((MEM d) (list_of_darts L)) |- (((MEM d) (list_of_darts L)) /\ (((MEM ((SND d) , (FST d))) (list_of_darts L)) = T))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 c/\ cMEM f1 clist_of_darts f0 c= cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- ((((l'y L) r) x) = y) |- (((((l'y L) r) x) = y) /\ (?y. ((((l'y L) r) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c/\ c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (((next_el ((find_face L) x)) x) = w) |- ((((next_el ((find_face L) x)) x) = w) /\ (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c/\ c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
