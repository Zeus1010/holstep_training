N Oxlzlez.cc_4_cc_cell
C |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ (((periodic f) n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cperiodic f1 f2 c/\ cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c/\ cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f2 ccc_4 f0 f3 f4 f1 f5 c= cgg_mcell f0 f1 f3 f4 f5 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cbeta_bump_v1 f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D Basics.EL_EXPLICIT
A |- (!h. (!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))))
T c/\ c= cEL cNUMERAL c_0 cCONS f0 f1 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
D Bump.MCELL4
A |- (!V. (!ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul))))
T c= * * part cmcell4 f0 f1 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 f1
D Leaf_cell.cc_uh
A |- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 c/\ cIN ccc_uh f0 f1 * * part cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 f1 f1 c= comega_list f0 ccc_uh f0 f1 ccc_pe1 f0 f1
D Leaf_cell.cc_cell
A |- (!V. (!ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))))
T c= * * part ccc_cell f0 f1 * * * part cmcell ccc_ke f0 f1 f0 ccc_uh f0 f1
D Leaf_cell.EL_CC_UH
A |- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ul)) = ((EL (NUMERAL _0)) ul)) /\ ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ul)) = ((EL (NUMERAL (BIT1 _0))) ul)) /\ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 c/\ c= cEL cNUMERAL c_0 ccc_uh f0 f1 cEL cNUMERAL c_0 f1 c/\ c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1
D Leaf_cell.CC_CELL_NOT_NULLSET
A |- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 c~ cnegligible * * part ccc_cell f0 f1
D Oxlzlez.MCELL4_GG
A |- (!V. (!X. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((X = ((mcell4 V) ul)) /\ ((~ (negligible X)) /\ (X SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))))) ==> ((((((gg_mcell V) f) ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) i) = ((real_add ((real_mul (((gammaX V) X) lmfun)) ((critical_weight V) X))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) X)))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cNIL f2 f3 f4 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f3 c/\ c= f5 * * part cmcell4 f0 f1 c/\ c~ cnegligible f5 cSUBSET f5 * * * * part cwedge_ge cEL cNUMERAL c_0 f1 cEL cNUMERAL cBIT1 c_0 f1 * f4 f6 * f4 cSUC f6 c= cgg_mcell f0 f4 cEL cNUMERAL c_0 f1 cEL cNUMERAL cBIT1 c_0 f1 f6 creal_add creal_mul cgammaX f0 f5 part clmfun ccritical_weight f0 f5 cbeta_bump_v1 f0 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY f5
D Oxlzlez.K4_CC_WI_ALT
A |- (!V. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cNIL f2 f3 f4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f3 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 f1 cEL cNUMERAL cBIT1 c_0 f1 * f4 f5 * f4 cSUC f5
D Oxlzlez.cc_4_cc_ke4
A |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL ccc_4 f0 f1 f2 f5 f6 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- (~ ((I packing) V)), (packing V) |- ((~ ((I packing) V)) /\ ((I packing) V))
T c==> c~ cI part cpacking f0 c==> cpacking f0 c/\ c~ cI part cpacking f0 cI part cpacking f0
+ |- ((\n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))))))))))))))) n)
T * / ! c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 b0 c==> cleaf f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c==> cleaf_rank f0 cCONS f2 cCONS f3 cNIL b1 b0 f1 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f2 f3 f1 f4 c==> c= ccc_ke f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL f3 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL * f1 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cF f6
- |- ((_7286704 = _7286706) ==> ((~ (_7286705 = _7286707)) \/ (((I _7286706) _7286707) \/ (~ ((I _7286704) _7286705)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ |- ((\i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) i)
T * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL ccc_4 f0 f1 f2 f5 b0 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6
+ |- ((\f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) f)
T * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic b0 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL ccc_4 f0 f1 f2 b0 b1 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f5
+ |- (((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)) = ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))
T c= c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
- (_7286820 = _7286822), (_7286821 = _7286823) |- ((_7286821 = _7286823) /\ (((I _7286820) _7286821) = ((I _7286822) _7286823)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
+ (!P. (!x. ((x IN P) = (P x)))) |- ((\P. (!x. ((~ ((I ((I IN) x)) P)) \/ ((I P) x)))) _7286650)
T c==> ! ! c= cIN b1 b0 * b0 b1 * / ! c\/ c~ cI * * part cI part cIN b1 b0 cI b0 b1 f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL * f6 f4 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f6 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 c==> ccc_4 f3 f0 f1 f6 f4 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 c==> c==> c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL cNIL f2 f7 f6 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f7 c= ccc_ke f3 cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f3 cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL cCONS * f6 f4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL * f6 f4 * f6 cSUC f4 cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * * * * part cwedge_ge f0 f1 * f6 f5 * f6 cSUC f5
+ |- (((!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ==> ((\f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) f)) = ((\f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) f))
T c= c==> ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic b0 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL ccc_4 f0 f1 f2 b0 b1 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic b0 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL ccc_4 f0 f1 f2 b0 b1 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f5 * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic b0 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL ccc_4 f0 f1 f2 b0 b1 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f5
+ (i = j), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)) |- (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j))
T c==> c= f0 f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL * f5 f0 c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cperiodic f5 f4 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL ccc_4 f3 f0 f1 f5 f6
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) /\ (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c= c==> c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ c/\ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c==> c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
+ (i = j), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)) |- (((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F)))) = ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))
T c==> c= f0 f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL * f5 f0 c= c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ c/\ cpacking f2 c/\ csaturated f2 cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cF c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ c/\ cpacking f2 c/\ csaturated f2 cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cF
- (i = j) |- (((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ ((~ ((I ((I leaf) _7286646)) _7286647)) \/ ((I ((I IN) ((I ((I cc_uh) _7286646)) _7286647))) ((I ((I barV) _7286646)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))))) = ((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ ((~ ((I ((I leaf) _7286646)) _7286647)) \/ ((I ((I IN) ((I ((I cc_uh) _7286646)) _7286647))) ((I ((I barV) _7286646)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))))))
T c==> c= f0 f1 c= c\/ c~ cI part cpacking f2 c\/ c~ cI part csaturated f2 c\/ c~ cI * * part cI part cleaf f2 f3 cI * * part cI part cIN cI * * part cI part ccc_uh f2 f3 * * part cI * * part cI part cbarV f2 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c\/ c~ cI part cpacking f2 c\/ c~ cI part csaturated f2 c\/ c~ cI * * part cI part cleaf f2 f3 cI * * part cI part cIN cI * * part cI part ccc_uh f2 f3 * * part cI * * part cI part cbarV f2 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f3 f0 f1 f5 f6 c==> cperiodic f5 f4 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c= cgg_mcell f3 f5 f0 f1 f6 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL
- (_7287096 = _7287098), (_7287097 = _7287099) |- (((((periodic _7287096) _7287097) = ((periodic _7287098) _7287099)) ==> (((periodic _7287098) _7287099) \/ (~ ((periodic _7287096) _7287097)))) = (((periodic _7287098) _7287099) \/ (~ ((periodic _7287096) _7287097))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cperiodic f0 f2 cperiodic f1 f3 c\/ cperiodic f1 f3 c~ cperiodic f0 f2 c\/ cperiodic f1 f3 c~ cperiodic f0 f2
+ |- ((!i. (((packing V) /\ ((saturated V) /\ (((periodic f) n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))) = T)
T c= ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cperiodic f1 f2 c/\ cleaf f0 cCONS f3 cCONS f4 cCONS * f1 b0 cNIL c/\ cleaf_rank f0 cCONS f3 cCONS f4 cNIL f5 f2 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f2 ccc_4 f0 f3 f4 f1 b0 c= cgg_mcell f0 f1 f3 f4 b0 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 b0 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 b0 cNIL cbeta_bump_v1 f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 b0 cNIL cT
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) /\ F)
T c==> c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cF
- (_7287086 = _7287091), (_7287082 = _7287087), (_7287085 = _7287090), (_7287083 = _7287088), (_7287084 = _7287089) |- ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0
+ |- ((\V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))))))))))))))) V)
T * / ! ! ! c==> cpacking b0 c==> csaturated b0 c==> cperiodic f0 b2 c==> cleaf b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL c==> cleaf_rank b0 cCONS f1 cCONS f2 cNIL b3 b2 f0 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b0 f1 f2 f0 f3 c==> c= ccc_ke b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL * f0 f3 c==> c= b1 f3 c==> c= * * part cmcell4 b0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL * * part ccc_cell b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL c==> c~ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL c==> ! ! c= cIN b5 b4 * b4 b5 c==> ! ! c==> c/\ cpacking b4 c/\ csaturated b4 cleaf b4 b4 c/\ cIN ccc_uh b4 b4 * * part cbarV b4 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b4 b4 b4 c= comega_list b4 ccc_uh b4 b4 ccc_pe1 b4 b4 cF f4
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ F), (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cF cF
- |- (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t))
T c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1
- (~ F), (~ (packing V)), (packing V) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ cpacking f0 c==> cpacking f0 c/\ c~ cF cF
- (i = j) |- ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))))
T c==> c= f0 f1 c= c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL
- |- ((~ (_7287126 = _7287127)) \/ ((BIT1 _7287126) = (BIT1 _7287127)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (packing V), (saturated V), ((saturated V) /\ (((periodic f) n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i))))))) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ csaturated f0 c/\ cperiodic f1 f2 c/\ cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c/\ cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f2 ccc_4 f0 f3 f4 f1 f5 c= cgg_mcell f0 f1 f3 f4 f5 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cbeta_bump_v1 f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c< cNUMERAL cBIT1 c_0 f5 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f6 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f6 f3 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f6 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f6 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f7 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1) /\ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c==> c/\ c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f4 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
- (i = j) |- (((I ((I periodic) f)) n) = ((I ((I periodic) f)) n))
T c==> c= f0 f1 c= cI * * part cI part cperiodic f2 f3 cI * * part cI part cperiodic f2 f3
- |- (((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))))))))))))) ==> ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))))))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cF c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cF
- (((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) = (((((gg_mcell V) f) u0) u1) j)) |- ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))
T c==> c= creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cgg_mcell f0 f3 f1 f2 f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1) /\ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c==> c/\ c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f4 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
+ |- ((\u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))) u1)
T * / ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS b0 cNIL b1 b2 b3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cperiodic b3 b2 c/\ c< cNUMERAL cBIT1 c_0 b2 c/\ cleaf f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL ccc_4 f0 f1 b0 b3 b4 c= ccc_ke f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f2
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))) = ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c= cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f7 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f7 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f7 c==> ccc_4 f3 f0 f1 f7 f4 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL * f7 f5 c==> c= f4 f5 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
+ |- ((!u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cperiodic f0 b4 c==> cleaf b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL b5 b4 f0 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b4 c==> ccc_4 b2 b1 b0 f0 f1 c==> c= ccc_ke b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL b1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL b0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL * f0 f1 c==> c= b3 f1 c==> c= * * part cmcell4 b2 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL * * part ccc_cell b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL c/\ cpacking b2 c/\ csaturated b2 cleaf b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL cT
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cF
- (_7287069 = _7287074), (_7287066 = _7287071), (_7287070 = _7287075), (_7287067 = _7287072), (_7287068 = _7287073) |- ((_7287070 = _7287075) /\ ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c/\ c= f4 f5 c\/ ccc_4 f3 f7 f9 f1 f5 c~ ccc_4 f2 f6 f8 f0 f4
- |- ((_7287092 = _7287094) ==> ((~ (_7287093 = _7287095)) \/ (((leaf _7287094) _7287095) \/ (~ ((leaf _7287092) _7287093)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
+ |- (((!ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))) ==> ((\ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))) ul)) = ((\ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))) ul))
T c= c==> ! c= * * part ccc_cell f0 b0 * * * part cmcell ccc_ke f0 b0 f0 ccc_uh f0 b0 * / c= * * part ccc_cell f0 b0 * * * part cmcell ccc_ke f0 b0 f0 ccc_uh f0 b0 f1 * / c= * * part ccc_cell f0 b0 * * * part cmcell ccc_ke f0 b0 f0 ccc_uh f0 b0 f1
- (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) |- (((I ((I EL) ((I NUMERAL) _0))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = u0)
T c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c= cI * * part cI part cEL cI part cNUMERAL c_0 cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL f1
+ |- ((\V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))))))))))))))))) V)
T * / ! ! ! c==> cpacking b0 c==> csaturated b0 c==> cperiodic f0 b2 c==> cleaf b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL c==> cleaf_rank b0 cCONS f1 cCONS f2 cNIL b3 b2 f0 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b0 f1 f2 f0 f3 c==> c= ccc_ke b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL * f0 f3 c==> c= b1 f3 c==> c= * * part cmcell4 b0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL * * part ccc_cell b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL c==> c~ c/\ cpacking b0 c/\ csaturated b0 cleaf b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL cF f4
+ |- ((\n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))))))))))))) n)
T * / ! c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 b0 c==> cleaf f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c==> cleaf_rank f0 cCONS f2 cCONS f3 cNIL b1 b0 f1 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f2 f3 f1 f4 c==> c= ccc_ke f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL f3 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL * f1 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c==> ! ! c= cIN b3 b2 * b2 b3 c==> ! ! c==> c/\ cpacking b2 c/\ csaturated b2 cleaf b2 b3 c/\ cIN ccc_uh b2 b3 * * part cbarV b2 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b2 b3 b3 c= comega_list b2 ccc_uh b2 b3 ccc_pe1 b2 b3 cF f6
+ |- (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t))
T c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 c_0 f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) /\ (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c/\ c/\ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c==> c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
- (_7286813 = _7286815) |- ((_7286812 = _7286814) ==> (((I _7286812) _7286813) = ((I _7286814) _7286815)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
- (~ ((I saturated) V)), (saturated V) |- ((~ ((I saturated) V)) /\ ((I saturated) V))
T c==> c~ cI part csaturated f0 c==> csaturated f0 c/\ c~ cI part csaturated f0 cI part csaturated f0
- (_7287067 = _7287072), (_7287068 = _7287073) |- ((_7287066 = _7287071) ==> ((~ (_7287069 = _7287074)) \/ ((~ (_7287070 = _7287075)) \/ ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
- (_7287086 = _7287091), (_7287082 = _7287087), (_7287084 = _7287089) |- ((_7287083 = _7287088) ==> ((~ (_7287085 = _7287090)) \/ ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f5 f9 f1 c~ cleaf_rank f2 f6 f4 f8 f0
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- (((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) _7286647)))) \/ (((I ((I omega_list) _7286646)) ((I ((I cc_uh) _7286646)) _7286647)) = ((I ((I cc_pe1) _7286646)) _7286647)))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 f1 c= cI * * part cI part comega_list f0 cI * * part cI part ccc_uh f0 f1 cI * * part cI part ccc_pe1 f0 f1
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
- (_7287100 = _7287101) |- ((((saturated _7287100) = (saturated _7287101)) ==> ((saturated _7287101) \/ (~ (saturated _7287100)))) = ((saturated _7287101) \/ (~ (saturated _7287100))))
T c==> c= f0 f1 c= c==> c= csaturated f0 csaturated f1 c\/ csaturated f1 c~ csaturated f0 c\/ csaturated f1 c~ csaturated f0
- (i = j) |- ((((((cc_4 V) u0) u1) f) j) = (((((cc_4 V) u0) u1) f) j))
T c==> c= f0 f1 c= ccc_4 f2 f3 f4 f5 f1 ccc_4 f2 f3 f4 f5 f1
- (i = j) |- ((saturated V) = (saturated V))
T c==> c= f0 f1 c= csaturated f2 csaturated f2
- |- ((_7286813 = _7286815) ==> ((~ (_7286812 = _7286814)) \/ (((I _7286812) _7286813) = ((I _7286814) _7286815))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))), ((packing V) /\ ((saturated V) /\ ((leaf V) ul))) |- (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) /\ (~ (negligible ((cc_cell V) ul))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 c/\ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 c~ cnegligible * * part ccc_cell f0 f1
+ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- ((((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) _7286647)))) \/ ((I ((I IN) ((I ((I cc_uh) _7286646)) _7286647))) ((I ((I barV) _7286646)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))) /\ ((((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) _7286647)))) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) _7286646)) _7286647)) = _7286647)) /\ (((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) _7286647)))) \/ (((I ((I omega_list) _7286646)) ((I ((I cc_uh) _7286646)) _7286647)) = ((I ((I cc_pe1) _7286646)) _7286647)))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c/\ c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 f1 cI * * part cI part cIN cI * * part cI part ccc_uh f0 f1 * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c/\ c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 f1 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 f1 f1 c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 f1 c= cI * * part cI part comega_list f0 cI * * part cI part ccc_uh f0 f1 cI * * part cI part ccc_pe1 f0 f1
- (!P. (!x. ((x IN P) = (P x)))), (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))), (~ F), (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ F) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c==> c~ cF c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cF cF
+ |- (((((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) = ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (i = j), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1) |- (((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))) = ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))))))
T c==> c= f0 f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL f4 c= c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
+ |- ((\ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))) ul)
T * / c= * * part ccc_cell f0 b0 * * * part cmcell ccc_ke f0 b0 f0 ccc_uh f0 b0 f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f7 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f7 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f7 c==> ccc_4 f3 f0 f1 f7 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL * f7 f5 c==> c= f4 f5 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
- |- ((_7286820 = _7286822) ==> ((~ (_7286821 = _7286823)) \/ (((I _7286820) _7286821) = ((I _7286822) _7286823))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
+ |- ((\n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i)))))))) n)
T * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 b0 b1 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b0 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b1 b2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b1 b2 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b1 b2 * b1 cSUC b2 f4
- (_7286704 = _7286706) |- ((_7286704 = _7286706) /\ ((~ (_7286705 = _7286707)) \/ (((I _7286706) _7286707) \/ (~ ((I _7286704) _7286705)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ (packing V) |- ((~ (packing V)) ==> F)
T c==> cpacking f0 c==> c~ cpacking f0 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * * * * part cwedge_ge f0 f1 * f6 f5 * f6 cSUC f5
+ |- (((!V. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i))))))))))) ==> ((\V. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i))))))))))) V)) = ((\V. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i))))))))))) V))
T c= c==> ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b3 c= ccc_ke b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 cSUC b5 * / ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b3 c= ccc_ke b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 cSUC b5 f0 * / ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b3 c= ccc_ke b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 cSUC b5 f0
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))), (((((cc_4 V) u0) u1) f) j) |- ((((((cc_4 V) u0) u1) f) j) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ccc_4 f0 f1 f2 f3 f4 c/\ ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
- (i = j) |- ((packing V) = (packing V))
T c==> c= f0 f1 c= cpacking f2 cpacking f2
- (~ (packing V)), (packing V) |- ((~ (packing V)) /\ (packing V))
T c==> c~ cpacking f0 c==> cpacking f0 c/\ c~ cpacking f0 cpacking f0
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (packing V), (saturated V) |- ((saturated V) /\ (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c/\ csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL
- |- ((~ (_7287104 = _7287106)) \/ ((~ (_7287105 = _7287107)) \/ (((mcell4 _7287104) _7287105) = ((mcell4 _7287106) _7287107))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cmcell4 f0 f2 * * part cmcell4 f1 f3
- |- ((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) = q')) ==> ((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> q')))
T c==> c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f5 c= c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 f5
+ (packing V), (saturated V), (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i))))), ((periodic f) n) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f6 f3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 ccc_4 f0 f1 f2 f3 f4 c==> cperiodic f3 f6 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- (((I ((I IN) ((I ((I cc_uh) _7286646)) _7286647))) ((I ((I barV) _7286646)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))) \/ ((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) _7286647)))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c\/ cI * * part cI part cIN cI * * part cI part ccc_uh f0 f1 * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 f1
- |- ((_7287104 = _7287106) ==> ((~ (_7287105 = _7287107)) \/ (((mcell4 _7287104) _7287105) = ((mcell4 _7287106) _7287107))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cmcell4 f0 f2 * * part cmcell4 f1 f3
- (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) |- (~ ((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cI part ccollinear * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) |- ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) /\ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 c/\ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) = (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cperiodic f5 f4 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c= c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cgg_mcell f3 f5 f0 f1 f6 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c/\ c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL ccc_4 f3 f0 f1 f5 f6 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cgg_mcell f3 f5 f0 f1 f6 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL
+ |- (((!ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul))) ==> ((\ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul))) ul)) = ((\ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul))) ul))
T c= c==> ! c= * * part cmcell4 f0 b0 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 b0 * / c= * * part cmcell4 f0 b0 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 b0 f1 * / c= * * part cmcell4 f0 b0 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 b0 f1
- (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f)
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5
+ |- ((\u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))))))))))))))))))))) u0)
T * / ! ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cperiodic f0 b3 c==> cleaf b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL c==> cleaf_rank b1 cCONS b0 cCONS f1 cNIL b4 b3 f0 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT b4 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b3 c==> ccc_4 b1 b0 f1 f0 f2 c==> c= ccc_ke b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL b0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL * f0 f2 c==> c= b2 f2 c==> c= * * part cmcell4 b1 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL * * part ccc_cell b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL c==> c~ cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL c==> ! ! c= cIN b6 b5 * b5 b6 c==> ! ! c==> c/\ cpacking b5 c/\ csaturated b5 cleaf b5 b5 c/\ cIN ccc_uh b5 b5 * * part cbarV b5 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b5 b5 b5 c= comega_list b5 ccc_uh b5 b5 ccc_pe1 b5 b5 cF f3
- (_7287104 = _7287106) |- ((_7287104 = _7287106) /\ ((~ (_7287105 = _7287107)) \/ (((mcell4 _7287104) _7287105) = ((mcell4 _7287106) _7287107))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cmcell4 f0 f2 * * part cmcell4 f1 f3
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f6 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 c==> ccc_4 f3 f0 f1 f6 f4 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * f6 f5 c==> c= f4 f5 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
+ (~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) /\ F)
T c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF
+ (packing V), (saturated V), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) /\ ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- (((I packing) V) /\ (((I saturated) V) /\ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cI part cpacking f0 c/\ cI part csaturated f0 cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL
- (_7286708 = _7286710), (_7286709 = _7286711) |- (((((I _7286708) _7286709) = ((I _7286710) _7286711)) ==> (((I _7286710) _7286711) \/ (~ ((I _7286708) _7286709)))) = (((I _7286710) _7286711) \/ (~ ((I _7286708) _7286709))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cI f0 f2 cI f1 f3 c\/ cI f1 f3 c~ cI f0 f2 c\/ cI f1 f3 c~ cI f0 f2
+ (!P. (!x. ((x IN P) = (P x)))), (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((!P. (!x. ((x IN P) = (P x)))) /\ (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) |- ((!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul))))) = T)
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 c= ! c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 c~ cnegligible * * part ccc_cell f0 b0 cT
+ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = T)
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cT
+ |- (((!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> ((\i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) i)) = ((\i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) i))
T c= c==> ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL ccc_4 f0 f1 f2 f5 b0 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL ccc_4 f0 f1 f2 f5 b0 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6 * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL ccc_4 f0 f1 f2 f5 b0 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6
+ (i = j) |- (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) = ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c==> c= f0 f1 c= c= cgg_mcell f2 f3 f4 f5 f1 creal_add creal_mul cgammaX f2 * * part ccc_cell f2 cCONS f4 cCONS f5 cCONS * f3 f1 cNIL part clmfun ccritical_weight f2 * * part ccc_cell f2 cCONS f4 cCONS f5 cCONS * f3 f1 cNIL cbeta_bump_v1 f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part ccc_cell f2 cCONS f4 cCONS f5 cCONS * f3 f1 cNIL c= cgg_mcell f2 f3 f4 f5 f0 creal_add creal_mul cgammaX f2 * * part ccc_cell f2 cCONS f4 cCONS f5 cCONS * f3 f0 cNIL part clmfun ccritical_weight f2 * * part ccc_cell f2 cCONS f4 cCONS f5 cCONS * f3 f0 cNIL cbeta_bump_v1 f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part ccc_cell f2 cCONS f4 cCONS f5 cCONS * f3 f0 cNIL
- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) |- (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) /\ (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) = ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))
T c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c/\ c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- (_7287092 = _7287094), (_7287093 = _7287095) |- (((((leaf _7287092) _7287093) = ((leaf _7287094) _7287095)) ==> (((leaf _7287094) _7287095) \/ (~ ((leaf _7287092) _7287093)))) = (((leaf _7287094) _7287095) \/ (~ ((leaf _7287092) _7287093))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cleaf f0 f2 cleaf f1 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2 c\/ cleaf f1 f3 c~ cleaf f0 f2
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> cperiodic f6 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 c==> c< cNUMERAL cBIT1 c_0 f7 c==> ccc_4 f3 f0 f1 f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * f6 f5 c==> c= f4 f5 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> c~ c/\ cpacking f3 c/\ csaturated f3 cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL cF
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) |- ((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) /\ (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) = ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))
T c==> c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- (i = j) |- ((((I ((I EL) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = ((I f) j)) = (((I ((I EL) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = ((I f) j)))
T c==> c= f0 f1 c= c= cI * * part cI part cEL cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL cI f5 f1 c= cI * * part cI part cEL cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL cI f5 f1
+ |- ((\i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))))))))))))))))))) i)
T * / ! ! c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 b1 c==> cleaf f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c==> cleaf_rank f0 cCONS f2 cCONS f3 cNIL b2 b1 f1 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b1 c==> ccc_4 f0 f2 f3 f1 f4 c==> c= ccc_ke f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL f3 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL * f1 f4 c==> c= b0 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c==> ! ! c= cIN b4 b3 * b3 b4 c==> ! ! c==> c/\ cpacking b3 c/\ csaturated b3 cleaf b3 b4 c/\ cIN ccc_uh b3 b4 * * part cbarV b3 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b3 b4 b4 c= comega_list b3 ccc_uh b3 b4 ccc_pe1 b3 b4 cF f5
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ ((I ((I IN) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))) ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))) ==> ((I ((I IN) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))) ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cI * * part cI part cIN cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 cI * * part cI part cIN cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c/\ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5
+ (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (T = (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))
T c==> c= f0 f1 c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cT c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL
+ |- (((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))))))))))))))) = T)
T c= c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cT
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- ((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ ((~ ((I ((I leaf) _7286646)) _7286647)) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) _7286646)) _7286647)) = _7286647))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI part cleaf f0 f1 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 f1 f1
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f6 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f6 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f7 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- ((\f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))))) f)
T * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b0 b1 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b0 b1 * b0 cSUC b1 f5
- |- ((!ul. t) = t)
T c= ! f0 f0
+ |- ((\w0. (!n. (!f'. (!i'. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))) w0) n) f') /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) (f' i')) (f' (SUC i')))))))))))) ==> ((((((gg_mcell V) f') ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) i') = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) w0)
T * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL b0 b1 b2 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT b0 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b1 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * b2 b3 * b2 cSUC b3 c= cgg_mcell f0 b2 cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b3 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f5
- |- ((_7287124 = _7287125) ==> ((BIT0 _7287124) = (BIT0 _7287125)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((~ (_7286704 = _7286706)) \/ ((~ (_7286705 = _7286707)) \/ (((I _7286706) _7286707) \/ (~ ((I _7286704) _7286705)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ |- ((\w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F)))))))))))))))) w0)
T * / c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL b0 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f6 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cF f7
+ |- (((!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))))))) ==> ((\w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))))))) w0)) = ((\w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))))))) w0))
T c= c==> ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT b0 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b1 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b2 b3 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b2 b3 * b2 cSUC b3 * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT b0 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b1 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b2 b3 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b2 b3 * b2 cSUC b3 f3 * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT b0 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b1 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b2 b3 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b2 b3 * b2 cSUC b3 f3
- |- ((_7287102 = _7287103) ==> ((packing _7287103) \/ (~ (packing _7287102))))
T c==> c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- |- (!j. (((\j. (i = j)) j) ==> (?j. (i = j))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL
+ |- (((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F) = ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))
T c= c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- (_7287076 = _7287078), (_7287077 = _7287079) |- ((((_7287076 < _7287077) = (_7287078 < _7287079)) ==> ((_7287078 < _7287079) \/ (~ (_7287076 < _7287077)))) = ((_7287078 < _7287079) \/ (~ (_7287076 < _7287077))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= c< f0 f2 c< f1 f3 c\/ c< f1 f3 c~ c< f0 f2 c\/ c< f1 f3 c~ c< f0 f2
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
+ |- ((\j. (i = j)) i)
T * / c= f0 b0 f0
- (_7287084 = _7287089) |- ((_7287084 = _7287089) /\ ((~ (_7287082 = _7287087)) \/ ((~ (_7287086 = _7287091)) \/ ((~ (_7287083 = _7287088)) \/ ((~ (_7287085 = _7287090)) \/ ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086))))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))) w0) n) f) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) (f j)) (f (SUC j)))))))))))) ==> ((((((gg_mcell V) f) ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) = (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c= c==> c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cCONS cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNIL f2 f7 f4 c/\ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f7 c/\ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f5 * f4 cSUC f5 c= cgg_mcell f3 f4 cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cbeta_bump_v1 f3 * * part cINSERT cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> c/\ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
+ |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
+ |- (((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ul)) = ((EL (NUMERAL _0)) ul)) /\ ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ul)) = ((EL (NUMERAL (BIT1 _0))) ul)) /\ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) ==> ((\V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ul)) = ((EL (NUMERAL _0)) ul)) /\ ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ul)) = ((EL (NUMERAL (BIT1 _0))) ul)) /\ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) V)) = ((\V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ul)) = ((EL (NUMERAL _0)) ul)) /\ ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ul)) = ((EL (NUMERAL (BIT1 _0))) ul)) /\ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) V))
T c= c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ c= cEL cNUMERAL c_0 ccc_uh b0 b1 cEL cNUMERAL c_0 b1 c/\ c= cEL cNUMERAL cBIT1 c_0 ccc_uh b0 b1 cEL cNUMERAL cBIT1 c_0 b1 c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 cEL cNUMERAL cBIT0 cBIT1 c_0 b1 * / ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ c= cEL cNUMERAL c_0 ccc_uh b0 b1 cEL cNUMERAL c_0 b1 c/\ c= cEL cNUMERAL cBIT1 c_0 ccc_uh b0 b1 cEL cNUMERAL cBIT1 c_0 b1 c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 cEL cNUMERAL cBIT0 cBIT1 c_0 b1 f0 * / ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ c= cEL cNUMERAL c_0 ccc_uh b0 b1 cEL cNUMERAL c_0 b1 c/\ c= cEL cNUMERAL cBIT1 c_0 ccc_uh b0 b1 cEL cNUMERAL cBIT1 c_0 b1 c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 cEL cNUMERAL cBIT0 cBIT1 c_0 b1 f0
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) |- (~ ((I ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))))
T c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c~ cI * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL
- |- ((~ (_7286709 = _7286711)) \/ ((~ (_7286708 = _7286710)) \/ (((I _7286710) _7286711) \/ (~ ((I _7286708) _7286709)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cperiodic f5 f4 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c= cgg_mcell f3 f5 f0 f1 f6 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL
+ (packing V), (saturated V), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) /\ ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ |- ((\V. (!ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul))))) V)
T * / ! c= * * part ccc_cell b0 b1 * * * part cmcell ccc_ke b0 b1 b0 ccc_uh b0 b1 f0
- |- ((\q'. (((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = p') ==> ((p' ==> (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) = q')) ==> (((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = (p' ==> q'))))) q')
T * / c==> c= c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f5 c==> c==> f5 c= c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 c= c==> c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> f5 b0 f6
+ |- ((\V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) V)
T * / ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 f0
- |- (T = ((((((gg_mcell V) f) u0) u1) j) = (((((gg_mcell V) f) u0) u1) j)))
T c= cT c= cgg_mcell f0 f1 f2 f3 f4 cgg_mcell f0 f1 f2 f3 f4
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- (saturated V) |- ((~ ((I saturated) V)) ==> ((I saturated) V))
T c==> csaturated f0 c==> c~ cI part csaturated f0 cI part csaturated f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i))), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f3 f0 f1 f5 f6 c==> cperiodic f5 f4 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c= cgg_mcell f3 f5 f0 f1 f6 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL
- (_7286812 = _7286814), (_7286813 = _7286815) |- ((_7286812 = _7286814) /\ (((I _7286812) _7286813) = ((I _7286814) _7286815)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cI f0 f2 * * part cI f1 f3
- (_7287067 = _7287072) |- ((_7287067 = _7287072) /\ ((~ (_7287068 = _7287073)) \/ ((~ (_7287066 = _7287071)) \/ ((~ (_7287069 = _7287074)) \/ ((~ (_7287070 = _7287075)) \/ ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070))))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL * f6 f4 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f6 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 c==> ccc_4 f3 f0 f1 f6 f4 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> c~ c/\ cpacking f3 c/\ csaturated f3 cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL cF
+ |- ((!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))))))))))))))) = T)
T c= ! ! c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 b0 c==> cleaf f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c==> cleaf_rank f0 cCONS f2 cCONS f3 cNIL b1 b0 f1 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f2 f3 f1 f4 c==> c= ccc_ke f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL f3 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL * f1 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cT
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f4 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
+ (!P. (!x. ((x IN P) = (P x)))) |- ((\x. ((~ ((I ((I IN) x)) _7286650)) \/ ((I _7286650) x))) _7286651)
T c==> ! ! c= cIN b1 b0 * b0 b1 * / c\/ c~ cI * * part cI part cIN b0 f0 cI f0 b0 f1
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) |- ((\V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) V)
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 * / ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 f0
+ (!P. (!x. ((x IN P) = (P x)))), (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))), (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- F
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF
- (!P. (!x. ((x IN P) = (P x)))), (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))), (~ ((I ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ ((I ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))) /\ ((I ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c==> c~ cI * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cI * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL cI * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL
+ (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- (i = j), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = T)
T c==> c= f0 f1 c==> cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL c= cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cT
- |- ((~ (_7287117 = _7287119)) \/ ((~ (_7287116 = _7287118)) \/ (((EL _7287116) _7287117) = ((EL _7287118) _7287119))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cEL f2 f0 cEL f3 f1
+ (i = j), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- ((((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))))))))))))) = ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))))))))
T c==> c= f0 f1 c==> cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL c= c==> cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> cleaf_rank f2 cCONS f3 cCONS f4 cNIL f6 f7 f5 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f7 c==> ccc_4 f2 f3 f4 f5 f1 c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF c==> cleaf_rank f2 cCONS f3 cCONS f4 cNIL f6 f7 f5 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f7 c==> ccc_4 f2 f3 f4 f5 f1 c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
- (_7287069 = _7287074), (_7287066 = _7287071), (_7287067 = _7287072), (_7287068 = _7287073) |- ((_7287069 = _7287074) /\ ((~ (_7287070 = _7287075)) \/ ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f0 f1 c\/ c~ c= f8 f9 c\/ ccc_4 f3 f5 f7 f1 f9 c~ ccc_4 f2 f4 f6 f0 f8
- (_7287134 = _7287136), (_7287135 = _7287137) |- ((_7287135 = _7287137) /\ (((I _7287134) _7287135) = ((I _7287136) _7287137)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cI f0 f2 cI f1 f3
- (_7287076 = _7287078), (_7287077 = _7287079) |- ((_7287077 = _7287079) /\ ((_7287078 < _7287079) \/ (~ (_7287076 < _7287077))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> cperiodic f6 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 c==> c< cNUMERAL cBIT1 c_0 f7 c==> ccc_4 f3 f0 f1 f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * f6 f5 c==> c= f4 f5 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
+ |- ((((packing V) /\ ((saturated V) /\ (((periodic f) n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) = T)
T c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cperiodic f1 f2 c/\ cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c/\ cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f2 ccc_4 f0 f3 f4 f1 f5 c= cgg_mcell f0 f1 f3 f4 f5 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cbeta_bump_v1 f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cT
- |- ((~ (_7287096 = _7287098)) \/ ((~ (_7287097 = _7287099)) \/ (((periodic _7287098) _7287099) \/ (~ ((periodic _7287096) _7287097)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cperiodic f1 f3 c~ cperiodic f0 f2
- (_7287096 = _7287098) |- ((_7287097 = _7287099) ==> (((periodic _7287098) _7287099) \/ (~ ((periodic _7287096) _7287097))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cperiodic f1 f3 c~ cperiodic f0 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f6 c==> ccc_4 f3 f0 f1 f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cperiodic f5 f4 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c==> c==> c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL ccc_4 f3 f0 f1 f5 f6 c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cgg_mcell f3 f5 f0 f1 f6 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL
- (_7287112 = _7287114) |- ((_7287112 = _7287114) /\ ((~ (_7287113 = _7287115)) \/ (((cc_uh _7287112) _7287113) = ((cc_uh _7287114) _7287115))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_uh f0 f2 ccc_uh f1 f3
+ (saturated V), ((~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) ==> F), ((~ (saturated V)) \/ (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))))) |- F
T c==> csaturated f0 c==> c==> c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cF c==> c\/ c~ csaturated f0 c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cF
+ |- ((\f'. (!i'. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))) w0) n) f') /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) (f' i')) (f' (SUC i')))))))))))) ==> ((((((gg_mcell V) f') ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) i') = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))) f)
T * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL f5 f6 b0 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT f5 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * b0 b1 * b0 cSUC b1 c= cgg_mcell f0 b0 cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b1 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f3
- |- ((~ (_7287138 = _7287140)) \/ ((~ (_7287139 = _7287141)) \/ (((CONS _7287138) _7287139) = ((CONS _7287140) _7287141))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- (_7287120 = _7287122), (_7287121 = _7287123) |- ((_7287121 = _7287123) /\ (((cc_ke _7287120) _7287121) = ((cc_ke _7287122) _7287123)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
+ (packing V), (saturated V), (i = j), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 f2 c==> cperiodic f3 f4 c==> cleaf f0 cCONS f5 cCONS f6 cCONS * f3 f1 cNIL c==> cleaf_rank f0 cCONS f5 cCONS f6 cNIL f7 f4 f3 c==> c~ ccollinear * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f5 f6 f3 f2 c==> c= ccc_ke f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL f5 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL f6 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL * f3 f2 c==> c= f1 f2 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL * * part ccc_cell f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
- (~ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) /\ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))
T c==> c~ cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
- |- ((_7287067 = _7287072) ==> ((~ (_7287068 = _7287073)) \/ ((~ (_7287066 = _7287071)) \/ ((~ (_7287069 = _7287074)) \/ ((~ (_7287070 = _7287075)) \/ ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070))))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
+ |- (((!V. (!X. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((X = ((mcell4 V) ul)) /\ ((~ (negligible X)) /\ (X SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))))) ==> ((((((gg_mcell V) f) ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) i) = ((real_add ((real_mul (((gammaX V) X) lmfun)) ((critical_weight V) X))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) X))))))))))) ==> ((\V. (!X. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((X = ((mcell4 V) ul)) /\ ((~ (negligible X)) /\ (X SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))))) ==> ((((((gg_mcell V) f) ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) i) = ((real_add ((real_mul (((gammaX V) X) lmfun)) ((critical_weight V) X))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) X))))))))))) V)) = ((\V. (!X. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((X = ((mcell4 V) ul)) /\ ((~ (negligible X)) /\ (X SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))))) ==> ((((((gg_mcell V) f) ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) i) = ((real_add ((real_mul (((gammaX V) X) lmfun)) ((critical_weight V) X))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) X))))))))))) V))
T c= c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS cEL cNUMERAL c_0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b2 cNIL b3 b4 b5 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b2 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 * * part cINSERT b3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b4 c/\ c= b1 * * part cmcell4 b0 b2 c/\ c~ cnegligible b1 cSUBSET b1 * * * * part cwedge_ge cEL cNUMERAL c_0 b2 cEL cNUMERAL cBIT1 c_0 b2 * b5 b6 * b5 cSUC b6 c= cgg_mcell b0 b5 cEL cNUMERAL c_0 b2 cEL cNUMERAL cBIT1 c_0 b2 b6 creal_add creal_mul cgammaX b0 b1 part clmfun ccritical_weight b0 b1 cbeta_bump_v1 b0 * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 part cEMPTY b1 * / ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS cEL cNUMERAL c_0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b2 cNIL b3 b4 b5 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b2 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 * * part cINSERT b3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b4 c/\ c= b1 * * part cmcell4 b0 b2 c/\ c~ cnegligible b1 cSUBSET b1 * * * * part cwedge_ge cEL cNUMERAL c_0 b2 cEL cNUMERAL cBIT1 c_0 b2 * b5 b6 * b5 cSUC b6 c= cgg_mcell b0 b5 cEL cNUMERAL c_0 b2 cEL cNUMERAL cBIT1 c_0 b2 b6 creal_add creal_mul cgammaX b0 b1 part clmfun ccritical_weight b0 b1 cbeta_bump_v1 b0 * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 part cEMPTY b1 f0 * / ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS cEL cNUMERAL c_0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b2 cNIL b3 b4 b5 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b2 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 * * part cINSERT b3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b4 c/\ c= b1 * * part cmcell4 b0 b2 c/\ c~ cnegligible b1 cSUBSET b1 * * * * part cwedge_ge cEL cNUMERAL c_0 b2 cEL cNUMERAL cBIT1 c_0 b2 * b5 b6 * b5 cSUC b6 c= cgg_mcell b0 b5 cEL cNUMERAL c_0 b2 cEL cNUMERAL cBIT1 c_0 b2 b6 creal_add creal_mul cgammaX b0 b1 part clmfun ccritical_weight b0 b1 cbeta_bump_v1 b0 * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 part cEMPTY b1 f0
+ (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))))))
T c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ |- (((!X. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((X = ((mcell4 V) ul)) /\ ((~ (negligible X)) /\ (X SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))))) ==> ((((((gg_mcell V) f) ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) i) = ((real_add ((real_mul (((gammaX V) X) lmfun)) ((critical_weight V) X))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) X)))))))))) ==> ((\X. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((X = ((mcell4 V) ul)) /\ ((~ (negligible X)) /\ (X SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))))) ==> ((((((gg_mcell V) f) ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) i) = ((real_add ((real_mul (((gammaX V) X) lmfun)) ((critical_weight V) X))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) X)))))))))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) = ((\X. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((X = ((mcell4 V) ul)) /\ ((~ (negligible X)) /\ (X SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))))) ==> ((((((gg_mcell V) f) ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) i) = ((real_add ((real_mul (((gammaX V) X) lmfun)) ((critical_weight V) X))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) X)))))))))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))
T c= c==> ! ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cNIL b2 b3 b4 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b3 c/\ c= b0 * * part cmcell4 f0 b1 c/\ c~ cnegligible b0 cSUBSET b0 * * * * part cwedge_ge cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 cSUC b5 c= cgg_mcell f0 b4 cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 b5 creal_add creal_mul cgammaX f0 b0 part clmfun ccritical_weight f0 b0 cbeta_bump_v1 f0 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY b0 * / ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cNIL b2 b3 b4 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b3 c/\ c= b0 * * part cmcell4 f0 b1 c/\ c~ cnegligible b0 cSUBSET b0 * * * * part cwedge_ge cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 cSUC b5 c= cgg_mcell f0 b4 cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 b5 creal_add creal_mul cgammaX f0 b0 part clmfun ccritical_weight f0 b0 cbeta_bump_v1 f0 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY b0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * / ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cNIL b2 b3 b4 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b3 c/\ c= b0 * * part cmcell4 f0 b1 c/\ c~ cnegligible b0 cSUBSET b0 * * * * part cwedge_ge cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 cSUC b5 c= cgg_mcell f0 b4 cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 b5 creal_add creal_mul cgammaX f0 b0 part clmfun ccritical_weight f0 b0 cbeta_bump_v1 f0 * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 part cEMPTY b0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- ((\ul. ((((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) ul)))) \/ ((I ((I IN) ((I ((I cc_uh) _7286646)) ul))) ((I ((I barV) _7286646)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))) /\ ((((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) ul)))) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) _7286646)) ul)) = ul)) /\ (((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) ul)))) \/ (((I ((I omega_list) _7286646)) ((I ((I cc_uh) _7286646)) ul)) = ((I ((I cc_pe1) _7286646)) ul)))))) _7286647)
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 * / c/\ c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 b0 cI * * part cI part cIN cI * * part cI part ccc_uh f0 b0 * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c/\ c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 b0 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 b0 b0 c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 b0 c= cI * * part cI part comega_list f0 cI * * part cI part ccc_uh f0 b0 cI * * part cI part ccc_pe1 f0 b0 f1
+ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- ((\V. (!ul. ((((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ ((I ((I IN) ((I ((I cc_uh) V)) ul))) ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))) /\ ((((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ul)) = ul)) /\ (((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ (((I ((I omega_list) V)) ((I ((I cc_uh) V)) ul)) = ((I ((I cc_pe1) V)) ul))))))) _7286646)
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 * / ! c/\ c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 cI * * part cI part cIN cI * * part cI part ccc_uh b0 b1 * * part cI * * part cI part cbarV b0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c/\ c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh b0 b1 b1 c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 c= cI * * part cI part comega_list b0 cI * * part cI part ccc_uh b0 b1 cI * * part cI part ccc_pe1 b0 b1 f0
- (!P. (!x. ((x IN P) = (P x)))) |- ((\P. (!x. (((I ((I IN) x)) P) \/ (~ ((I P) x))))) _7286648)
T c==> ! ! c= cIN b1 b0 * b0 b1 * / ! c\/ cI * * part cI part cIN b1 b0 c~ cI b0 b1 f0
+ (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))) = ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))))))))
T c==> c= f0 f1 c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL f0 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f6 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 c==> ccc_4 f3 f0 f1 f6 f4 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * f6 f5 c==> c= f4 f5 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
+ (packing V), (saturated V), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ (i = j), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1) |- (((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))) = ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F)))))
T c==> c= f0 f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL f4 c= c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ c/\ cpacking f2 c/\ csaturated f2 cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cF c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ c/\ cpacking f2 c/\ csaturated f2 cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cF
+ |- (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))
T c==> c= cgg_mcell f0 f1 f2 f3 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c= cgg_mcell f0 f1 f2 f3 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL
+ |- (((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) = ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL ccc_4 f0 f1 f2 f5 f6 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cgg_mcell f0 f5 f1 f2 f6 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c= cgg_mcell f0 f5 f1 f2 f6 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL
- |- ((!x'. ((x IN P) \/ (~ (P x')))) = ((x IN P) \/ (!x. (~ (P x)))))
T c= ! c\/ cIN f0 f1 c~ * f1 b0 c\/ cIN f0 f1 ! c~ * f1 b0
+ (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
- (_7286820 = _7286822) |- ((_7286821 = _7286823) ==> (((I _7286820) _7286821) = ((I _7286822) _7286823)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- (((!V. (!ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul)))) ==> ((\V. (!ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul)))) V)) = ((\V. (!ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul)))) V))
T c= c==> ! ! c= * * part cmcell4 b0 b1 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 b1 * / ! c= * * part cmcell4 b0 b1 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 b1 f0 * / ! c= * * part cmcell4 b0 b1 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 b1 f0
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (T = ((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 c= cT c==> c==> c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL cNIL f2 f7 f6 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f7 c= ccc_ke f3 cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f3 cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL cCONS * f6 f4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f0 cCONS f1 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cNIL * f6 f4 * f6 cSUC f4 cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * * * * part cwedge_ge f0 f1 * f6 f5 * f6 cSUC f5
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
- |- ((~ (_7287112 = _7287114)) \/ ((~ (_7287113 = _7287115)) \/ (((cc_uh _7287112) _7287113) = ((cc_uh _7287114) _7287115))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_uh f0 f2 ccc_uh f1 f3
- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) |- ((negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = F)
T c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF
- (_7287086 = _7287091), (_7287082 = _7287087), (_7287085 = _7287090), (_7287083 = _7287088), (_7287084 = _7287089) |- ((_7287085 = _7287090) /\ ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c/\ c= f4 f5 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0
+ (packing V) |- ((packing V) /\ ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))))))))))))))
T c==> cpacking f0 c/\ cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL
- |- ((i = j) = ((\j. (i = j)) j))
T c= c= f0 f1 * / c= f0 b0 f1
+ |- ((\n. (!f'. (!i'. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))) w0) n) f') /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) (f' i')) (f' (SUC i')))))))))))) ==> ((((((gg_mcell V) f') ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) i') = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))))) n)
T * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL f5 b0 b1 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT f5 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b0 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * b1 b2 * b1 cSUC b2 c= cgg_mcell f0 b1 cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b2 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f6
- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) |- (~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))
T c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- (i = j) |- ((((I ((I mcell4) V)) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = ((I ((I cc_cell) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = (((I ((I mcell4) V)) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = ((I ((I cc_cell) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))))
T c==> c= f0 f1 c= c= * * part cI * * part cI part cmcell4 f2 cI * * part cI part ccc_uh f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL * * part cI * * part cI part ccc_cell f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL c= * * part cI * * part cI part cmcell4 f2 cI * * part cI part ccc_uh f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL * * part cI * * part cI part ccc_cell f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL
+ |- ((\w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) w0)
T * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cperiodic b2 b1 c/\ c< cNUMERAL cBIT1 c_0 b1 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL ccc_4 f0 f1 f2 b2 b3 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3
- (_7287086 = _7287091), (_7287082 = _7287087), (_7287083 = _7287088), (_7287084 = _7287089) |- ((~ (_7287085 = _7287090)) \/ ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f5 f7 f9 f1 c~ cleaf_rank f2 f4 f6 f8 f0
- (i = j) |- (((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ ((~ ((I ((I leaf) _7286646)) _7286647)) \/ (((I ((I omega_list) _7286646)) ((I ((I cc_uh) _7286646)) _7286647)) = ((I ((I cc_pe1) _7286646)) _7286647))))) = ((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ ((~ ((I ((I leaf) _7286646)) _7286647)) \/ (((I ((I omega_list) _7286646)) ((I ((I cc_uh) _7286646)) _7286647)) = ((I ((I cc_pe1) _7286646)) _7286647))))))
T c==> c= f0 f1 c= c\/ c~ cI part cpacking f2 c\/ c~ cI part csaturated f2 c\/ c~ cI * * part cI part cleaf f2 f3 c= cI * * part cI part comega_list f2 cI * * part cI part ccc_uh f2 f3 cI * * part cI part ccc_pe1 f2 f3 c\/ c~ cI part cpacking f2 c\/ c~ cI part csaturated f2 c\/ c~ cI * * part cI part cleaf f2 f3 c= cI * * part cI part comega_list f2 cI * * part cI part ccc_uh f2 f3 cI * * part cI part ccc_pe1 f2 f3
+ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- (!V. (!ul. (((~ (packing V)) \/ ((~ (saturated V)) \/ (~ ((leaf V) ul)))) \/ ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 ! ! c\/ c\/ c~ cpacking b0 c\/ c~ csaturated b0 c~ cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- (((!ul. ((((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) ul)))) \/ ((I ((I IN) ((I ((I cc_uh) _7286646)) ul))) ((I ((I barV) _7286646)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))) /\ ((((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) ul)))) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) _7286646)) ul)) = ul)) /\ (((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) ul)))) \/ (((I ((I omega_list) _7286646)) ((I ((I cc_uh) _7286646)) ul)) = ((I ((I cc_pe1) _7286646)) ul)))))) ==> ((\ul. ((((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) ul)))) \/ ((I ((I IN) ((I ((I cc_uh) _7286646)) ul))) ((I ((I barV) _7286646)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))) /\ ((((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) ul)))) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) _7286646)) ul)) = ul)) /\ (((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) ul)))) \/ (((I ((I omega_list) _7286646)) ((I ((I cc_uh) _7286646)) ul)) = ((I ((I cc_pe1) _7286646)) ul)))))) _7286647)) = ((\ul. ((((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) ul)))) \/ ((I ((I IN) ((I ((I cc_uh) _7286646)) ul))) ((I ((I barV) _7286646)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))) /\ ((((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) ul)))) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) _7286646)) ul)) = ul)) /\ (((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) ul)))) \/ (((I ((I omega_list) _7286646)) ((I ((I cc_uh) _7286646)) ul)) = ((I ((I cc_pe1) _7286646)) ul)))))) _7286647))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c= c==> ! c/\ c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 b0 cI * * part cI part cIN cI * * part cI part ccc_uh f0 b0 * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c/\ c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 b0 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 b0 b0 c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 b0 c= cI * * part cI part comega_list f0 cI * * part cI part ccc_uh f0 b0 cI * * part cI part ccc_pe1 f0 b0 * / c/\ c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 b0 cI * * part cI part cIN cI * * part cI part ccc_uh f0 b0 * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c/\ c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 b0 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 b0 b0 c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 b0 c= cI * * part cI part comega_list f0 cI * * part cI part ccc_uh f0 b0 cI * * part cI part ccc_pe1 f0 b0 f1 * / c/\ c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 b0 cI * * part cI part cIN cI * * part cI part ccc_uh f0 b0 * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c/\ c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 b0 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 b0 b0 c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 b0 c= cI * * part cI part comega_list f0 cI * * part cI part ccc_uh f0 b0 cI * * part cI part ccc_pe1 f0 b0 f1
- |- ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))
T c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
+ |- (((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F) = F)
T c= c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF cF
+ (i = j), (((((cc_4 V) u0) u1) f) i) |- (((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))))))))) = ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))))
T c==> c= f0 f1 c==> ccc_4 f2 f3 f4 f5 f0 c= c==> ccc_4 f2 f3 f4 f5 f1 c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!ul. ((P ul) \/ Q)) = ((!ul. (P ul)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (i = j), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1) |- (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> (((((((gg_mcell V) f) ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) = ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))
T c==> c= f0 f1 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL f4 c==> c/\ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c/\ c~ cnegligible * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cSUBSET * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * * * part cwedge_ge f3 f4 * f5 f1 * f5 cSUC f1 c= c= cgg_mcell f2 f5 cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL f1 creal_add creal_mul cgammaX f2 * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL part clmfun ccritical_weight f2 * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL cbeta_bump_v1 f2 * * part cINSERT cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL part cEMPTY * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL c= cgg_mcell f2 f5 f3 f4 f1 creal_add creal_mul cgammaX f2 * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL part clmfun ccritical_weight f2 * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cbeta_bump_v1 f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL
+ (!P. (!x. ((x IN P) = (P x)))), (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
+ (!P. (!x. ((x IN P) = (P x)))) |- (!P. (!x. ((~ ((I ((I IN) x)) P)) \/ ((I P) x))))
T c==> ! ! c= cIN b1 b0 * b0 b1 ! ! c\/ c~ cI * * part cI part cIN b1 b0 cI b0 b1
+ |- ((\V. (!X. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((X = ((mcell4 V) ul)) /\ ((~ (negligible X)) /\ (X SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))))) ==> ((((((gg_mcell V) f) ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) i) = ((real_add ((real_mul (((gammaX V) X) lmfun)) ((critical_weight V) X))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) X))))))))))) V)
T * / ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS cEL cNUMERAL c_0 b2 cCONS cEL cNUMERAL cBIT1 c_0 b2 cNIL b3 b4 b5 c/\ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 b2 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 * * part cINSERT b3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b4 c/\ c= b1 * * part cmcell4 b0 b2 c/\ c~ cnegligible b1 cSUBSET b1 * * * * part cwedge_ge cEL cNUMERAL c_0 b2 cEL cNUMERAL cBIT1 c_0 b2 * b5 b6 * b5 cSUC b6 c= cgg_mcell b0 b5 cEL cNUMERAL c_0 b2 cEL cNUMERAL cBIT1 c_0 b2 b6 creal_add creal_mul cgammaX b0 b1 part clmfun ccritical_weight b0 b1 cbeta_bump_v1 b0 * * part cINSERT cEL cNUMERAL c_0 b2 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b2 part cEMPTY b1 f0
+ |- (!ul. (!w0. (!n. (!f'. (!i'. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f') /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ul)) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f' i')) (f' (SUC i')))))))))))) ==> ((((((gg_mcell V) f') ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) i') = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cNIL f2 f3 f4 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f3 c/\ c= * * part ccc_cell f0 cCONS f5 cCONS f6 cCONS * f7 f8 cNIL * * part cmcell4 f0 f1 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f5 cCONS f6 cCONS * f7 f8 cNIL cSUBSET * * part ccc_cell f0 cCONS f5 cCONS f6 cCONS * f7 f8 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 f1 cEL cNUMERAL cBIT1 c_0 f1 * f4 f9 * f4 cSUC f9 c= cgg_mcell f0 f4 cEL cNUMERAL c_0 f1 cEL cNUMERAL cBIT1 c_0 f1 f9 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f5 cCONS f6 cCONS * f7 f8 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f5 cCONS f6 cCONS * f7 f8 cNIL cbeta_bump_v1 f0 * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY * * part ccc_cell f0 cCONS f5 cCONS f6 cCONS * f7 f8 cNIL
+ |- ((\u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))))))))))))))))) u1)
T * / ! ! ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cperiodic f0 b4 c==> cleaf b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL b5 b4 f0 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b4 c==> ccc_4 b2 b1 b0 f0 f1 c==> c= ccc_ke b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL b1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL b0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL * f0 f1 c==> c= b3 f1 c==> c= * * part cmcell4 b2 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL * * part ccc_cell b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL c==> c~ cbarV b2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL c==> ! ! c= cIN b7 b6 * b6 b7 c==> ! ! c==> c/\ cpacking b6 c/\ csaturated b6 cleaf b6 b6 c/\ cIN ccc_uh b6 b6 * * part cbarV b6 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b6 b6 b6 c= comega_list b6 ccc_uh b6 b6 ccc_pe1 b6 b6 cF f2
+ (packing V) |- ((packing V) /\ ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))))))))))))))))))))
T c==> cpacking f0 c/\ cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
- |- ((\p'. (!q'. ((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) = p') ==> ((p' ==> (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) = q')) ==> ((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 b0 c==> c==> b0 c= c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b1 c= c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> b0 b1 f5
- (_7287069 = _7287074), (_7287066 = _7287071), (_7287070 = _7287075), (_7287067 = _7287072), (_7287068 = _7287073) |- ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ ccc_4 f3 f7 f9 f1 f5 c~ ccc_4 f2 f6 f8 f0 f4
- |- ((\q'. ((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) = p') ==> ((p' ==> (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) = q')) ==> ((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 f5 c==> c==> f5 c= c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 c= c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> f5 b0 f6
+ (packing V), (saturated V) |- ((saturated V) /\ (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c/\ csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ (packing V), (saturated V), ((periodic f) n) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
+ (packing V) |- ((I packing) V)
T c==> cpacking f0 cI part cpacking f0
+ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
- (~ (saturated V)), (saturated V) |- ((~ F) ==> F)
T c==> c~ csaturated f0 c==> csaturated f0 c==> c~ cF cF
+ |- ((!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))))))))))))))))))))))))) = T)
T c= ! ! ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cperiodic f0 b3 c==> cleaf b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL c==> cleaf_rank b1 cCONS b0 cCONS f1 cNIL b4 b3 f0 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT b4 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b3 c==> ccc_4 b1 b0 f1 f0 f2 c==> c= ccc_ke b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL b0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL * f0 f2 c==> c= b2 f2 c==> c= * * part cmcell4 b1 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL * * part ccc_cell b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL c==> c~ cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL c==> ! ! c= cIN b6 b5 * b5 b6 c~ ! ! c==> c/\ cpacking b5 c/\ csaturated b5 cleaf b5 b5 c/\ cIN ccc_uh b5 b5 * * part cbarV b5 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b5 b5 b5 c= comega_list b5 ccc_uh b5 b5 ccc_pe1 b5 b5 cT
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL f0 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f6 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 c==> ccc_4 f3 f0 f1 f6 f4 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * f6 f5 c==> c= f4 f5 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> c~ c/\ cpacking f3 c/\ csaturated f3 cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL cF
+ |- (((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))))))))))))) = T)
T c= c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cT
- |- ((~ (_7287084 = _7287089)) \/ ((~ (_7287082 = _7287087)) \/ ((~ (_7287086 = _7287091)) \/ ((~ (_7287083 = _7287088)) \/ ((~ (_7287085 = _7287090)) \/ ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086))))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
- ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) |- (((((((gg_mcell V) f) u0) u1) j) = (((((gg_mcell V) f) u0) u1) j)) = ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))
T c==> c= cgg_mcell f0 f1 f2 f3 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c= c= cgg_mcell f0 f1 f2 f3 f4 cgg_mcell f0 f1 f2 f3 f4 c= cgg_mcell f0 f1 f2 f3 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c< cNUMERAL cBIT1 c_0 f1 c==> cleaf f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c/\ c< cNUMERAL cBIT1 c_0 f1 c==> ccc_4 f0 f2 f3 f4 f5 c==> c= ccc_ke f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL f2 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL * f4 f5 c==> c= f6 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (!j. (((\j. (i = j)) j) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f4 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 ! c==> * / c= f5 b1 b0 c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
- (_7286813 = _7286815) |- ((_7286813 = _7286815) /\ ((~ (_7286812 = _7286814)) \/ (((I _7286812) _7286813) = ((I _7286814) _7286815))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
- (_7287086 = _7287091), (_7287082 = _7287087), (_7287084 = _7287089) |- ((_7287086 = _7287091) /\ ((~ (_7287083 = _7287088)) \/ ((~ (_7287085 = _7287090)) \/ ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f5 f9 f1 c~ cleaf_rank f2 f6 f4 f8 f0
- (_7287139 = _7287141), (_7287138 = _7287140) |- ((_7287139 = _7287141) /\ (((CONS _7287138) _7287139) = ((CONS _7287140) _7287141)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cCONS f2 f0 cCONS f3 f1
+ (~ (packing V)), (packing V) |- ((~ (packing V)) /\ F)
T c==> c~ cpacking f0 c==> cpacking f0 c/\ c~ cpacking f0 cF
+ (~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))), (packing V), (((~ (saturated V)) \/ (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))))) ==> F) |- F
T c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> c==> c\/ c~ csaturated f0 c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cF cF
- |- ((~ (_7287100 = _7287101)) \/ ((saturated _7287101) \/ (~ (saturated _7287100))))
T c\/ c~ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
+ (!P. (!x. ((x IN P) = (P x)))) |- ((!P. (!x. ((x IN P) \/ (~ (P x))))) /\ (!P. (!x. ((~ (x IN P)) \/ (P x)))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c/\ ! ! c\/ cIN b1 b0 c~ * b0 b1 ! ! c\/ c~ cIN b1 b0 * b0 b1
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (i = j), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- ((((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F)))))))))))) = ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))))))))))
T c==> c= f0 f1 c==> cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL c= c==> cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> cleaf_rank f2 cCONS f3 cCONS f4 cNIL f6 f7 f5 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f7 c==> ccc_4 f2 f3 f4 f5 f1 c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ c/\ cpacking f2 c/\ csaturated f2 cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cF c==> cleaf_rank f2 cCONS f3 cCONS f4 cNIL f6 f7 f5 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f7 c==> ccc_4 f2 f3 f4 f5 f1 c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ c/\ cpacking f2 c/\ csaturated f2 cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cF
- |- ((_7287076 = _7287078) ==> ((~ (_7287077 = _7287079)) \/ ((_7287078 < _7287079) \/ (~ (_7287076 < _7287077)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cperiodic f5 f4 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cgg_mcell f3 f5 f0 f1 f6 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL
+ |- (((EL (NUMERAL _0)) ((CONS h) t)) = h)
T c= cEL cNUMERAL c_0 cCONS f0 f1 f0
- (i = j) |- ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = u1) = (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = u1))
T c==> c= f0 f1 c= c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL f4 c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL f4
- (_7287096 = _7287098), (_7287097 = _7287099) |- ((_7287097 = _7287099) /\ (((periodic _7287098) _7287099) \/ (~ ((periodic _7287096) _7287097))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cperiodic f1 f3 c~ cperiodic f0 f2
+ (i = j), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0) |- (((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F)))))) = ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))))
T c==> c= f0 f1 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL f3 c= c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ c/\ cpacking f2 c/\ csaturated f2 cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cF c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ c/\ cpacking f2 c/\ csaturated f2 cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cF
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- |- ((~ (_7287067 = _7287072)) \/ ((~ (_7287068 = _7287073)) \/ ((~ (_7287066 = _7287071)) \/ ((~ (_7287069 = _7287074)) \/ ((~ (_7287070 = _7287075)) \/ ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070))))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
+ (packing V), (saturated V), ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 f5 f6 c==> cperiodic f5 f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c= cgg_mcell f0 f5 f1 f2 f6 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f6 c==> ccc_4 f3 f0 f1 f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ cpacking f3 c/\ csaturated f3 cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
+ (packing V) |- ((((I saturated) V) /\ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = (((I packing) V) /\ (((I saturated) V) /\ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))))
T c==> cpacking f0 c= c/\ cI part csaturated f0 cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL c/\ cI part cpacking f0 c/\ cI part csaturated f0 cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL
- (_7287128 = _7287129) |- ((_7287128 = _7287129) /\ ((NUMERAL _7287128) = (NUMERAL _7287129)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- ((\u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F)))))))))))))))))))) u0)
T * / ! ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cperiodic f0 b3 c==> cleaf b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL c==> cleaf_rank b1 cCONS b0 cCONS f1 cNIL b4 b3 f0 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT b4 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b3 c==> ccc_4 b1 b0 f1 f0 f2 c==> c= ccc_ke b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL b0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL * f0 f2 c==> c= b2 f2 c==> c= * * part cmcell4 b1 ccc_uh b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL * * part ccc_cell b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL c==> c~ c/\ cpacking b1 c/\ csaturated b1 cleaf b1 cCONS b0 cCONS f1 cCONS * f0 f2 cNIL cF f3
- (i = j) |- (((NUMERAL (BIT1 _0)) < n) = ((NUMERAL (BIT1 _0)) < n))
T c==> c= f0 f1 c= c< cNUMERAL cBIT1 c_0 f2 c< cNUMERAL cBIT1 c_0 f2
- (i = j) |- (((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ ((~ ((I ((I leaf) _7286646)) _7286647)) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) _7286646)) _7286647)) = _7286647)))) = ((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ ((~ ((I ((I leaf) _7286646)) _7286647)) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) _7286646)) _7286647)) = _7286647)))))
T c==> c= f0 f1 c= c\/ c~ cI part cpacking f2 c\/ c~ cI part csaturated f2 c\/ c~ cI * * part cI part cleaf f2 f3 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh f2 f3 f3 c\/ c~ cI part cpacking f2 c\/ c~ cI part csaturated f2 c\/ c~ cI * * part cI part cleaf f2 f3 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh f2 f3 f3
+ (i = j), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)) |- (((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))))) = ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))
T c==> c= f0 f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL * f5 f0 c= c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
+ (~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))), ((~ (packing V)) ==> F), (((~ (saturated V)) \/ (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))))) ==> F) |- F
T c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c==> c~ cpacking f0 cF c==> c==> c\/ c~ csaturated f0 c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cF cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c/\ c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((\j. (i = j)) j) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) = T)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f4 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= c==> * / c= f5 b0 f7 c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cT
+ |- (((!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> ((\w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) w0)) = ((\w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) w0))
T c= c==> ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cperiodic b2 b1 c/\ c< cNUMERAL cBIT1 c_0 b1 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL ccc_4 f0 f1 f2 b2 b3 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cperiodic b2 b1 c/\ c< cNUMERAL cBIT1 c_0 b1 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL ccc_4 f0 f1 f2 b2 b3 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3 * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cperiodic b2 b1 c/\ c< cNUMERAL cBIT1 c_0 b1 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL ccc_4 f0 f1 f2 b2 b3 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3
- (_7287126 = _7287127) |- ((_7287126 = _7287127) /\ ((BIT1 _7287126) = (BIT1 _7287127)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- ((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ ((~ ((I ((I leaf) _7286646)) _7286647)) \/ (((I ((I omega_list) _7286646)) ((I ((I cc_uh) _7286646)) _7286647)) = ((I ((I cc_pe1) _7286646)) _7286647)))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI part cleaf f0 f1 c= cI * * part cI part comega_list f0 cI * * part cI part ccc_uh f0 f1 cI * * part cI part ccc_pe1 f0 f1
+ (i = j), (((((cc_4 V) u0) u1) f) i) |- (((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F)))))))) = ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))))))
T c==> c= f0 f1 c==> ccc_4 f2 f3 f4 f5 f0 c= c==> ccc_4 f2 f3 f4 f5 f1 c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ c/\ cpacking f2 c/\ csaturated f2 cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cF c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ c/\ cpacking f2 c/\ csaturated f2 cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cF
- (_7287117 = _7287119) |- ((_7287116 = _7287118) ==> (((EL _7287116) _7287117) = ((EL _7287118) _7287119)))
T c==> c= f0 f1 c==> c= f2 f3 c= cEL f2 f0 cEL f3 f1
- |- ((~ (_7287128 = _7287129)) \/ ((NUMERAL _7287128) = (NUMERAL _7287129)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (_7287069 = _7287074), (_7287066 = _7287071), (_7287070 = _7287075), (_7287067 = _7287072), (_7287068 = _7287073) |- ((((((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070) = (((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075)) ==> ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070)))) = ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c= c==> c= ccc_4 f2 f6 f8 f0 f4 ccc_4 f3 f7 f9 f1 f5 c\/ ccc_4 f3 f7 f9 f1 f5 c~ ccc_4 f2 f6 f8 f0 f4 c\/ ccc_4 f3 f7 f9 f1 f5 c~ ccc_4 f2 f6 f8 f0 f4
- (_7287100 = _7287101) |- ((_7287100 = _7287101) /\ ((saturated _7287101) \/ (~ (saturated _7287100))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
- |- ((_7287130 = _7287132) ==> ((~ (_7287131 = _7287133)) \/ ((_7287130 INSERT _7287131) = (_7287132 INSERT _7287133))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- (!V. (!ul. ((((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ ((I ((I IN) ((I ((I cc_uh) V)) ul))) ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))) /\ ((((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ul)) = ul)) /\ (((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ (((I ((I omega_list) V)) ((I ((I cc_uh) V)) ul)) = ((I ((I cc_pe1) V)) ul)))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 ! ! c/\ c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 cI * * part cI part cIN cI * * part cI part ccc_uh b0 b1 * * part cI * * part cI part cbarV b0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c/\ c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh b0 b1 b1 c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 c= cI * * part cI part comega_list b0 cI * * part cI part ccc_uh b0 b1 cI * * part cI part ccc_pe1 b0 b1
- (_7287117 = _7287119) |- ((_7287117 = _7287119) /\ ((~ (_7287116 = _7287118)) \/ (((EL _7287116) _7287117) = ((EL _7287118) _7287119))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cEL f2 f0 cEL f3 f1
- (_7287131 = _7287133), (_7287130 = _7287132) |- ((_7287131 = _7287133) /\ ((_7287130 INSERT _7287131) = (_7287132 INSERT _7287133)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
- |- ((?j. (i = j)) ==> (?j. (i = j)))
T c==> c? / c= f0 b0 c? / c= f0 b0
- |- ((_7287134 = _7287136) ==> ((~ (_7287135 = _7287137)) \/ (((I _7287134) _7287135) = ((I _7287136) _7287137))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))))) = ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F)))))))
T c==> c= f0 f1 c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ c/\ cpacking f2 c/\ csaturated f2 cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cF c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ c/\ cpacking f2 c/\ csaturated f2 cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cF
- (_7286708 = _7286710), (_7286709 = _7286711) |- ((_7286708 = _7286710) /\ (((I _7286710) _7286711) \/ (~ ((I _7286708) _7286709))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cI f1 f3 c~ cI f0 f2
- (i = j) |- (((~ ((I ((I IN) _7286651)) _7286650)) \/ ((I _7286650) _7286651)) = ((~ ((I ((I IN) _7286651)) _7286650)) \/ ((I _7286650) _7286651)))
T c==> c= f0 f1 c= c\/ c~ cI * * part cI part cIN f2 f3 cI f3 f2 c\/ c~ cI * * part cI part cIN f2 f3 cI f3 f2
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) |- (((!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul))))) ==> ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul))))) ul)) = ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul))))) ul))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 c= c==> ! c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 c~ cnegligible * * part ccc_cell f0 b0 * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 c~ cnegligible * * part ccc_cell f0 b0 f1 * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 c~ cnegligible * * part ccc_cell f0 b0 f1
+ (packing V), (saturated V), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) /\ ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c< cNUMERAL cBIT1 c_0 f5 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f6 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (!P. (!x. ((x IN P) = (P x)))) |- (!x. ((~ ((I ((I IN) x)) _7286650)) \/ ((I _7286650) x)))
T c==> ! ! c= cIN b1 b0 * b0 b1 ! c\/ c~ cI * * part cI part cIN b0 f0 cI f0 b0
- ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) |- (((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) = (((((gg_mcell V) f) u0) u1) j))
T c==> c= cgg_mcell f0 f1 f2 f3 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c= creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cgg_mcell f0 f1 f2 f3 f4
+ (packing V), (saturated V), ((periodic f) n) |- (((periodic f) n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c/\ cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
- (!P. (!x. ((x IN P) = (P x)))), (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ ((I ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))) ==> ((I ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cI * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL cI * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL
+ |- (!f'. (!i'. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))) w0) n) f') /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) (f' i')) (f' (SUC i')))))))))))) ==> ((((((gg_mcell V) f') ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) i') = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL f5 f6 f7 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT f5 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f7 f8 * f7 cSUC f8 c= cgg_mcell f0 f7 cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f8 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) /\ F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c/\ cpacking f3 c/\ csaturated f3 cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c/\ c~ c/\ cpacking f3 c/\ csaturated f3 cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cF
+ |- ((\j. (!f. (!u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))))))))))))))))))))) j)
T * / ! ! ! ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cperiodic b1 b6 c==> cleaf b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b7 b6 b1 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b7 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b6 c==> ccc_4 b4 b3 b2 b1 b0 c==> c= ccc_ke b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL b3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL b2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * b1 b0 c==> c= b5 b0 c==> c= * * part cmcell4 b4 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * * part ccc_cell b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> c~ c/\ cpacking b4 c/\ csaturated b4 cleaf b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL cF f0
+ (packing V), (saturated V), ((periodic f) n) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cF
- |- ((~ (_7287092 = _7287094)) \/ ((~ (_7287093 = _7287095)) \/ (((leaf _7287094) _7287095) \/ (~ ((leaf _7287092) _7287093)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
- (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c/\ cpacking f3 c/\ csaturated f3 cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 cF
+ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- ((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ ((~ ((I ((I leaf) _7286646)) _7286647)) \/ ((I ((I IN) ((I ((I cc_uh) _7286646)) _7286647))) ((I ((I barV) _7286646)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI part cleaf f0 f1 cI * * part cI part cIN cI * * part cI part ccc_uh f0 f1 * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0
- |- ((_7287117 = _7287119) ==> ((~ (_7287116 = _7287118)) \/ (((EL _7287116) _7287117) = ((EL _7287118) _7287119))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cEL f2 f0 cEL f3 f1
- (_7287138 = _7287140) |- ((_7287139 = _7287141) ==> (((CONS _7287138) _7287139) = ((CONS _7287140) _7287141)))
T c==> c= f0 f1 c==> c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ |- ((!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))))))))))))))))))) = T)
T c= ! ! ! ! c==> cpacking b0 c==> csaturated b0 c==> cperiodic f0 b2 c==> cleaf b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL c==> cleaf_rank b0 cCONS f1 cCONS f2 cNIL b3 b2 f0 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b0 f1 f2 f0 f3 c==> c= ccc_ke b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL * f0 f3 c==> c= b1 f3 c==> c= * * part cmcell4 b0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL * * part ccc_cell b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL c==> c~ cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL c==> ! ! c= cIN b5 b4 * b4 b5 c~ ! ! c==> c/\ cpacking b4 c/\ csaturated b4 cleaf b4 b4 c/\ cIN ccc_uh b4 b4 * * part cbarV b4 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b4 b4 b4 c= comega_list b4 ccc_uh b4 b4 ccc_pe1 b4 b4 cT
- |- ((~ (_7287120 = _7287122)) \/ ((~ (_7287121 = _7287123)) \/ (((cc_ke _7287120) _7287121) = ((cc_ke _7287122) _7287123))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
+ (~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) |- ((~ (packing V)) \/ ((~ (saturated V)) \/ (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))
T c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c\/ c~ cpacking f0 c\/ c~ csaturated f0 c~ cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- (_7287120 = _7287122) |- ((_7287120 = _7287122) /\ ((~ (_7287121 = _7287123)) \/ (((cc_ke _7287120) _7287121) = ((cc_ke _7287122) _7287123))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- |- ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))))
T c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- (_7287102 = _7287103) |- ((_7287102 = _7287103) /\ ((packing _7287103) \/ (~ (packing _7287102))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- |- ((_7287128 = _7287129) ==> ((NUMERAL _7287128) = (NUMERAL _7287129)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- ((\i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i)))))) i)
T * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * f5 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * f5 b0 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * f5 b0 * f5 cSUC b0 f6
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f6 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f7 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c/\ cpacking f3 c/\ csaturated f3 cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
+ |- (((!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))) ==> ((\ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))) ((CONS u0) ((CONS u1) NIL)))) = ((\ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))) ((CONS u0) ((CONS u1) NIL))))
T c= c==> ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cNIL b1 b2 b3 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT b1 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b2 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS * b3 b4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS * b3 b4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 * b3 b4 * b3 cSUC b4 * / ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cNIL b1 b2 b3 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT b1 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b2 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS * b3 b4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS * b3 b4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 * b3 b4 * b3 cSUC b4 cCONS f1 cCONS f2 cNIL * / ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cNIL b1 b2 b3 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT b1 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b2 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS * b3 b4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS * b3 b4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 * b3 b4 * b3 cSUC b4 cCONS f1 cCONS f2 cNIL
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) |- (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 ! c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 c~ cnegligible * * part ccc_cell f0 b0
+ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- ((((I packing) _7286646) /\ (((I saturated) _7286646) /\ ((I ((I leaf) _7286646)) _7286647))) ==> ((I ((I IN) ((I ((I cc_uh) _7286646)) _7286647))) ((I ((I barV) _7286646)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c==> c/\ cI part cpacking f0 c/\ cI part csaturated f0 cI * * part cI part cleaf f0 f1 cI * * part cI part cIN cI * * part cI part ccc_uh f0 f1 * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0
+ (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- F
T c==> c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF
+ (packing V), ((packing V) /\ ((saturated V) /\ (((periodic f) n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))))) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> cpacking f0 c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cperiodic f1 f2 c/\ cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c/\ cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f2 ccc_4 f0 f3 f4 f1 f5 c= cgg_mcell f0 f1 f3 f4 f5 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cbeta_bump_v1 f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL
- (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) |- (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = ((I f) j))
T c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cI f3 f4
- ((\j. (i = j)) j) |- (((i = j) ==> (?j. (i = j))) = (?j. (i = j)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
- |- (((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = p') ==> ((p' ==> (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) = q')) ==> (((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = (p' ==> q'))))
T c==> c= c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f5 c==> c==> f5 c= c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f6 c= c==> c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> f5 f6
- |- ((~ (_7287130 = _7287132)) \/ ((~ (_7287131 = _7287133)) \/ ((_7287130 INSERT _7287131) = (_7287132 INSERT _7287133))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (!P. (!x. ((x IN P) = (P x)))) |- (!x. (((I ((I IN) x)) _7286648) \/ (~ ((I _7286648) x))))
T c==> ! ! c= cIN b1 b0 * b0 b1 ! c\/ cI * * part cI part cIN b0 f0 c~ cI f0 b0
- (_7287066 = _7287071), (_7287067 = _7287072), (_7287068 = _7287073) |- ((_7287066 = _7287071) /\ ((~ (_7287069 = _7287074)) \/ ((~ (_7287070 = _7287075)) \/ ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f1 f3 f5 f7 f9 c~ ccc_4 f0 f2 f4 f6 f8
- (_7287067 = _7287072), (_7287068 = _7287073) |- ((_7287068 = _7287073) /\ ((~ (_7287066 = _7287071)) \/ ((~ (_7287069 = _7287074)) \/ ((~ (_7287070 = _7287075)) \/ ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070)))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
+ (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c< cNUMERAL cBIT1 c_0 f1 c==> cleaf f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c/\ c< cNUMERAL cBIT1 c_0 f1 c==> ccc_4 f0 f2 f3 f4 f5 c==> c= ccc_ke f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL f2 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL * f4 f5 c==> c= f6 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f4 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ (packing V), ((saturated V) /\ (((periodic f) n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i))))))) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> cpacking f0 c==> c/\ csaturated f0 c/\ cperiodic f1 f2 c/\ cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c/\ cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f2 ccc_4 f0 f3 f4 f1 f5 c= cgg_mcell f0 f1 f3 f4 f5 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cbeta_bump_v1 f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL
+ |- (((!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))) ==> ((\t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))) t)) = ((\t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))) t))
T c= c==> ! c/\ c= cEL cNUMERAL c_0 cCONS f0 b0 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 * / c/\ c= cEL cNUMERAL c_0 cCONS f0 b0 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 f1 * / c/\ c= cEL cNUMERAL c_0 cCONS f0 b0 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 b0 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 f1
+ (!P. (!x. ((x IN P) = (P x)))) |- (((!P. (!x. ((~ ((I ((I IN) x)) P)) \/ ((I P) x)))) ==> ((\P. (!x. ((~ ((I ((I IN) x)) P)) \/ ((I P) x)))) _7286650)) = ((\P. (!x. ((~ ((I ((I IN) x)) P)) \/ ((I P) x)))) _7286650))
T c==> ! ! c= cIN b1 b0 * b0 b1 c= c==> ! ! c\/ c~ cI * * part cI part cIN b1 b0 cI b0 b1 * / ! c\/ c~ cI * * part cI part cIN b1 b0 cI b0 b1 f0 * / ! c\/ c~ cI * * part cI part cIN b1 b0 cI b0 b1 f0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
- (_7287066 = _7287071), (_7287067 = _7287072), (_7287068 = _7287073) |- ((_7287069 = _7287074) ==> ((~ (_7287070 = _7287075)) \/ ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f1 f3 f5 f7 f9 c~ ccc_4 f0 f2 f4 f6 f8
+ (!P. (!x. ((x IN P) = (P x)))) |- (((I _7286650) _7286651) \/ (~ ((I ((I IN) _7286651)) _7286650)))
T c==> ! ! c= cIN b1 b0 * b0 b1 c\/ cI f0 f1 c~ cI * * part cI part cIN f1 f0
+ |- (((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j))))) = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))
T c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * f5 f6 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * f5 f6 * f5 cSUC f6 cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f7 cNIL * * * * part cwedge_ge f1 f2 * f5 f7 * f5 cSUC f7 cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f7 cNIL * * * * part cwedge_ge f1 f2 * f5 f7 * f5 cSUC f7
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- ((((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) _7286647)))) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) _7286646)) _7286647)) = _7286647)) /\ (((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) _7286647)))) \/ (((I ((I omega_list) _7286646)) ((I ((I cc_uh) _7286646)) _7286647)) = ((I ((I cc_pe1) _7286646)) _7286647))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c/\ c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 f1 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 f1 f1 c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 f1 c= cI * * part cI part comega_list f0 cI * * part cI part ccc_uh f0 f1 cI * * part cI part ccc_pe1 f0 f1
+ (saturated V), ((~ (saturated V)) \/ (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- F
T c==> csaturated f0 c==> c\/ c~ csaturated f0 c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF
- |- (((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t))
T c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1
- (_7287092 = _7287094) |- ((_7287093 = _7287095) ==> (((leaf _7287094) _7287095) \/ (~ ((leaf _7287092) _7287093))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))), (~ ((I ((I IN) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))) ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ ((I ((I IN) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))) ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))) /\ ((I ((I IN) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))) ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c==> c~ cI * * part cI part cIN cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cI * * part cI part cIN cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 cI * * part cI part cIN cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0
+ |- ((i = i) = ((\j. (i = j)) i))
T c= c= f0 f0 * / c= f0 b0 f0
- (i = j) |- (((I ((I ((I ((I ((I cc_4) V)) u0)) u1)) f)) j) = ((I ((I ((I ((I ((I cc_4) V)) u0)) u1)) f)) j))
T c==> c= f0 f1 c= cI * * part cI * * part cI * * part cI * * part cI part ccc_4 f2 f3 f4 f5 f1 cI * * part cI * * part cI * * part cI * * part cI part ccc_4 f2 f3 f4 f5 f1
- (i = j) |- ((((I ((I IN) _7286649)) _7286648) \/ (~ ((I _7286648) _7286649))) = (((I ((I IN) _7286649)) _7286648) \/ (~ ((I _7286648) _7286649))))
T c==> c= f0 f1 c= c\/ cI * * part cI part cIN f2 f3 c~ cI f3 f2 c\/ cI * * part cI part cIN f2 f3 c~ cI f3 f2
+ |- (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i)))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * f5 f6 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * f5 f6 * f5 cSUC f6
- |- ((_7287112 = _7287114) ==> ((~ (_7287113 = _7287115)) \/ (((cc_uh _7287112) _7287113) = ((cc_uh _7287114) _7287115))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= ccc_uh f0 f2 ccc_uh f1 f3
- (_7286709 = _7286711) |- ((_7286709 = _7286711) /\ ((~ (_7286708 = _7286710)) \/ (((I _7286710) _7286711) \/ (~ ((I _7286708) _7286709)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ ((packing V) /\ ((saturated V) /\ (((periodic f) n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))))) |- (((packing V) /\ ((saturated V) /\ (((periodic f) n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))))) /\ ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cperiodic f1 f2 c/\ cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c/\ cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f2 ccc_4 f0 f3 f4 f1 f5 c/\ c/\ cpacking f0 c/\ csaturated f0 c/\ cperiodic f1 f2 c/\ cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c/\ cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f2 ccc_4 f0 f3 f4 f1 f5 c= cgg_mcell f0 f1 f3 f4 f5 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cbeta_bump_v1 f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL
+ |- (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))) w0) n) f) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) (f j)) (f (SUC j)))))))))))) ==> ((((((gg_mcell V) f) ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL f5 f6 f3 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT f5 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f7 * f3 cSUC f7 c= cgg_mcell f0 f3 cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f7 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((i = j) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f4 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> c= f5 f7 c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
- (i = j) |- (F = F)
T c==> c= f0 f1 c= cF cF
+ |- ((\V. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i))))))))))) V)
T * / ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b3 c= ccc_ke b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 cSUC b5 f0
- (i = j) |- ((~ ((I ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))) = (~ ((I ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))))
T c==> c= f0 f1 c= c~ cI * * part cI * * part cI part cbarV f2 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 cI * * part cI part ccc_uh f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL c~ cI * * part cI * * part cI part cbarV f2 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 cI * * part cI part ccc_uh f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL
+ (packing V) |- ((packing V) = T)
T c==> cpacking f0 c= cpacking f0 cT
- (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((I ((I cc_ke) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))) = ((I NUMERAL) ((I BIT0) ((I BIT0) ((I BIT1) _0)))))
T c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cI * * part cI part ccc_ke f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL cI part cNUMERAL cI part cBIT0 cI part cBIT0 cI part cBIT1 c_0
- (_7287108 = _7287110) |- ((_7287108 = _7287110) /\ ((~ (_7287109 = _7287111)) \/ (((cc_cell _7287108) _7287109) = ((cc_cell _7287110) _7287111))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
+ |- ((!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))))))))))))))))) = T)
T c= ! ! ! ! c==> cpacking b0 c==> csaturated b0 c==> cperiodic f0 b2 c==> cleaf b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL c==> cleaf_rank b0 cCONS f1 cCONS f2 cNIL b3 b2 f0 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b0 f1 f2 f0 f3 c==> c= ccc_ke b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL * f0 f3 c==> c= b1 f3 c==> c= * * part cmcell4 b0 ccc_uh b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL * * part ccc_cell b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL c/\ cpacking b0 c/\ csaturated b0 cleaf b0 cCONS f1 cCONS f2 cCONS * f0 f3 cNIL cT
+ (packing V), (saturated V), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) /\ ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ |- ((\ul. (!w0. (!n. (!f'. (!i'. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f') /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ul) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ul)) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f' i')) (f' (SUC i')))))))))))) ==> ((((((gg_mcell V) f') ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) i') = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))))))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))
T * / ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cNIL b1 b2 b3 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT b1 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b2 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 b0 c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 * b3 b4 * b3 cSUC b4 c= cgg_mcell f0 b3 cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 b4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ |- (((?j. (i = j)) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) = ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c= c==> c? / c= f0 b0 c= cgg_mcell f1 f2 f3 f4 f0 creal_add creal_mul cgammaX f1 * * part ccc_cell f1 cCONS f3 cCONS f4 cCONS * f2 f0 cNIL part clmfun ccritical_weight f1 * * part ccc_cell f1 cCONS f3 cCONS f4 cCONS * f2 f0 cNIL cbeta_bump_v1 f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part ccc_cell f1 cCONS f3 cCONS f4 cCONS * f2 f0 cNIL c= cgg_mcell f1 f2 f3 f4 f0 creal_add creal_mul cgammaX f1 * * part ccc_cell f1 cCONS f3 cCONS f4 cCONS * f2 f0 cNIL part clmfun ccritical_weight f1 * * part ccc_cell f1 cCONS f3 cCONS f4 cCONS * f2 f0 cNIL cbeta_bump_v1 f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part ccc_cell f1 cCONS f3 cCONS f4 cCONS * f2 f0 cNIL
- (i = j) |- ((((I ((I EL) ((I NUMERAL) _0))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = u0) = (((I ((I EL) ((I NUMERAL) _0))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = u0))
T c==> c= f0 f1 c= c= cI * * part cI part cEL cI part cNUMERAL c_0 cI * * part cI part ccc_uh f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL f3 c= cI * * part cI part cEL cI part cNUMERAL c_0 cI * * part cI part ccc_uh f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL f3
- |- ((_7287120 = _7287122) ==> ((~ (_7287121 = _7287123)) \/ (((cc_ke _7287120) _7287121) = ((cc_ke _7287122) _7287123))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- (_7287112 = _7287114) |- ((_7287113 = _7287115) ==> (((cc_uh _7287112) _7287113) = ((cc_uh _7287114) _7287115)))
T c==> c= f0 f1 c==> c= f2 f3 c= ccc_uh f0 f2 ccc_uh f1 f3
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- (((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) _7286647)))) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) _7286646)) _7286647)) = _7286647))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 f1 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 f1 f1
- (_7287076 = _7287078) |- ((_7287076 = _7287078) /\ ((~ (_7287077 = _7287079)) \/ ((_7287078 < _7287079) \/ (~ (_7287076 < _7287077)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0) /\ ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1) /\ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f4 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> c/\ c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c/\ c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
+ |- (((!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i)))))) ==> ((\i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i)))))) i)) = ((\i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i)))))) i))
T c= c==> ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * f5 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * f5 b0 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * f5 b0 * f5 cSUC b0 * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * f5 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * f5 b0 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * f5 b0 * f5 cSUC b0 f6 * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * f5 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * f5 b0 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * f5 b0 * f5 cSUC b0 f6
- (i = j) |- ((~ (saturated V)) = (~ (saturated V)))
T c==> c= f0 f1 c= c~ csaturated f2 c~ csaturated f2
- (((((cc_4 V) u0) u1) f) j) |- ((I ((I ((I ((I ((I cc_4) V)) u0)) u1)) f)) j)
T c==> ccc_4 f0 f1 f2 f3 f4 cI * * part cI * * part cI * * part cI * * part cI part ccc_4 f0 f1 f2 f3 f4
- (~ (packing V)), (packing V) |- ((~ F) ==> F)
T c==> c~ cpacking f0 c==> cpacking f0 c==> c~ cF cF
+ (packing V), (saturated V), (i = j), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 f2 c==> cperiodic f3 f4 c==> cleaf f0 cCONS f5 cCONS f6 cCONS * f3 f1 cNIL c==> cleaf_rank f0 cCONS f5 cCONS f6 cNIL f7 f4 f3 c==> c~ ccollinear * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f5 f6 f3 f2 c==> c= ccc_ke f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL f5 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL f6 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL * f3 f2 c==> c= f1 f2 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL * * part ccc_cell f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f5 cCONS f6 cCONS * f3 f2 cNIL cF
- (~ (saturated V)), (saturated V) |- ((~ (saturated V)) /\ (saturated V))
T c==> c~ csaturated f0 c==> csaturated f0 c/\ c~ csaturated f0 csaturated f0
- |- ((_7287126 = _7287127) ==> ((BIT1 _7287126) = (BIT1 _7287127)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
+ (~ (saturated V)), (saturated V) |- ((~ (saturated V)) /\ F)
T c==> c~ csaturated f0 c==> csaturated f0 c/\ c~ csaturated f0 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (T = ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cperiodic f5 f4 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c= cT c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL ccc_4 f3 f0 f1 f5 f6
- (i = j), (((((cc_4 V) u0) u1) f) i) |- ((((((cc_4 V) u0) u1) f) j) = T)
T c==> c= f0 f1 c==> ccc_4 f2 f3 f4 f5 f0 c= ccc_4 f2 f3 f4 f5 f1 cT
+ ((\j. (i = j)) j) |- (i = j)
T c==> * / c= f0 b0 f1 c= f0 f1
- (i = j) |- ((i = j) /\ (?j. (i = j)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
+ |- (((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> F) = (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))
T c= c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ F) ==> F)
T c==> c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cF cF
- |- ((!ul'. (((~ (packing V)) \/ ((~ (saturated V)) \/ (~ ((leaf V) ul')))) \/ ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))) = ((!ul. ((~ (packing V)) \/ ((~ (saturated V)) \/ (~ ((leaf V) ul))))) \/ ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))
T c= ! c\/ c\/ c~ cpacking f0 c\/ c~ csaturated f0 c~ cleaf f0 b0 c/\ cIN ccc_uh f0 f1 * * part cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 f1 f1 c= comega_list f0 ccc_uh f0 f1 ccc_pe1 f0 f1 c\/ ! c\/ c~ cpacking f0 c\/ c~ csaturated f0 c~ cleaf f0 b0 c/\ cIN ccc_uh f0 f1 * * part cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 f1 f1 c= comega_list f0 ccc_uh f0 f1 ccc_pe1 f0 f1
+ |- (((!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))))) ==> ((\f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))))) f)) = ((\f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))))) f))
T c= c==> ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b0 b1 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b0 b1 * b0 cSUC b1 * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b0 b1 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b0 b1 * b0 cSUC b1 f5 * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b0 b1 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b0 b1 * b0 cSUC b1 f5
- (i = j) |- ((((I ((I cc_ke) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))) = ((I NUMERAL) ((I BIT0) ((I BIT0) ((I BIT1) _0))))) = (((I ((I cc_ke) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))) = ((I NUMERAL) ((I BIT0) ((I BIT0) ((I BIT1) _0))))))
T c==> c= f0 f1 c= c= cI * * part cI part ccc_ke f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL cI part cNUMERAL cI part cBIT0 cI part cBIT0 cI part cBIT1 c_0 c= cI * * part cI part ccc_ke f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL cI part cNUMERAL cI part cBIT0 cI part cBIT0 cI part cBIT1 c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i), ((\j. (i = j)) j) |- (((\j. (i = j)) j) /\ ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f4 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> * / c= f5 b0 f7 c/\ * / c= f5 b0 f7 c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
- ((\j. (i = j)) j) |- (((\j. (i = j)) j) /\ (?j. (i = j)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
+ (~ (packing V)), (packing V) |- F
T c==> c~ cpacking f0 c==> cpacking f0 cF
- |- ((!x'. ((x' IN P) \/ (~ (P x)))) = ((!x. (x IN P)) \/ (~ (P x))))
T c= ! c\/ cIN b0 f0 c~ * f0 f1 c\/ ! cIN b0 f0 c~ * f0 f1
+ |- ((p /\ (q ==> r)) ==> ((p ==> q) ==> r))
T c==> c/\ f0 c==> f1 f2 c==> c==> f0 f1 f2
+ |- (((!V. (!ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul))))) ==> ((\V. (!ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul))))) V)) = ((\V. (!ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul))))) V))
T c= c==> ! ! c= * * part ccc_cell b0 b1 * * * part cmcell ccc_ke b0 b1 b0 ccc_uh b0 b1 * / ! c= * * part ccc_cell b0 b1 * * * part cmcell ccc_ke b0 b1 b0 ccc_uh b0 b1 f0 * / ! c= * * part ccc_cell b0 b1 * * * part cmcell ccc_ke b0 b1 b0 ccc_uh b0 b1 f0
- |- ((~ (_7287076 = _7287078)) \/ ((~ (_7287077 = _7287079)) \/ ((_7287078 < _7287079) \/ (~ (_7287076 < _7287077)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
+ (i = j), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) |- (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) /\ (((((((gg_mcell V) f) ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) = ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))
T c==> c= f0 f1 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL f4 c==> c/\ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c/\ c~ cnegligible * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cSUBSET * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * * * part cwedge_ge f3 f4 * f5 f1 * f5 cSUC f1 c/\ c/\ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c/\ c~ cnegligible * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cSUBSET * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * * * part cwedge_ge f3 f4 * f5 f1 * f5 cSUC f1 c= c= cgg_mcell f2 f5 cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL f1 creal_add creal_mul cgammaX f2 * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL part clmfun ccritical_weight f2 * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL cbeta_bump_v1 f2 * * part cINSERT cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL part cEMPTY * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL c= cgg_mcell f2 f5 f3 f4 f1 creal_add creal_mul cgammaX f2 * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL part clmfun ccritical_weight f2 * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cbeta_bump_v1 f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL
+ |- ((!f. (!u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> cpacking b3 c==> csaturated b3 c==> cperiodic b0 b5 c==> cleaf b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL c==> cleaf_rank b3 cCONS b2 cCONS b1 cNIL b6 b5 b0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b5 c==> ccc_4 b3 b2 b1 b0 f0 c==> c= ccc_ke b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL b2 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL b1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL * b0 f0 c==> c= b4 f0 c==> c= * * part cmcell4 b3 ccc_uh b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL * * part ccc_cell b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL c/\ cpacking b3 c/\ csaturated b3 cleaf b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL cT
- (i = j) |- ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) = (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))
T c==> c= f0 f1 c= cleaf_rank f2 cCONS f3 cCONS f4 cNIL f5 f6 f7 cleaf_rank f2 cCONS f3 cCONS f4 cNIL f5 f6 f7
- (i = j) |- ((~ (packing V)) = (~ (packing V)))
T c==> c= f0 f1 c= c~ cpacking f2 c~ cpacking f2
+ |- ((!j. (!f. (!u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))))))))))))))))))))))) = (!j. (!f. (!u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))))))))))))))))))))
T c= ! ! ! ! ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cperiodic b1 b6 c==> cleaf b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b7 b6 b1 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b7 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b6 c==> ccc_4 b4 b3 b2 b1 b0 c==> c= ccc_ke b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL b3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL b2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * b1 b0 c==> c= b5 b0 c==> c= * * part cmcell4 b4 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * * part ccc_cell b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> c~ cbarV b4 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> ! ! c= cIN b9 b8 * b8 b9 c~ ! ! c==> c/\ cpacking b8 c/\ csaturated b8 cleaf b8 b8 c/\ cIN ccc_uh b8 b8 * * part cbarV b8 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b8 b8 b8 c= comega_list b8 ccc_uh b8 b8 ccc_pe1 b8 b8 ! ! ! ! ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cperiodic b1 b6 c==> cleaf b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b7 b6 b1 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b7 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b6 c==> ccc_4 b4 b3 b2 b1 b0 c==> c= ccc_ke b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL b3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL b2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * b1 b0 c==> c= b5 b0 c==> c= * * part cmcell4 b4 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * * part ccc_cell b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> c~ cbarV b4 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> ! ! c= cIN b9 b8 * b8 b9 c==> ! ! c==> c/\ cpacking b8 c/\ csaturated b8 cleaf b8 b8 c/\ cIN ccc_uh b8 b8 * * part cbarV b8 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b8 b8 b8 c= comega_list b8 ccc_uh b8 b8 ccc_pe1 b8 b8 cF
- (_7287082 = _7287087), (_7287084 = _7287089) |- ((_7287082 = _7287087) /\ ((~ (_7287086 = _7287091)) \/ ((~ (_7287083 = _7287088)) \/ ((~ (_7287085 = _7287090)) \/ ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086)))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f1 f7 f3 f9 f5 c~ cleaf_rank f0 f6 f2 f8 f4
- (_7287066 = _7287071), (_7287067 = _7287072), (_7287068 = _7287073) |- ((~ (_7287069 = _7287074)) \/ ((~ (_7287070 = _7287075)) \/ ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f1 f3 f5 f7 f9 c~ ccc_4 f0 f2 f4 f6 f8
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f6 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 c==> ccc_4 f3 f0 f1 f6 f4 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * f6 f5 c==> c= f4 f5 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> c~ c/\ cpacking f3 c/\ csaturated f3 cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL cF
+ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- (((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) _7286647)))) \/ ((I ((I IN) ((I ((I cc_uh) _7286646)) _7286647))) ((I ((I barV) _7286646)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 f1 cI * * part cI part cIN cI * * part cI part ccc_uh f0 f1 * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cperiodic f5 f4 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c/\ c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL ccc_4 f3 f0 f1 f5 f6 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cgg_mcell f3 f5 f0 f1 f6 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL
- |- ((~ (_7287080 = _7287081)) \/ ((collinear _7287081) \/ (~ (collinear _7287080))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
- (_7287069 = _7287074), (_7287066 = _7287071), (_7287067 = _7287072), (_7287068 = _7287073) |- ((_7287070 = _7287075) ==> ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ ccc_4 f3 f5 f7 f1 f9 c~ ccc_4 f2 f4 f6 f0 f8
- (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) |- (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))))
T c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
+ (!P. (!x. ((x IN P) = (P x)))), (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))), (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) /\ F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
- (!P. (!x. ((x IN P) = (P x)))) |- ((\x. (((I ((I IN) x)) _7286648) \/ (~ ((I _7286648) x)))) _7286649)
T c==> ! ! c= cIN b1 b0 * b0 b1 * / c\/ cI * * part cI part cIN b0 f0 c~ cI f0 b0 f1
+ ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) |- (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) /\ ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))
T c==> c= cgg_mcell f0 f1 f2 f3 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c/\ c= cgg_mcell f0 f1 f2 f3 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c= cgg_mcell f0 f1 f2 f3 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL
+ (packing V), (saturated V), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))
T c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
- |- (T = (((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ ((~ ((I ((I leaf) _7286646)) _7286647)) \/ ((I ((I IN) ((I ((I cc_uh) _7286646)) _7286647))) ((I ((I barV) _7286646)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))))) = (((I ((I IN) ((I ((I cc_uh) _7286646)) _7286647))) ((I ((I barV) _7286646)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))) \/ ((~ ((I packing) _7286646)) \/ ((~ ((I saturated) _7286646)) \/ (~ ((I ((I leaf) _7286646)) _7286647)))))))
T c= cT c= c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI part cleaf f0 f1 cI * * part cI part cIN cI * * part cI part ccc_uh f0 f1 * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c\/ cI * * part cI part cIN cI * * part cI part ccc_uh f0 f1 * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c~ cI * * part cI part cleaf f0 f1
+ (!P. (!x. ((x IN P) = (P x)))) |- ((~ ((I ((I IN) _7286651)) _7286650)) \/ ((I _7286650) _7286651))
T c==> ! ! c= cIN b1 b0 * b0 b1 c\/ c~ cI * * part cI part cIN f0 f1 cI f1 f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
+ (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c==> c= f0 f1 c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((!P. ((!x. ((x IN P) \/ (~ (P x)))) /\ (!x. ((~ (x IN P)) \/ (P x))))) = ((!P. (!x. ((x IN P) \/ (~ (P x))))) /\ (!P. (!x. ((~ (x IN P)) \/ (P x))))))
T c= ! c/\ ! c\/ cIN b1 b0 c~ * b0 b1 ! c\/ c~ cIN b1 b0 * b0 b1 c/\ ! ! c\/ cIN b1 b0 c~ * b0 b1 ! ! c\/ c~ cIN b1 b0 * b0 b1
- |- ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))
T c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- ((packing V) /\ ((saturated V) /\ ((leaf V) ul))) |- ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) ==> (~ (negligible ((cc_cell V) ul))))
T c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 c~ cnegligible * * part ccc_cell f0 f1
+ (saturated V) |- (((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))) = (((I saturated) V) /\ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))))
T c==> csaturated f0 c= cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL c/\ cI part csaturated f0 cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) |- ((collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ |- (((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))) ==> ((\V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))) V)) = ((\V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))) V))
T c= c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cperiodic b5 b4 c/\ c< cNUMERAL cBIT1 c_0 b4 c/\ cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL ccc_4 b0 b1 b2 b5 b6 c= ccc_ke b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cperiodic b5 b4 c/\ c< cNUMERAL cBIT1 c_0 b4 c/\ cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL ccc_4 b0 b1 b2 b5 b6 c= ccc_ke b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 * / ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cperiodic b5 b4 c/\ c< cNUMERAL cBIT1 c_0 b4 c/\ cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL ccc_4 b0 b1 b2 b5 b6 c= ccc_ke b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0
- (_7287076 = _7287078) |- ((_7287077 = _7287079) ==> ((_7287078 < _7287079) \/ (~ (_7287076 < _7287077))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
- (_7287084 = _7287089) |- ((_7287082 = _7287087) ==> ((~ (_7287086 = _7287091)) \/ ((~ (_7287083 = _7287088)) \/ ((~ (_7287085 = _7287090)) \/ ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086)))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
- (_7287130 = _7287132) |- ((_7287131 = _7287133) ==> ((_7287130 INSERT _7287131) = (_7287132 INSERT _7287133)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- ((\V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ul)) = ((EL (NUMERAL _0)) ul)) /\ ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ul)) = ((EL (NUMERAL (BIT1 _0))) ul)) /\ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul))))))) V)
T * / ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ c= cEL cNUMERAL c_0 ccc_uh b0 b1 cEL cNUMERAL c_0 b1 c/\ c= cEL cNUMERAL cBIT1 c_0 ccc_uh b0 b1 cEL cNUMERAL cBIT1 c_0 b1 c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 cEL cNUMERAL cBIT0 cBIT1 c_0 b1 f0
+ (i = j), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))
T c==> c= f0 f1 c==> cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL cleaf f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL
- ((NUMERAL (BIT1 _0)) < n) |- ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n)
T c==> c< cNUMERAL cBIT1 c_0 f0 cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f0
- |- (T = (((~ ((I ((I IN) _7286651)) _7286650)) \/ ((I _7286650) _7286651)) = (((I _7286650) _7286651) \/ (~ ((I ((I IN) _7286651)) _7286650)))))
T c= cT c= c\/ c~ cI * * part cI part cIN f0 f1 cI f1 f0 c\/ cI f1 f0 c~ cI * * part cI part cIN f0 f1
- (i = j) |- ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = u0) = (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = u0))
T c==> c= f0 f1 c= c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL f3 c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL f3
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f6 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f6 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f7 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
- (i = j) |- ((~ ((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY))))) = (~ ((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY))))))
T c==> c= f0 f1 c= c~ cI part ccollinear * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 * * part cI * * part cI part cINSERT f4 part cEMPTY c~ cI part ccollinear * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 * * part cI * * part cI part cINSERT f4 part cEMPTY
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) |- ((((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))) = T)
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 c= c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 c~ cnegligible * * part ccc_cell f0 f1 cT
- |- ((~ (_7286820 = _7286822)) \/ ((~ (_7286821 = _7286823)) \/ (((I _7286820) _7286821) = ((I _7286822) _7286823))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
+ (!P. (!x. ((x IN P) = (P x)))), (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((I ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cI * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL
+ |- (((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))) w0) n) f) /\ ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((~ (collinear (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) (f j)) (f (SUC j)))))))))))) ==> ((((((gg_mcell V) f) ((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))
T c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL f5 f6 f3 c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT f5 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 c/\ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f7 * f3 cSUC f7 c= cgg_mcell f0 f3 cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f7 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f7 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f7 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f7 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f7 cNIL c= cgg_mcell f0 f3 f1 f2 f7 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f7 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f7 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f7 cNIL
- (i = j) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c==> c= f0 f1 c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c==> c==> c/\ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
- |- ((!ul. (P \/ (Q ul))) = (P \/ (!ul. (Q ul))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((i = j) /\ ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL * f6 f4 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f6 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 c==> ccc_4 f3 f0 f1 f6 f4 c/\ c= f4 f5 c= cgg_mcell f3 f6 f0 f1 f4 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL
+ (saturated V) |- ((saturated V) = T)
T c==> csaturated f0 c= csaturated f0 cT
+ |- ((!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ (((periodic f) n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cperiodic b3 b2 c/\ cleaf f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL c/\ cleaf_rank f0 cCONS f1 cCONS b0 cNIL b1 b2 b3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b2 ccc_4 f0 f1 b0 b3 b4 c= cgg_mcell f0 b3 f1 b0 b4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL cT
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))), (((((cc_4 V) u0) u1) f) j) |- ((((((cc_4 V) u0) u1) f) j) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ccc_4 f0 f1 f2 f3 f4 c/\ ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F)
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF
- |- (((!x. (((\j. (i = j)) x) ==> (?j. (i = j)))) ==> ((?j. (i = j)) ==> (?j. (i = j)))) = ((?j. (i = j)) ==> (?j. (i = j))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
+ (packing V), (saturated V), (i = j), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((i = j) /\ ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f5 f2 cNIL c/\ c= f1 f2 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f5 f2 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f5 f2 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f5 f2 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
- (i = j) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))) = ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))))
T c==> c= f0 f1 c= cleaf f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL cleaf f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL
- |- ((_7287108 = _7287110) ==> ((~ (_7287109 = _7287111)) \/ (((cc_cell _7287108) _7287109) = ((cc_cell _7287110) _7287111))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((\j. (i = j)) j) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f4 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> * / c= f5 b0 f7 c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
- (!P. (!x. ((x IN P) = (P x)))) |- (((I ((I IN) _7286649)) _7286648) \/ (~ ((I _7286648) _7286649)))
T c==> ! ! c= cIN b1 b0 * b0 b1 c\/ cI * * part cI part cIN f0 f1 c~ cI f1 f0
+ (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))
T c==> c= f0 f1 c==> c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL
+ (saturated V), ((~ (saturated V)) \/ (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- (((~ (saturated V)) \/ (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))))) /\ F)
T c==> csaturated f0 c==> c\/ c~ csaturated f0 c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c\/ c~ csaturated f0 c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cF
+ |- ((\i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F)))))))))))))))))) i)
T * / ! ! c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 b1 c==> cleaf f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c==> cleaf_rank f0 cCONS f2 cCONS f3 cNIL b2 b1 f1 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b1 c==> ccc_4 f0 f2 f3 f1 f4 c==> c= ccc_ke f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL f3 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL * f1 f4 c==> c= b0 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cF f5
- (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) |- (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = u0)
T c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f1 c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL * f6 f4 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f6 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 c==> ccc_4 f3 f0 f1 f6 f4 c==> c= f4 f5 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> c~ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
- (_7286708 = _7286710), (_7286709 = _7286711) |- (((I _7286710) _7286711) \/ (~ ((I _7286708) _7286709)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
- (i = j) |- (((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f) = ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f))
T c==> c= f0 f1 c= cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cNIL f5 f6 f7 cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cNIL f5 f6 f7
- (_7287086 = _7287091), (_7287082 = _7287087), (_7287084 = _7287089) |- ((~ (_7287083 = _7287088)) \/ ((~ (_7287085 = _7287090)) \/ ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f5 f9 f1 c~ cleaf_rank f2 f6 f4 f8 f0
- |- (((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) ==> (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul))))))) = (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))))
T c= c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1
- |- ((_7287080 = _7287081) ==> ((collinear _7287081) \/ (~ (collinear _7287080))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ |- (((!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i)))))))) ==> ((\n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i)))))))) n)) = ((\n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i)))))))) n))
T c= c==> ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 b0 b1 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b0 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b1 b2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b1 b2 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b1 b2 * b1 cSUC b2 * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 b0 b1 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b0 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b1 b2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b1 b2 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b1 b2 * b1 cSUC b2 f4 * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 b0 b1 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b0 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b1 b2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b1 b2 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b1 b2 * b1 cSUC b2 f4
- (_7287138 = _7287140) |- ((_7287138 = _7287140) /\ ((~ (_7287139 = _7287141)) \/ (((CONS _7287138) _7287139) = ((CONS _7287140) _7287141))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
+ (packing V), (saturated V), (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i))))), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f6 f3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 ccc_4 f0 f1 f2 f3 f4 c==> cperiodic f3 f6 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) ==> ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL
+ |- (((!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) ==> ((\n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) n)) = ((\n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) n))
T c= c==> ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 b1 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic b1 b0 c/\ c< cNUMERAL cBIT1 c_0 b0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b1 b2 cNIL ccc_4 f0 f1 f2 b1 b2 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b1 b2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 b1 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic b1 b0 c/\ c< cNUMERAL cBIT1 c_0 b0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b1 b2 cNIL ccc_4 f0 f1 f2 b1 b2 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b1 b2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f4 * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 b1 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic b1 b0 c/\ c< cNUMERAL cBIT1 c_0 b0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b1 b2 cNIL ccc_4 f0 f1 f2 b1 b2 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b1 b2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f4
+ |- ((!f. (!i. (((packing V) /\ ((saturated V) /\ (((periodic f) n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))) = T)
T c= ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cperiodic b0 f1 c/\ cleaf f0 cCONS f2 cCONS f3 cCONS * b0 b1 cNIL c/\ cleaf_rank f0 cCONS f2 cCONS f3 cNIL f4 f1 b0 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f1 ccc_4 f0 f2 f3 b0 b1 c= cgg_mcell f0 b0 f2 f3 b1 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * b0 b1 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * b0 b1 cNIL cbeta_bump_v1 f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * b0 b1 cNIL cT
+ |- (!j. (!f. (!u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))))))))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL
- |- ((i = j) ==> (?j. (i = j)))
T c==> c= f0 f1 c? / c= f0 b0
- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))), (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) |- (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) /\ ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))))
T c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c==> c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j))))) = ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c= c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c/\ cbarV f3 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5
+ (~ (saturated V)), (saturated V) |- F
T c==> c~ csaturated f0 c==> csaturated f0 cF
+ |- ((!x. (((x IN P) \/ (~ (P x))) /\ ((~ (x IN P)) \/ (P x)))) = ((!x. ((x IN P) \/ (~ (P x)))) /\ (!x. ((~ (x IN P)) \/ (P x)))))
T c= ! c/\ c\/ cIN b0 f0 c~ * f0 b0 c\/ c~ cIN b0 f0 * f0 b0 c/\ ! c\/ cIN b0 f0 c~ * f0 b0 ! c\/ c~ cIN b0 f0 * f0 b0
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
+ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) |- (((!V. (!ul. ((((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ ((I ((I IN) ((I ((I cc_uh) V)) ul))) ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))) /\ ((((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ul)) = ul)) /\ (((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ (((I ((I omega_list) V)) ((I ((I cc_uh) V)) ul)) = ((I ((I cc_pe1) V)) ul))))))) ==> ((\V. (!ul. ((((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ ((I ((I IN) ((I ((I cc_uh) V)) ul))) ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))) /\ ((((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ul)) = ul)) /\ (((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ (((I ((I omega_list) V)) ((I ((I cc_uh) V)) ul)) = ((I ((I cc_pe1) V)) ul))))))) _7286646)) = ((\V. (!ul. ((((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ ((I ((I IN) ((I ((I cc_uh) V)) ul))) ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0)))))) /\ ((((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ (((I ((I truncate_simplex) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ul)) = ul)) /\ (((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ (~ ((I ((I leaf) V)) ul)))) \/ (((I ((I omega_list) V)) ((I ((I cc_uh) V)) ul)) = ((I ((I cc_pe1) V)) ul))))))) _7286646))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c= c==> ! ! c/\ c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 cI * * part cI part cIN cI * * part cI part ccc_uh b0 b1 * * part cI * * part cI part cbarV b0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c/\ c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh b0 b1 b1 c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 c= cI * * part cI part comega_list b0 cI * * part cI part ccc_uh b0 b1 cI * * part cI part ccc_pe1 b0 b1 * / ! c/\ c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 cI * * part cI part cIN cI * * part cI part ccc_uh b0 b1 * * part cI * * part cI part cbarV b0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c/\ c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh b0 b1 b1 c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 c= cI * * part cI part comega_list b0 cI * * part cI part ccc_uh b0 b1 cI * * part cI part ccc_pe1 b0 b1 f0 * / ! c/\ c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 cI * * part cI part cIN cI * * part cI part ccc_uh b0 b1 * * part cI * * part cI part cbarV b0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 c/\ c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 c= cI * * part cI part ctruncate_simplex cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh b0 b1 b1 c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c~ cI * * part cI part cleaf b0 b1 c= cI * * part cI part comega_list b0 cI * * part cI part ccc_uh b0 b1 cI * * part cI part ccc_pe1 b0 b1 f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL * f6 f4 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f6 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f6 c==> ccc_4 f3 f0 f1 f6 f4 c==> c= f4 f5 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL c==> c~ c/\ cpacking f3 c/\ csaturated f3 cleaf f3 cCONS f0 cCONS f1 cCONS * f6 f5 cNIL cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((?j. (i = j)) ==> ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f4 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> c? / c= f5 b0 c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
+ (i = j), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0) |- (((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))))))) = ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))
T c==> c= f0 f1 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL f3 c= c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * f5 f1 c==> c= f0 f1 c==> c= * * part cmcell4 f2 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> c~ cbarV f2 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
- |- (((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = ((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))
T c= c==> c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) |- ((~ (packing V)) \/ ((~ (saturated V)) \/ (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))))))
T c==> c~ c/\ cpacking f0 c/\ csaturated f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c\/ c~ cpacking f0 c\/ c~ csaturated f0 c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
+ (!P. (!x. ((x IN P) = (P x)))) |- ((!P. (!x. (((I ((I IN) x)) P) \/ (~ ((I P) x))))) /\ (!P. (!x. ((~ ((I ((I IN) x)) P)) \/ ((I P) x)))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c/\ ! ! c\/ cI * * part cI part cIN b1 b0 c~ cI b0 b1 ! ! c\/ c~ cI * * part cI part cIN b1 b0 cI b0 b1
- ((periodic f) n) |- ((I ((I periodic) f)) n)
T c==> cperiodic f0 f1 cI * * part cI part cperiodic f0 f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0) /\ ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1) /\ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c==> c/\ c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f0 c/\ c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL f1 c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f4 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= cgg_mcell f3 f4 f0 f1 f5 creal_add creal_mul cgammaX f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part clmfun ccritical_weight f3 * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cbeta_bump_v1 f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL
- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) |- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = T)
T c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cT
- |- ((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))
T c= c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))), (i = j), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0), (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)), (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u1), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= f6 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f0 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL * f4 f6 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL f1 c==> c< cNUMERAL cBIT1 c_0 f7 c==> cperiodic f4 f7 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f6 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f7 f4 c==> ccc_4 f3 f0 f1 f4 f6 c/\ c~ cnegligible * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (i = j), ((NUMERAL (BIT1 _0)) < n), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ ((packing V) /\ ((saturated V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) ==> F))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cperiodic f7 f6 c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f7 f4 cNIL c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f7 c==> ccc_4 f3 f0 f1 f7 f5 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL f0 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL f1 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL * f7 f5 c==> c= f4 f5 c==> c= * * part cmcell4 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL c==> c~ c/\ cpacking f3 c/\ csaturated f3 cleaf f3 cCONS f0 cCONS f1 cCONS * f7 f5 cNIL cF
- |- (((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t))
T c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1
+ (saturated V) |- ((I saturated) V)
T c==> csaturated f0 cI part csaturated f0
- (!P. (!x. ((x IN P) = (P x)))) |- (!P. (!x. (((I ((I IN) x)) P) \/ (~ ((I P) x)))))
T c==> ! ! c= cIN b1 b0 * b0 b1 ! ! c\/ cI * * part cI part cIN b1 b0 c~ cI b0 b1
- (_7287104 = _7287106), (_7287105 = _7287107) |- ((_7287105 = _7287107) /\ (((mcell4 _7287104) _7287105) = ((mcell4 _7287106) _7287107)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part cmcell4 f0 f2 * * part cmcell4 f1 f3
- (i = j) |- ((~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))))
T c==> c= f0 f1 c= c~ cleaf f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL c~ cleaf f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL
+ (i = j), (((((cc_4 V) u0) u1) f) i) |- (((((cc_4 V) u0) u1) f) j)
T c==> c= f0 f1 c==> ccc_4 f2 f3 f4 f5 f0 ccc_4 f2 f3 f4 f5 f1
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) |- ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul))))) ul)
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 c~ cnegligible * * part ccc_cell f0 b0 f1
+ |- ((\n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) n)
T * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 b1 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic b1 b0 c/\ c< cNUMERAL cBIT1 c_0 b0 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b1 b2 cNIL ccc_4 f0 f1 f2 b1 b2 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b1 b2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f4
- (~ F), (~ (saturated V)), (saturated V) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ csaturated f0 c==> csaturated f0 c/\ c~ cF cF
- |- (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))
T c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- (i = j) |- (((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n) = ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n))
T c==> c= f0 f1 c= cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f2 cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f2
+ (i = j), (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = u0) |- (((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0)
T c==> c= f0 f1 c==> c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f0 cNIL f3 c= cEL cNUMERAL c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f5 f1 cNIL f3
- (packing V) |- ((~ ((I packing) V)) ==> ((I packing) V))
T c==> cpacking f0 c==> c~ cI part cpacking f0 cI part cpacking f0
+ (packing V), (saturated V), ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i))), ((periodic f) n), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((((gg_mcell V) f) u0) u1) i) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 f5 f6 c==> cperiodic f5 f4 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c= cgg_mcell f0 f5 f1 f2 f6 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL
+ (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))) ==> F)
T c==> c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cF
+ |- (((!h. (!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))))))))) ==> ((\h. (!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))))))))) h)) = ((\h. (!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))))))))) h))
T c= c==> ! ! c/\ c= cEL cNUMERAL c_0 cCONS b0 b1 b0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 * / ! c/\ c= cEL cNUMERAL c_0 cCONS b0 b1 b0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 f0 * / ! c/\ c= cEL cNUMERAL c_0 cCONS b0 b1 b0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT1 c_0 b1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS b0 b1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b1 f0
- |- ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) ==> (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1
- (_7286704 = _7286706), (_7286705 = _7286707) |- ((_7286705 = _7286707) /\ (((I _7286706) _7286707) \/ (~ ((I _7286704) _7286705))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ |- ((\w0. ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F)))))))))))))))))) w0)
T * / c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL b0 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f6 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> ! ! c= cIN b2 b1 * b1 b2 c==> ! ! c==> c/\ cpacking b1 c/\ csaturated b1 cleaf b1 b2 c/\ cIN ccc_uh b1 b2 * * part cbarV b1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b1 b2 b2 c= comega_list b1 ccc_uh b1 b2 ccc_pe1 b1 b2 cF f7
+ (!P. (!x. ((x IN P) = (P x)))) |- (((!x. ((~ ((I ((I IN) x)) _7286650)) \/ ((I _7286650) x))) ==> ((\x. ((~ ((I ((I IN) x)) _7286650)) \/ ((I _7286650) x))) _7286651)) = ((\x. ((~ ((I ((I IN) x)) _7286650)) \/ ((I _7286650) x))) _7286651))
T c==> ! ! c= cIN b1 b0 * b0 b1 c= c==> ! c\/ c~ cI * * part cI part cIN b0 f0 cI f0 b0 * / c\/ c~ cI * * part cI part cIN b0 f0 cI f0 b0 f1 * / c\/ c~ cI * * part cI part cIN b0 f0 cI f0 b0 f1
+ (!P. (!x. ((x IN P) = (P x)))), (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((I ((I ((I barV) V)) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) ==> F) = F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= c==> cI * * part cI * * part cI part cbarV f0 cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL cF cF
- |- ((_7286709 = _7286711) ==> ((~ (_7286708 = _7286710)) \/ (((I _7286710) _7286711) \/ (~ ((I _7286708) _7286709)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) |- (((I ((I EL) ((I NUMERAL) ((I BIT0) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = ((I f) j))
T c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= cI * * part cI part cEL cI part cNUMERAL cI part cBIT0 cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL cI f3 f4
+ (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> (~ (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c= f5 f4 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c~ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))), ((packing V) /\ ((saturated V) /\ ((leaf V) ul))) |- (~ (negligible ((cc_cell V) ul)))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 c~ cnegligible * * part ccc_cell f0 f1
+ |- ((\ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))) ((CONS u0) ((CONS u1) NIL)))
T * / ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cNIL b1 b2 b3 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT b1 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b2 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS * b3 b4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cCONS * b3 b4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 * b3 b4 * b3 cSUC b4 cCONS f1 cCONS f2 cNIL
- (_7287134 = _7287136) |- ((_7287134 = _7287136) /\ ((~ (_7287135 = _7287137)) \/ (((I _7287134) _7287135) = ((I _7287136) _7287137))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- (_7287069 = _7287074), (_7287066 = _7287071), (_7287067 = _7287072), (_7287068 = _7287073) |- ((~ (_7287070 = _7287075)) \/ ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f3 f5 f7 f1 f9 c~ ccc_4 f2 f4 f6 f0 f8
- (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))))
T c==> c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
+ |- (((!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) ==> ((\u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) u0)) = ((\u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) u0))
T c= c==> ! ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS b0 cCONS b1 cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cperiodic b4 b3 c/\ c< cNUMERAL cBIT1 c_0 b3 c/\ cleaf f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL ccc_4 f0 b0 b1 b4 b5 c= ccc_ke f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS b0 cCONS b1 cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cperiodic b4 b3 c/\ c< cNUMERAL cBIT1 c_0 b3 c/\ cleaf f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL ccc_4 f0 b0 b1 b4 b5 c= ccc_ke f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 * / ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS b0 cCONS b1 cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cperiodic b4 b3 c/\ c< cNUMERAL cBIT1 c_0 b3 c/\ cleaf f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL ccc_4 f0 b0 b1 b4 b5 c= ccc_ke f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1
- (_7287080 = _7287081) |- ((((collinear _7287080) = (collinear _7287081)) ==> ((collinear _7287081) \/ (~ (collinear _7287080)))) = ((collinear _7287081) \/ (~ (collinear _7287080))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
+ |- ((\ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ul)) = ((EL (NUMERAL _0)) ul)) /\ ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ul)) = ((EL (NUMERAL (BIT1 _0))) ul)) /\ (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)))))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))
T * / c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 b0 c/\ c= cEL cNUMERAL c_0 ccc_uh f0 b0 cEL cNUMERAL c_0 b0 c/\ c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 b0 cEL cNUMERAL cBIT1 c_0 b0 c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 b0 cEL cNUMERAL cBIT0 cBIT1 c_0 b0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- |- ((~ (_7287134 = _7287136)) \/ ((~ (_7287135 = _7287137)) \/ (((I _7287134) _7287135) = ((I _7287136) _7287137))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- (_7287112 = _7287114), (_7287113 = _7287115) |- ((_7287113 = _7287115) /\ (((cc_uh _7287112) _7287113) = ((cc_uh _7287114) _7287115)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= ccc_uh f0 f2 ccc_uh f1 f3
- (_7287108 = _7287110), (_7287109 = _7287111) |- ((_7287109 = _7287111) /\ (((cc_cell _7287108) _7287109) = ((cc_cell _7287110) _7287111)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))), ((packing V) /\ ((saturated V) /\ ((leaf V) ul))) |- ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> (~ (negligible ((cc_cell V) ul)))))) /\ (~ (negligible ((cc_cell V) ul))))
T c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 c==> c/\ cpacking f0 c/\ csaturated f0 cleaf f0 f1 c/\ ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c~ cnegligible * * part ccc_cell b0 b1 c~ cnegligible * * part ccc_cell f0 f1
- (i = j) |- ((\j. (i = j)) j)
T c==> c= f0 f1 * / c= f0 b0 f1
- (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((_7287084 = _7287089) ==> ((~ (_7287082 = _7287087)) \/ ((~ (_7287086 = _7287091)) \/ ((~ (_7287083 = _7287088)) \/ ((~ (_7287085 = _7287090)) \/ ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086))))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
- (_7286709 = _7286711) |- ((_7286708 = _7286710) ==> (((I _7286710) _7286711) \/ (~ ((I _7286708) _7286709))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- |- ((!ul. (P ul)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (_7287134 = _7287136) |- ((_7287135 = _7287137) ==> (((I _7287134) _7287135) = ((I _7287136) _7287137)))
T c==> c= f0 f1 c==> c= f2 f3 c= cI f0 f2 cI f1 f3
- ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL)))))
T c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL
- (_7287124 = _7287125) |- ((_7287124 = _7287125) /\ ((BIT0 _7287124) = (BIT0 _7287125)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (i = j) |- (((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))) = ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))
T c==> c= f0 f1 c= cI * * part cI part cleaf f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL cI * * part cI part cleaf f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL
- (_7287130 = _7287132) |- ((_7287130 = _7287132) /\ ((~ (_7287131 = _7287133)) \/ ((_7287130 INSERT _7287131) = (_7287132 INSERT _7287133))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((_7287096 = _7287098) ==> ((~ (_7287097 = _7287099)) \/ (((periodic _7287098) _7287099) \/ (~ ((periodic _7287096) _7287097)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cperiodic f1 f3 c~ cperiodic f0 f2
- (_7287082 = _7287087), (_7287084 = _7287089) |- ((_7287086 = _7287091) ==> ((~ (_7287083 = _7287088)) \/ ((~ (_7287085 = _7287090)) \/ ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f1 f7 f3 f9 f5 c~ cleaf_rank f0 f6 f2 f8 f4
- (_7287086 = _7287091), (_7287082 = _7287087), (_7287083 = _7287088), (_7287084 = _7287089) |- ((_7287083 = _7287088) /\ ((~ (_7287085 = _7287090)) \/ ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f4 f5 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f5 f7 f9 f1 c~ cleaf_rank f2 f4 f6 f8 f0
- |- (((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) ==> (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) = q')) ==> (((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = ((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) ==> q')))
T c==> c==> c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f5 c= c==> c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f5
- (i = j) |- (((I saturated) V) = ((I saturated) V))
T c==> c= f0 f1 c= cI part csaturated f2 cI part csaturated f2
- (!P. (!x. ((x IN P) = (P x)))) |- (((!P. (!x. (((I ((I IN) x)) P) \/ (~ ((I P) x))))) ==> ((\P. (!x. (((I ((I IN) x)) P) \/ (~ ((I P) x))))) _7286648)) = ((\P. (!x. (((I ((I IN) x)) P) \/ (~ ((I P) x))))) _7286648))
T c==> ! ! c= cIN b1 b0 * b0 b1 c= c==> ! ! c\/ cI * * part cI part cIN b1 b0 c~ cI b0 b1 * / ! c\/ cI * * part cI part cIN b1 b0 c~ cI b0 b1 f0 * / ! c\/ cI * * part cI part cIN b1 b0 c~ cI b0 b1 f0
- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) |- (((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = F)) = ((negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = F))
T c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= c==> c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF c= cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cF
- (_7286820 = _7286822) |- ((_7286820 = _7286822) /\ ((~ (_7286821 = _7286823)) \/ (((I _7286820) _7286821) = ((I _7286822) _7286823))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- (!P. (!x. ((x IN P) = (P x)))), (!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))), (~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))), (packing V), (saturated V), ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) |- ((~ F) ==> F)
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> cpacking f0 c==> csaturated f0 c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c~ cF cF
- |- ((~ (_7287124 = _7287125)) \/ ((BIT0 _7287124) = (BIT0 _7287125)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((~ (_7287102 = _7287103)) \/ ((packing _7287103) \/ (~ (packing _7287102))))
T c\/ c~ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) |- (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) = ((((((gg_mcell V) f) u0) u1) j) = (((((gg_mcell V) f) u0) u1) j)))
T c==> c= cgg_mcell f0 f1 f2 f3 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c= c= cgg_mcell f0 f1 f2 f3 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part ccc_cell f0 cCONS f2 cCONS f3 cCONS * f1 f4 cNIL c= cgg_mcell f0 f1 f2 f3 f4 cgg_mcell f0 f1 f2 f3 f4
- |- ((!ul'. (((~ (packing V)) \/ ((~ (saturated V)) \/ (~ ((leaf V) ul)))) \/ ((((cc_uh V) ul') IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul')) = ul') /\ (((omega_list V) ((cc_uh V) ul')) = ((cc_pe1 V) ul')))))) = (((~ (packing V)) \/ ((~ (saturated V)) \/ (~ ((leaf V) ul)))) \/ (!ul. ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul)))))))
T c= ! c\/ c\/ c~ cpacking f0 c\/ c~ csaturated f0 c~ cleaf f0 f1 c/\ cIN ccc_uh f0 b0 * * part cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 b0 b0 c= comega_list f0 ccc_uh f0 b0 ccc_pe1 f0 b0 c\/ c\/ c~ cpacking f0 c\/ c~ csaturated f0 c~ cleaf f0 f1 ! c/\ cIN ccc_uh f0 b0 * * part cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 b0 b0 c= comega_list f0 ccc_uh f0 b0 ccc_pe1 f0 b0
- (_7287086 = _7287091), (_7287082 = _7287087), (_7287085 = _7287090), (_7287083 = _7287088), (_7287084 = _7287089) |- ((((((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086) = (((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091)) ==> ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086)))) = ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c= c==> c= cleaf_rank f2 f6 f8 f4 f0 cleaf_rank f3 f7 f9 f5 f1 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0
- (_7287086 = _7287091), (_7287082 = _7287087), (_7287083 = _7287088), (_7287084 = _7287089) |- ((_7287085 = _7287090) ==> ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ cleaf_rank f3 f5 f7 f9 f1 c~ cleaf_rank f2 f4 f6 f8 f0
- (_7287108 = _7287110) |- ((_7287109 = _7287111) ==> (((cc_cell _7287108) _7287109) = ((cc_cell _7287110) _7287111)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) |- (((I ((I EL) ((I NUMERAL) ((I BIT1) _0)))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = u1)
T c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c= cI * * part cI part cEL cI part cNUMERAL cI part cBIT1 c_0 cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL f2
- |- ((_7287138 = _7287140) ==> ((~ (_7287139 = _7287141)) \/ (((CONS _7287138) _7287139) = ((CONS _7287140) _7287141))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- (_7287082 = _7287087), (_7287084 = _7287089) |- ((~ (_7287086 = _7287091)) \/ ((~ (_7287083 = _7287088)) \/ ((~ (_7287085 = _7287090)) \/ ((((((leaf_rank _7287087) _7287088) _7287089) _7287090) _7287091) \/ (~ (((((leaf_rank _7287082) _7287083) _7287084) _7287085) _7287086))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f1 f7 f3 f9 f5 c~ cleaf_rank f0 f6 f2 f8 f4
- (i = j) |- ((((I ((I EL) ((I NUMERAL) ((I BIT1) _0)))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = u1) = (((I ((I EL) ((I NUMERAL) ((I BIT1) _0)))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = u1))
T c==> c= f0 f1 c= c= cI * * part cI part cEL cI part cNUMERAL cI part cBIT1 c_0 cI * * part cI part ccc_uh f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL f4 c= cI * * part cI part cEL cI part cNUMERAL cI part cBIT1 c_0 cI * * part cI part ccc_uh f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f5 f1 cNIL f4
- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))) = T)
T c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 cT
- (_7287116 = _7287118), (_7287117 = _7287119) |- ((_7287116 = _7287118) /\ (((EL _7287116) _7287117) = ((EL _7287118) _7287119)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cEL f0 f2 cEL f1 f3
- |- ((\p'. (!q'. (((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = p') ==> ((p' ==> (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) = q')) ==> (((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b0 c==> c==> b0 c= c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL b1 c= c==> c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> b0 b1 f5
- (saturated V) |- ((~ (saturated V)) ==> (saturated V))
T c==> csaturated f0 c==> c~ csaturated f0 csaturated f0
- (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) |- (((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = u1)
T c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f2 c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL f2
- |- (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) = ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))))
T c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- (_7287067 = _7287072) |- ((_7287068 = _7287073) ==> ((~ (_7287066 = _7287071)) \/ ((~ (_7287069 = _7287074)) \/ ((~ (_7287070 = _7287075)) \/ ((((((cc_4 _7287071) _7287072) _7287073) _7287074) _7287075) \/ (~ (((((cc_4 _7287066) _7287067) _7287068) _7287069) _7287070)))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
- (_7287092 = _7287094), (_7287093 = _7287095) |- ((_7287093 = _7287095) /\ (((leaf _7287094) _7287095) \/ (~ ((leaf _7287092) _7287093))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
- (_7287080 = _7287081) |- ((_7287080 = _7287081) /\ ((collinear _7287081) \/ (~ (collinear _7287080))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j))))
T c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4
- (!P. (!x. ((x IN P) = (P x)))) |- (((!x. (((I ((I IN) x)) _7286648) \/ (~ ((I _7286648) x)))) ==> ((\x. (((I ((I IN) x)) _7286648) \/ (~ ((I _7286648) x)))) _7286649)) = ((\x. (((I ((I IN) x)) _7286648) \/ (~ ((I _7286648) x)))) _7286649))
T c==> ! ! c= cIN b1 b0 * b0 b1 c= c==> ! c\/ cI * * part cI part cIN b0 f0 c~ cI f0 b0 * / c\/ cI * * part cI part cIN b0 f0 c~ cI f0 b0 f1 * / c\/ cI * * part cI part cIN b0 f0 c~ cI f0 b0 f1
- (i = j) |- (((I packing) V) = ((I packing) V))
T c==> c= f0 f1 c= cI part cpacking f2 cI part cpacking f2
- (_7287120 = _7287122) |- ((_7287121 = _7287123) ==> (((cc_ke _7287120) _7287121) = ((cc_ke _7287122) _7287123)))
T c==> c= f0 f1 c==> c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- |- ((((\j. (i = j)) j) ==> (?j. (i = j))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- ((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))), (((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) |- ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))
T c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c==> c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
- |- ((!x'. ((~ (x' IN P)) \/ (P x))) = ((!x. (~ (x IN P))) \/ (P x)))
T c= ! c\/ c~ cIN b0 f0 * f0 f1 c\/ ! c~ cIN b0 f0 * f0 f1
- |- ((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) = p') ==> ((p' ==> (((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) = q')) ==> ((((((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) /\ ((~ (negligible ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f j)) (f (SUC j)))))) ==> ((((((gg_mcell V) f) u0) u1) j) = ((real_add ((real_mul (((gammaX V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) lmfun)) ((critical_weight V) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))))) (((beta_bump_v1 V) (u0 INSERT (u1 INSERT EMPTY))) ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))))) = (p' ==> q'))))
T c==> c= c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 f5 c==> c==> f5 c= c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL f6 c= c==> c/\ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c/\ c~ cnegligible * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge f1 f2 * f3 f4 * f3 cSUC f4 c= cgg_mcell f0 f3 f1 f2 f4 creal_add creal_mul cgammaX f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part clmfun ccritical_weight f0 * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cbeta_bump_v1 f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> f5 f6
- (i = j) |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) = (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))))
T c==> c= f0 f1 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((_7287100 = _7287101) ==> ((saturated _7287101) \/ (~ (saturated _7287100))))
T c==> c= f0 f1 c\/ csaturated f1 c~ csaturated f0
- (_7287096 = _7287098) |- ((_7287096 = _7287098) /\ ((~ (_7287097 = _7287099)) \/ (((periodic _7287098) _7287099) \/ (~ ((periodic _7287096) _7287097)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cperiodic f1 f3 c~ cperiodic f0 f2
- (((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) |- (((I ((I mcell4) V)) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL))))) = ((I ((I cc_cell) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) j))) NIL)))))
T c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= * * part cI * * part cI part cmcell4 f0 cI * * part cI part ccc_uh f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL * * part cI * * part cI part ccc_cell f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL
- (packing V) |- ((~ (packing V)) ==> (packing V))
T c==> cpacking f0 c==> c~ cpacking f0 cpacking f0
- (i = j) |- (((periodic f) n) = ((periodic f) n))
T c==> c= f0 f1 c= cperiodic f2 f3 cperiodic f2 f3
- (_7287104 = _7287106) |- ((_7287105 = _7287107) ==> (((mcell4 _7287104) _7287105) = ((mcell4 _7287106) _7287107)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cmcell4 f0 f2 * * part cmcell4 f1 f3
- (i = j) |- ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = ((I f) j)) = (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS ((I f) j)) NIL))))) = ((I f) j)))
T c==> c= f0 f1 c= c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL cI f5 f1 c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS cI f5 f1 cNIL cI f5 f1
- (_7287102 = _7287103) |- ((((packing _7287102) = (packing _7287103)) ==> ((packing _7287103) \/ (~ (packing _7287102)))) = ((packing _7287103) \/ (~ (packing _7287102))))
T c==> c= f0 f1 c= c==> c= cpacking f0 cpacking f1 c\/ cpacking f1 c~ cpacking f0 c\/ cpacking f1 c~ cpacking f0
- |- (((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))))))))))) ==> ((packing V) ==> ((saturated V) ==> (((periodic f) n) ==> (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) j) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL _0)) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u0) ==> ((((EL (NUMERAL (BIT1 _0))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = u1) ==> ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = (f j)) ==> ((i = j) ==> ((((mcell4 V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) = ((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) ==> ((~ (((barV V) (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))))) ==> ((!P. (!x. ((x IN P) = (P x)))) ==> ((!V. (!ul. (((packing V) /\ ((saturated V) /\ ((leaf V) ul))) ==> ((((cc_uh V) ul) IN ((barV V) (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((truncate_simplex (NUMERAL (BIT0 (BIT1 _0)))) ((cc_uh V) ul)) = ul) /\ (((omega_list V) ((cc_uh V) ul)) = ((cc_pe1 V) ul))))))) ==> F))))))))))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF c==> cpacking f0 c==> csaturated f0 c==> cperiodic f1 f2 c==> cleaf f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f2 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f2 c==> ccc_4 f0 f3 f4 f1 f5 c==> c= ccc_ke f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f3 c==> c= cEL cNUMERAL cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL f4 c==> c= cEL cNUMERAL cBIT0 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * f1 f5 c==> c= f7 f5 c==> c= * * part cmcell4 f0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL * * part ccc_cell f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> c~ cbarV f0 cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f5 cNIL c==> ! ! c= cIN b1 b0 * b0 b1 c==> ! ! c==> c/\ cpacking b0 c/\ csaturated b0 cleaf b0 b1 c/\ cIN ccc_uh b0 b1 * * part cbarV b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= ctruncate_simplex cNUMERAL cBIT0 cBIT1 c_0 ccc_uh b0 b1 b1 c= comega_list b0 ccc_uh b0 b1 ccc_pe1 b0 b1 cF
- |- ((~ (_7287108 = _7287110)) \/ ((~ (_7287109 = _7287111)) \/ (((cc_cell _7287108) _7287109) = ((cc_cell _7287110) _7287111))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part ccc_cell f0 f2 * * part ccc_cell f1 f3
- |- ((~ (_7286813 = _7286815)) \/ ((~ (_7286812 = _7286814)) \/ (((I _7286812) _7286813) = ((I _7286814) _7286815))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
- (_7287092 = _7287094) |- ((_7287092 = _7287094) /\ ((~ (_7287093 = _7287095)) \/ (((leaf _7287094) _7287095) \/ (~ ((leaf _7287092) _7287093)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cleaf f1 f3 c~ cleaf f0 f2
