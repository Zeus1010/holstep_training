N CX_SQRT
C |- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((Cx (sqrt x)) = (csqrt (Cx x)))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= cCx csqrt f0 ccsqrt cCx f0
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D RE
A |- ((Re (complex (x , y))) = x)
T c= cRe ccomplex c, f0 f1 f0
D IM
A |- ((Im (complex (x , y))) = y)
T c= cIm ccomplex c, f0 f1 f1
D COMPLEX_EQ
A |- (!w. (!z. ((w = z) = (((Re w) = (Re z)) /\ ((Im w) = (Im z))))))
T c= c= f0 f1 c/\ c= cRe f0 cRe f1 c= cIm f0 cIm f1
D RE_CX
A |- (!x. ((Re (Cx x)) = x))
T c= cRe cCx f0 f0
D IM_CX
A |- (!x. ((Im (Cx x)) = (real_of_num (NUMERAL _0))))
T c= cIm cCx f0 creal_of_num cNUMERAL c_0
D csqrt
A |- (!z. ((csqrt z) = (((COND ((Im z) = (real_of_num (NUMERAL _0)))) (((COND ((real_le (real_of_num (NUMERAL _0))) (Re z))) (complex ((sqrt (Re z)) , (real_of_num (NUMERAL _0))))) (complex ((real_of_num (NUMERAL _0)) , (sqrt (real_neg (Re z))))))) (complex ((sqrt ((real_div ((real_add (vector_norm z)) (Re z))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) , ((real_mul ((real_div (Im z)) (real_abs (Im z)))) (sqrt ((real_div ((real_sub (vector_norm z)) (Re z))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c= ccsqrt f0 cCOND c= cIm f0 creal_of_num cNUMERAL c_0 cCOND creal_le creal_of_num cNUMERAL c_0 cRe f0 ccomplex c, csqrt cRe f0 creal_of_num cNUMERAL c_0 ccomplex c, creal_of_num cNUMERAL c_0 csqrt creal_neg cRe f0 ccomplex c, csqrt creal_div creal_add cvector_norm f0 cRe f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div cIm f0 creal_abs cIm f0 csqrt creal_div creal_sub cvector_norm f0 cRe f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\e'. ((((real_le (real_of_num (NUMERAL _0))) (Re (Cx x))) = g') ==> ((g' ==> ((complex ((sqrt (Re (Cx x))) , (real_of_num (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((complex ((real_of_num (NUMERAL _0)) , (sqrt (real_neg (Re (Cx x)))))) = e')) ==> ((((COND ((real_le (real_of_num (NUMERAL _0))) (Re (Cx x)))) (complex ((sqrt (Re (Cx x))) , (real_of_num (NUMERAL _0))))) (complex ((real_of_num (NUMERAL _0)) , (sqrt (real_neg (Re (Cx x))))))) = (((COND g') t') e')))))) e')
T * / c==> c= creal_le creal_of_num cNUMERAL c_0 cRe cCx f0 f1 c==> c==> f1 c= ccomplex c, csqrt cRe cCx f0 creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= ccomplex c, creal_of_num cNUMERAL c_0 csqrt creal_neg cRe cCx f0 b0 c= cCOND creal_le creal_of_num cNUMERAL c_0 cRe cCx f0 ccomplex c, csqrt cRe cCx f0 creal_of_num cNUMERAL c_0 ccomplex c, creal_of_num cNUMERAL c_0 csqrt creal_neg cRe cCx f0 cCOND f1 f2 b0 f3
+ ((real_le (real_of_num (NUMERAL _0))) x) |- ((((COND ((real_le (real_of_num (NUMERAL _0))) (Re (Cx x)))) (complex ((sqrt (Re (Cx x))) , (real_of_num (NUMERAL _0))))) (complex ((real_of_num (NUMERAL _0)) , (sqrt (real_neg (Re (Cx x))))))) = (((COND T) (complex ((sqrt x) , (real_of_num (NUMERAL _0))))) (complex ((real_of_num (NUMERAL _0)) , (sqrt (real_neg x))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= cCOND creal_le creal_of_num cNUMERAL c_0 cRe cCx f0 ccomplex c, csqrt cRe cCx f0 creal_of_num cNUMERAL c_0 ccomplex c, creal_of_num cNUMERAL c_0 csqrt creal_neg cRe cCx f0 cCOND cT ccomplex c, csqrt f0 creal_of_num cNUMERAL c_0 ccomplex c, creal_of_num cNUMERAL c_0 csqrt creal_neg f0
+ |- (((((Im (Cx x)) = (real_of_num (NUMERAL _0))) = T) ==> ((T ==> ((((COND ((real_le (real_of_num (NUMERAL _0))) (Re (Cx x)))) (complex ((sqrt (Re (Cx x))) , (real_of_num (NUMERAL _0))))) (complex ((real_of_num (NUMERAL _0)) , (sqrt (real_neg (Re (Cx x))))))) = t')) ==> (((~ T) ==> ((complex ((sqrt ((real_div ((real_add (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) , ((real_mul ((real_div (Im (Cx x))) (real_abs (Im (Cx x))))) (sqrt ((real_div ((real_sub (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = e')) ==> ((((COND ((Im (Cx x)) = (real_of_num (NUMERAL _0)))) (((COND ((real_le (real_of_num (NUMERAL _0))) (Re (Cx x)))) (complex ((sqrt (Re (Cx x))) , (real_of_num (NUMERAL _0))))) (complex ((real_of_num (NUMERAL _0)) , (sqrt (real_neg (Re (Cx x)))))))) (complex ((sqrt ((real_div ((real_add (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) , ((real_mul ((real_div (Im (Cx x))) (real_abs (Im (Cx x))))) (sqrt ((real_div ((real_sub (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) = (((COND T) t') e'))))) = ((T ==> ((((COND ((real_le (real_of_num (NUMERAL _0))) (Re (Cx x)))) (complex ((sqrt (Re (Cx x))) , (real_of_num (NUMERAL _0))))) (complex ((real_of_num (NUMERAL _0)) , (sqrt (real_neg (Re (Cx x))))))) = t')) ==> (((~ T) ==> ((complex ((sqrt ((real_div ((real_add (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) , ((real_mul ((real_div (Im (Cx x))) (real_abs (Im (Cx x))))) (sqrt ((real_div ((real_sub (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = e')) ==> ((((COND ((Im (Cx x)) = (real_of_num (NUMERAL _0)))) (((COND ((real_le (real_of_num (NUMERAL _0))) (Re (Cx x)))) (complex ((sqrt (Re (Cx x))) , (real_of_num (NUMERAL _0))))) (complex ((real_of_num (NUMERAL _0)) , (sqrt (real_neg (Re (Cx x)))))))) (complex ((sqrt ((real_div ((real_add (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) , ((real_mul ((real_div (Im (Cx x))) (real_abs (Im (Cx x))))) (sqrt ((real_div ((real_sub (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) = (((COND T) t') e')))))
T c= c==> c= c= cIm cCx f0 creal_of_num cNUMERAL c_0 cT c==> c==> cT c= cCOND creal_le creal_of_num cNUMERAL c_0 cRe cCx f0 ccomplex c, csqrt cRe cCx f0 creal_of_num cNUMERAL c_0 ccomplex c, creal_of_num cNUMERAL c_0 csqrt creal_neg cRe cCx f0 f1 c==> c==> c~ cT c= ccomplex c, csqrt creal_div creal_add cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div cIm cCx f0 creal_abs cIm cCx f0 csqrt creal_div creal_sub cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 c= cCOND c= cIm cCx f0 creal_of_num cNUMERAL c_0 cCOND creal_le creal_of_num cNUMERAL c_0 cRe cCx f0 ccomplex c, csqrt cRe cCx f0 creal_of_num cNUMERAL c_0 ccomplex c, creal_of_num cNUMERAL c_0 csqrt creal_neg cRe cCx f0 ccomplex c, csqrt creal_div creal_add cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div cIm cCx f0 creal_abs cIm cCx f0 csqrt creal_div creal_sub cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCOND cT f1 f2 c==> c==> cT c= cCOND creal_le creal_of_num cNUMERAL c_0 cRe cCx f0 ccomplex c, csqrt cRe cCx f0 creal_of_num cNUMERAL c_0 ccomplex c, creal_of_num cNUMERAL c_0 csqrt creal_neg cRe cCx f0 f1 c==> c==> c~ cT c= ccomplex c, csqrt creal_div creal_add cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div cIm cCx f0 creal_abs cIm cCx f0 csqrt creal_div creal_sub cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 c= cCOND c= cIm cCx f0 creal_of_num cNUMERAL c_0 cCOND creal_le creal_of_num cNUMERAL c_0 cRe cCx f0 ccomplex c, csqrt cRe cCx f0 creal_of_num cNUMERAL c_0 ccomplex c, creal_of_num cNUMERAL c_0 csqrt creal_neg cRe cCx f0 ccomplex c, csqrt creal_div creal_add cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div cIm cCx f0 creal_abs cIm cCx f0 csqrt creal_div creal_sub cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCOND cT f1 f2
+ |- ((\z. ((w = z) = (((Re w) = (Re z)) /\ ((Im w) = (Im z))))) z)
T * / c= c= f0 b0 c/\ c= cRe f0 cRe b0 c= cIm f0 cIm b0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((real_le (real_of_num (NUMERAL _0))) x) |- (((T ==> ((((COND ((real_le (real_of_num (NUMERAL _0))) (Re (Cx x)))) (complex ((sqrt (Re (Cx x))) , (real_of_num (NUMERAL _0))))) (complex ((real_of_num (NUMERAL _0)) , (sqrt (real_neg (Re (Cx x))))))) = (complex ((sqrt x) , (real_of_num (NUMERAL _0)))))) ==> (((~ T) ==> ((complex ((sqrt ((real_div ((real_add (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) , ((real_mul ((real_div (Im (Cx x))) (real_abs (Im (Cx x))))) (sqrt ((real_div ((real_sub (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = e')) ==> ((((COND ((Im (Cx x)) = (real_of_num (NUMERAL _0)))) (((COND ((real_le (real_of_num (NUMERAL _0))) (Re (Cx x)))) (complex ((sqrt (Re (Cx x))) , (real_of_num (NUMERAL _0))))) (complex ((real_of_num (NUMERAL _0)) , (sqrt (real_neg (Re (Cx x)))))))) (complex ((sqrt ((real_div ((real_add (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) , ((real_mul ((real_div (Im (Cx x))) (real_abs (Im (Cx x))))) (sqrt ((real_div ((real_sub (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) = (((COND T) (complex ((sqrt x) , (real_of_num (NUMERAL _0))))) e')))) = (((~ T) ==> ((complex ((sqrt ((real_div ((real_add (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) , ((real_mul ((real_div (Im (Cx x))) (real_abs (Im (Cx x))))) (sqrt ((real_div ((real_sub (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = e')) ==> ((((COND ((Im (Cx x)) = (real_of_num (NUMERAL _0)))) (((COND ((real_le (real_of_num (NUMERAL _0))) (Re (Cx x)))) (complex ((sqrt (Re (Cx x))) , (real_of_num (NUMERAL _0))))) (complex ((real_of_num (NUMERAL _0)) , (sqrt (real_neg (Re (Cx x)))))))) (complex ((sqrt ((real_div ((real_add (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) , ((real_mul ((real_div (Im (Cx x))) (real_abs (Im (Cx x))))) (sqrt ((real_div ((real_sub (vector_norm (Cx x))) (Re (Cx x)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) = (((COND T) (complex ((sqrt x) , (real_of_num (NUMERAL _0))))) e'))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= c==> c==> cT c= cCOND creal_le creal_of_num cNUMERAL c_0 cRe cCx f0 ccomplex c, csqrt cRe cCx f0 creal_of_num cNUMERAL c_0 ccomplex c, creal_of_num cNUMERAL c_0 csqrt creal_neg cRe cCx f0 ccomplex c, csqrt f0 creal_of_num cNUMERAL c_0 c==> c==> c~ cT c= ccomplex c, csqrt creal_div creal_add cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div cIm cCx f0 creal_abs cIm cCx f0 csqrt creal_div creal_sub cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c= cCOND c= cIm cCx f0 creal_of_num cNUMERAL c_0 cCOND creal_le creal_of_num cNUMERAL c_0 cRe cCx f0 ccomplex c, csqrt cRe cCx f0 creal_of_num cNUMERAL c_0 ccomplex c, creal_of_num cNUMERAL c_0 csqrt creal_neg cRe cCx f0 ccomplex c, csqrt creal_div creal_add cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div cIm cCx f0 creal_abs cIm cCx f0 csqrt creal_div creal_sub cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCOND cT ccomplex c, csqrt f0 creal_of_num cNUMERAL c_0 f1 c==> c==> c~ cT c= ccomplex c, csqrt creal_div creal_add cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div cIm cCx f0 creal_abs cIm cCx f0 csqrt creal_div creal_sub cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c= cCOND c= cIm cCx f0 creal_of_num cNUMERAL c_0 cCOND creal_le creal_of_num cNUMERAL c_0 cRe cCx f0 ccomplex c, csqrt cRe cCx f0 creal_of_num cNUMERAL c_0 ccomplex c, creal_of_num cNUMERAL c_0 csqrt creal_neg cRe cCx f0 ccomplex c, csqrt creal_div creal_add cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_div cIm cCx f0 creal_abs cIm cCx f0 csqrt creal_div creal_sub cvector_norm cCx f0 cRe cCx f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCOND cT ccomplex c, csqrt f0 creal_of_num cNUMERAL c_0 f1
- T |- (T = T)
T c==> cT c= cT cT
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (~ T) |- (T = F)
T c==> c~ cT c= cT cF
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
