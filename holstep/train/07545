N Oxlzlez.CARD_INSERT_INTER_ALT
C |- (!a. (!A. (!B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B))))))))
T c==> cFINITE f0 c= cCARD * * part cINTER * * part cINSERT f1 f2 f0 c+ cCOND c/\ cIN f1 f0 c~ cIN f1 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D Ssrnat.mul0n
A |- (!n. (((NUMERAL _0) * n) = (NUMERAL _0)))
T c= c* cNUMERAL c_0 f0 cNUMERAL c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D Ssrnat.mul1n
A |- (!n. (((NUMERAL (BIT1 _0)) * n) = n))
T c= c* cNUMERAL cBIT1 c_0 f0 f0
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Oxlzlez.CARD_INSERT_INTER
A |- (!a. (!A. (!B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))))))))
T c==> cFINITE f0 c= cCARD * * part cINTER * * part cINSERT f1 f2 f0 cCOND c/\ cIN f1 f0 c~ cIN f1 f2 cSUC cCARD * * part cINTER f2 f0 cCARD * * part cINTER f2 f0
- (FINITE B) |- ((FINITE B) = T)
T c==> cFINITE f0 c= cFINITE f0 cT
+ |- ((((int_add (int_of_num x)) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (int_of_num x)) (int_of_num (NUMERAL (BIT1 _0))))) = (((NUMERAL (BIT1 _0)) + x) = (SUC x)))
T c= c= cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c= c+ cNUMERAL cBIT1 c_0 f0 cSUC f0
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
- |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202044)) /\ (((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044)) \/ ((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044)))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202044)) /\ (((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044)) \/ ((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044)))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202044)) /\ (((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044)) \/ ((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
- |- (((!g'. (!t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((NUMERAL (BIT1 _0)) = t')) ==> (((~ g') ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((NUMERAL (BIT1 _0)) = t')) ==> (((~ g') ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((NUMERAL (BIT1 _0)) = t')) ==> (((~ g') ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 b0 c==> c==> b0 c= cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cNUMERAL c_0 b2 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 b0 c==> c==> b0 c= cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cNUMERAL c_0 b2 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND b0 b1 b2 f3 * / ! ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 b0 c==> c==> b0 c= cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cNUMERAL c_0 b2 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND b0 b1 b2 f3
- |- (((!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ g') ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND g') t') e')))))) ==> ((\e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ g') ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND g') t') e')))))) e')) = ((\e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ g') ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 f3 c==> c==> f3 c= cSUC cCARD * * part cINTER f2 f1 f4 c==> c==> c~ f3 c= cCARD * * part cINTER f2 f1 b0 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND f3 f4 b0 * / c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 f3 c==> c==> f3 c= cSUC cCARD * * part cINTER f2 f1 f4 c==> c==> c~ f3 c= cCARD * * part cINTER f2 f1 b0 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND f3 f4 b0 f5 * / c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 f3 c==> c==> f3 c= cSUC cCARD * * part cINTER f2 f1 f4 c==> c==> c~ f3 c= cCARD * * part cINTER f2 f1 b0 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND f3 f4 b0 f5
- |- (((!g'. (!t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ g') ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ g') ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ g') ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 b0 c==> c==> b0 c= cSUC cCARD * * part cINTER f2 f1 b1 c==> c==> c~ b0 c= cCARD * * part cINTER f2 f1 b2 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND b0 b1 b2 * / ! ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 b0 c==> c==> b0 c= cSUC cCARD * * part cINTER f2 f1 b1 c==> c==> c~ b0 c= cCARD * * part cINTER f2 f1 b2 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND b0 b1 b2 f3 * / ! ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 b0 c==> c==> b0 c= cSUC cCARD * * part cINTER f2 f1 b1 c==> c==> c~ b0 c= cCARD * * part cINTER f2 f1 b2 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND b0 b1 b2 f3
+ |- ((((a IN B) /\ (~ (a IN A))) ==> ((SUC (CARD (A INTER B))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B))))) /\ ((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B))))))
T c/\ c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cSUC cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1 c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
- |- (((!t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ g') ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ g') ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ g') ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 f3 c==> c==> f3 c= cSUC cCARD * * part cINTER f2 f1 b0 c==> c==> c~ f3 c= cCARD * * part cINTER f2 f1 b1 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND f3 b0 b1 * / ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 f3 c==> c==> f3 c= cSUC cCARD * * part cINTER f2 f1 b0 c==> c==> c~ f3 c= cCARD * * part cINTER f2 f1 b1 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND f3 b0 b1 f4 * / ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 f3 c==> c==> f3 c= cSUC cCARD * * part cINTER f2 f1 b0 c==> c==> c~ f3 c= cCARD * * part cINTER f2 f1 b1 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND f3 b0 b1 f4
- |- (((~ ((a IN B) /\ (~ (a IN A)))) ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) e')))
T c==> c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cNUMERAL c_0 f3 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 f3
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202046)) /\ (((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _7202046) ==> (((int_add _7202046) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add _7202046) (int_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c= cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((a IN B) /\ (~ (a IN A)))) |- (((a IN B) /\ (~ (a IN A))) = F)
T c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= c/\ cIN f0 f1 c~ cIN f0 f2 cF
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((a IN B) /\ (~ (a IN A))) |- (((a IN B) /\ (~ (a IN A))) /\ ((SUC (CARD (A INTER B))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))
T c==> c/\ cIN f0 f1 c~ cIN f0 f2 c/\ c/\ cIN f0 f1 c~ cIN f0 f2 c= cSUC cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1
+ |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- ((a IN B) /\ (~ (a IN A))) |- (((a IN B) /\ (~ (a IN A))) /\ ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 _0))))
T c==> c/\ cIN f0 f1 c~ cIN f0 f2 c/\ c/\ cIN f0 f1 c~ cIN f0 f2 c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((!A. (!B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B))))))) = T)
T c= ! ! c==> cFINITE b1 c= cCARD * * part cINTER * * part cINSERT f0 b0 b1 c+ cCOND c/\ cIN f0 b1 c~ cIN f0 b0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER b0 b1 cT
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((int_le (int_of_num (NUMERAL _0))) _7202044) ==> (_7202044 = _7202044))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c= f0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ |- ((CARD (A INTER B)) = ((((COND F) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B))))
T c= cCARD * * part cINTER f0 f1 c+ cCOND cF cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f0 f1
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)))
T c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0
- |- ((\e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ g') ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND g') t') e')))))) e')
T * / c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 f3 c==> c==> f3 c= cSUC cCARD * * part cINTER f2 f1 f4 c==> c==> c~ f3 c= cCARD * * part cINTER f2 f1 b0 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND f3 f4 b0 f5
- |- (((a IN B) /\ (~ (a IN A))) ==> ((SUC (CARD (A INTER B))) = (SUC (CARD (A INTER B)))))
T c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cSUC cCARD * * part cINTER f2 f1 cSUC cCARD * * part cINTER f2 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ g') ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND g') t') e')))))
T c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 f3 c==> c==> f3 c= cSUC cCARD * * part cINTER f2 f1 f4 c==> c==> c~ f3 c= cCARD * * part cINTER f2 f1 f5 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND f3 f4 f5
+ |- ((\B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B)))))) B)
T * / c==> cFINITE b0 c= cCARD * * part cINTER * * part cINSERT f0 f1 b0 cCOND c/\ cIN f0 b0 c~ cIN f0 f1 cSUC cCARD * * part cINTER f1 b0 cCARD * * part cINTER f1 b0 f2
+ |- (((NUMERAL (BIT1 _0)) + x) = (SUC x))
T c= c+ cNUMERAL cBIT1 c_0 f0 cSUC f0
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202046)) /\ (((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202046)) /\ (((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202046)) /\ (((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\a. (!A. (!B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B)))))))) a)
T * / ! ! c==> cFINITE b2 c= cCARD * * part cINTER * * part cINSERT b0 b1 b2 cCOND c/\ cIN b0 b2 c~ cIN b0 b1 cSUC cCARD * * part cINTER b1 b2 cCARD * * part cINTER b1 b2 f0
- |- (((((a IN B) /\ (~ (a IN A))) = ((a IN B) /\ (~ (a IN A)))) ==> ((((a IN B) /\ (~ (a IN A))) ==> ((NUMERAL (BIT1 _0)) = t')) ==> (((~ ((a IN B) /\ (~ (a IN A)))) ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND ((a IN B) /\ (~ (a IN A)))) t') e'))))) = ((((a IN B) /\ (~ (a IN A))) ==> ((NUMERAL (BIT1 _0)) = t')) ==> (((~ ((a IN B) /\ (~ (a IN A)))) ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND ((a IN B) /\ (~ (a IN A)))) t') e')))))
T c= c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 c/\ cIN f0 f1 c~ cIN f0 f2 c==> c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cNUMERAL c_0 f4 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 f3 f4 c==> c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cNUMERAL c_0 f4 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 f3 f4
+ (~ ((a IN B) /\ (~ (a IN A)))) |- (((CARD (A INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))) = ((CARD (A INTER B)) = ((((COND F) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))
T c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= c= cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1 c= cCARD * * part cINTER f2 f1 c+ cCOND cF cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1
- |- (((((a IN B) /\ (~ (a IN A))) ==> ((SUC (CARD (A INTER B))) = (SUC (CARD (A INTER B))))) ==> (((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) e')))) = (((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) e'))))
T c= c==> c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cSUC cCARD * * part cINTER f2 f1 cSUC cCARD * * part cINTER f2 f1 c==> c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 f3 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 f3 c==> c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 f3 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 f3
+ |- ((SUC (CARD (A INTER B))) = ((((COND T) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B))))
T c= cSUC cCARD * * part cINTER f0 f1 c+ cCOND cT cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((a IN B) /\ (~ (a IN A))) ==> ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 _0)))) ==> (((~ ((a IN B) /\ (~ (a IN A)))) ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) e')))) = (((~ ((a IN B) /\ (~ (a IN A)))) ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) e'))))
T c= c==> c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c==> c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cNUMERAL c_0 f3 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cNUMERAL c_0 f3 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 f3
- |- (((!t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((NUMERAL (BIT1 _0)) = t')) ==> (((~ g') ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((NUMERAL (BIT1 _0)) = t')) ==> (((~ g') ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((NUMERAL (BIT1 _0)) = t')) ==> (((~ g') ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 f3 c==> c==> f3 c= cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f3 c= cNUMERAL c_0 b1 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND f3 b0 b1 * / ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 f3 c==> c==> f3 c= cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f3 c= cNUMERAL c_0 b1 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND f3 b0 b1 f4 * / ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 f3 c==> c==> f3 c= cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f3 c= cNUMERAL c_0 b1 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND f3 b0 b1 f4
- |- ((\g'. (!t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((NUMERAL (BIT1 _0)) = t')) ==> (((~ g') ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 b0 c==> c==> b0 c= cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cNUMERAL c_0 b2 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND b0 b1 b2 f3
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((\g'. (!t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ g') ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 b0 c==> c==> b0 c= cSUC cCARD * * part cINTER f2 f1 b1 c==> c==> c~ b0 c= cCARD * * part cINTER f2 f1 b2 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND b0 b1 b2 f3
- |- ((((~ ((a IN B) /\ (~ (a IN A)))) ==> ((NUMERAL _0) = (NUMERAL _0))) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0))))
T c= c==> c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cNUMERAL c_0 cNUMERAL c_0 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0
- |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _7202044) ==> (_7202044 = _7202044))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c= f0 f0
- |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202044)) /\ (((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044)) \/ ((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044)))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202044)) /\ (((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044)) \/ ((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044)))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
- |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202044)) /\ (((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044)) \/ ((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044)))) = (~ (((int_le (int_of_num (NUMERAL _0))) _7202044) ==> (_7202044 = _7202044))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c= f0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) e')))
T c==> c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 f3 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 f3
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((NUMERAL (BIT1 _0)) = t')) ==> (((~ g') ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND g') t') e')))))
T c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 f3 c==> c==> f3 c= cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f3 c= cNUMERAL c_0 f5 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND f3 f4 f5
- ((a IN B) /\ (~ (a IN A))) |- (((a IN B) /\ (~ (a IN A))) /\ ((SUC (CARD (A INTER B))) = (SUC (CARD (A INTER B)))))
T c==> c/\ cIN f0 f1 c~ cIN f0 f2 c/\ c/\ cIN f0 f1 c~ cIN f0 f2 c= cSUC cCARD * * part cINTER f2 f1 cSUC cCARD * * part cINTER f2 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((int_le (int_of_num (NUMERAL _0))) _7202046) ==> (((int_add _7202046) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add _7202046) (int_of_num (NUMERAL (BIT1 _0))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c= cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (T = ((SUC (CARD (A INTER B))) = ((((COND T) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))
T c= cT c= cSUC cCARD * * part cINTER f0 f1 c+ cCOND cT cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f0 f1
+ (~ ((a IN B) /\ (~ (a IN A)))) |- (((CARD (A INTER B)) = ((((COND F) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))) = ((CARD (A INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))
T c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= c= cCARD * * part cINTER f2 f1 c+ cCOND cF cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1 c= cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ ((a IN B) /\ (~ (a IN A))) |- (((a IN B) /\ (~ (a IN A))) = T)
T c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= c/\ cIN f0 f1 c~ cIN f0 f2 cT
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) x)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
- |- ((\t'. (!e'. ((((a IN B) /\ (~ (a IN A))) = g') ==> ((g' ==> ((NUMERAL (BIT1 _0)) = t')) ==> (((~ g') ==> ((NUMERAL _0) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 f3 c==> c==> f3 c= cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f3 c= cNUMERAL c_0 b1 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCOND f3 b0 b1 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((a IN B) /\ (~ (a IN A))) ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND ((a IN B) /\ (~ (a IN A)))) t') e'))))
T c==> c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cSUC cCARD * * part cINTER f2 f1 f3 c==> c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 f4 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 f3 f4
+ (FINITE B) |- (((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))) = ((CARD ((a INSERT A) INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))
T c==> cFINITE f0 c= c= cCOND c/\ cIN f1 f0 c~ cIN f1 f2 cSUC cCARD * * part cINTER f2 f0 cCARD * * part cINTER f2 f0 c+ cCOND c/\ cIN f1 f0 c~ cIN f1 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f0 c= cCARD * * part cINTER * * part cINSERT f1 f2 f0 c+ cCOND c/\ cIN f1 f0 c~ cIN f1 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f0
- |- ((((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = (CARD (A INTER B)))) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B)))))
T c= c==> c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1
+ |- (((int_add (int_of_num x)) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (int_of_num x)) (int_of_num (NUMERAL (BIT1 _0)))))
T c= cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) x)) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) x))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = (CARD (A INTER B))))
T c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1
- |- (((((a IN B) /\ (~ (a IN A))) = ((a IN B) /\ (~ (a IN A)))) ==> ((((a IN B) /\ (~ (a IN A))) ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND ((a IN B) /\ (~ (a IN A)))) t') e'))))) = ((((a IN B) /\ (~ (a IN A))) ==> ((SUC (CARD (A INTER B))) = t')) ==> (((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = e')) ==> ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = (((COND ((a IN B) /\ (~ (a IN A)))) t') e')))))
T c= c==> c= c/\ cIN f0 f1 c~ cIN f0 f2 c/\ cIN f0 f1 c~ cIN f0 f2 c==> c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cSUC cCARD * * part cINTER f2 f1 f3 c==> c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 f4 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 f3 f4 c==> c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cSUC cCARD * * part cINTER f2 f1 f3 c==> c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 f4 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 cCOND c/\ cIN f0 f1 c~ cIN f0 f2 f3 f4
+ (FINITE B) |- ((FINITE B) /\ ((CARD ((a INSERT A) INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))
T c==> cFINITE f0 c/\ cFINITE f0 c= cCARD * * part cINTER * * part cINSERT f1 f2 f0 c+ cCOND c/\ cIN f1 f0 c~ cIN f1 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f0
+ |- ((!B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))) = T)
T c= ! c==> cFINITE b0 c= cCARD * * part cINTER * * part cINSERT f0 f1 b0 c+ cCOND c/\ cIN f0 b0 c~ cIN f0 f1 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f1 b0 cT
+ |- (((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))
T c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((a IN B) /\ (~ (a IN A))) |- ((a IN A) = F)
T c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cIN f0 f2 cF
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _7202046) ==> (((int_add _7202046) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add _7202046) (int_of_num (NUMERAL (BIT1 _0))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c= cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((a IN B) /\ (~ (a IN A))) ==> ((SUC (CARD (A INTER B))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))
T c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cSUC cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1
+ ((a IN B) /\ (~ (a IN A))) |- (((SUC (CARD (A INTER B))) = ((((COND T) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))) = ((SUC (CARD (A INTER B))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))
T c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= c= cSUC cCARD * * part cINTER f2 f1 c+ cCOND cT cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1 c= cSUC cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1
- |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202044)) /\ (((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044)) \/ ((real_le ((real_add (real_of_int _7202044)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7202044)))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ ((a IN B) /\ (~ (a IN A))) |- (((SUC (CARD (A INTER B))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))) = ((SUC (CARD (A INTER B))) = ((((COND T) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))
T c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= c= cSUC cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1 c= cSUC cCARD * * part cINTER f2 f1 c+ cCOND cT cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1
+ |- ((\A. (!B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))))))) A)
T * / ! c==> cFINITE b1 c= cCARD * * part cINTER * * part cINSERT f0 b0 b1 cCOND c/\ cIN f0 b1 c~ cIN f0 b0 cSUC cCARD * * part cINTER b0 b1 cCARD * * part cINTER b0 b1 f1
- (FINITE B) |- (T = (FINITE B))
T c==> cFINITE f0 c= cT cFINITE f0
+ |- (((!B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B)))))) ==> ((\B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B)))))) B)) = ((\B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B)))))) B))
T c= c==> ! c==> cFINITE b0 c= cCARD * * part cINTER * * part cINSERT f0 f1 b0 cCOND c/\ cIN f0 b0 c~ cIN f0 f1 cSUC cCARD * * part cINTER f1 b0 cCARD * * part cINTER f1 b0 * / c==> cFINITE b0 c= cCARD * * part cINTER * * part cINSERT f0 f1 b0 cCOND c/\ cIN f0 b0 c~ cIN f0 f1 cSUC cCARD * * part cINTER f1 b0 cCARD * * part cINTER f1 b0 f2 * / c==> cFINITE b0 c= cCARD * * part cINTER * * part cINSERT f0 f1 b0 cCOND c/\ cIN f0 b0 c~ cIN f0 f1 cSUC cCARD * * part cINTER f1 b0 cCARD * * part cINTER f1 b0 f2
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202046)) /\ (((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))))))) |- (((real_ge (real_of_int _7202046)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ |- (((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B))))) = ((((a IN B) /\ (~ (a IN A))) ==> ((SUC (CARD (A INTER B))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B))))) /\ ((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))))
T c= c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1 c/\ c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cSUC cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1 c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1
+ |- (((real_le (real_of_num m)) (real_neg (real_of_num n))) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))
T c= creal_le creal_of_num f0 creal_neg creal_of_num f1 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
+ |- (((!A. (!B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))))))) ==> ((\A. (!B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))))))) A)) = ((\A. (!B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))))))) A))
T c= c==> ! ! c==> cFINITE b1 c= cCARD * * part cINTER * * part cINSERT f0 b0 b1 cCOND c/\ cIN f0 b1 c~ cIN f0 b0 cSUC cCARD * * part cINTER b0 b1 cCARD * * part cINTER b0 b1 * / ! c==> cFINITE b1 c= cCARD * * part cINTER * * part cINSERT f0 b0 b1 cCOND c/\ cIN f0 b1 c~ cIN f0 b0 cSUC cCARD * * part cINTER b0 b1 cCARD * * part cINTER b0 b1 f1 * / ! c==> cFINITE b1 c= cCARD * * part cINTER * * part cINSERT f0 b0 b1 cCOND c/\ cIN f0 b1 c~ cIN f0 b0 cSUC cCARD * * part cINTER b0 b1 cCARD * * part cINTER b0 b1 f1
+ |- (((!a. (!A. (!B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B)))))))) ==> ((\a. (!A. (!B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B)))))))) a)) = ((\a. (!A. (!B. ((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = (((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B)))))))) a))
T c= c==> ! ! ! c==> cFINITE b2 c= cCARD * * part cINTER * * part cINSERT b0 b1 b2 cCOND c/\ cIN b0 b2 c~ cIN b0 b1 cSUC cCARD * * part cINTER b1 b2 cCARD * * part cINTER b1 b2 * / ! ! c==> cFINITE b2 c= cCARD * * part cINTER * * part cINSERT b0 b1 b2 cCOND c/\ cIN b0 b2 c~ cIN b0 b1 cSUC cCARD * * part cINTER b1 b2 cCARD * * part cINTER b1 b2 f0 * / ! ! c==> cFINITE b2 c= cCARD * * part cINTER * * part cINSERT b0 b1 b2 cCOND c/\ cIN b0 b2 c~ cIN b0 b1 cSUC cCARD * * part cINTER b1 b2 cCARD * * part cINTER b1 b2 f0
+ |- ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B))))
T c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1
+ |- (((FINITE B) ==> ((CARD ((a INSERT A) INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B))))) = T)
T c= c==> cFINITE f0 c= cCARD * * part cINTER * * part cINSERT f1 f2 f0 c+ cCOND c/\ cIN f1 f0 c~ cIN f1 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f0 cT
+ |- (((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))) = ((((a IN B) /\ (~ (a IN A))) ==> ((SUC (CARD (A INTER B))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B))))) /\ ((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))))
T c= c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1 c/\ c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cSUC cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1 c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1
+ |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
+ (~ ((a IN B) /\ (~ (a IN A)))) |- ((~ ((a IN B) /\ (~ (a IN A)))) /\ ((CARD (A INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))
T c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c/\ c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1
+ |- (((((a IN B) /\ (~ (a IN A))) ==> ((SUC (CARD (A INTER B))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B))))) /\ ((~ ((a IN B) /\ (~ (a IN A)))) ==> ((CARD (A INTER B)) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (SUC (CARD (A INTER B)))) (CARD (A INTER B))) = ((((COND ((a IN B) /\ (~ (a IN A)))) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))
T c= c/\ c==> c/\ cIN f0 f1 c~ cIN f0 f2 c= cSUC cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1 c==> c~ c/\ cIN f0 f1 c~ cIN f0 f2 c= cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1 c= cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cSUC cCARD * * part cINTER f2 f1 cCARD * * part cINTER f2 f1 c+ cCOND c/\ cIN f0 f1 c~ cIN f0 f2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f2 f1
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num x)) ==> (((int_add (int_of_num x)) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (int_of_num x)) (int_of_num (NUMERAL (BIT1 _0)))))) = (((int_add (int_of_num x)) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (int_of_num x)) (int_of_num (NUMERAL (BIT1 _0))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c= cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c= cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202046)) /\ (((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202046)) /\ (((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202046)) /\ (((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7202046)) /\ (((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _7202046)) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
+ |- ((NUMERAL (BIT0 (BIT1 _0))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (T = ((CARD (A INTER B)) = ((((COND F) (NUMERAL (BIT1 _0))) (NUMERAL _0)) + (CARD (A INTER B)))))
T c= cT c= cCARD * * part cINTER f0 f1 c+ cCOND cF cNUMERAL cBIT1 c_0 cNUMERAL c_0 cCARD * * part cINTER f0 f1
+ |- ((((COND T) t1) t2) = t1)
T c= cCOND cT f0 f1 f0
