N Local_lemmas.SUBSET_NOT_COLLINEAR_AFFINE_HULL_EQ
C |- ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_ENTIRE
A |- (!x. (!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0)))))))
T c= c= creal_mul f0 f1 creal_of_num cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= f1 creal_of_num cNUMERAL c_0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D EMPTY_SUBSET
A |- (!s. (EMPTY SUBSET s))
T cSUBSET part cEMPTY f0
D INSERT_SUBSET
A |- (!x. (!s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))))
T c= cSUBSET * * part cINSERT f0 f1 f2 c/\ cIN f0 f2 cSUBSET f1 f2
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D HULL_HULL
A |- (!P. (!s. (((hull P) ((hull P) s)) = ((hull P) s))))
T c= * * part chull f0 * * part chull f0 f1 * * part chull f0 f1
D HULL_MONO
A |- (!P. (!s. (!t. ((s SUBSET t) ==> (((hull P) s) SUBSET ((hull P) t))))))
T c==> cSUBSET f0 f1 cSUBSET * * part chull f2 f0 * * part chull f2 f1
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D VECTOR_ADD_RID
A |- (!x. (((vector_add x) (vec (NUMERAL _0))) = x))
T c= cvector_add f0 cvec cNUMERAL c_0 f0
D VECTOR_MUL_LZERO
A |- (!x. (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0))))
T c= c% creal_of_num cNUMERAL c_0 f0 cvec cNUMERAL c_0
D VECTOR_SUB_RZERO
A |- (((vector_sub x) (vec (NUMERAL _0))) = x)
T c= cvector_sub f0 cvec cNUMERAL c_0 f0
D DOT_RADD
A |- (!x. (!y. (!z. (((dot x) ((vector_add y) z)) = ((real_add ((dot x) y)) ((dot x) z))))))
T c= cdot f0 cvector_add f1 f2 creal_add cdot f0 f1 cdot f0 f2
D DOT_RMUL
A |- (!c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y))))))
T c= cdot f0 c% f1 f2 creal_mul f1 cdot f0 f2
D DOT_EQ_0
A |- (!x. ((((dot x) x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0)))))
T c= c= cdot f0 f0 creal_of_num cNUMERAL c_0 c= f0 cvec cNUMERAL c_0
D AFFINE_HULL_3
A |- (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = (GSPEC (\GEN%PVAR%1417. (?u. (?v. (?w. (((SETSPEC GEN%PVAR%1417) (((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c))))))))))
T c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / c? / c? / cSETSPEC b0 c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b1 f0 cvector_add c% b2 f1 c% b3 f2
D Trigonometry.JLWZFBH4
A |- (!s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c= ccoplanar f0 c? / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
D DOT_CROSS_SELF
A |- ((!x. (!y. (((dot x) ((cross x) y)) = (real_of_num (NUMERAL _0))))) /\ ((!x. (!y. (((dot x) ((cross y) x)) = (real_of_num (NUMERAL _0))))) /\ ((!x. (!y. (((dot ((cross x) y)) y) = (real_of_num (NUMERAL _0))))) /\ (!x. (!y. (((dot ((cross y) x)) y) = (real_of_num (NUMERAL _0))))))))
T c/\ ! ! c= cdot b0 ccross b0 b1 creal_of_num cNUMERAL c_0 c/\ ! ! c= cdot b0 ccross b1 b0 creal_of_num cNUMERAL c_0 c/\ ! ! c= cdot ccross b0 b1 b1 creal_of_num cNUMERAL c_0 ! ! c= cdot ccross b1 b0 b1 creal_of_num cNUMERAL c_0
D NOT_COPLANAR_NOT_COLLINEAR
A |- (!v1. (!v2. (!v3. (!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D Local_lemmas.CROSS_DOT_COPLANAR
A |- ((((dot ((cross x) y)) z) = (real_of_num (NUMERAL _0))) = (coplanar ((vec (NUMERAL _0)) INSERT (x INSERT (y INSERT (z INSERT EMPTY))))))
T c= c= cdot ccross f0 f1 f2 creal_of_num cNUMERAL c_0 ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D Collect_geom.ZERO_NEUTRAL
A |- (!x. ((((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))) /\ ((((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_num (NUMERAL _0))) x) = x) /\ ((((real_add x) (real_of_num (NUMERAL _0))) = x) /\ ((((real_sub x) (real_of_num (NUMERAL _0))) = x) /\ ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))))))))
T c/\ c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_num cNUMERAL c_0 f0 f0 c/\ c= creal_add f0 creal_of_num cNUMERAL c_0 f0 c/\ c= creal_sub f0 creal_of_num cNUMERAL c_0 f0 c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D Trigonometry2.COLLINEAR_TRANSABLE
A |- ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) = (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))
T c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY
D Trigonometry2.NONCOPLANAR_3_BASIS
A |- (!v1. (!v2. (!v3. (!v0. (!v. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ c= f4 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 cvector_sub f3 f0 ! ! ! c==> c= f4 cvector_add c% b3 cvector_sub f1 f0 cvector_add c% b4 cvector_sub f2 f0 c% b5 cvector_sub f3 f0 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2
D Local_lemmas.COLLINEAR_CROSS_0
A |- ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (((cross ((vector_sub y) x)) ((vector_sub z) x)) = (vec (NUMERAL _0))))
T c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccross cvector_sub f1 f0 cvector_sub f2 f0 cvec cNUMERAL c_0
D Local_lemmas.COPLANAR_IFF_CROSS_DOT
A |- ((coplanar (x INSERT (y INSERT (z INSERT (t INSERT EMPTY))))) = (((dot ((cross ((vector_sub y) x)) ((vector_sub z) x))) ((vector_sub t) x)) = (real_of_num (NUMERAL _0))))
T c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cdot ccross cvector_sub f1 f0 cvector_sub f2 f0 cvector_sub f3 f0 creal_of_num cNUMERAL c_0
- ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F), (((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F) ==> ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)) |- (((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F) /\ ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F))
T c==> c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c==> c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c/\ c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF
+ |- ((x' IN (GSPEC (\GEN%PVAR%1417. (?u. (?v. (?w. (((SETSPEC GEN%PVAR%1417) (((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) = (?u. (?v. (?w. (((\p. (\t. (p /\ (x' = t)))) (((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c))))))))
T c= cIN f0 * part cGSPEC / c? / c? / c? / cSETSPEC b0 c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b1 f1 cvector_add c% b2 f2 c% b3 f3 c? / c? / c? / * * / / c/\ b3 c= f0 b4 c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b0 f1 cvector_add c% b1 f2 c% b2 f3
+ |- ((!i. ((P i) ==> (Q i))) ==> ((!i. (P i)) ==> (!i. (Q i))))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
- |- (((!x'. (!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F))))) ==> ((\x'. (!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F))))) x')) = ((\x'. (!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F))))) x'))
T c= c==> ! ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b4 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b2 b3 * * part cINSERT cvector_sub b1 b3 * * part cINSERT ccross cvector_sub b2 b3 cvector_sub b1 b3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF * / ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b4 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b2 b3 * * part cINSERT cvector_sub b1 b3 * * part cINSERT ccross cvector_sub b2 b3 cvector_sub b1 b3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f3 * / ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b4 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b2 b3 * * part cINSERT cvector_sub b1 b3 * * part cINSERT ccross cvector_sub b2 b3 cvector_sub b1 b3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f3
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0
- |- ((!tc'. ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc') ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))) = ((!tc. (~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))))) \/ ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))
T c= ! c\/ c~ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% b0 ccross cvector_sub f3 f1 cvector_sub f5 f1 c/\ c= f2 f6 c/\ c= f4 f7 c= f8 f9 c\/ ! c~ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% b0 ccross cvector_sub f3 f1 cvector_sub f5 f1 c/\ c= f2 f6 c/\ c= f4 f7 c= f8 f9
- |- ((((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F) ==> ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)) ==> (((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F) ==> ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF
- |- ((!t2. (!t1. ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) = T)
T c= ! ! c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% b1 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% f7 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b2 cvector_sub f4 f0 cvector_add c% b3 cvector_sub f5 f0 c% b4 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b2 b1 c/\ c= b3 b0 c= b4 f7 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cT
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) |- ((((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) ==> ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))) ==> ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))
T c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY
- |- ((\x. (!x'. (!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)))))) x)
T * / ! ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> cIN b5 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b3 b4 * * part cINSERT cvector_sub b2 b4 * * part cINSERT ccross cvector_sub b3 b4 cvector_sub b2 b4 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF f2
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ |- ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((~ (_3963638 = _3963640)) \/ ((~ (_3963639 = _3963641)) \/ ((_3963640 SUBSET _3963641) \/ (~ (_3963638 SUBSET _3963639)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- |- ((~ (_3963662 = _3963664)) \/ ((~ (_3963663 = _3963665)) \/ (((vector_add _3963662) _3963663) = ((vector_add _3963664) _3963665))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
+ |- ((\s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))) s)
T * / ! c= cSUBSET * * part cINSERT f0 b0 b1 c/\ cIN f0 b1 cSUBSET b0 b1 f1
- |- ((~ (_3963671 = _3963673)) \/ ((~ (_3963670 = _3963672)) \/ (((hull _3963670) _3963671) = ((hull _3963672) _3963673))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (((!v. (!w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY))))))))))) ==> ((\v. (!w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY))))))))))) _3963547)) = ((\v. (!w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY))))))))))) _3963547))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f11 * / ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f11
- |- (((!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))) ==> ((\t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))) t1)) = ((\t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))) t1))
T c= c==> ! c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 f2 cvector_add c% b0 f3 c% f1 f4 c? / c? / c? / c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b2 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 cF * / c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 f2 cvector_add c% b0 f3 c% f1 f4 c? / c? / c? / c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b2 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 cF f5 * / c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 f2 cvector_add c% b0 f3 c% f1 f4 c? / c? / c? / c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b2 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 cF f5
- (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c? / c/\ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% b0 ccross cvector_sub f3 f1 cvector_sub f5 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b1 cvector_sub f3 f1 cvector_add c% b2 cvector_sub f5 f1 c% b3 ccross cvector_sub f3 f1 cvector_sub f5 f1 c/\ c= b1 f2 c/\ c= b2 f4 c= b3 b0 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f3 f1 * * part cINSERT cvector_sub f5 f1 * * part cINSERT ccross cvector_sub f3 f1 cvector_sub f5 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c/\ c? / c/\ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% b0 ccross cvector_sub f3 f1 cvector_sub f5 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b1 cvector_sub f3 f1 cvector_add c% b2 cvector_sub f5 f1 c% b3 ccross cvector_sub f3 f1 cvector_sub f5 f1 c/\ c= b1 f2 c/\ c= b2 f4 c= b3 b0 c==> cIN f0 * * part chull part caffine * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY
- ((a = T) ==> (((a /\ b) ==> c) = (a ==> (b ==> c)))), ((a = F) ==> (((a /\ b) ==> c) = (a ==> (b ==> c)))) |- (((a /\ b) ==> c) = (a ==> (b ==> c)))
T c==> c==> c= f0 cT c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 c==> c==> c= f0 cF c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((!b. (!a. ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) = T)
T c= ! ! c==> c/\ c/\ ! c==> cIN b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub f0 b1 * * part cINSERT ccross cvector_sub b0 b1 cvector_sub f0 b1 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- (((!y. (!z. (((dot x) ((vector_add y) z)) = ((real_add ((dot x) y)) ((dot x) z))))) ==> ((\y. (!z. (((dot x) ((vector_add y) z)) = ((real_add ((dot x) y)) ((dot x) z))))) y)) = ((\y. (!z. (((dot x) ((vector_add y) z)) = ((real_add ((dot x) y)) ((dot x) z))))) y))
T c= c==> ! ! c= cdot f0 cvector_add b0 b1 creal_add cdot f0 b0 cdot f0 b1 * / ! c= cdot f0 cvector_add b0 b1 creal_add cdot f0 b0 cdot f0 b1 f1 * / ! c= cdot f0 cvector_add b0 b1 creal_add cdot f0 b0 cdot f0 b1 f1
- (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) |- ((\tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))) tb)
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 * / ! c==> c= cvector_sub f0 f1 cvector_add c% f7 cvector_sub f2 f1 cvector_add c% b0 cvector_sub f3 f1 c% b1 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= f7 f4 c/\ c= b0 f5 c= b1 f6 f8
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) = ((c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i))))))
T c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_add c% f2 cvector_sub f3 f1 c% f4 cvector_sub f5 f1 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 f1 cvector_add c% f2 f3 c% f4 f5 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_add c% f2 cvector_sub f3 f1 c% f4 cvector_sub f5 f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 f1 cvector_add c% f2 f3 c% f4 f5 b0
+ (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) |- ((((t3 = (real_of_num (NUMERAL _0))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) = ((coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% f6 ccross cvector_sub f3 f1 cvector_sub f5 f1 c= c==> c\/ c= f6 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> ccoplanar * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 * * part cINSERT f0 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((~ (_3963625 = _3963626)) \/ ((BIT1 _3963625) = (BIT1 _3963626)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- ((x = (vec (NUMERAL _0))) = (((dot x) x) = (real_of_num (NUMERAL _0))))
T c= c= f0 cvec cNUMERAL c_0 c= cdot f0 f0 creal_of_num cNUMERAL c_0
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (((!ta. (!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (ta = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))))) ==> ((\ta. (!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (ta = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))))) _3963549)) = ((\ta. (!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (ta = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))))) _3963549))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b1 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b2 f9 * / ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b1 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b2 f9 f10 * / ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b1 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b2 f9 f10
- (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY
- |- ((~ (_3963617 = _3963619)) \/ ((~ (_3963618 = _3963620)) \/ (((real_sub _3963617) _3963618) = ((real_sub _3963619) _3963620))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
+ |- (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) = ((((((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))) /\ (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) /\ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c/\ c/\ c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((~ (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) ((real_add t1) t2)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) ((real_add t1) t2)) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c==> c~ c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (((!tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963549 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963550 = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))) ==> ((\tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963549 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963550 = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))) _3963551)) = ((\tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963549 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963550 = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))) _3963551))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f11 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f9 * / c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f11 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f9 f12 * / c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f11 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f9 f12
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963549 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b1 f9
- (_3963654 = _3963656) |- ((_3963655 = _3963657) ==> (((cross _3963654) _3963655) = ((cross _3963656) _3963657)))
T c==> c= f0 f1 c==> c= f2 f3 c= ccross f0 f2 ccross f1 f3
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (~ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))), (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((~ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f0 f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f5 f4 cvector_sub f0 f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f4 cvector_add c% f7 cvector_sub f5 f4 cvector_add c% f8 cvector_sub f0 f4 c% f9 ccross cvector_sub f5 f4 cvector_sub f0 f4 c/\ ! ! ! c==> c= cvector_sub f6 f4 cvector_add c% b0 cvector_sub f5 f4 cvector_add c% b1 cvector_sub f0 f4 c% b2 ccross cvector_sub f5 f4 cvector_sub f0 f4 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\x. (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0)))) x)
T * / c= c% creal_of_num cNUMERAL c_0 b0 cvec cNUMERAL c_0 f0
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- ((!w'. ((~ (((real_add u) ((real_add v) w')) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c))))))) = ((!w. (~ (((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))))) \/ (~ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))
T c= ! c\/ c~ c= creal_add f0 creal_add f1 b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 c% f5 f6 c\/ ! c~ c= creal_add f0 creal_add f1 b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 c% f5 f6
- (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) |- (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 ! ! c==> c= cvector_sub f0 f1 cvector_add c% f7 cvector_sub f2 f1 cvector_add c% b0 cvector_sub f3 f1 c% b1 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= f7 f4 c/\ c= b0 f5 c= b1 f6
- |- ((\c. (!b. (!a. (!x'. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F))))))))))) c)
T * / ! ! ! ! ! ! ! ! ! c==> c~ c==> c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b2 * * part cINSERT cvector_sub b0 b2 * * part cINSERT ccross cvector_sub b1 b2 cvector_sub b0 b2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b2 * * part cINSERT cvector_sub b0 b2 part cEMPTY c/\ c= cvector_sub b3 b2 cvector_add c% b9 cvector_sub b1 b2 cvector_add c% b8 cvector_sub b0 b2 c% b7 ccross cvector_sub b1 b2 cvector_sub b0 b2 c/\ ! ! ! c==> c= cvector_sub b3 b2 cvector_add c% b10 cvector_sub b1 b2 cvector_add c% b11 cvector_sub b0 b2 c% b12 ccross cvector_sub b1 b2 cvector_sub b0 b2 c/\ c= b10 b9 c/\ c= b11 b8 c= b12 b7 c/\ cIN b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b2 * * part cINSERT cvector_sub b0 b2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF f0
+ |- ((((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t))) ==> ((s SUBSET t) = ((s SUBSET t) /\ (((hull affine) s) SUBSET ((hull affine) t))))) = ((s SUBSET t) = ((s SUBSET t) /\ (((hull affine) s) SUBSET ((hull affine) t)))))
T c= c==> c==> cSUBSET f0 f1 cSUBSET * * part chull part caffine f0 * * part chull part caffine f1 c= cSUBSET f0 f1 c/\ cSUBSET f0 f1 cSUBSET * * part chull part caffine f0 * * part chull part caffine f1 c= cSUBSET f0 f1 c/\ cSUBSET f0 f1 cSUBSET * * part chull part caffine f0 * * part chull part caffine f1
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- ((((((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))) /\ (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) ==> (coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY)))))) = (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) ==> ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY)))))))))))
T c= c==> c/\ c/\ c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c==> c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c==> ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% _3963632) ((vector_sub c) a))) ((% _3963633) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963632 = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% _3963632) ((vector_sub c) a))) ((% _3963633) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963633 = t3)))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% f11 cvector_sub f2 f0 c% f12 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= f11 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% f11 cvector_sub f2 f0 c% f12 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= f12 f9
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963549 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963550 = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3)))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f11 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f9
+ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY)))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY
+ |- ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))
T c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5
+ |- ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x)
T * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (((!w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))))))) ==> ((\w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))))))) _3963548)) = ((\w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))))))) _3963548))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY * / c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY f12 * / c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY f12
- |- ((!w'. ((~ (((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w') c))))))) = ((~ (((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (!w. (~ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c))))))))
T c= ! c\/ c~ c= creal_add f0 creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 c% b0 f6 c\/ c~ c= creal_add f0 creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 ! c~ c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 c% b0 f6
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_sub (x' $ i)) (a $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul t1) ((lambdai. ((real_sub (b $ i)) (a $ i))) $ i))) $ i)) ((lambdai. ((real_mul t2) ((lambdai. ((real_sub (c $ i)) (a $ i))) $ i))) $ i))) $ i)) ==> ((x' $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t1) (b $ i))) $ i)) ((lambdai. ((real_mul t2) (c $ i))) $ i))) $ i))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_sub c$ f1 b0 c$ f2 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul f3 c$ clambda / creal_sub c$ f4 b1 c$ f2 b1 b1 b0 c$ clambda / creal_mul f5 c$ clambda / creal_sub c$ f6 b1 c$ f2 b1 b1 b0 f0 c= c$ f1 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c$ f2 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul f3 c$ f4 b1 b1 c$ clambda / creal_mul f5 c$ f6 b1 b1 b0 f0
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- ((\w. ((~ (((real_add _3963600) ((real_add _3963601) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% _3963600) a)) ((vector_add ((% _3963601) b)) ((% w) c))))))) _3963602)
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 * / c\/ c~ c= creal_add f6 creal_add f7 b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% f6 f3 cvector_add c% f7 f4 c% b0 f5 f8
+ |- (((!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((\w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) w)) = ((\w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) w))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ |- ((!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0))))) = T)
T c= ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b0 creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 cT
- (_3963617 = _3963619), (_3963618 = _3963620) |- ((_3963618 = _3963620) /\ (((real_sub _3963617) _3963618) = ((real_sub _3963619) _3963620)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
- (a = T) |- ((((T /\ b) ==> c) = (T ==> (b ==> c))) = (((a /\ b) ==> c) = (a ==> (b ==> c))))
T c==> c= f0 cT c= c= c==> c/\ cT f1 f2 c==> cT c==> f1 f2 c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
- |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- (T = (((T /\ b) ==> c) = (T ==> (b ==> c))))
T c= cT c= c==> c/\ cT f0 f1 c==> cT c==> f0 f1
+ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (!ta. (!tb. (!tc. ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY ! ! ! c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9
+ |- ((\y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))) y)
T * / c= cdot f0 c% f1 b0 creal_mul f1 cdot f0 b0 f2
- |- (((!x. (!x'. (!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)))))) ==> ((\x. (!x'. (!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)))))) x)) = ((\x. (!x'. (!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)))))) x))
T c= c==> ! ! ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> cIN b5 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b3 b4 * * part cINSERT cvector_sub b2 b4 * * part cINSERT ccross cvector_sub b3 b4 cvector_sub b2 b4 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF * / ! ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> cIN b5 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b3 b4 * * part cINSERT cvector_sub b2 b4 * * part cINSERT ccross cvector_sub b3 b4 cvector_sub b2 b4 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF f2 * / ! ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> cIN b5 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b3 b4 * * part cINSERT cvector_sub b2 b4 * * part cINSERT ccross cvector_sub b3 b4 cvector_sub b2 b4 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!t2. (!t1. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))) = T)
T c= ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% b1 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% f7 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b2 cvector_sub f1 f0 cvector_add c% b3 cvector_sub f2 f0 c% b4 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b2 b1 c/\ c= b3 b0 c= b4 f7 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)))) = T)
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 f4 cvector_add c% f2 f5 c% f3 f6 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub f1 f4 f0 c$ cvector_add c% f2 cvector_sub f5 f4 c% f3 cvector_sub f6 f4 f0 cT
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))) ==> F)
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cF
+ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))), (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- F
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 cF
+ |- ((((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))) ==> ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) = ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))))) = ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) = ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f1 f0 cvector_add c% b2 cvector_sub f2 f0 c% b3 cvector_sub f3 f0 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f1 f0 cvector_add c% b5 cvector_sub f2 f0 c% b6 cvector_sub f3 f0 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c= c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f1 f0 cvector_add c% b2 cvector_sub f2 f0 c% b3 cvector_sub f3 f0 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f1 f0 cvector_add c% b5 cvector_sub f2 f0 c% b6 cvector_sub f3 f0 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c= c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f1 f0 cvector_add c% b2 cvector_sub f2 f0 c% b3 cvector_sub f3 f0 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f1 f0 cvector_add c% b5 cvector_sub f2 f0 c% b6 cvector_sub f3 f0 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3
+ |- (((!t. ((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t)))) ==> ((\t. ((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t)))) t)) = ((\t. ((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t)))) t))
T c= c==> ! c==> cSUBSET f0 b0 cSUBSET * * part chull part caffine f0 * * part chull part caffine b0 * / c==> cSUBSET f0 b0 cSUBSET * * part chull part caffine f0 * * part chull part caffine b0 f1 * / c==> cSUBSET f0 b0 cSUBSET * * part chull part caffine f0 * * part chull part caffine b0 f1
+ (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) |- ((\v. (!w. ((~ (a IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY))))))))))) _3963544)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f5
- |- ((~ (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))))) ==> (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))))
T c==> c~ c= cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 c= cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4
- |- ((real_neg ((real_sub ((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b))) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
- |- ((?w. (P w)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (!ta. (!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (ta = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3)))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b1 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b2 f9
+ |- ((\v1. (!v2. (!v3. (!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))))) v1)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) = (((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) /\ ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c==> cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((\x. (!t3. (!t2. (!t1. ((~ ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) ==> F))))) x)
T * / ! ! ! c==> c~ c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN cvector_sub f3 f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cIN ccross cvector_sub f3 f0 cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ c= cvector_sub f5 f0 cvector_add c% b3 cvector_sub f3 f0 cvector_add c% b2 cvector_sub f4 f0 c% b1 ccross cvector_sub f3 f0 cvector_sub f4 f0 c/\ ! ! ! c==> c= cvector_sub f5 f0 cvector_add c% b4 cvector_sub f3 f0 cvector_add c% b5 cvector_sub f4 f0 c% b6 ccross cvector_sub f3 f0 cvector_sub f4 f0 c/\ c= b4 b3 c/\ c= b5 b2 c= b6 b1 cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cF f6
- (_3963643 = _3963645), (_3963642 = _3963644) |- ((((_3963642 IN _3963643) = (_3963644 IN _3963645)) ==> ((_3963644 IN _3963645) \/ (~ (_3963642 IN _3963643)))) = ((_3963644 IN _3963645) \/ (~ (_3963642 IN _3963643))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cIN f2 f0 cIN f3 f1 c\/ cIN f3 f1 c~ cIN f2 f0 c\/ cIN f3 f1 c~ cIN f2 f0
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((((\t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))) t2) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = T)
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c==> * / c? / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 c% b1 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b2 cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 c% b4 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b2 f7 c/\ c= b3 b0 c= b4 b1 f8 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cT
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- (((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) = (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) |- F
T c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF
- (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- (((!x'. ((~ (x' IN (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> ((\x'. ((~ (x' IN (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) _3963674)) = ((\x'. ((~ (x' IN (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) _3963674))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> ! c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * / c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f7 * / c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f7
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> F)
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c==> c~ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ |- (((!s. (((hull P) ((hull P) s)) = ((hull P) s))) ==> ((\s. (((hull P) ((hull P) s)) = ((hull P) s))) s)) = ((\s. (((hull P) ((hull P) s)) = ((hull P) s))) s))
T c= c==> ! c= * * part chull f0 * * part chull f0 b0 * * part chull f0 b0 * / c= * * part chull f0 * * part chull f0 b0 * * part chull f0 b0 f1 * / c= * * part chull f0 * * part chull f0 b0 * * part chull f0 b0 f1
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((\tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963549 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963550 = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))) _3963551)
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f11 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f9 f12
+ (~ (((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))) ==> (((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))))) |- (((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))))
T c==> c~ c==> c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 f1 creal_add creal_mul f2 c$ f5 f1 creal_mul f3 c$ f6 f1 c= creal_sub c$ f0 f1 c$ f4 f1 creal_add creal_mul f2 creal_sub c$ f5 f1 c$ f4 f1 creal_mul f3 creal_sub c$ f6 f1 c$ f4 f1 c\/ c/\ c= creal_add creal_mul f2 c$ f4 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 c$ f5 f1 creal_add creal_mul f3 c$ f4 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 c$ f6 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f2 c$ f4 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 c$ f5 f1 creal_add creal_mul f3 c$ f4 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 c$ f6 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul f2 c$ f4 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 c$ f5 f1 creal_add creal_mul f3 c$ f4 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 c$ f6 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f4 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 c$ f4 f1 creal_add creal_mul f2 c$ f5 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 c$ f4 f1 creal_add creal_mul f3 c$ f6 f1 creal_add c$ f4 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0
- |- ((!x. (!t3. (!t2. (!t1. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))) = T)
T c= ! ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f5 f0 cvector_add c% b3 cvector_sub f1 f0 cvector_add c% b2 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f5 f0 cvector_add c% b4 cvector_sub f1 f0 cvector_add c% b5 cvector_sub f2 f0 c% b6 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b4 b3 c/\ c= b5 b2 c= b6 b1 c/\ cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- (!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub f1 f2 f0 c$ cvector_add c% f3 cvector_sub f4 f2 c% f5 cvector_sub f6 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 f2 cvector_add c% f3 f4 c% f5 f6 f0
- (_3963662 = _3963664) |- ((_3963663 = _3963665) ==> (((vector_add _3963662) _3963663) = ((vector_add _3963664) _3963665)))
T c==> c= f0 f1 c==> c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) = ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub ((vector_sub b) a)) (vec (NUMERAL _0))) INSERT (((vector_sub ((vector_sub c) a)) (vec (NUMERAL _0))) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub cvector_sub f1 f0 cvec cNUMERAL c_0 * * part cINSERT cvector_sub cvector_sub f2 f0 cvec cNUMERAL c_0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
+ |- (((!c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))))) ==> ((\c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))))) c)) = ((\c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))))) c))
T c= c==> ! ! ! c= cdot b1 c% b0 b2 creal_mul b0 cdot b1 b2 * / ! ! c= cdot b1 c% b0 b2 creal_mul b0 cdot b1 b2 f0 * / ! ! c= cdot b1 c% b0 b2 creal_mul b0 cdot b1 b2 f0
- |- (((a /\ b) ==> c) = (a ==> (b ==> c)))
T c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ |- (((!x. ((((dot x) x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0))))) ==> ((\x. ((((dot x) x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0))))) x)) = ((\x. ((((dot x) x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0))))) x))
T c= c==> ! c= c= cdot b0 b0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 * / c= c= cdot b0 b0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 f0 * / c= c= cdot b0 b0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 f0
+ (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((_3963675 IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) \/ (~ (_3963675 IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ cIN f7 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f7 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((\t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))) t2) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> * / c? / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 c% b1 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b2 cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 c% b4 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b2 f7 c/\ c= b3 b0 c= b4 b1 f8 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ |- (((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 cF
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> c/\ c= cvector_sub f3 f1 cvector_add c% f4 cvector_sub f0 f1 cvector_add c% f5 cvector_sub f2 f1 c% f6 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f3 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c/\ c/\ c= cvector_sub f3 f1 cvector_add c% f4 cvector_sub f0 f1 cvector_add c% f5 cvector_sub f2 f1 c% f6 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f3 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> cIN f3 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ |- ((\P. (!s. (!t. ((s SUBSET t) ==> (((hull P) s) SUBSET ((hull P) t)))))) affine)
T * / ! ! c==> cSUBSET b1 b2 cSUBSET * * part chull b0 b1 * * part chull b0 b2 part caffine
+ |- ((\y. (!z. (((dot x) ((vector_add y) z)) = ((real_add ((dot x) y)) ((dot x) z))))) y)
T * / ! c= cdot f0 cvector_add b0 b1 creal_add cdot f0 b0 cdot f0 b1 f1
+ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) ==> ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c==> cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0
- |- (((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F) = ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c= c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (~ (b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))), (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((~ (b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) /\ (b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f0 f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f0 f4 cvector_sub f5 f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f4 cvector_add c% f7 cvector_sub f0 f4 cvector_add c% f8 cvector_sub f5 f4 c% f9 ccross cvector_sub f0 f4 cvector_sub f5 f4 c/\ ! ! ! c==> c= cvector_sub f6 f4 cvector_add c% b0 cvector_sub f0 f4 cvector_add c% b1 cvector_sub f5 f4 c% b2 ccross cvector_sub f0 f4 cvector_sub f5 f4 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!x. (!x'. (!c. (!b. (!a. ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ c/\ ! c==> cIN b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> cIN b5 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b3 b4 * * part cINSERT cvector_sub b2 b4 * * part cINSERT ccross cvector_sub b3 b4 cvector_sub b2 b4 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
+ |- (((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)))))) = ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i))))))
T c= c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_add c% f2 cvector_sub f3 f1 c% f4 cvector_sub f5 f1 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 f1 cvector_add c% f2 f3 c% f4 f5 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_add c% f2 cvector_sub f3 f1 c% f4 cvector_sub f5 f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 f1 cvector_add c% f2 f3 c% f4 f5 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_add c% f2 cvector_sub f3 f1 c% f4 cvector_sub f5 f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 f1 cvector_add c% f2 f3 c% f4 f5 b0
- |- (((!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))))) ==> ((\x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))))) x')) = ((\x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))))) x'))
T c= c==> ! ! ! c==> c~ c==> c= b0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b1 f0 cvector_add c% b2 f1 c% b1 f2 c? / c? / c? / c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b3 f0 cvector_add c% b4 f1 c% b5 f2 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b4 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 cF * / ! ! c==> c~ c==> c= b0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b1 f0 cvector_add c% b2 f1 c% b1 f2 c? / c? / c? / c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b3 f0 cvector_add c% b4 f1 c% b5 f2 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b4 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 cF f3 * / ! ! c==> c~ c==> c= b0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b1 f0 cvector_add c% b2 f1 c% b1 f2 c? / c? / c? / c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b3 f0 cvector_add c% b4 f1 c% b5 f2 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b4 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 cF f3
- (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))), (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- ((~ F) ==> F)
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> c~ cF cF
- (_3963638 = _3963640), (_3963639 = _3963641) |- ((_3963639 = _3963641) /\ ((_3963640 SUBSET _3963641) \/ (~ (_3963638 SUBSET _3963639))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y))))) x)
T * / ! c= cdot b0 c% f0 b1 creal_mul f0 cdot b0 b1 f1
- ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)), (((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) ==> ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))) |- ((((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) ==> ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))) /\ ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))
T c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c/\ c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
- ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) = T)
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cT
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((!u. (!v. (!w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! ! ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) |- ((\w. ((~ (a IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))))))) _3963545)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f6
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- (((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c))))))))) = ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% (real_of_num (NUMERAL _0))) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c= c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> c= cvector_sub f0 f3 cvector_add c% f1 cvector_sub f4 f3 cvector_add c% f2 cvector_sub f5 f3 c% creal_of_num cNUMERAL c_0 ccross cvector_sub f4 f3 cvector_sub f5 f3 cIN f0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- (T = ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c= cT c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- ((_3963621 = _3963623) ==> ((~ (_3963622 = _3963624)) \/ (((real_add _3963621) _3963622) = ((real_add _3963623) _3963624))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= creal_add f0 f2 creal_add f1 f3
+ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY))))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- (~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) |- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) /\ F)
T c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 c/\ c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((x' $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t1) (b $ i))) $ i)) ((lambdai. ((real_mul t2) (c $ i))) $ i))) $ i))) $ i)) ==> (((lambdai. ((real_sub (x' $ i)) (a $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul t1) ((lambdai. ((real_sub (b $ i)) (a $ i))) $ i))) $ i)) ((lambdai. ((real_mul t2) ((lambdai. ((real_sub (c $ i)) (a $ i))) $ i))) $ i))) $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul f2 c$ f5 b1 b1 c$ clambda / creal_mul f3 c$ f6 b1 b1 b0 f0 c= c$ clambda / creal_sub c$ f1 b0 c$ f4 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul f2 c$ clambda / creal_sub c$ f5 b1 c$ f4 b1 b1 b0 c$ clambda / creal_mul f3 c$ clambda / creal_sub c$ f6 b1 c$ f4 b1 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 f4 cvector_add c% f2 f5 c% f3 f6 f0 c= c$ cvector_sub f1 f4 f0 c$ cvector_add c% f2 cvector_sub f5 f4 c% f3 cvector_sub f6 f4 f0
- |- ((!w. t) = t)
T c= ! f0 f0
- |- ((~ (_3963629 = _3963630)) \/ ((real_of_num _3963629) = (real_of_num _3963630)))
T c\/ c~ c= f0 f1 c= creal_of_num f0 creal_of_num f1
- |- ((?w'. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))))))) = (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (?w. ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c= c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN cvector_sub f3 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN cvector_sub f5 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cIN ccross cvector_sub f3 f4 cvector_sub f5 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN cvector_sub f3 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN cvector_sub f5 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cIN ccross cvector_sub f3 f4 cvector_sub f5 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((x' $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t1) (b $ i))) $ i)) ((lambdai. ((real_mul t2) (c $ i))) $ i))) $ i))) $ i)) ==> (((lambdai. ((real_sub (x' $ i)) (a $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul t1) ((lambdai. ((real_sub (b $ i)) (a $ i))) $ i))) $ i)) ((lambdai. ((real_mul t2) ((lambdai. ((real_sub (c $ i)) (a $ i))) $ i))) $ i))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul f2 c$ f5 b1 b1 c$ clambda / creal_mul f3 c$ f6 b1 b1 b0 f0 c= c$ clambda / creal_sub c$ f1 b0 c$ f4 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul f2 c$ clambda / creal_sub c$ f5 b1 c$ f4 b1 b1 b0 c$ clambda / creal_mul f3 c$ clambda / creal_sub c$ f6 b1 c$ f4 b1 b1 b0 f0
+ |- (((dot ((cross x) y)) y) = (real_of_num (NUMERAL _0)))
T c= cdot ccross f0 f1 f1 creal_of_num cNUMERAL c_0
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((!u. (!v. (!w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! ! ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% _3963632) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963631 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% _3963632) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963632 = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% _3963632) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3)))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% f11 cvector_sub f2 f0 c% b0 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% f11 cvector_sub f2 f0 c% b0 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= f11 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% f11 cvector_sub f2 f0 c% b0 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b0 f9
- |- ((!z. (!y. (!x. (!x'. (!c. (!b. (!a. ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))))))) = (!z. (!y. (!x. (!x'. (!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)))))))))
T c= ! ! ! ! ! ! ! c==> c/\ c/\ ! c==> cIN b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b7 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! c==> cIN b7 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b7 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b5 b6 * * part cINSERT cvector_sub b4 b6 * * part cINSERT ccross cvector_sub b5 b6 cvector_sub b4 b6 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b7 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! c==> cIN b7 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b7 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b5 b6 * * part cINSERT cvector_sub b4 b6 * * part cINSERT ccross cvector_sub b5 b6 cvector_sub b4 b6 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF
+ |- (((!x. (!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0))))))) ==> ((\x. (!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0))))))) x)) = ((\x. (!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0))))))) x))
T c= c==> ! ! c= c= creal_mul b0 b1 creal_of_num cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 creal_of_num cNUMERAL c_0 * / ! c= c= creal_mul b0 b1 creal_of_num cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 creal_of_num cNUMERAL c_0 f0 * / ! c= c= creal_mul b0 b1 creal_of_num cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 creal_of_num cNUMERAL c_0 f0
+ (t3 = (real_of_num (NUMERAL _0))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) |- (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% (real_of_num (NUMERAL _0))) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c==> c= cvector_sub f1 f2 cvector_add c% f3 cvector_sub f4 f2 cvector_add c% f5 cvector_sub f6 f2 c% f0 ccross cvector_sub f4 f2 cvector_sub f6 f2 c= cvector_sub f1 f2 cvector_add c% f3 cvector_sub f4 f2 cvector_add c% f5 cvector_sub f6 f2 c% creal_of_num cNUMERAL c_0 ccross cvector_sub f4 f2 cvector_sub f6 f2
- |- (((!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F))) ==> ((\b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F))) b)) = ((\b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F))) b))
T c= c==> ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub f0 b1 * * part cINSERT ccross cvector_sub b0 b1 cvector_sub f0 b1 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF * / ! c==> c~ c==> c/\ c/\ ! c==> cIN b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub f0 b1 * * part cINSERT ccross cvector_sub b0 b1 cvector_sub f0 b1 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF f5 * / ! c==> c~ c==> c/\ c/\ ! c==> cIN b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub f0 b1 * * part cINSERT ccross cvector_sub b0 b1 cvector_sub f0 b1 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF f5
- (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- (!x'. ((~ (x' IN (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% f8 cvector_sub f2 f1 c% f9 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- (((!b. (!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))))))) ==> ((\b. (!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))))))) b)) = ((\b. (!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))))))) b))
T c= c==> ! ! ! ! ! c==> c~ c==> c= b2 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b3 b1 cvector_add c% b4 b0 c% b3 f0 c? / c? / c? / c/\ c= creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b5 b1 cvector_add c% b6 b0 c% b7 f0 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b6 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 cF * / ! ! ! ! c==> c~ c==> c= b2 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b3 b1 cvector_add c% b4 b0 c% b3 f0 c? / c? / c? / c/\ c= creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b5 b1 cvector_add c% b6 b0 c% b7 f0 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b6 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 cF f1 * / ! ! ! ! c==> c~ c==> c= b2 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b3 b1 cvector_add c% b4 b0 c% b3 f0 c? / c? / c? / c/\ c= creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b5 b1 cvector_add c% b6 b0 c% b7 f0 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b6 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 cF f1
- (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) = T)
T c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- (((!x. ((((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))) /\ ((((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_num (NUMERAL _0))) x) = x) /\ ((((real_add x) (real_of_num (NUMERAL _0))) = x) /\ ((((real_sub x) (real_of_num (NUMERAL _0))) = x) /\ ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) ==> ((\x. ((((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))) /\ ((((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_num (NUMERAL _0))) x) = x) /\ ((((real_add x) (real_of_num (NUMERAL _0))) = x) /\ ((((real_sub x) (real_of_num (NUMERAL _0))) = x) /\ ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) x)) = ((\x. ((((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))) /\ ((((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_num (NUMERAL _0))) x) = x) /\ ((((real_add x) (real_of_num (NUMERAL _0))) = x) /\ ((((real_sub x) (real_of_num (NUMERAL _0))) = x) /\ ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) x))
T c= c==> ! c/\ c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ c= creal_add b0 creal_of_num cNUMERAL c_0 b0 c/\ c= creal_sub b0 creal_of_num cNUMERAL c_0 b0 c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 * / c/\ c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ c= creal_add b0 creal_of_num cNUMERAL c_0 b0 c/\ c= creal_sub b0 creal_of_num cNUMERAL c_0 b0 c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 f0 * / c/\ c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ c= creal_add b0 creal_of_num cNUMERAL c_0 b0 c/\ c= creal_sub b0 creal_of_num cNUMERAL c_0 b0 c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 f0
- ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0
+ |- ((\x. (!s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))))) x)
T * / ! ! c= cSUBSET * * part cINSERT b0 b1 b2 c/\ cIN b0 b2 cSUBSET b1 b2 f0
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- (((!u. (!v. (!w. ((~ (((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c))))))))) ==> ((\u. (!v. (!w. ((~ (((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c))))))))) _3963600)) = ((\u. (!v. (!w. ((~ (((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c))))))))) _3963600))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c= c==> ! ! ! c\/ c~ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 * / ! ! c\/ c~ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 f6 * / ! ! c\/ c~ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 f6
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) /\ (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- ((!t3. (!t2. (!t1. ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) = T)
T c= ! ! ! c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% b2 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b3 cvector_sub f4 f0 cvector_add c% b4 cvector_sub f5 f0 c% b5 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b3 b2 c/\ c= b4 b1 c= b5 b0 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cT
- |- ((!c. (!b. (!a. (!x'. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))))))) = (!c. (!b. (!a. (!x'. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F))))))))))))
T c= ! ! ! ! ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b2 * * part cINSERT cvector_sub b0 b2 * * part cINSERT ccross cvector_sub b1 b2 cvector_sub b0 b2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b2 * * part cINSERT cvector_sub b0 b2 part cEMPTY c/\ c= cvector_sub b3 b2 cvector_add c% b9 cvector_sub b1 b2 cvector_add c% b8 cvector_sub b0 b2 c% b7 ccross cvector_sub b1 b2 cvector_sub b0 b2 c/\ ! ! ! c==> c= cvector_sub b3 b2 cvector_add c% b10 cvector_sub b1 b2 cvector_add c% b11 cvector_sub b0 b2 c% b12 ccross cvector_sub b1 b2 cvector_sub b0 b2 c/\ c= b10 b9 c/\ c= b11 b8 c= b12 b7 c/\ cIN b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b2 * * part cINSERT cvector_sub b0 b2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! ! ! ! ! ! ! c==> c~ c==> c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b2 * * part cINSERT cvector_sub b0 b2 * * part cINSERT ccross cvector_sub b1 b2 cvector_sub b0 b2 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b2 * * part cINSERT cvector_sub b0 b2 part cEMPTY c/\ c= cvector_sub b3 b2 cvector_add c% b9 cvector_sub b1 b2 cvector_add c% b8 cvector_sub b0 b2 c% b7 ccross cvector_sub b1 b2 cvector_sub b0 b2 c/\ ! ! ! c==> c= cvector_sub b3 b2 cvector_add c% b10 cvector_sub b1 b2 cvector_add c% b11 cvector_sub b0 b2 c% b12 ccross cvector_sub b1 b2 cvector_sub b0 b2 c/\ c= b10 b9 c/\ c= b11 b8 c= b12 b7 c/\ cIN b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b2 * * part cINSERT cvector_sub b0 b2 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
+ |- (((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> F) = ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c))))))))))
T c= c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 cF c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5
- |- ((~ (_3963642 = _3963644)) \/ ((~ (_3963643 = _3963645)) \/ ((_3963644 IN _3963645) \/ (~ (_3963642 IN _3963643)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- (_3963654 = _3963656), (_3963655 = _3963657) |- ((_3963655 = _3963657) /\ (((cross _3963654) _3963655) = ((cross _3963656) _3963657)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= ccross f0 f2 ccross f1 f3
- |- ((!w'. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY)))))))))) = ((~ ((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (!w. ((~ (((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c= ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN cvector_sub f3 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c\/ c~ cIN cvector_sub f5 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ cIN ccross cvector_sub f3 f4 cvector_sub f5 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN cvector_sub f3 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c\/ c~ cIN cvector_sub f5 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ cIN ccross cvector_sub f3 f4 cvector_sub f5 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
- |- (((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) ==> ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))
T c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!w'. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = ((!w. (~ ((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c= ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c\/ c~ cIN cvector_sub f2 f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ c~ cIN cvector_sub f5 f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c~ cIN ccross cvector_sub f2 f3 cvector_sub f5 f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ ! c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c\/ c~ cIN cvector_sub f2 f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ c~ cIN cvector_sub f5 f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c~ cIN ccross cvector_sub f2 f3 cvector_sub f5 f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY
+ |- ((F = t) = (~ t))
T c= c= cF f0 c~ f0
- (_3963621 = _3963623), (_3963622 = _3963624) |- ((_3963622 = _3963624) /\ (((real_add _3963621) _3963622) = ((real_add _3963623) _3963624)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= creal_add f0 f2 creal_add f1 f3
- (_3963670 = _3963672), (_3963671 = _3963673) |- ((_3963670 = _3963672) /\ (((hull _3963670) _3963671) = ((hull _3963672) _3963673)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part chull f0 f2 * * part chull f1 f3
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% f8 cvector_sub f2 f1 c% f9 ccross cvector_sub f0 f1 cvector_sub f2 f1 c==> ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccoplanar * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY
+ |- (((!P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) ==> ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P)) = ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P))
T c= c==> ! ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0 * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0
- (_3963650 = _3963652), (_3963651 = _3963653) |- ((_3963651 = _3963653) /\ (((vector_sub _3963650) _3963651) = ((vector_sub _3963652) _3963653)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cvector_sub f0 f2 cvector_sub f1 f3
+ |- (((!v2. (!v3. (!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))))) ==> ((\v2. (!v3. (!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))))) v2)) = ((\v2. (!v3. (!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))))) v2))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
- |- ((!a. ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) = T)
T c= ! c==> c/\ c/\ ! c==> cIN b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub f1 b0 * * part cINSERT ccross cvector_sub f0 b0 cvector_sub f1 b0 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cT
+ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) _3963598)) b)) ((real_add _3963598) b)) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b0 creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0
- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((\x. (!y. (((dot x) ((cross y) x)) = (real_of_num (NUMERAL _0))))) x)
T * / ! c= cdot b0 ccross b1 b0 creal_of_num cNUMERAL c_0 f0
- (_3963643 = _3963645), (_3963642 = _3963644) |- ((_3963644 IN _3963645) \/ (~ (_3963642 IN _3963643)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f3 f1 c~ cIN f2 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))) ==> (((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i)))))) = (((x' $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t1) (b $ i))) $ i)) ((lambdai. ((real_mul t2) (c $ i))) $ i))) $ i))) $ i)) ==> (((lambdai. ((real_sub (x' $ i)) (a $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul t1) ((lambdai. ((real_sub (b $ i)) (a $ i))) $ i))) $ i)) ((lambdai. ((real_mul t2) ((lambdai. ((real_sub (c $ i)) (a $ i))) $ i))) $ i))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c= c$ f1 f0 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 f0 creal_add creal_mul f2 c$ f5 f0 creal_mul f3 c$ f6 f0 c= creal_sub c$ f1 f0 c$ f4 f0 creal_add creal_mul f2 creal_sub c$ f5 f0 c$ f4 f0 creal_mul f3 creal_sub c$ f6 f0 c$ f4 f0 c==> c= c$ f1 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul f2 c$ f5 b1 b1 c$ clambda / creal_mul f3 c$ f6 b1 b1 b0 f0 c= c$ clambda / creal_sub c$ f1 b0 c$ f4 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul f2 c$ clambda / creal_sub c$ f5 b1 c$ f4 b1 b1 b0 c$ clambda / creal_mul f3 c$ clambda / creal_sub c$ f6 b1 c$ f4 b1 b1 b0 f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((~ (_3963650 = _3963652)) \/ ((~ (_3963651 = _3963653)) \/ (((vector_sub _3963650) _3963651) = ((vector_sub _3963652) _3963653))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cvector_sub f0 f2 cvector_sub f1 f3
+ |- ((\z. (((dot x) ((vector_add y) z)) = ((real_add ((dot x) y)) ((dot x) z)))) z)
T * / c= cdot f0 cvector_add f1 b0 creal_add cdot f0 f1 cdot f0 b0 f2
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((((\t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))) t3) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = T)
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c==> * / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% f8 cvector_sub f2 f1 c% b0 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b1 f7 c/\ c= b2 f8 c= b3 b0 f9 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cT
- |- ((?w. t) = t)
T c= c? / f0 f0
- |- ((~ (_3963621 = _3963623)) \/ ((~ (_3963622 = _3963624)) \/ (((real_add _3963621) _3963622) = ((real_add _3963623) _3963624))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= creal_add f0 f2 creal_add f1 f3
+ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((\a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) _3963598)
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 * / ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 f0
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% _3963632) ((vector_sub c) a))) ((% _3963633) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963633 = t3))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% f11 cvector_sub f2 f0 c% f12 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= f12 f9
+ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), ((t3 = (real_of_num (NUMERAL _0))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))), (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> c\/ c= f6 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (t3 = (real_of_num (NUMERAL _0))) |- ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) = (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = (real_of_num (NUMERAL _0))))))))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c= ! ! ! c==> c= cvector_sub f1 f2 cvector_add c% b0 cvector_sub f3 f2 cvector_add c% b1 cvector_sub f4 f2 c% b2 ccross cvector_sub f3 f2 cvector_sub f4 f2 c/\ c= b0 f5 c/\ c= b1 f6 c= b2 f0 ! ! ! c==> c= cvector_sub f1 f2 cvector_add c% b0 cvector_sub f3 f2 cvector_add c% b1 cvector_sub f4 f2 c% b2 ccross cvector_sub f3 f2 cvector_sub f4 f2 c/\ c= b0 f5 c/\ c= b1 f6 c= b2 creal_of_num cNUMERAL c_0
- (~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) |- ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ F)
T c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF
- |- ((\a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))))) a)
T * / ! ! ! c==> c~ c==> c= b1 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b2 b0 cvector_add c% b3 f0 c% b2 f1 c? / c? / c? / c/\ c= creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b4 b0 cvector_add c% b5 f0 c% b6 f1 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b5 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 cF f2
+ |- (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) = ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (((dot ((cross ((vector_sub b) a)) ((vector_sub c) a))) ((cross ((vector_sub b) a)) ((vector_sub c) a))) = (real_of_num (NUMERAL _0))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= cdot ccross cvector_sub f1 f0 cvector_sub f2 f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 creal_of_num cNUMERAL c_0 c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 cF
+ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (_3963659 = _3963661) |- ((_3963658 = _3963660) ==> (((% _3963658) _3963659) = ((% _3963660) _3963661)))
T c==> c= f0 f1 c==> c= f2 f3 c= c% f2 f0 c% f3 f1
- |- ((!a. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ c/\ cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN f1 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN cvector_sub f0 b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN cvector_sub f1 b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cIN ccross cvector_sub f0 b0 cvector_sub f1 b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ c= cvector_sub f2 b0 cvector_add c% b6 cvector_sub f0 b0 cvector_add c% b5 cvector_sub f1 b0 c% b4 ccross cvector_sub f0 b0 cvector_sub f1 b0 c/\ ! ! ! c==> c= cvector_sub f2 b0 cvector_add c% b7 cvector_sub f0 b0 cvector_add c% b8 cvector_sub f1 b0 c% b9 ccross cvector_sub f0 b0 cvector_sub f1 b0 c/\ c= b7 b6 c/\ c= b8 b5 c= b9 b4 cIN f2 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c? / c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cIN f2 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cT
- (_3963638 = _3963640) |- ((_3963639 = _3963641) ==> ((_3963640 SUBSET _3963641) \/ (~ (_3963638 SUBSET _3963639))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- ((~ (_3963634 = _3963635)) \/ ((coplanar _3963635) \/ (~ (coplanar _3963634))))
T c\/ c~ c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
- ((a = F) ==> (((a /\ b) ==> c) = (a ==> (b ==> c)))) |- (((a /\ b) ==> c) = (a ==> (b ==> c)))
T c==> c==> c= f0 cF c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (((!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963549 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3)))))) ==> ((\tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963549 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3)))))) _3963550)) = ((\tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963549 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3)))))) _3963550))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b1 f9 * / ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b1 f9 f11 * / ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b1 f9 f11
- |- (((!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)) ==> ((\a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)) a)) = ((\a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)) a))
T c= c==> ! c==> c~ c==> c/\ c/\ ! c==> cIN b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub f1 b0 * * part cINSERT ccross cvector_sub f0 b0 cvector_sub f1 b0 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF * / c==> c~ c==> c/\ c/\ ! c==> cIN b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub f1 b0 * * part cINSERT ccross cvector_sub f0 b0 cvector_sub f1 b0 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF f6 * / c==> c~ c==> c/\ c/\ ! c==> cIN b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub f1 b0 * * part cINSERT ccross cvector_sub f0 b0 cvector_sub f1 b0 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF f6
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. ((((dot x) x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0))))) x)
T * / c= c= cdot b0 b0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 f0
+ (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) |- ((~ (a IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (_3963545 INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (_3963545 INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (_3963545 INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (_3963545 INSERT EMPTY)))))))))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- (?t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c? / c? / c? / c/\ c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 cvector_add c% b4 cvector_sub f3 f1 c% b5 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) |- ((coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))) = F)
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c= ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY cF
- |- ((!x. (!t3. (!t2. (!t1. ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))))) = T)
T c= ! ! ! ! c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN cvector_sub f3 f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cIN ccross cvector_sub f3 f0 cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ c= cvector_sub f5 f0 cvector_add c% b3 cvector_sub f3 f0 cvector_add c% b2 cvector_sub f4 f0 c% b1 ccross cvector_sub f3 f0 cvector_sub f4 f0 c/\ ! ! ! c==> c= cvector_sub f5 f0 cvector_add c% b4 cvector_sub f3 f0 cvector_add c% b5 cvector_sub f4 f0 c% b6 ccross cvector_sub f3 f0 cvector_sub f4 f0 c/\ c= b4 b3 c/\ c= b5 b2 c= b6 b1 cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cT
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> c= cvector_sub f3 f1 cvector_add c% f4 cvector_sub f0 f1 cvector_add c% f5 cvector_sub f2 f1 c% f6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c==> c/\ c= cvector_sub f3 f1 cvector_add c% f4 cvector_sub f0 f1 cvector_add c% f5 cvector_sub f2 f1 c% f6 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f3 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- (~ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))), (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((~ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) /\ F)
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f5 f4 * * part cINSERT cvector_sub f6 f4 * * part cINSERT ccross cvector_sub f5 f4 cvector_sub f6 f4 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- (((!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))) ==> ((\t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))) t2)) = ((\t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))) t2))
T c= c==> ! ! c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b0 f1 cvector_add c% b1 f2 c% b0 f3 c? / c? / c? / c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f3 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b3 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cF * / ! c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b0 f1 cvector_add c% b1 f2 c% b0 f3 c? / c? / c? / c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f3 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b3 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cF f4 * / ! c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b0 f1 cvector_add c% b1 f2 c% b0 f3 c? / c? / c? / c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f3 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b3 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cF f4
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((\t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))) t2) |- (((\t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))) t2) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> * / c? / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 c% b1 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b2 cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 c% b4 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b2 f7 c/\ c= b3 b0 c= b4 b1 f8 c/\ * / c? / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 c% b1 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b2 cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 c% b4 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b2 f7 c/\ c= b3 b0 c= b4 b1 f8 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- (~ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))), (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((~ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f6 f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f0 f4 cvector_add c% f7 cvector_sub f5 f4 cvector_add c% f8 cvector_sub f6 f4 c% f9 ccross cvector_sub f5 f4 cvector_sub f6 f4 c/\ ! ! ! c==> c= cvector_sub f0 f4 cvector_add c% b0 cvector_sub f5 f4 cvector_add c% b1 cvector_sub f6 f4 c% b2 ccross cvector_sub f5 f4 cvector_sub f6 f4 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((((cross ((vector_sub y) x)) ((vector_sub z) x)) = (vec (NUMERAL _0))) = (collinear (x INSERT (y INSERT (z INSERT EMPTY)))))
T c= c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) ==> ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY)))))))))
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c==> c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c==> ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY
- (_3963671 = _3963673) |- ((_3963670 = _3963672) ==> (((hull _3963670) _3963671) = ((hull _3963672) _3963673)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- (~ (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0))))) |- ((~ (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ F)
T c==> c~ c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) = (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) = T)
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c= cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cT
+ |- (((~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) ==> F) = (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))
T c= c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((((((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))) /\ (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) /\ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ c/\ c/\ c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) /\ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- |- ((!x'. (!c. (!b. (!a. ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))))) = T)
T c= ! ! ! ! c==> c/\ c/\ ! c==> cIN b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b4 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b2 b3 * * part cINSERT cvector_sub b1 b3 * * part cINSERT ccross cvector_sub b2 b3 cvector_sub b1 b3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (!t3. (((\t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))) t3) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> * / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% f8 cvector_sub f2 f1 c% b1 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b1 f7 c/\ c= b2 f8 c= b3 b1 b0 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub ((vector_sub b) a)) (vec (NUMERAL _0))))) ((vector_add ((% t2) ((vector_sub ((vector_sub c) a)) (vec (NUMERAL _0))))) ((% t3) ((vector_sub ((cross ((vector_sub b) a)) ((vector_sub c) a))) (vec (NUMERAL _0))))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub ((vector_sub b) a)) (vec (NUMERAL _0))))) ((vector_add ((% tb) ((vector_sub ((vector_sub c) a)) (vec (NUMERAL _0))))) ((% tc) ((vector_sub ((cross ((vector_sub b) a)) ((vector_sub c) a))) (vec (NUMERAL _0))))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub cvector_sub f1 f0 cvec cNUMERAL c_0 cvector_add c% b2 cvector_sub cvector_sub f2 f0 cvec cNUMERAL c_0 c% b3 cvector_sub ccross cvector_sub f1 f0 cvector_sub f2 f0 cvec cNUMERAL c_0 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub cvector_sub f1 f0 cvec cNUMERAL c_0 cvector_add c% b5 cvector_sub cvector_sub f2 f0 cvec cNUMERAL c_0 c% b6 cvector_sub ccross cvector_sub f1 f0 cvector_sub f2 f0 cvec cNUMERAL c_0 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((!w'. ((~ (a IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = ((!w. (~ (a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))) \/ ((~ (b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c= ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c~ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ ! c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c~ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- (((((real_add _3963600) ((real_add _3963601) _3963602)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) = ((vector_add ((% _3963600) a)) ((vector_add ((% _3963601) b)) ((% _3963602) c))))) ==> F)
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> c/\ c= creal_add f6 creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 cvector_add c% f6 f3 cvector_add c% f7 f4 c% f8 f5 cF
- |- (((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F) ==> ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F))
T c==> c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF
- |- ((((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F) ==> ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)) = ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F))
T c= c==> c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) ==> F) = F)
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF cF
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (~ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> F)
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
- |- (((!x. (!y. (((dot x) ((cross x) y)) = (real_of_num (NUMERAL _0))))) ==> ((\x. (!y. (((dot x) ((cross x) y)) = (real_of_num (NUMERAL _0))))) x)) = ((\x. (!y. (((dot x) ((cross x) y)) = (real_of_num (NUMERAL _0))))) x))
T c= c==> ! ! c= cdot b0 ccross b0 b1 creal_of_num cNUMERAL c_0 * / ! c= cdot b0 ccross b0 b1 creal_of_num cNUMERAL c_0 f0 * / ! c= cdot b0 ccross b0 b1 creal_of_num cNUMERAL c_0 f0
- |- (((F /\ b) ==> c) = (F ==> (b ==> c)))
T c= c==> c/\ cF f0 f1 c==> cF c==> f0 f1
+ |- ((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i))))))
T c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f3 b0 c$ cvector_add c% f1 cvector_sub f4 f3 c% f2 cvector_sub f5 f3 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f3 b0 c$ cvector_add c% f1 cvector_sub f4 f3 c% f2 cvector_sub f5 f3 b0
+ |- (((!s. (EMPTY SUBSET s)) ==> ((\s. (EMPTY SUBSET s)) s)) = ((\s. (EMPTY SUBSET s)) s))
T c= c==> ! cSUBSET part cEMPTY b0 * / cSUBSET part cEMPTY b0 f0 * / cSUBSET part cEMPTY b0 f0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f3 b0 c$ cvector_add c% f1 cvector_sub f4 f3 c% f2 cvector_sub f5 f3 b0
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY
+ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f0 f1 cvector_add c% b5 cvector_sub f2 f1 c% b6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ |- ((((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub ((vector_sub b) a)) (vec (NUMERAL _0))))) ((vector_add ((% t2) ((vector_sub ((vector_sub c) a)) (vec (NUMERAL _0))))) ((% t3) ((vector_sub ((cross ((vector_sub b) a)) ((vector_sub c) a))) (vec (NUMERAL _0))))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub ((vector_sub b) a)) (vec (NUMERAL _0))))) ((vector_add ((% tb) ((vector_sub ((vector_sub c) a)) (vec (NUMERAL _0))))) ((% tc) ((vector_sub ((cross ((vector_sub b) a)) ((vector_sub c) a))) (vec (NUMERAL _0))))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))
T c= c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub cvector_sub f0 f1 cvec cNUMERAL c_0 cvector_add c% b2 cvector_sub cvector_sub f2 f1 cvec cNUMERAL c_0 c% b3 cvector_sub ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub cvector_sub f0 f1 cvec cNUMERAL c_0 cvector_add c% b5 cvector_sub cvector_sub f2 f1 cvec cNUMERAL c_0 c% b6 cvector_sub ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c==> cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (_3963634 = _3963635) |- ((((coplanar _3963634) = (coplanar _3963635)) ==> ((coplanar _3963635) \/ (~ (coplanar _3963634)))) = ((coplanar _3963635) \/ (~ (coplanar _3963634))))
T c==> c= f0 f1 c= c==> c= ccoplanar f0 ccoplanar f1 c\/ ccoplanar f1 c~ ccoplanar f0 c\/ ccoplanar f1 c~ ccoplanar f0
- (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))), (~ (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) ((real_add t1) t2)) = (real_of_num (NUMERAL (BIT1 _0))))) |- ((~ (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) ((real_add t1) t2)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) ((real_add t1) t2)) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c==> c~ c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))), (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f1 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f2 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f1 f0 cvector_sub f2 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f3 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f3 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
- (_3963658 = _3963660), (_3963659 = _3963661) |- ((_3963658 = _3963660) /\ (((% _3963658) _3963659) = ((% _3963660) _3963661)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= c% f0 f2 c% f1 f3
+ |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- |- ((\b. (!a. (!x'. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F)))))))))) b)
T * / ! ! ! ! ! ! ! ! c==> c~ c==> c/\ cSUBSET * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub f0 b1 * * part cINSERT ccross cvector_sub b0 b1 cvector_sub f0 b1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub f0 b1 part cEMPTY c/\ c= cvector_sub b2 b1 cvector_add c% b8 cvector_sub b0 b1 cvector_add c% b7 cvector_sub f0 b1 c% b6 ccross cvector_sub b0 b1 cvector_sub f0 b1 c/\ ! ! ! c==> c= cvector_sub b2 b1 cvector_add c% b9 cvector_sub b0 b1 cvector_add c% b10 cvector_sub f0 b1 c% b11 ccross cvector_sub b0 b1 cvector_sub f0 b1 c/\ c= b9 b8 c/\ c= b10 b7 c= b11 b6 c/\ cIN b2 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub f0 b1 part cEMPTY cIN b2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cF f1
+ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!z. (((dot x) ((vector_add y) z)) = ((real_add ((dot x) y)) ((dot x) z)))) ==> ((\z. (((dot x) ((vector_add y) z)) = ((real_add ((dot x) y)) ((dot x) z)))) z)) = ((\z. (((dot x) ((vector_add y) z)) = ((real_add ((dot x) y)) ((dot x) z)))) z))
T c= c==> ! c= cdot f0 cvector_add f1 b0 creal_add cdot f0 f1 cdot f0 b0 * / c= cdot f0 cvector_add f1 b0 creal_add cdot f0 f1 cdot f0 b0 f2 * / c= cdot f0 cvector_add f1 b0 creal_add cdot f0 f1 cdot f0 b0 f2
+ |- ((!b. ((F ==> b) ==> (F = (F /\ b)))) = (((F ==> T) ==> (F = (F /\ T))) /\ ((F ==> F) ==> (F = (F /\ F)))))
T c= ! c==> c==> cF b0 c= cF c/\ cF b0 c/\ c==> c==> cF cT c= cF c/\ cF cT c==> c==> cF cF c= cF c/\ cF cF
- (?t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((?t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c? / c? / c? / c/\ c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 cvector_add c% b4 cvector_sub f3 f1 c% b5 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c? / c? / c? / c/\ c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 cvector_add c% b4 cvector_sub f3 f1 c% b5 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2 c==> cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((_3963675 IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (_3963675 IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f7 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f7 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_add c% f2 cvector_sub f3 f1 c% f4 cvector_sub f5 f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 f1 cvector_add c% f2 f3 c% f4 f5 b0
- |- ((!tc'. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc' = t3))))) = ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> (!tc. ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))
T c= ! c==> c= f0 cvector_add c% f1 cvector_sub f2 f3 cvector_add c% f4 cvector_sub f5 f3 c% f6 cvector_sub f7 f3 c/\ c= f1 f8 c/\ c= f4 f9 c= b0 f10 c==> c= f0 cvector_add c% f1 cvector_sub f2 f3 cvector_add c% f4 cvector_sub f5 f3 c% f6 cvector_sub f7 f3 ! c/\ c= f1 f8 c/\ c= f4 f9 c= b0 f10
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F) |- (((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F) /\ ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F))
T c==> c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF c/\ c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- ((_3963671 = _3963673) ==> ((~ (_3963670 = _3963672)) \/ (((hull _3963670) _3963671) = ((hull _3963672) _3963673))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((!x. (((\t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))) x) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))) ==> ((?t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))) = ((?t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c==> ! c==> * / c? / c? / c/\ c= cvector_sub f6 f1 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b4 cvector_sub f0 f1 cvector_add c% b5 cvector_sub f2 f1 c% b6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 b0 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c? / c? / c? / c/\ c= cvector_sub f6 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b3 cvector_sub f0 f1 cvector_add c% b4 cvector_sub f2 f1 c% b5 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c? / c? / c? / c/\ c= cvector_sub f6 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b3 cvector_sub f0 f1 cvector_add c% b4 cvector_sub f2 f1 c% b5 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% _3963551) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963549 = t1))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% f12 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f10 f7
+ |- (((!x. (!y. (!z. (((dot x) ((vector_add y) z)) = ((real_add ((dot x) y)) ((dot x) z)))))) ==> ((\x. (!y. (!z. (((dot x) ((vector_add y) z)) = ((real_add ((dot x) y)) ((dot x) z)))))) x)) = ((\x. (!y. (!z. (((dot x) ((vector_add y) z)) = ((real_add ((dot x) y)) ((dot x) z)))))) x))
T c= c==> ! ! ! c= cdot b0 cvector_add b1 b2 creal_add cdot b0 b1 cdot b0 b2 * / ! ! c= cdot b0 cvector_add b1 b2 creal_add cdot b0 b1 cdot b0 b2 f0 * / ! ! c= cdot b0 cvector_add b1 b2 creal_add cdot b0 b1 cdot b0 b2 f0
+ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((t3 = (real_of_num (NUMERAL _0))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> c\/ c= f6 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\t2. (!t1. ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F))) t2)
T * / ! c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% b1 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% f7 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b2 cvector_sub f1 f0 cvector_add c% b3 cvector_sub f2 f0 c% b4 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b2 b1 c/\ c= b3 b0 c= b4 f7 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f8
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((x' $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t1) (b $ i))) $ i)) ((lambdai. ((real_mul t2) (c $ i))) $ i))) $ i))) $ i)) ==> (((lambdai. ((real_sub (x' $ i)) (a $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul t1) ((lambdai. ((real_sub (b $ i)) (a $ i))) $ i))) $ i)) ((lambdai. ((real_mul t2) ((lambdai. ((real_sub (c $ i)) (a $ i))) $ i))) $ i))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul f2 c$ f5 b1 b1 c$ clambda / creal_mul f3 c$ f6 b1 b1 b0 f0 c= c$ clambda / creal_sub c$ f1 b0 c$ f4 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul f2 c$ clambda / creal_sub c$ f5 b1 c$ f4 b1 b1 b0 c$ clambda / creal_mul f3 c$ clambda / creal_sub c$ f6 b1 c$ f4 b1 b1 b0 f0
- (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- (((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> F) = F)
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF cF
- |- ((!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> (~ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0))))))))))) = T)
T c= ! ! ! c==> c~ c==> c= b0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b1 f0 cvector_add c% b2 f1 c% b1 f2 c? / c? / c? / c/\ c= creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b3 f0 cvector_add c% b4 f1 c% b5 f2 c~ ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b4 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 cT
- (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) /\ (~ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c/\ c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c~ ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((\u. (!v. (!w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) _3963546)
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / ! ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f10
- |- (((dot x) ((cross x) y)) = (real_of_num (NUMERAL _0)))
T c= cdot f0 ccross f0 f1 creal_of_num cNUMERAL c_0
- |- ((\t1. ((~ ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) ==> F)) t1)
T * / c==> c~ c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% f7 cvector_sub f5 f0 c% f8 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b1 cvector_sub f4 f0 cvector_add c% b2 cvector_sub f5 f0 c% b3 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b1 b0 c/\ c= b2 f7 c= b3 f8 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF f9
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((_3963662 = _3963664) ==> ((~ (_3963663 = _3963665)) \/ (((vector_add _3963662) _3963663) = ((vector_add _3963664) _3963665))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- |- ((_3963650 = _3963652) ==> ((~ (_3963651 = _3963653)) \/ (((vector_sub _3963650) _3963651) = ((vector_sub _3963652) _3963653))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cvector_sub f0 f2 cvector_sub f1 f3
- ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((!x'. ((P x') \/ Q)) = ((!x'. (P x')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- |- (((!c. (!b. (!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))))))) ==> ((\c. (!b. (!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))))))) c)) = ((\c. (!b. (!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))))))) c))
T c= c==> ! ! ! ! ! ! c==> c~ c==> c= b3 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b4 b2 cvector_add c% b5 b1 c% b4 b0 c? / c? / c? / c/\ c= creal_add b6 creal_add b7 b8 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b6 b2 cvector_add c% b7 b1 c% b8 b0 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b6 b7 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 cF * / ! ! ! ! ! c==> c~ c==> c= b3 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b4 b2 cvector_add c% b5 b1 c% b4 b0 c? / c? / c? / c/\ c= creal_add b6 creal_add b7 b8 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b6 b2 cvector_add c% b7 b1 c% b8 b0 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b6 b7 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 cF f0 * / ! ! ! ! ! c==> c~ c==> c= b3 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b4 b2 cvector_add c% b5 b1 c% b4 b0 c? / c? / c? / c/\ c= creal_add b6 creal_add b7 b8 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b6 b2 cvector_add c% b7 b1 c% b8 b0 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b6 b7 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 cF f0
- |- ((((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) ==> ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))) ==> (((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) ==> ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))))
T c==> c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\y. (((dot x) ((cross y) x)) = (real_of_num (NUMERAL _0)))) y)
T * / c= cdot f0 ccross b0 f0 creal_of_num cNUMERAL c_0 f1
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((~ ((vec (NUMERAL _0)) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (_3963548 INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (_3963548 INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (_3963548 INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (_3963548 INSERT EMPTY)))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY
+ (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- (((!x'. ((~ (x' IN (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ ! c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))) ==> ((\y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))) y)) = ((\y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))) y))
T c= c==> ! c= cdot f0 c% f1 b0 creal_mul f1 cdot f0 b0 * / c= cdot f0 c% f1 b0 creal_mul f1 cdot f0 b0 f2 * / c= cdot f0 c% f1 b0 creal_mul f1 cdot f0 b0 f2
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F), (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\c. (!b. (!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))))))) c)
T * / ! ! ! ! ! c==> c~ c==> c= b3 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b4 b2 cvector_add c% b5 b1 c% b4 b0 c? / c? / c? / c/\ c= creal_add b6 creal_add b7 b8 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b6 b2 cvector_add c% b7 b1 c% b8 b0 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b6 b7 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 cF f0
- |- ((\x'. (!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F))))) x')
T * / ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b4 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b2 b3 * * part cINSERT cvector_sub b1 b3 * * part cINSERT ccross cvector_sub b2 b3 cvector_sub b1 b3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f3
+ |- (((!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))) ==> ((\t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))) t)) = ((\t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))) t))
T c= c==> ! c= cSUBSET * * part cINSERT f0 f1 b0 c/\ cIN f0 b0 cSUBSET f1 b0 * / c= cSUBSET * * part cINSERT f0 f1 b0 c/\ cIN f0 b0 cSUBSET f1 b0 f2 * / c= cSUBSET * * part cINSERT f0 f1 b0 c/\ cIN f0 b0 cSUBSET f1 b0 f2
+ |- ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> F)
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 cF
- |- ((\z. (!y. (!x. (!t3. (!t2. (!t1. ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F))))))) z)
T * / ! ! ! ! ! c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f3 f0 cvector_add c% b5 cvector_sub f1 f0 cvector_add c% b4 cvector_sub f2 f0 c% b3 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f3 f0 cvector_add c% b6 cvector_sub f1 f0 cvector_add c% b7 cvector_sub f2 f0 c% b8 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b6 b5 c/\ c= b7 b4 c= b8 b3 c/\ cIN f3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f4
- (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) |- ((\ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) ta)
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 * / ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 f7
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))))) |- ((~ (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))))) /\ (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))))
T c==> c~ c= cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 c/\ c~ c= cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 c= cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4
- (~ F), (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))), (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f1 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f2 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f1 f0 cvector_sub f2 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f3 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f3 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ cF cF
+ |- ((\s. (EMPTY SUBSET s)) s)
T * / cSUBSET part cEMPTY b0 f0
+ |- ((\t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))) t)
T * / c= cSUBSET * * part cINSERT f0 f1 b0 c/\ cIN f0 b0 cSUBSET f1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (t3 = (real_of_num (NUMERAL _0))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) |- (((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% (real_of_num (NUMERAL _0))) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) = (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c==> c= cvector_sub f1 f2 cvector_add c% f3 cvector_sub f4 f2 cvector_add c% f5 cvector_sub f6 f2 c% f0 ccross cvector_sub f4 f2 cvector_sub f6 f2 c= c==> c= cvector_sub f1 f2 cvector_add c% f3 cvector_sub f4 f2 cvector_add c% f5 cvector_sub f6 f2 c% creal_of_num cNUMERAL c_0 ccross cvector_sub f4 f2 cvector_sub f6 f2 cIN f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY cIN f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((~ F) ==> F)
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c==> c~ cF cF
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((!x. (((\t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))) x) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))) ==> ((?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))) = ((?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c==> ! c==> * / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% f8 cvector_sub f2 f1 c% b1 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b2 cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 c% b4 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b2 f7 c/\ c= b3 f8 c= b4 b1 b0 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c? / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% f8 cvector_sub f2 f1 c% b0 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b1 f7 c/\ c= b2 f8 c= b3 b0 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c? / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% f8 cvector_sub f2 f1 c% b0 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b1 f7 c/\ c= b2 f8 c= b3 b0 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- ((\t1. ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F)) t1)
T * / c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% f7 cvector_sub f2 f0 c% f8 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b1 cvector_sub f1 f0 cvector_add c% b2 cvector_sub f2 f0 c% b3 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b1 b0 c/\ c= b2 f7 c= b3 f8 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f9
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((\a. (!x'. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F))))))))) a)
T * / ! ! ! ! ! ! ! c==> c~ c==> c/\ cSUBSET * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub f1 b0 * * part cINSERT ccross cvector_sub f0 b0 cvector_sub f1 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub f1 b0 part cEMPTY c/\ c= cvector_sub b1 b0 cvector_add c% b7 cvector_sub f0 b0 cvector_add c% b6 cvector_sub f1 b0 c% b5 ccross cvector_sub f0 b0 cvector_sub f1 b0 c/\ ! ! ! c==> c= cvector_sub b1 b0 cvector_add c% b8 cvector_sub f0 b0 cvector_add c% b9 cvector_sub f1 b0 c% b10 ccross cvector_sub f0 b0 cvector_sub f1 b0 c/\ c= b8 b7 c/\ c= b9 b6 c= b10 b5 c/\ cIN b1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub f1 b0 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF f2
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ ((\t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))) t1) |- (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))
T c==> * / c? / c? / c/\ c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 cvector_add c% b4 cvector_sub f3 f1 c% b5 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2 f4 c? / c? / c/\ c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% b0 cvector_sub f3 f1 c% b1 ccross cvector_sub f2 f1 cvector_sub f3 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 cvector_add c% b3 cvector_sub f3 f1 c% b4 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b2 f4 c/\ c= b3 b0 c= b4 b1
- (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c? / c/\ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% b0 ccross cvector_sub f3 f1 cvector_sub f5 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b1 cvector_sub f3 f1 cvector_add c% b2 cvector_sub f5 f1 c% b3 ccross cvector_sub f3 f1 cvector_sub f5 f1 c/\ c= b1 f2 c/\ c= b2 f4 c= b3 b0 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f3 f1 * * part cINSERT cvector_sub f5 f1 * * part cINSERT ccross cvector_sub f3 f1 cvector_sub f5 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY
+ |- ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY
- (_3963654 = _3963656) |- ((_3963654 = _3963656) /\ ((~ (_3963655 = _3963657)) \/ (((cross _3963654) _3963655) = ((cross _3963656) _3963657))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= ccross f0 f2 ccross f1 f3
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((?t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c? / c? / c/\ c= cvector_sub f6 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b3 cvector_sub f0 f1 cvector_add c% b4 cvector_sub f2 f1 c% b5 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- (((!w. ((~ (((real_add _3963600) ((real_add _3963601) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% _3963600) a)) ((vector_add ((% _3963601) b)) ((% w) c))))))) ==> ((\w. ((~ (((real_add _3963600) ((real_add _3963601) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% _3963600) a)) ((vector_add ((% _3963601) b)) ((% w) c))))))) _3963602)) = ((\w. ((~ (((real_add _3963600) ((real_add _3963601) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% _3963600) a)) ((vector_add ((% _3963601) b)) ((% w) c))))))) _3963602))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c= c==> ! c\/ c~ c= creal_add f6 creal_add f7 b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% f6 f3 cvector_add c% f7 f4 c% b0 f5 * / c\/ c~ c= creal_add f6 creal_add f7 b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% f6 f3 cvector_add c% f7 f4 c% b0 f5 f8 * / c\/ c~ c= creal_add f6 creal_add f7 b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% f6 f3 cvector_add c% f7 f4 c% b0 f5 f8
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_num (NUMERAL _0))) x) = x) /\ ((((real_add x) (real_of_num (NUMERAL _0))) = x) /\ ((((real_sub x) (real_of_num (NUMERAL _0))) = x) /\ ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))))))
T c/\ c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_num cNUMERAL c_0 f0 f0 c/\ c= creal_add f0 creal_of_num cNUMERAL c_0 f0 c/\ c= creal_sub f0 creal_of_num cNUMERAL c_0 f0 c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f0 f1 cvector_add c% b5 cvector_sub f2 f1 c% b6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f0 f1 cvector_add c% b5 cvector_sub f2 f1 c% b6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- (_3963617 = _3963619) |- ((_3963617 = _3963619) /\ ((~ (_3963618 = _3963620)) \/ (((real_sub _3963617) _3963618) = ((real_sub _3963619) _3963620))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ ((((lambdai. ((real_sub (x' $ i)) (a $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul t1) ((lambdai. ((real_sub (b $ i)) (a $ i))) $ i))) $ i)) ((lambdai. ((real_mul t2) ((lambdai. ((real_sub (c $ i)) (a $ i))) $ i))) $ i))) $ i)) ==> ((x' $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t1) (b $ i))) $ i)) ((lambdai. ((real_mul t2) (c $ i))) $ i))) $ i))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_sub c$ f1 b0 c$ f2 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul f3 c$ clambda / creal_sub c$ f4 b1 c$ f2 b1 b1 b0 c$ clambda / creal_mul f5 c$ clambda / creal_sub c$ f6 b1 c$ f2 b1 b1 b0 f0 c= c$ f1 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c$ f2 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul f3 c$ f4 b1 b1 c$ clambda / creal_mul f5 c$ f6 b1 b1 b0 f0
+ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) _3963598)) _3963599)) ((real_add _3963598) _3963599)) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0
- (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) |- (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 ! c==> c= cvector_sub f0 f1 cvector_add c% f7 cvector_sub f2 f1 cvector_add c% f8 cvector_sub f3 f1 c% b0 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= f7 f4 c/\ c= f8 f5 c= b0 f6
- |- ((?w'. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))))))) = ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (?w. ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c= c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY
- (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) |- ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c= cvector_sub f0 f1 cvector_add c% f7 cvector_sub f2 f1 cvector_add c% f8 cvector_sub f3 f1 c% f9 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= f7 f4 c/\ c= f8 f5 c= f9 f6
- (~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))), (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (t3 = (real_of_num (NUMERAL _0))) |- ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) = (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c= c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f2 * * part cINSERT cvector_sub f3 f2 * * part cINSERT ccross cvector_sub f1 f2 cvector_sub f3 f2 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f2 * * part cINSERT cvector_sub f3 f2 * * part cINSERT ccross cvector_sub f1 f2 cvector_sub f3 f2 part cEMPTY
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((~ (_3963674 IN (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (_3963674 IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN f7 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f7 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) |- (((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))) = T)
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c= c==> c= cvector_sub f0 f1 cvector_add c% f7 cvector_sub f2 f1 cvector_add c% f8 cvector_sub f3 f1 c% f9 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= f7 f4 c/\ c= f8 f5 c= f9 f6 cT
- (_3963638 = _3963640), (_3963639 = _3963641) |- ((((_3963638 SUBSET _3963639) = (_3963640 SUBSET _3963641)) ==> ((_3963640 SUBSET _3963641) \/ (~ (_3963638 SUBSET _3963639)))) = ((_3963640 SUBSET _3963641) \/ (~ (_3963638 SUBSET _3963639))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cSUBSET f0 f2 cSUBSET f1 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) |- (((!w. ((~ (a IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))))))) ==> ((\w. ((~ (a IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))))))) _3963545)) = ((\w. ((~ (a IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))))))) _3963545))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY * / c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f6 * / c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f6
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- ((\v. (!w. ((~ (((real_add _3963600) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% _3963600) a)) ((vector_add ((% v) b)) ((% w) c)))))))) _3963601)
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 * / ! c\/ c~ c= creal_add f6 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% f6 f3 cvector_add c% b0 f4 c% b1 f5 f7
- |- (!c. (!b. (!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> (~ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0))))))))))))))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c~ ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- (!v. (!w. ((~ (((real_add _3963600) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% _3963600) a)) ((vector_add ((% v) b)) ((% w) c))))))))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 ! ! c\/ c~ c= creal_add f6 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% f6 f3 cvector_add c% b0 f4 c% b1 f5
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((\s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) s)
T * / c= ccoplanar b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ |- (((!x. (((vector_add x) (vec (NUMERAL _0))) = x)) ==> ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x)) = ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x))
T c= c==> ! c= cvector_add b0 cvec cNUMERAL c_0 b0 * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0 * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))) |- ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))) /\ (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((_3963634 = _3963635) ==> ((coplanar _3963635) \/ (~ (coplanar _3963634))))
T c==> c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (((!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963631 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3)))))) ==> ((\tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963631 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3)))))) _3963632)) = ((\tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963631 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3)))))) _3963632))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c= c==> ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b0 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b1 f9 * / ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b0 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b1 f9 f11 * / ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b0 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b1 f9 f11
- |- ((_3963638 = _3963640) ==> ((~ (_3963639 = _3963641)) \/ ((_3963640 SUBSET _3963641) \/ (~ (_3963638 SUBSET _3963639)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ |- ((((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) = ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))) = ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) = ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((_3963642 = _3963644) ==> ((~ (_3963643 = _3963645)) \/ ((_3963644 IN _3963645) \/ (~ (_3963642 IN _3963643)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- |- (((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
- (_3963646 = _3963647) |- ((_3963646 = _3963647) /\ ((NUMERAL _3963646) = (NUMERAL _3963647)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)
T * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
+ |- ((\b. ((a ==> b) ==> (a = (a /\ b)))) b)
T * / c==> c==> f0 b0 c= f0 c/\ f0 b0 f1
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)))) = T)
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub f1 f2 f0 c$ cvector_add c% f3 cvector_sub f4 f2 c% f5 cvector_sub f6 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 f2 cvector_add c% f3 f4 c% f5 f6 f0 cT
- ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- F
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cF
- (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (collinear (a INSERT (b INSERT (c INSERT EMPTY)))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\t. ((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t)))) t)
T * / c==> cSUBSET f0 b0 cSUBSET * * part chull part caffine f0 * * part chull part caffine b0 f1
- ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) |- (((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) /\ ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))
T c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c/\ c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((!x. (!y. (((dot x) ((cross y) x)) = (real_of_num (NUMERAL _0))))) /\ ((!x. (!y. (((dot ((cross x) y)) y) = (real_of_num (NUMERAL _0))))) /\ (!x. (!y. (((dot ((cross y) x)) y) = (real_of_num (NUMERAL _0)))))))
T c/\ ! ! c= cdot b0 ccross b1 b0 creal_of_num cNUMERAL c_0 c/\ ! ! c= cdot ccross b0 b1 b1 creal_of_num cNUMERAL c_0 ! ! c= cdot ccross b1 b0 b1 creal_of_num cNUMERAL c_0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i))))) = ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f3 b0 c$ cvector_add c% f1 cvector_sub f4 f3 c% f2 cvector_sub f5 f3 b0 c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c= cvector_sub f0 f3 cvector_add c% f1 cvector_sub f4 f3 c% f2 cvector_sub f5 f3
- (_3963625 = _3963626) |- ((_3963625 = _3963626) /\ ((BIT1 _3963625) = (BIT1 _3963626)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- (F = F)
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c= cF cF
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((~ (_3963646 = _3963647)) \/ ((NUMERAL _3963646) = (NUMERAL _3963647)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- |- ((_3963666 = _3963668) ==> ((~ (_3963667 = _3963669)) \/ ((_3963666 INSERT _3963667) = (_3963668 INSERT _3963669))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- ((\w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) w)
T * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- (_3963667 = _3963669), (_3963666 = _3963668) |- ((_3963667 = _3963669) /\ ((_3963666 INSERT _3963667) = (_3963668 INSERT _3963669)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
- (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) |- ((\tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))) tc)
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 * / c==> c= cvector_sub f0 f1 cvector_add c% f7 cvector_sub f2 f1 cvector_add c% f8 cvector_sub f3 f1 c% b0 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= f7 f4 c/\ c= f8 f5 c= b0 f6 f9
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ ((\t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))) t2) |- (((?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> * / c? / c/\ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% b0 cvector_sub f4 f1 c% b1 ccross cvector_sub f3 f1 cvector_sub f4 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b2 cvector_sub f3 f1 cvector_add c% b3 cvector_sub f4 f1 c% b4 ccross cvector_sub f3 f1 cvector_sub f4 f1 c/\ c= b2 f2 c/\ c= b3 b0 c= b4 b1 f5 c= c==> c? / c/\ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f5 cvector_sub f4 f1 c% b0 ccross cvector_sub f3 f1 cvector_sub f4 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b1 cvector_sub f3 f1 cvector_add c% b2 cvector_sub f4 f1 c% b3 ccross cvector_sub f3 f1 cvector_sub f4 f1 c/\ c= b1 f2 c/\ c= b2 f5 c= b3 b0 c==> cIN f0 * * part chull part caffine * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- ((a ==> b) ==> (a = (a /\ b)))
T c==> c==> f0 f1 c= f0 c/\ f0 f1
+ |- (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) = ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((~ (_3963675 IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) \/ (_3963675 IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cIN f7 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f7 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) = (vec (NUMERAL _0))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= ccross cvector_sub f1 f0 cvector_sub f2 f0 cvec cNUMERAL c_0 c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\s. (!t. ((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t))))) s)
T * / ! c==> cSUBSET b0 b1 cSUBSET * * part chull part caffine b0 * * part chull part caffine b1 f0
- |- ((\b. (!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))))))) b)
T * / ! ! ! ! c==> c~ c==> c= b2 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b3 b1 cvector_add c% b4 b0 c% b3 f0 c? / c? / c? / c/\ c= creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b5 b1 cvector_add c% b6 b0 c% b7 f0 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b6 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 cF f1
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963631 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b0 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% b0 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b1 f9
+ (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) |- (((!u. (!v. (!w. ((~ (a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) ==> ((\u. (!v. (!w. ((~ (a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) _3963543)) = ((\u. (!v. (!w. ((~ (a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) _3963543))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> ! ! ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f4 * / ! ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f4
- |- (((!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))))) ==> ((\a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))))) a)) = ((\a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))))) a))
T c= c==> ! ! ! ! c==> c~ c==> c= b1 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b2 b0 cvector_add c% b3 f0 c% b2 f1 c? / c? / c? / c/\ c= creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b4 b0 cvector_add c% b5 f0 c% b6 f1 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b5 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 cF * / ! ! ! c==> c~ c==> c= b1 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b2 b0 cvector_add c% b3 f0 c% b2 f1 c? / c? / c? / c/\ c= creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b4 b0 cvector_add c% b5 f0 c% b6 f1 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b5 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 cF f2 * / ! ! ! c==> c~ c==> c= b1 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b2 b0 cvector_add c% b3 f0 c% b2 f1 c? / c? / c? / c/\ c= creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b4 b0 cvector_add c% b5 f0 c% b6 f1 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b5 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 cF f2
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
+ |- (((!s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))) ==> ((\s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))) s)) = ((\s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))) s))
T c= c==> ! ! c= cSUBSET * * part cINSERT f0 b0 b1 c/\ cIN f0 b1 cSUBSET b0 b1 * / ! c= cSUBSET * * part cINSERT f0 b0 b1 c/\ cIN f0 b1 cSUBSET b0 b1 f1 * / ! c= cSUBSET * * part cINSERT f0 b0 b1 c/\ cIN f0 b1 cSUBSET b0 b1 f1
- (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))), (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))
T c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% f8 cvector_sub f2 f1 c% f9 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c/\ c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY
- (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((~ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) ==> F)
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF
- (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))), (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((~ F) ==> F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f1 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f2 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f1 f0 cvector_sub f2 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f3 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f3 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ cF cF
- |- ((!b. (!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> (~ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0))))))))))))) = T)
T c= ! ! ! ! ! c==> c~ c==> c= b2 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b3 b1 cvector_add c% b4 b0 c% b3 f0 c? / c? / c? / c/\ c= creal_add b5 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b5 b1 cvector_add c% b6 b0 c% b7 f0 c~ ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b6 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 cT
+ |- (((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) = ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY)))))))
T c= c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f4 f0 * * part cINSERT cvector_sub f5 f0 * * part cINSERT ccross cvector_sub f4 f0 cvector_sub f5 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
- |- ((_3963646 = _3963647) ==> ((NUMERAL _3963646) = (NUMERAL _3963647)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) |- ((t3 = (real_of_num (NUMERAL _0))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% f6 ccross cvector_sub f3 f1 cvector_sub f5 f1 c==> c= f6 creal_of_num cNUMERAL c_0 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY
+ |- (((!v3. (!v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))))) ==> ((\v3. (!v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))))) v3)) = ((\v3. (!v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))))) v3))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c? / c? / c? / c/\ c= b2 cvector_add c% b3 cvector_sub f0 b1 cvector_add c% b4 cvector_sub f1 b1 c% b5 cvector_sub b0 b1 ! ! ! c==> c= b2 cvector_add c% b6 cvector_sub f0 b1 cvector_add c% b7 cvector_sub f1 b1 c% b8 cvector_sub b0 b1 c/\ c= b6 b3 c/\ c= b7 b4 c= b8 b5 * / ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c? / c? / c? / c/\ c= b2 cvector_add c% b3 cvector_sub f0 b1 cvector_add c% b4 cvector_sub f1 b1 c% b5 cvector_sub b0 b1 ! ! ! c==> c= b2 cvector_add c% b6 cvector_sub f0 b1 cvector_add c% b7 cvector_sub f1 b1 c% b8 cvector_sub b0 b1 c/\ c= b6 b3 c/\ c= b7 b4 c= b8 b5 f2 * / ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c? / c? / c? / c/\ c= b2 cvector_add c% b3 cvector_sub f0 b1 cvector_add c% b4 cvector_sub f1 b1 c% b5 cvector_sub b0 b1 ! ! ! c==> c= b2 cvector_add c% b6 cvector_sub f0 b1 cvector_add c% b7 cvector_sub f1 b1 c% b8 cvector_sub b0 b1 c/\ c= b6 b3 c/\ c= b7 b4 c= b8 b5 f2
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
- |- ((((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F) ==> ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F)) = ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F))
T c= c==> c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- ((!x''. ((~ (x'' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) = ((!x'. (~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c= ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c\/ ! c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- ((~ (((real_add _3963600) ((real_add _3963601) _3963602)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% _3963600) a)) ((vector_add ((% _3963601) b)) ((% _3963602) c))))))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c\/ c~ c= creal_add f6 creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% f6 f3 cvector_add c% f7 f4 c% f8 f5
- (_3963662 = _3963664), (_3963663 = _3963665) |- ((_3963663 = _3963665) /\ (((vector_add _3963662) _3963663) = ((vector_add _3963664) _3963665)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- |- ((_3963659 = _3963661) ==> ((~ (_3963658 = _3963660)) \/ (((% _3963658) _3963659) = ((% _3963660) _3963661))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1
- (_3963617 = _3963619) |- ((_3963618 = _3963620) ==> (((real_sub _3963617) _3963618) = ((real_sub _3963619) _3963620)))
T c==> c= f0 f1 c==> c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
+ |- ((((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub ((vector_sub b) a)) (vec (NUMERAL _0))))) ((vector_add ((% t2) ((vector_sub ((vector_sub c) a)) (vec (NUMERAL _0))))) ((% t3) ((vector_sub ((cross ((vector_sub b) a)) ((vector_sub c) a))) (vec (NUMERAL _0))))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub ((vector_sub b) a)) (vec (NUMERAL _0))))) ((vector_add ((% tb) ((vector_sub ((vector_sub c) a)) (vec (NUMERAL _0))))) ((% tc) ((vector_sub ((cross ((vector_sub b) a)) ((vector_sub c) a))) (vec (NUMERAL _0))))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))
T c= c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f0 f1 cvector_add c% b5 cvector_sub f2 f1 c% b6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c==> cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub cvector_sub f0 f1 cvec cNUMERAL c_0 cvector_add c% b2 cvector_sub cvector_sub f2 f1 cvec cNUMERAL c_0 c% b3 cvector_sub ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub cvector_sub f0 f1 cvec cNUMERAL c_0 cvector_add c% b5 cvector_sub cvector_sub f2 f1 cvec cNUMERAL c_0 c% b6 cvector_sub ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c==> cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- ((~ (_3963666 = _3963668)) \/ ((~ (_3963667 = _3963669)) \/ ((_3963666 INSERT _3963667) = (_3963668 INSERT _3963669))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((!x'. (!c. (!b. (!a. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))))))))))) = (!x'. (!c. (!b. (!a. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((~ ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) ==> F))))))))))))
T c= ! ! ! ! ! ! ! ! ! ! c==> c/\ c/\ cIN b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c/\ cIN b2 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY c/\ cIN cvector_sub b2 b3 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY c/\ cIN cvector_sub b1 b3 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY cIN ccross cvector_sub b2 b3 cvector_sub b1 b3 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY c/\ c= cvector_sub b0 b3 cvector_add c% b9 cvector_sub b2 b3 cvector_add c% b8 cvector_sub b1 b3 c% b7 ccross cvector_sub b2 b3 cvector_sub b1 b3 c/\ ! ! ! c==> c= cvector_sub b0 b3 cvector_add c% b10 cvector_sub b2 b3 cvector_add c% b11 cvector_sub b1 b3 c% b12 ccross cvector_sub b2 b3 cvector_sub b1 b3 c/\ c= b10 b9 c/\ c= b11 b8 c= b12 b7 cIN b0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c? / c? / c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY c/\ cIN b2 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY ! ! ! ! ! ! ! ! ! ! c==> c~ c==> c/\ c/\ cIN b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c/\ cIN b2 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY c/\ cIN cvector_sub b2 b3 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY c/\ cIN cvector_sub b1 b3 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY cIN ccross cvector_sub b2 b3 cvector_sub b1 b3 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY c/\ c= cvector_sub b0 b3 cvector_add c% b9 cvector_sub b2 b3 cvector_add c% b8 cvector_sub b1 b3 c% b7 ccross cvector_sub b2 b3 cvector_sub b1 b3 c/\ ! ! ! c==> c= cvector_sub b0 b3 cvector_add c% b10 cvector_sub b2 b3 cvector_add c% b11 cvector_sub b1 b3 c% b12 ccross cvector_sub b2 b3 cvector_sub b1 b3 c/\ c= b10 b9 c/\ c= b11 b8 c= b12 b7 cIN b0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c? / c? / c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY c/\ cIN b2 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY cF
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (!v. (!w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% f8 cvector_sub f2 f1 c% f9 ccross cvector_sub f0 f1 cvector_sub f2 f1 c==> ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ |- (((!a. (!b. ((a ==> b) ==> (a = (a /\ b))))) ==> ((\a. (!b. ((a ==> b) ==> (a = (a /\ b))))) a)) = ((\a. (!b. ((a ==> b) ==> (a = (a /\ b))))) a))
T c= c==> ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 * / ! c==> c==> b0 b1 c= b0 c/\ b0 b1 f0 * / ! c==> c==> b0 b1 c= b0 c/\ b0 b1 f0
+ |- (((!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) ==> ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)) = ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s))
T c= c==> ! ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0 * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
+ |- ((\c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))))) c)
T * / ! ! c= cdot b1 c% b0 b2 creal_mul b0 cdot b1 b2 f0
+ |- ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)))) ==> ((\c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)))) c)) = ((\c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)))) c))
T c= c==> ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b2 * * part cINSERT cvector_sub b0 b2 * * part cINSERT ccross cvector_sub b1 b2 cvector_sub b0 b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF * / ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b2 * * part cINSERT cvector_sub b0 b2 * * part cINSERT ccross cvector_sub b1 b2 cvector_sub b0 b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f4 * / ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b2 * * part cINSERT cvector_sub b0 b2 * * part cINSERT ccross cvector_sub b1 b2 cvector_sub b0 b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f4
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (!x'. ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) = (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c= cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_3963654 = _3963656) ==> ((~ (_3963655 = _3963657)) \/ (((cross _3963654) _3963655) = ((cross _3963656) _3963657))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= ccross f0 f2 ccross f1 f3
- |- ((!a. (!x'. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub f1 b0 * * part cINSERT ccross cvector_sub f0 b0 cvector_sub f1 b0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub f1 b0 part cEMPTY c/\ c= cvector_sub b1 b0 cvector_add c% b7 cvector_sub f0 b0 cvector_add c% b6 cvector_sub f1 b0 c% b5 ccross cvector_sub f0 b0 cvector_sub f1 b0 c/\ ! ! ! c==> c= cvector_sub b1 b0 cvector_add c% b8 cvector_sub f0 b0 cvector_add c% b9 cvector_sub f1 b0 c% b10 ccross cvector_sub f0 b0 cvector_sub f1 b0 c/\ c= b8 b7 c/\ c= b9 b6 c= b10 b5 c/\ cIN b1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub f1 b0 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
- ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
- (a = F) |- ((a = F) /\ (((a /\ b) ==> c) = (a ==> (b ==> c))))
T c==> c= f0 cF c/\ c= f0 cF c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ |- ((\P. (!s. (((hull P) ((hull P) s)) = ((hull P) s)))) P)
T * / ! c= * * part chull b0 * * part chull b0 b1 * * part chull b0 b1 f0
- |- ((!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> (~ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))))))))) = T)
T c= ! ! ! ! c==> c~ c==> c= b1 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b2 b0 cvector_add c% b3 f0 c% b2 f1 c? / c? / c? / c/\ c= creal_add b4 creal_add b5 b6 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b4 b0 cvector_add c% b5 f0 c% b6 f1 c~ ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b5 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 cT
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% _3963551) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963549 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% _3963551) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963550 = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% _3963551) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963551 = t3))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% f12 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% f12 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f11 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% f12 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f12 f9
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (!t2. (((\t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))) t2) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> * / c? / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b1 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b2 cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 c% b4 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b2 f7 c/\ c= b3 b1 c= b4 b1 b0 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F), (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- ((\x. (!y. (!z. (((dot x) ((vector_add y) z)) = ((real_add ((dot x) y)) ((dot x) z)))))) x)
T * / ! ! c= cdot b0 cvector_add b1 b2 creal_add cdot b0 b1 cdot b0 b2 f0
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_sub f1 f2 f0 c$ cvector_add c% f3 cvector_sub f4 f2 c% f5 cvector_sub f6 f2 f0 c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 f2 cvector_add c% f3 f4 c% f5 f6 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub f1 f2 f0 c$ cvector_add c% f3 cvector_sub f4 f2 c% f5 cvector_sub f6 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 f2 cvector_add c% f3 f4 c% f5 f6 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub f1 f2 f0 c$ cvector_add c% f3 cvector_sub f4 f2 c% f5 cvector_sub f6 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 f2 cvector_add c% f3 f4 c% f5 f6 f0
- (a = F) |- ((((a /\ b) ==> c) = (a ==> (b ==> c))) = (((F /\ b) ==> c) = (F ==> (b ==> c))))
T c==> c= f0 cF c= c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 c= c==> c/\ cF f1 f2 c==> cF c==> f1 f2
+ (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))), (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- F
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f1 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f2 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f1 f0 cvector_sub f2 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f3 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f3 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF
- |- (((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) = T)
T c= c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
+ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) ((real_add t1) t2)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))))
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4
+ (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((x = (vec (NUMERAL _0))) = (((dot x) x) = (real_of_num (NUMERAL _0)))) |- ((((dot x) x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0))))
T c==> c= c= f0 cvec cNUMERAL c_0 c= cdot f0 f0 creal_of_num cNUMERAL c_0 c= c= cdot f0 f0 creal_of_num cNUMERAL c_0 c= f0 cvec cNUMERAL c_0
+ |- (((!v1. (!v2. (!v3. (!v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))))))) ==> ((\v1. (!v2. (!v3. (!v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))))))) v1)) = ((\v1. (!v2. (!v3. (!v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))))))) v1))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c? / c? / c? / c/\ c= b4 cvector_add c% b5 cvector_sub b0 b3 cvector_add c% b6 cvector_sub b1 b3 c% b7 cvector_sub b2 b3 ! ! ! c==> c= b4 cvector_add c% b8 cvector_sub b0 b3 cvector_add c% b9 cvector_sub b1 b3 c% b10 cvector_sub b2 b3 c/\ c= b8 b5 c/\ c= b9 b6 c= b10 b7 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c? / c? / c? / c/\ c= b4 cvector_add c% b5 cvector_sub b0 b3 cvector_add c% b6 cvector_sub b1 b3 c% b7 cvector_sub b2 b3 ! ! ! c==> c= b4 cvector_add c% b8 cvector_sub b0 b3 cvector_add c% b9 cvector_sub b1 b3 c% b10 cvector_sub b2 b3 c/\ c= b8 b5 c/\ c= b9 b6 c= b10 b7 f0 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c? / c? / c? / c/\ c= b4 cvector_add c% b5 cvector_sub b0 b3 cvector_add c% b6 cvector_sub b1 b3 c% b7 cvector_sub b2 b3 ! ! ! c==> c= b4 cvector_add c% b8 cvector_sub b0 b3 cvector_add c% b9 cvector_sub b1 b3 c% b10 cvector_sub b2 b3 c/\ c= b8 b5 c/\ c= b9 b6 c= b10 b7 f0
- (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) |- (((!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))) ==> ((\tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))) tb)) = ((\tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))) tb))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c= c==> ! ! c==> c= cvector_sub f0 f1 cvector_add c% f7 cvector_sub f2 f1 cvector_add c% b0 cvector_sub f3 f1 c% b1 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= f7 f4 c/\ c= b0 f5 c= b1 f6 * / ! c==> c= cvector_sub f0 f1 cvector_add c% f7 cvector_sub f2 f1 cvector_add c% b0 cvector_sub f3 f1 c% b1 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= f7 f4 c/\ c= b0 f5 c= b1 f6 f8 * / ! c==> c= cvector_sub f0 f1 cvector_add c% f7 cvector_sub f2 f1 cvector_add c% b0 cvector_sub f3 f1 c% b1 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= f7 f4 c/\ c= b0 f5 c= b1 f6 f8
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% _3963632) ((vector_sub c) a))) ((% _3963633) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963631 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% _3963632) ((vector_sub c) a))) ((% _3963633) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963632 = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963631) ((vector_sub b) a))) ((vector_add ((% _3963632) ((vector_sub c) a))) ((% _3963633) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963633 = t3))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% f11 cvector_sub f2 f0 c% f12 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% f11 cvector_sub f2 f0 c% f12 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= f11 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f1 f0 cvector_add c% f11 cvector_sub f2 f0 c% f12 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= f12 f9
- |- ((!t3. (!t2. (!t1. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))) = T)
T c= ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% b2 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b0 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b3 cvector_sub f1 f0 cvector_add c% b4 cvector_sub f2 f0 c% b5 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b3 b2 c/\ c= b4 b1 c= b5 b0 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
+ ((((dot x) x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0)))) |- ((x = (vec (NUMERAL _0))) = (((dot x) x) = (real_of_num (NUMERAL _0))))
T c==> c= c= cdot f0 f0 creal_of_num cNUMERAL c_0 c= f0 cvec cNUMERAL c_0 c= c= f0 cvec cNUMERAL c_0 c= cdot f0 f0 creal_of_num cNUMERAL c_0
- |- ((\y. (!x. (!t3. (!t2. (!t1. ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F)))))) y)
T * / ! ! ! ! c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f4 f0 cvector_add c% b4 cvector_sub f1 f0 cvector_add c% b3 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f4 f0 cvector_add c% b5 cvector_sub f1 f0 cvector_add c% b6 cvector_sub f2 f0 c% b7 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b5 b4 c/\ c= b6 b3 c= b7 b2 c/\ cIN f4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f5
- |- ((?w'. ((a IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) = ((?w. (a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))
T c= c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c? / cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
- |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) ==> ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c==> c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c==> ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((\x'. ((~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) _3963675)
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f7
- (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))), (~ F), (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- ((~ F) /\ F)
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c==> c~ cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c/\ c~ cF cF
- |- (((!y. (((dot x) ((cross y) x)) = (real_of_num (NUMERAL _0)))) ==> ((\y. (((dot x) ((cross y) x)) = (real_of_num (NUMERAL _0)))) y)) = ((\y. (((dot x) ((cross y) x)) = (real_of_num (NUMERAL _0)))) y))
T c= c==> ! c= cdot f0 ccross b0 f0 creal_of_num cNUMERAL c_0 * / c= cdot f0 ccross b0 f0 creal_of_num cNUMERAL c_0 f1 * / c= cdot f0 ccross b0 f0 creal_of_num cNUMERAL c_0 f1
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (((!ta. (!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (ta = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))))) ==> ((\ta. (!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (ta = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))))) _3963631)) = ((\ta. (!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (ta = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))))) _3963631))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c= c==> ! ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b0 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b1 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b2 f9 * / ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b0 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b1 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b2 f9 f10 * / ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b0 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b1 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b2 f9 f10
- |- ((\z. (!y. (!x. (!x'. (!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)))))))) z)
T * / ! ! ! ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b7 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! c==> cIN b7 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b7 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b5 b6 * * part cINSERT cvector_sub b4 b6 * * part cINSERT ccross cvector_sub b5 b6 cvector_sub b4 b6 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF f0
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
- (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) |- (((!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))) ==> ((\tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))) tc)) = ((\tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))) tc))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c= c==> ! c==> c= cvector_sub f0 f1 cvector_add c% f7 cvector_sub f2 f1 cvector_add c% f8 cvector_sub f3 f1 c% b0 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= f7 f4 c/\ c= f8 f5 c= b0 f6 * / c==> c= cvector_sub f0 f1 cvector_add c% f7 cvector_sub f2 f1 cvector_add c% f8 cvector_sub f3 f1 c% b0 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= f7 f4 c/\ c= f8 f5 c= b0 f6 f9 * / c==> c= cvector_sub f0 f1 cvector_add c% f7 cvector_sub f2 f1 cvector_add c% f8 cvector_sub f3 f1 c% b0 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= f7 f4 c/\ c= f8 f5 c= b0 f6 f9
+ |- ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a)))) = (x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))))
T c= c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 c% f4 cvector_sub f5 f1 c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 f1 cvector_add c% f2 f3 c% f4 f5
+ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))) |- (((?t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f0 f1 cvector_add c% b5 cvector_sub f2 f1 c% b6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c= c==> c? / c? / c? / c/\ c= cvector_sub f3 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f3 f1 cvector_add c% b3 cvector_sub f0 f1 cvector_add c% b4 cvector_sub f2 f1 c% b5 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2 c==> cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- (((real_sub x) (real_of_num (NUMERAL _0))) = x)
T c= creal_sub f0 creal_of_num cNUMERAL c_0 f0
- |- ((?w'. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w') c)))))) = ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (?w. (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))
T c= c? / c/\ c= creal_add f0 creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 c% b0 f6 c/\ c= creal_add f0 creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c? / c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 c% b0 f6
+ |- ((\v2. (!v3. (!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))))) v2)
T * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c? / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 c% b1 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b2 cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 c% b4 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b2 f7 c/\ c= b3 b0 c= b4 b1 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (collinear (a INSERT (b INSERT (c INSERT EMPTY)))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c/\ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((_3963625 = _3963626) ==> ((BIT1 _3963625) = (BIT1 _3963626)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F) ==> ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F))
T c==> c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ |- (((((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))) /\ (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) ==> (coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY))))))
T c==> c/\ c/\ c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY
- |- (((!x. (!y. (((dot x) ((cross y) x)) = (real_of_num (NUMERAL _0))))) ==> ((\x. (!y. (((dot x) ((cross y) x)) = (real_of_num (NUMERAL _0))))) x)) = ((\x. (!y. (((dot x) ((cross y) x)) = (real_of_num (NUMERAL _0))))) x))
T c= c==> ! ! c= cdot b0 ccross b1 b0 creal_of_num cNUMERAL c_0 * / ! c= cdot b0 ccross b1 b0 creal_of_num cNUMERAL c_0 f0 * / ! c= cdot b0 ccross b1 b0 creal_of_num cNUMERAL c_0 f0
- |- ((\x. (!t3. (!t2. (!t1. ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F))))) x)
T * / ! ! ! c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f5 f0 cvector_add c% b3 cvector_sub f1 f0 cvector_add c% b2 cvector_sub f2 f0 c% b1 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f5 f0 cvector_add c% b4 cvector_sub f1 f0 cvector_add c% b5 cvector_sub f2 f0 c% b6 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b4 b3 c/\ c= b5 b2 c= b6 b1 c/\ cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f6
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) = ((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- (((!x'. ((~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> ((\x'. ((~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) _3963675)) = ((\x'. ((~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) _3963675))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * / c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f7 * / c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f7
- |- ((!y. (!x. (!t3. (!t2. (!t1. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f4 f0 cvector_add c% b4 cvector_sub f1 f0 cvector_add c% b3 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f4 f0 cvector_add c% b5 cvector_sub f1 f0 cvector_add c% b6 cvector_sub f2 f0 c% b7 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b5 b4 c/\ c= b6 b3 c= b7 b2 c/\ cIN f4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- |- (((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F) = ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c= c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) = (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
+ |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% (real_of_num (NUMERAL _0))) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% creal_of_num cNUMERAL c_0 ccross cvector_sub f3 f1 cvector_sub f5 f1 cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((~ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) ==> (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 cF
- |- ((?w'. ((((real_add u) ((real_add v) w')) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))) = ((?w. (((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c))))))
T c= c? / c/\ c= creal_add f0 creal_add f1 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 c% f5 f6 c/\ c? / c= creal_add f0 creal_add f1 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 c% f5 f6
+ |- ((\y. (((dot ((cross y) x)) y) = (real_of_num (NUMERAL _0)))) y)
T * / c= cdot ccross b0 f0 b0 creal_of_num cNUMERAL c_0 f1
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((\t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))) t1) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> * / c? / c? / c/\ c= cvector_sub f6 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b3 cvector_sub f0 f1 cvector_add c% b4 cvector_sub f2 f1 c% b5 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2 f7 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((\v. (!w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (_3963546 INSERT (v INSERT (w INSERT EMPTY))))))))))) _3963547)
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f11
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> c= cvector_sub f3 f1 cvector_add c% f4 cvector_sub f0 f1 cvector_add c% f5 cvector_sub f2 f1 c% f6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> ! ! ! c==> c= cvector_sub f3 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> cIN f3 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY ccoplanar * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!c. (!b. (!a. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! c==> c/\ c/\ cIN b2 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY c/\ cIN cvector_sub b1 b2 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY c/\ cIN cvector_sub b0 b2 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY cIN ccross cvector_sub b1 b2 cvector_sub b0 b2 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY c/\ c= cvector_sub f0 b2 cvector_add c% b8 cvector_sub b1 b2 cvector_add c% b7 cvector_sub b0 b2 c% b6 ccross cvector_sub b1 b2 cvector_sub b0 b2 c/\ ! ! ! c==> c= cvector_sub f0 b2 cvector_add c% b9 cvector_sub b1 b2 cvector_add c% b10 cvector_sub b0 b2 c% b11 ccross cvector_sub b1 b2 cvector_sub b0 b2 c/\ c= b9 b8 c/\ c= b10 b7 c= b11 b6 cIN f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c? / c? / c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY cT
- |- (((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) = T)
T c= c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cT
+ (t3 = (real_of_num (NUMERAL _0))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) |- (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c==> c= cvector_sub f1 f2 cvector_add c% f3 cvector_sub f4 f2 cvector_add c% f5 cvector_sub f6 f2 c% f0 ccross cvector_sub f4 f2 cvector_sub f6 f2 cIN f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY
+ |- ((\v3. (!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))) v3)
T * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
- (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((~ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!z. (!y. (!x. (!t3. (!t2. (!t1. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f3 f0 cvector_add c% b5 cvector_sub f1 f0 cvector_add c% b4 cvector_sub f2 f0 c% b3 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f3 f0 cvector_add c% b6 cvector_sub f1 f0 cvector_add c% b7 cvector_sub f2 f0 c% b8 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b6 b5 c/\ c= b7 b4 c= b8 b3 c/\ cIN f3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- |- ((!x''. ((~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) \/ (x'' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) = ((~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) \/ (!x'. (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))
T c= ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- (_3963642 = _3963644) |- ((_3963642 = _3963644) /\ ((~ (_3963643 = _3963645)) \/ ((_3963644 IN _3963645) \/ (~ (_3963642 IN _3963643)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ |- (((!P. (!s. (((hull P) ((hull P) s)) = ((hull P) s)))) ==> ((\P. (!s. (((hull P) ((hull P) s)) = ((hull P) s)))) P)) = ((\P. (!s. (((hull P) ((hull P) s)) = ((hull P) s)))) P))
T c= c==> ! ! c= * * part chull b0 * * part chull b0 b1 * * part chull b0 b1 * / ! c= * * part chull b0 * * part chull b0 b1 * * part chull b0 b1 f0 * / ! c= * * part chull b0 * * part chull b0 b1 * * part chull b0 b1 f0
+ |- (((!v3. (!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))) ==> ((\v3. (!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))) v3)) = ((\v3. (!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))) v3))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!tc'. ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ ((ta = t1) /\ ((tb = t2) /\ (tc' = t3))))) = ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (!tc. ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))
T c= ! c\/ c~ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% f6 ccross cvector_sub f3 f1 cvector_sub f5 f1 c/\ c= f2 f7 c/\ c= f4 f8 c= b0 f9 c\/ c~ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% f6 ccross cvector_sub f3 f1 cvector_sub f5 f1 ! c/\ c= f2 f7 c/\ c= f4 f8 c= b0 f9
+ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c? / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% f8 cvector_sub f2 f1 c% b0 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b1 f7 c/\ c= b2 f8 c= b3 b0 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- (~ F), (~ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))), (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f5 f4 * * part cINSERT cvector_sub f6 f4 * * part cINSERT ccross cvector_sub f5 f4 cvector_sub f6 f4 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c~ cF cF
- |- ((!w'. ((~ (a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY)))))))))) = ((~ (a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (!w. ((~ (b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c= ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_sub f1 f2 f0 c$ cvector_add c% f3 cvector_sub f4 f2 c% f5 cvector_sub f6 f2 f0 c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 f2 cvector_add c% f3 f4 c% f5 f6 f0
+ (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) |- ((\u. (!v. (!w. ((~ (a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) _3963543)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f4
+ |- ((!v. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))) = ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))))
T c= ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f1 f0 cvector_add c% b2 cvector_sub f2 f0 c% b3 cvector_sub f3 f0 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f1 f0 cvector_add c% b5 cvector_sub f2 f0 c% b6 cvector_sub f3 f0 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f1 f0 cvector_add c% b2 cvector_sub f2 f0 c% b3 cvector_sub f3 f0 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f1 f0 cvector_add c% b5 cvector_sub f2 f0 c% b6 cvector_sub f3 f0 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (((c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) = ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((~ ((((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))) ==> ((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))))) ==> F)
T c==> c~ c==> c= creal_sub c$ f0 f1 c$ f2 f1 creal_add creal_mul f3 creal_sub c$ f4 f1 c$ f2 f1 creal_mul f5 creal_sub c$ f6 f1 c$ f2 f1 c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c$ f2 f1 creal_add creal_mul f3 c$ f4 f1 creal_mul f5 c$ f6 f1 cF
- (_3963621 = _3963623) |- ((_3963622 = _3963624) ==> (((real_add _3963621) _3963622) = ((real_add _3963623) _3963624)))
T c==> c= f0 f1 c==> c= f2 f3 c= creal_add f0 f2 creal_add f1 f3
- |- ((\x. (!y. (((dot x) ((cross x) y)) = (real_of_num (NUMERAL _0))))) x)
T * / ! c= cdot b0 ccross b0 b1 creal_of_num cNUMERAL c_0 f0
- |- ((\x'. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F)))))))) x')
T * / ! ! ! ! ! ! c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub b0 f0 cvector_add c% b6 cvector_sub f1 f0 cvector_add c% b5 cvector_sub f2 f0 c% b4 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub b0 f0 cvector_add c% b7 cvector_sub f1 f0 cvector_add c% b8 cvector_sub f2 f0 c% b9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b7 b6 c/\ c= b8 b5 c= b9 b4 c/\ cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f3
- ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)), (((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) ==> ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))) |- (((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) /\ ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))
T c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c/\ c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ |- ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((~ (_3963636 = _3963637)) \/ ((collinear _3963637) \/ (~ (collinear _3963636))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))), ((t3 = (real_of_num (NUMERAL _0))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) |- (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% f6 ccross cvector_sub f3 f1 cvector_sub f5 f1 c==> c==> ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> c\/ c= f6 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> c/\ c= cvector_sub f3 f1 cvector_add c% f4 cvector_sub f0 f1 cvector_add c% f5 cvector_sub f2 f1 c% f6 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f3 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ (t3 = (real_of_num (NUMERAL _0))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) |- ((t3 = (real_of_num (NUMERAL _0))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c==> c= cvector_sub f1 f2 cvector_add c% f3 cvector_sub f4 f2 cvector_add c% f5 cvector_sub f6 f2 c% f0 ccross cvector_sub f4 f2 cvector_sub f6 f2 c/\ c= f0 creal_of_num cNUMERAL c_0 cIN f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY
- (_3963634 = _3963635) |- ((_3963634 = _3963635) /\ ((coplanar _3963635) \/ (~ (coplanar _3963634))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
- (~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ F)
T c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- ((_3963648 = _3963649) ==> ((vec _3963648) = (vec _3963649)))
T c==> c= f0 f1 c= cvec f0 cvec f1
+ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\x. (!y. (((dot ((cross x) y)) y) = (real_of_num (NUMERAL _0))))) x)
T * / ! c= cdot ccross b0 b1 b1 creal_of_num cNUMERAL c_0 f0
- (~ ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- ((~ ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) /\ F)
T c==> c~ c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
+ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), ((t3 = (real_of_num (NUMERAL _0))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))), (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((t3 = (real_of_num (NUMERAL _0))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> c\/ c= f6 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c/\ c\/ c= f6 creal_of_num cNUMERAL c_0 ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((!b. ((T ==> b) ==> (T = (T /\ b)))) = (((T ==> T) ==> (T = (T /\ T))) /\ ((T ==> F) ==> (T = (T /\ F)))))
T c= ! c==> c==> cT b0 c= cT c/\ cT b0 c/\ c==> c==> cT cT c= cT c/\ cT cT c==> c==> cT cF c= cT c/\ cT cF
- |- ((((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) ==> ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))) = ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))
T c= c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- ((\u. (!v. (!w. ((~ (((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c))))))))) _3963600)
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 * / ! ! c\/ c~ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 f6
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY
+ |- (((!P. (!s. (!t. ((s SUBSET t) ==> (((hull P) s) SUBSET ((hull P) t)))))) ==> ((\P. (!s. (!t. ((s SUBSET t) ==> (((hull P) s) SUBSET ((hull P) t)))))) affine)) = ((\P. (!s. (!t. ((s SUBSET t) ==> (((hull P) s) SUBSET ((hull P) t)))))) affine))
T c= c==> ! ! ! c==> cSUBSET b1 b2 cSUBSET * * part chull b0 b1 * * part chull b0 b2 * / ! ! c==> cSUBSET b1 b2 cSUBSET * * part chull b0 b1 * * part chull b0 b2 part caffine * / ! ! c==> cSUBSET b1 b2 cSUBSET * * part chull b0 b1 * * part chull b0 b2 part caffine
- |- ((a = T) ==> (((a /\ b) ==> c) = (a ==> (b ==> c))))
T c==> c= f0 cT c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_3963638 = _3963640) |- ((_3963638 = _3963640) /\ ((~ (_3963639 = _3963641)) \/ ((_3963640 SUBSET _3963641) \/ (~ (_3963638 SUBSET _3963639)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ |- (((!t. ((s = t) = (!x. ((x IN s) = (x IN t))))) ==> ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t)) = ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t))
T c= c==> ! c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1 * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1
- (a = T) |- ((a = T) /\ (((a /\ b) ==> c) = (a ==> (b ==> c))))
T c==> c= f0 cT c/\ c= f0 cT c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
- (_3963643 = _3963645), (_3963642 = _3963644) |- ((_3963643 = _3963645) /\ ((_3963644 IN _3963645) \/ (~ (_3963642 IN _3963643))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cIN f3 f1 c~ cIN f2 f0
+ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((((((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) ((real_add t1) t2)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))))) ==> F) = F)
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c/\ c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 cF cF
+ |- ((x IN (GSPEC (\GEN%PVAR%1417. (P (SETSPEC GEN%PVAR%1417))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- (_3963666 = _3963668) |- ((_3963667 = _3963669) ==> ((_3963666 INSERT _3963667) = (_3963668 INSERT _3963669)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- ((EMPTY SUBSET s) = T)
T c= cSUBSET part cEMPTY f0 cT
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY
- |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- ((!c. (!b. (!a. ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) = T)
T c= ! ! ! c==> c/\ c/\ ! c==> cIN b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b1 b2 * * part cINSERT cvector_sub b0 b2 * * part cINSERT ccross cvector_sub b1 b2 cvector_sub b0 b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ (t3 = (real_of_num (NUMERAL _0))) |- ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) = (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% (real_of_num (NUMERAL _0))) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c= c= cvector_sub f1 f2 cvector_add c% f3 cvector_sub f4 f2 cvector_add c% f5 cvector_sub f6 f2 c% f0 ccross cvector_sub f4 f2 cvector_sub f6 f2 c= cvector_sub f1 f2 cvector_add c% f3 cvector_sub f4 f2 cvector_add c% f5 cvector_sub f6 f2 c% creal_of_num cNUMERAL c_0 ccross cvector_sub f4 f2 cvector_sub f6 f2
+ (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) |- (!w. ((~ (a IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (w INSERT EMPTY))))))))))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY
+ |- (((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) = (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) SUBSET ((hull affine) ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c= c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((!x'. (P \/ (Q x'))) = (P \/ (!x'. (Q x'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ |- ((F ==> t) = T)
T c= c==> cF f0 cT
+ |- (((!y. (((dot ((cross y) x)) y) = (real_of_num (NUMERAL _0)))) ==> ((\y. (((dot ((cross y) x)) y) = (real_of_num (NUMERAL _0)))) y)) = ((\y. (((dot ((cross y) x)) y) = (real_of_num (NUMERAL _0)))) y))
T c= c==> ! c= cdot ccross b0 f0 b0 creal_of_num cNUMERAL c_0 * / c= cdot ccross b0 f0 b0 creal_of_num cNUMERAL c_0 f1 * / c= cdot ccross b0 f0 b0 creal_of_num cNUMERAL c_0 f1
- (~ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))), (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- F
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f5 f4 * * part cINSERT cvector_sub f6 f4 * * part cINSERT ccross cvector_sub f5 f4 cvector_sub f6 f4 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) /\ (!u. (!v. (!w. ((~ (((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c))))))))))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c/\ c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 ! ! ! c\/ c~ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)
T * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((\ta. (!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (ta = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))))) _3963631)
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY * / ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b0 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b1 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b2 f9 f10
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> F)
T c==> c~ c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 cF
- ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((\ta. (!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (ta = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3))))))) _3963549)
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b1 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b2 f9 f10
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((\tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963549 = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3)))))) _3963550)
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f10 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b0 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% b1 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= b1 f9 f11
+ (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
- |- ((\t3. (!t2. (!t1. ((~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> F)))) t3)
T * / ! ! c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% b2 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b0 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b3 cvector_sub f1 f0 cvector_add c% b4 cvector_sub f2 f0 c% b5 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b3 b2 c/\ c= b4 b1 c= b5 b0 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f7
+ |- (((!v2. (!v3. (!v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))))))) ==> ((\v2. (!v3. (!v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))))))) v2)) = ((\v2. (!v3. (!v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))))))) v2))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c? / c? / c? / c/\ c= b3 cvector_add c% b4 cvector_sub f0 b2 cvector_add c% b5 cvector_sub b0 b2 c% b6 cvector_sub b1 b2 ! ! ! c==> c= b3 cvector_add c% b7 cvector_sub f0 b2 cvector_add c% b8 cvector_sub b0 b2 c% b9 cvector_sub b1 b2 c/\ c= b7 b4 c/\ c= b8 b5 c= b9 b6 * / ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c? / c? / c? / c/\ c= b3 cvector_add c% b4 cvector_sub f0 b2 cvector_add c% b5 cvector_sub b0 b2 c% b6 cvector_sub b1 b2 ! ! ! c==> c= b3 cvector_add c% b7 cvector_sub f0 b2 cvector_add c% b8 cvector_sub b0 b2 c% b9 cvector_sub b1 b2 c/\ c= b7 b4 c/\ c= b8 b5 c= b9 b6 f1 * / ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c? / c? / c? / c/\ c= b3 cvector_add c% b4 cvector_sub f0 b2 cvector_add c% b5 cvector_sub b0 b2 c% b6 cvector_sub b1 b2 ! ! ! c==> c= b3 cvector_add c% b7 cvector_sub f0 b2 cvector_add c% b8 cvector_sub b0 b2 c% b9 cvector_sub b1 b2 c/\ c= b7 b4 c/\ c= b8 b5 c= b9 b6 f1
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- (x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5
- |- ((!y. (!x. (!x'. (!c. (!b. (!a. ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ c/\ ! c==> cIN b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY ! c==> cIN b6 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY cIN b6 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b4 b5 * * part cINSERT cvector_sub b3 b5 * * part cINSERT ccross cvector_sub b4 b5 cvector_sub b3 b5 part cEMPTY cIN b2 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY cIN b2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ |- ((F /\ t) = F)
T c= c/\ cF f0 cF
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% _3963551) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963550 = t2))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% f12 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f11 f8
- |- ((((~ (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> F) ==> (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0))))) = (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))
T c= c==> c==> c~ c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 cF c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0
+ ((((cross ((vector_sub y) x)) ((vector_sub z) x)) = (vec (NUMERAL _0))) = (collinear (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (((cross ((vector_sub y) x)) ((vector_sub z) x)) = (vec (NUMERAL _0))))
T c==> c= c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0
+ |- ((\v3. (!v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))))) v3)
T * / ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c? / c? / c? / c/\ c= b2 cvector_add c% b3 cvector_sub f0 b1 cvector_add c% b4 cvector_sub f1 b1 c% b5 cvector_sub b0 b1 ! ! ! c==> c= b2 cvector_add c% b6 cvector_sub f0 b1 cvector_add c% b7 cvector_sub f1 b1 c% b8 cvector_sub b0 b1 c/\ c= b6 b3 c/\ c= b7 b4 c= b8 b5 f2
+ |- (((!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) ==> ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)) = ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t))
T c= c==> ! c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
- |- ((\a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)) a)
T * / c==> c~ c==> c/\ c/\ ! c==> cIN b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> cIN b1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 b0 * * part cINSERT cvector_sub f1 b0 * * part cINSERT ccross cvector_sub f0 b0 cvector_sub f1 b0 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF f6
- |- ((_3963629 = _3963630) ==> ((real_of_num _3963629) = (real_of_num _3963630)))
T c==> c= f0 f1 c= creal_of_num f0 creal_of_num f1
- |- ((_3963636 = _3963637) ==> ((collinear _3963637) \/ (~ (collinear _3963636))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ |- (((!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y))))) ==> ((\x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y))))) x)) = ((\x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y))))) x))
T c= c==> ! ! c= cdot b0 c% f0 b1 creal_mul f0 cdot b0 b1 * / ! c= cdot b0 c% f0 b1 creal_mul f0 cdot b0 b1 f1 * / ! c= cdot b0 c% f0 b1 creal_mul f0 cdot b0 b1 f1
- (a = T) |- ((((a /\ b) ==> c) = (a ==> (b ==> c))) = (((T /\ b) ==> c) = (T ==> (b ==> c))))
T c==> c= f0 cT c= c= c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2 c= c==> c/\ cT f1 f2 c==> cT c==> f1 f2
- |- ((\a. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((~ ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) ==> F)))))))) a)
T * / ! ! ! ! ! ! c==> c~ c==> c/\ c/\ cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN f1 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN cvector_sub f0 b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN cvector_sub f1 b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cIN ccross cvector_sub f0 b0 cvector_sub f1 b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ c= cvector_sub f2 b0 cvector_add c% b6 cvector_sub f0 b0 cvector_add c% b5 cvector_sub f1 b0 c% b4 ccross cvector_sub f0 b0 cvector_sub f1 b0 c/\ ! ! ! c==> c= cvector_sub f2 b0 cvector_add c% b7 cvector_sub f0 b0 cvector_add c% b8 cvector_sub f1 b0 c% b9 ccross cvector_sub f0 b0 cvector_sub f1 b0 c/\ c= b7 b6 c/\ c= b8 b5 c= b9 b4 cIN f2 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c? / c? / c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cIN f2 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cF f3
- |- ((\t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))) t2)
T * / ! c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b0 f1 cvector_add c% b1 f2 c% b0 f3 c? / c? / c? / c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f3 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b3 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cF f4
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 f4 cvector_add c% f2 f5 c% f3 f6 f0 c= c$ cvector_sub f1 f4 f0 c$ cvector_add c% f2 cvector_sub f5 f4 c% f3 cvector_sub f6 f4 f0
+ (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((!x'. ((~ (x' IN (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((~ (a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) ==> (a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_sub (x' $ i)) (a $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul t1) ((lambdai. ((real_sub (b $ i)) (a $ i))) $ i))) $ i)) ((lambdai. ((real_mul t2) ((lambdai. ((real_sub (c $ i)) (a $ i))) $ i))) $ i))) $ i)) ==> ((x' $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t1) (b $ i))) $ i)) ((lambdai. ((real_mul t2) (c $ i))) $ i))) $ i))) $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_sub c$ f1 b0 c$ f2 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul f3 c$ clambda / creal_sub c$ f4 b1 c$ f2 b1 b1 b0 c$ clambda / creal_mul f5 c$ clambda / creal_sub c$ f6 b1 c$ f2 b1 b1 b0 f0 c= c$ f1 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c$ f2 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul f3 c$ f4 b1 b1 c$ clambda / creal_mul f5 c$ f6 b1 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_sub f1 f2 f0 c$ cvector_add c% f3 cvector_sub f4 f2 c% f5 cvector_sub f6 f2 f0 c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 f2 cvector_add c% f3 f4 c% f5 f6 f0
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((\t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))) t3) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> * / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% f8 cvector_sub f2 f1 c% b0 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b1 f7 c/\ c= b2 f8 c= b3 b0 f9 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((~ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((\t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))) t3) |- (((\t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))) t3) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> * / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% f8 cvector_sub f2 f1 c% b0 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b1 f7 c/\ c= b2 f8 c= b3 b0 f9 c/\ * / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% f8 cvector_sub f2 f1 c% b0 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b1 f7 c/\ c= b2 f8 c= b3 b0 f9 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- (T = ((coplanar (x INSERT (y INSERT (z INSERT (t INSERT EMPTY))))) = (((dot ((cross ((vector_sub y) x)) ((vector_sub z) x))) ((vector_sub t) x)) = (real_of_num (NUMERAL _0)))))
T c= cT c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cdot ccross cvector_sub f1 f0 cvector_sub f2 f0 cvector_sub f3 f0 creal_of_num cNUMERAL c_0
- |- (((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))) = (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c= c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- (((!v. (!w. ((~ (((real_add _3963600) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% _3963600) a)) ((vector_add ((% v) b)) ((% w) c)))))))) ==> ((\v. (!w. ((~ (((real_add _3963600) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% _3963600) a)) ((vector_add ((% v) b)) ((% w) c)))))))) _3963601)) = ((\v. (!w. ((~ (((real_add _3963600) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% _3963600) a)) ((vector_add ((% v) b)) ((% w) c)))))))) _3963601))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c= c==> ! ! c\/ c~ c= creal_add f6 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% f6 f3 cvector_add c% b0 f4 c% b1 f5 * / ! c\/ c~ c= creal_add f6 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% f6 f3 cvector_add c% b0 f4 c% b1 f5 f7 * / ! c\/ c~ c= creal_add f6 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% f6 f3 cvector_add c% b0 f4 c% b1 f5 f7
- (_3963659 = _3963661) |- ((_3963659 = _3963661) /\ ((~ (_3963658 = _3963660)) \/ (((% _3963658) _3963659) = ((% _3963660) _3963661))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1
+ |- ((~ (((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))) ==> (((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))))) ==> F)
T c==> c~ c==> c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 f1 creal_add creal_mul f2 c$ f5 f1 creal_mul f3 c$ f6 f1 c= creal_sub c$ f0 f1 c$ f4 f1 creal_add creal_mul f2 creal_sub c$ f5 f1 c$ f4 f1 creal_mul f3 creal_sub c$ f6 f1 c$ f4 f1 cF
+ |- (((!x. (!y. (((dot ((cross y) x)) y) = (real_of_num (NUMERAL _0))))) ==> ((\x. (!y. (((dot ((cross y) x)) y) = (real_of_num (NUMERAL _0))))) x)) = ((\x. (!y. (((dot ((cross y) x)) y) = (real_of_num (NUMERAL _0))))) x))
T c= c==> ! ! c= cdot ccross b1 b0 b1 creal_of_num cNUMERAL c_0 * / ! c= cdot ccross b1 b0 b1 creal_of_num cNUMERAL c_0 f0 * / ! c= cdot ccross b1 b0 b1 creal_of_num cNUMERAL c_0 f0
- (_3963648 = _3963649) |- ((_3963648 = _3963649) /\ ((vec _3963648) = (vec _3963649)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cvec f0 cvec f1
- |- ((\t2. (!t1. ((~ ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) ==> F))) t2)
T * / ! c==> c~ c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% b1 cvector_sub f4 f0 cvector_add c% b0 cvector_sub f5 f0 c% f7 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b2 cvector_sub f4 f0 cvector_add c% b3 cvector_sub f5 f0 c% b4 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b2 b1 c/\ c= b3 b0 c= b4 f7 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f8
- (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a)))) |- ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a)))) /\ (x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))))
T c==> c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 c% f4 cvector_sub f5 f1 c/\ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 c% f4 cvector_sub f5 f1 c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 f1 cvector_add c% f2 f3 c% f4 f5
- |- ((((real_sub x) (real_of_num (NUMERAL _0))) = x) /\ ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c/\ c= creal_sub f0 creal_of_num cNUMERAL c_0 f0 c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((!x''. ((~ (x'' IN (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) = ((!x'. (~ (x' IN (a INSERT (b INSERT (c INSERT EMPTY)))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c= ! c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c\/ ! c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f0 f1 cvector_add c% b5 cvector_sub f2 f1 c% b6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (!t1. (((\t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))) t1) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> * / c? / c? / c/\ c= cvector_sub f6 f1 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b3 cvector_sub f0 f1 cvector_add c% b4 cvector_sub f2 f1 c% b5 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b3 b1 c/\ c= b4 b1 c= b5 b2 b0 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) |- (!u. (!v. (!w. ((~ (a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! ! ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (!ta. (!tb. (!tc. ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! ! c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9
+ (((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) ==> F), (((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 cF
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (!ta. (!tb. (!tc. (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (ta = t1)) /\ (((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tb = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (tc = t3)))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY ! ! ! c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b0 f7 c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b1 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= b2 f9
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((!ta. (!tb. (!tc. ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ ! ! ! c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F) |- (((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F) /\ ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F))
T c==> c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c/\ c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF
- |- ((\c. (!b. (!a. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((~ ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) ==> F)))))))))) c)
T * / ! ! ! ! ! ! ! ! c==> c~ c==> c/\ c/\ cIN b2 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY c/\ cIN cvector_sub b1 b2 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY c/\ cIN cvector_sub b0 b2 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY cIN ccross cvector_sub b1 b2 cvector_sub b0 b2 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY c/\ c= cvector_sub f0 b2 cvector_add c% b8 cvector_sub b1 b2 cvector_add c% b7 cvector_sub b0 b2 c% b6 ccross cvector_sub b1 b2 cvector_sub b0 b2 c/\ ! ! ! c==> c= cvector_sub f0 b2 cvector_add c% b9 cvector_sub b1 b2 cvector_add c% b10 cvector_sub b0 b2 c% b11 ccross cvector_sub b1 b2 cvector_sub b0 b2 c/\ c= b9 b8 c/\ c= b10 b7 c= b11 b6 cIN f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c? / c? / c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT b9 * * part cINSERT b10 * * part cINSERT b11 part cEMPTY cF f1
+ |- ((((~ (((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))) ==> (((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))))) ==> F) ==> (((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))) ==> (((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))))) = (((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))) ==> (((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i)))))))
T c= c==> c==> c~ c==> c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 f1 creal_add creal_mul f2 c$ f5 f1 creal_mul f3 c$ f6 f1 c= creal_sub c$ f0 f1 c$ f4 f1 creal_add creal_mul f2 creal_sub c$ f5 f1 c$ f4 f1 creal_mul f3 creal_sub c$ f6 f1 c$ f4 f1 cF c==> c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 f1 creal_add creal_mul f2 c$ f5 f1 creal_mul f3 c$ f6 f1 c= creal_sub c$ f0 f1 c$ f4 f1 creal_add creal_mul f2 creal_sub c$ f5 f1 c$ f4 f1 creal_mul f3 creal_sub c$ f6 f1 c$ f4 f1 c==> c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 f1 creal_add creal_mul f2 c$ f5 f1 creal_mul f3 c$ f6 f1 c= creal_sub c$ f0 f1 c$ f4 f1 creal_add creal_mul f2 creal_sub c$ f5 f1 c$ f4 f1 creal_mul f3 creal_sub c$ f6 f1 c$ f4 f1
- |- (((((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) ==> ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))) ==> (((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) ==> ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))) = (((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) ==> ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))))
T c= c==> c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((\b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) _3963598)) b)) ((real_add _3963598) b)) = (real_of_num (NUMERAL (BIT1 _0))))) _3963599)
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b0 creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 f1
+ |- ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t)
T * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1
- (t3 = (real_of_num (NUMERAL _0))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) = (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c= cIN f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- (((!y. (((dot ((cross x) y)) y) = (real_of_num (NUMERAL _0)))) ==> ((\y. (((dot ((cross x) y)) y) = (real_of_num (NUMERAL _0)))) y)) = ((\y. (((dot ((cross x) y)) y) = (real_of_num (NUMERAL _0)))) y))
T c= c==> ! c= cdot ccross f0 b0 b0 creal_of_num cNUMERAL c_0 * / c= cdot ccross f0 b0 b0 creal_of_num cNUMERAL c_0 f1 * / c= cdot ccross f0 b0 b0 creal_of_num cNUMERAL c_0 f1
- ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0
+ (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) |- (!v. (!w. ((~ (a IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ |- ((!x. (!y. (((dot ((cross x) y)) y) = (real_of_num (NUMERAL _0))))) /\ (!x. (!y. (((dot ((cross y) x)) y) = (real_of_num (NUMERAL _0))))))
T c/\ ! ! c= cdot ccross b0 b1 b1 creal_of_num cNUMERAL c_0 ! ! c= cdot ccross b1 b0 b1 creal_of_num cNUMERAL c_0
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) /\ ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
+ |- (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub ((vector_sub b) a)) (vec (NUMERAL _0))) INSERT (((vector_sub ((vector_sub c) a)) (vec (NUMERAL _0))) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) = ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub cvector_sub f1 f0 cvec cNUMERAL c_0 * * part cINSERT cvector_sub cvector_sub f2 f0 cvec cNUMERAL c_0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- (((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> (~ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))))) = T)
T c= c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c~ ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cT
+ |- (((((((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))) /\ (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) /\ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) = (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) ==> ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))))
T c= c==> c/\ c/\ c/\ c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c==> c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c==> ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((!t1. ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) = T)
T c= ! c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% f7 cvector_sub f5 f0 c% f8 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b1 cvector_sub f4 f0 cvector_add c% b2 cvector_sub f5 f0 c% b3 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b1 b0 c/\ c= b2 f7 c= b3 f8 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. (!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0))))))) x)
T * / ! c= c= creal_mul b0 b1 creal_of_num cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 creal_of_num cNUMERAL c_0 f0
- ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F) |- ((((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F) ==> ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)) ==> ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F))
T c==> c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c==> c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF c==> c~ c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF
+ |- ((real_neg ((real_sub (x' $ i)) ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i)))))) = ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))))))))
T c= creal_neg creal_sub c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 f1 creal_add creal_mul f2 c$ f5 f1 creal_mul f3 c$ f6 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 c$ f4 f1 creal_add creal_mul f2 c$ f5 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 c$ f4 f1 creal_add creal_mul f3 c$ f6 f1 creal_add c$ f4 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1
+ |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) = (!a. (!b. ((a ==> b) ==> (a = (a /\ b))))))
T c= c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1
- (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((\x'. ((~ (x' IN (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) _3963674)
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f7
+ |- (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) SUBSET ((hull affine) ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> c= cvector_sub f3 f1 cvector_add c% f4 cvector_sub f0 f1 cvector_add c% f5 cvector_sub f2 f1 c% f6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> ! ! ! c==> c= cvector_sub f3 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> cIN f3 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> ccollinear * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ |- ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) = ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))
T c= c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))) ==> (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c==> c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY
+ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) = ((((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) ((real_add t1) t2)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))))))
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= c= cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 c/\ c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 f2 cvector_add c% f0 f3 c% f1 f4
- (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (t3 = (real_of_num (NUMERAL _0))) |- (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = (real_of_num (NUMERAL _0)))))))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c= f6 creal_of_num cNUMERAL c_0 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 creal_of_num cNUMERAL c_0
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY
- |- (((!t. ((t = T) \/ (t = F))) ==> ((\t. ((t = T) \/ (t = F))) a)) = ((\t. ((t = T) \/ (t = F))) a))
T c= c==> ! c\/ c= b0 cT c= b0 cF * / c\/ c= b0 cT c= b0 cF f0 * / c\/ c= b0 cT c= b0 cF f0
- ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
+ |- (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) = (vec (NUMERAL _0))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) = ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= ccross cvector_sub f1 f0 cvector_sub f2 f0 cvec cNUMERAL c_0 c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- (!x'. ((~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) \/ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((!z. (!y. (!x. (!t3. (!t2. (!t1. ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN f2 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN cvector_sub f1 f0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN cvector_sub f2 f0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cIN ccross cvector_sub f1 f0 cvector_sub f2 f0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ c= cvector_sub f3 f0 cvector_add c% b5 cvector_sub f1 f0 cvector_add c% b4 cvector_sub f2 f0 c% b3 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f3 f0 cvector_add c% b6 cvector_sub f1 f0 cvector_add c% b7 cvector_sub f2 f0 c% b8 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b6 b5 c/\ c= b7 b4 c= b8 b3 cIN f3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cT
- |- ((\t3. (!t2. (!t1. ((~ ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) ==> F)))) t3)
T * / ! ! c==> c~ c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% b2 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b0 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b3 cvector_sub f4 f0 cvector_add c% b4 cvector_sub f5 f0 c% b5 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b3 b2 c/\ c= b4 b1 c= b5 b0 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF f7
+ |- (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY)))))) = (((((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))) /\ (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) ==> (coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY)))))))
T c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c==> c/\ c/\ c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f6 part cEMPTY
+ |- (!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 f4 cvector_add c% f2 f5 c% f3 f6 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub f1 f4 f0 c$ cvector_add c% f2 cvector_sub f5 f4 c% f3 cvector_sub f6 f4 f0
+ |- ((!x'. ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) = (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c= ! c= cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- ((\y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0)))))) y)
T * / c= c= creal_mul f0 b0 creal_of_num cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= b0 creal_of_num cNUMERAL c_0 f1
- (_3963636 = _3963637) |- ((((collinear _3963636) = (collinear _3963637)) ==> ((collinear _3963637) \/ (~ (collinear _3963636)))) = ((collinear _3963637) \/ (~ (collinear _3963636))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((!ta. (!tb. (!tc. ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! ! ! c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((a /\ b) /\ c) = (a /\ (b /\ c)))
T c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (((collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))) ==> F) = F)
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c= c==> ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cF cF
+ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))) |- (?t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))
T c==> ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f0 f1 cvector_add c% b5 cvector_sub f2 f1 c% b6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c? / c? / c? / c/\ c= cvector_sub f3 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f3 f1 cvector_add c% b3 cvector_sub f0 f1 cvector_add c% b4 cvector_sub f2 f1 c% b5 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2
- |- (T = (((F /\ b) ==> c) = (F ==> (b ==> c))))
T c= cT c= c==> c/\ cF f0 f1 c==> cF c==> f0 f1
+ |- (((!x. (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0)))) ==> ((\x. (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0)))) x)) = ((\x. (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0)))) x))
T c= c==> ! c= c% creal_of_num cNUMERAL c_0 b0 cvec cNUMERAL c_0 * / c= c% creal_of_num cNUMERAL c_0 b0 cvec cNUMERAL c_0 f0 * / c= c% creal_of_num cNUMERAL c_0 b0 cvec cNUMERAL c_0 f0
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0
+ |- ((~ F) = T)
T c= c~ cF cT
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!y. (!x. (!t3. (!t2. (!t1. ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN cvector_sub f2 f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN cvector_sub f3 f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cIN ccross cvector_sub f2 f0 cvector_sub f3 f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ c= cvector_sub f4 f0 cvector_add c% b4 cvector_sub f2 f0 cvector_add c% b3 cvector_sub f3 f0 c% b2 ccross cvector_sub f2 f0 cvector_sub f3 f0 c/\ ! ! ! c==> c= cvector_sub f4 f0 cvector_add c% b5 cvector_sub f2 f0 cvector_add c% b6 cvector_sub f3 f0 c% b7 ccross cvector_sub f2 f0 cvector_sub f3 f0 c/\ c= b5 b4 c/\ c= b6 b3 c= b7 b2 cIN f4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cT
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
+ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f0 f1 cvector_add c% b5 cvector_sub f2 f1 c% b6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- (_3963621 = _3963623) |- ((_3963621 = _3963623) /\ ((~ (_3963622 = _3963624)) \/ (((real_add _3963621) _3963622) = ((real_add _3963623) _3963624))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= creal_add f0 f2 creal_add f1 f3
- ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!b. (!a. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! c==> c/\ c/\ cIN b1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b8 * * part cINSERT b9 * * part cINSERT b10 part cEMPTY c/\ cIN cvector_sub b0 b1 * * part chull part caffine * * part cINSERT b8 * * part cINSERT b9 * * part cINSERT b10 part cEMPTY c/\ cIN cvector_sub f0 b1 * * part chull part caffine * * part cINSERT b8 * * part cINSERT b9 * * part cINSERT b10 part cEMPTY cIN ccross cvector_sub b0 b1 cvector_sub f0 b1 * * part chull part caffine * * part cINSERT b8 * * part cINSERT b9 * * part cINSERT b10 part cEMPTY c/\ c= cvector_sub f1 b1 cvector_add c% b7 cvector_sub b0 b1 cvector_add c% b6 cvector_sub f0 b1 c% b5 ccross cvector_sub b0 b1 cvector_sub f0 b1 c/\ ! ! ! c==> c= cvector_sub f1 b1 cvector_add c% b8 cvector_sub b0 b1 cvector_add c% b9 cvector_sub f0 b1 c% b10 ccross cvector_sub b0 b1 cvector_sub f0 b1 c/\ c= b8 b7 c/\ c= b9 b6 c= b10 b5 cIN f1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c? / c? / c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT b8 * * part cINSERT b9 * * part cINSERT b10 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b8 * * part cINSERT b9 * * part cINSERT b10 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b8 * * part cINSERT b9 * * part cINSERT b10 part cEMPTY cIN f1 * * part chull part caffine * * part cINSERT b8 * * part cINSERT b9 * * part cINSERT b10 part cEMPTY cT
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (!w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (_3963546 INSERT (_3963547 INSERT (w INSERT EMPTY))))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT b0 part cEMPTY
- ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
- |- ((\y. (!x. (!t3. (!t2. (!t1. ((~ ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) ==> F)))))) y)
T * / ! ! ! ! c==> c~ c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN cvector_sub f2 f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN cvector_sub f3 f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cIN ccross cvector_sub f2 f0 cvector_sub f3 f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ c= cvector_sub f4 f0 cvector_add c% b4 cvector_sub f2 f0 cvector_add c% b3 cvector_sub f3 f0 c% b2 ccross cvector_sub f2 f0 cvector_sub f3 f0 c/\ ! ! ! c==> c= cvector_sub f4 f0 cvector_add c% b5 cvector_sub f2 f0 cvector_add c% b6 cvector_sub f3 f0 c% b7 ccross cvector_sub f2 f0 cvector_sub f3 f0 c/\ c= b5 b4 c/\ c= b6 b3 c= b7 b2 cIN f4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cF f5
- (~ F), (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c~ cF cF
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (((!u. (!v. (!w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) ==> ((\u. (!v. (!w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) _3963546)) = ((\u. (!v. (!w. ((~ ((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) _3963546))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! ! ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f10 * / ! ! c\/ c~ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f10
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (t3 = (real_of_num (NUMERAL _0))) |- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) = ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c= cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ |- ((((~ ((((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))) ==> ((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))))) ==> F) ==> ((((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))) ==> ((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))))) = ((((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))) ==> ((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i)))))))
T c= c==> c==> c~ c==> c= creal_sub c$ f0 f1 c$ f2 f1 creal_add creal_mul f3 creal_sub c$ f4 f1 c$ f2 f1 creal_mul f5 creal_sub c$ f6 f1 c$ f2 f1 c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c$ f2 f1 creal_add creal_mul f3 c$ f4 f1 creal_mul f5 c$ f6 f1 cF c==> c= creal_sub c$ f0 f1 c$ f2 f1 creal_add creal_mul f3 creal_sub c$ f4 f1 c$ f2 f1 creal_mul f5 creal_sub c$ f6 f1 c$ f2 f1 c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c$ f2 f1 creal_add creal_mul f3 c$ f4 f1 creal_mul f5 c$ f6 f1 c==> c= creal_sub c$ f0 f1 c$ f2 f1 creal_add creal_mul f3 creal_sub c$ f4 f1 c$ f2 f1 creal_mul f5 creal_sub c$ f6 f1 c$ f2 f1 c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c$ f2 f1 creal_add creal_mul f3 c$ f4 f1 creal_mul f5 c$ f6 f1
- |- (((!z. (!y. (!x. (!x'. (!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)))))))) ==> ((\z. (!y. (!x. (!x'. (!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)))))))) z)) = ((\z. (!y. (!x. (!x'. (!c. (!b. (!a. ((~ ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) ==> F)))))))) z))
T c= c==> ! ! ! ! ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b7 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! c==> cIN b7 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b7 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b5 b6 * * part cINSERT cvector_sub b4 b6 * * part cINSERT ccross cvector_sub b5 b6 cvector_sub b4 b6 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF * / ! ! ! ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b7 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! c==> cIN b7 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b7 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b5 b6 * * part cINSERT cvector_sub b4 b6 * * part cINSERT ccross cvector_sub b5 b6 cvector_sub b4 b6 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF f0 * / ! ! ! ! ! ! c==> c~ c==> c/\ c/\ ! c==> cIN b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b7 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! c==> cIN b7 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b7 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b5 b6 * * part cINSERT cvector_sub b4 b6 * * part cINSERT ccross cvector_sub b5 b6 cvector_sub b4 b6 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cIN b3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i))))) = ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a)))) ==> (x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f1 b0 c$ cvector_add c% f2 cvector_sub f3 f1 c% f4 cvector_sub f5 f1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 f1 cvector_add c% f2 f3 c% f4 f5 b0 c==> c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 c% f4 cvector_sub f5 f1 c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 f1 cvector_add c% f2 f3 c% f4 f5
- |- (((~ ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) ==> F) ==> ((~ ((((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) ==> (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) ==> F))
T c==> c==> c~ c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF c==> c~ c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
- (~ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))), (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((~ F) ==> F)
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f5 f4 * * part cINSERT cvector_sub f6 f4 * * part cINSERT ccross cvector_sub f5 f4 cvector_sub f6 f4 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> c~ cF cF
+ |- ((((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))) ==> ((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))))
T c==> c= creal_sub c$ f0 f1 c$ f2 f1 creal_add creal_mul f3 creal_sub c$ f4 f1 c$ f2 f1 creal_mul f5 creal_sub c$ f6 f1 c$ f2 f1 c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c$ f2 f1 creal_add creal_mul f3 c$ f4 f1 creal_mul f5 c$ f6 f1
- |- ((_3963617 = _3963619) ==> ((~ (_3963618 = _3963620)) \/ (((real_sub _3963617) _3963618) = ((real_sub _3963619) _3963620))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0
+ |- ((\x. ((x = (vec (NUMERAL _0))) = (((dot x) x) = (real_of_num (NUMERAL _0))))) x)
T * / c= c= b0 cvec cNUMERAL c_0 c= cdot b0 b0 creal_of_num cNUMERAL c_0 f0
- |- (((T /\ b) ==> c) = (T ==> (b ==> c)))
T c= c==> c/\ cT f0 f1 c==> cT c==> f0 f1
+ |- ((((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY))))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) = (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) ==> ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))))
T c= c==> c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c==> cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (_3963671 = _3963673) |- ((_3963671 = _3963673) /\ ((~ (_3963670 = _3963672)) \/ (((hull _3963670) _3963671) = ((hull _3963672) _3963673))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- (_3963666 = _3963668) |- ((_3963666 = _3963668) /\ ((~ (_3963667 = _3963669)) \/ ((_3963666 INSERT _3963667) = (_3963668 INSERT _3963669))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\a. (!b. ((a ==> b) ==> (a = (a /\ b))))) a)
T * / ! c==> c==> b0 b1 c= b0 c/\ b0 b1 f0
+ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((coplanar (a INSERT (b INSERT (c INSERT (x' INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((~ (_3963659 = _3963661)) \/ ((~ (_3963658 = _3963660)) \/ (((% _3963658) _3963659) = ((% _3963660) _3963661))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 cF
+ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f1 f0 cvector_add c% b2 cvector_sub f2 f0 c% b3 ccross cvector_sub f1 f0 cvector_sub f2 f0 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f1 f0 cvector_add c% b5 cvector_sub f2 f0 c% b6 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (_3963650 = _3963652) |- ((_3963651 = _3963653) ==> (((vector_sub _3963650) _3963651) = ((vector_sub _3963652) _3963653)))
T c==> c= f0 f1 c==> c= f2 f3 c= cvector_sub f0 f2 cvector_sub f1 f3
- (_3963629 = _3963630) |- ((_3963629 = _3963630) /\ ((real_of_num _3963629) = (real_of_num _3963630)))
T c==> c= f0 f1 c/\ c= f0 f1 c= creal_of_num f0 creal_of_num f1
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) ==> F)
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
- |- ((!b. (!a. (!x'. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub f0 b1 * * part cINSERT ccross cvector_sub b0 b1 cvector_sub f0 b1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub f0 b1 part cEMPTY c/\ c= cvector_sub b2 b1 cvector_add c% b8 cvector_sub b0 b1 cvector_add c% b7 cvector_sub f0 b1 c% b6 ccross cvector_sub b0 b1 cvector_sub f0 b1 c/\ ! ! ! c==> c= cvector_sub b2 b1 cvector_add c% b9 cvector_sub b0 b1 cvector_add c% b10 cvector_sub f0 b1 c% b11 ccross cvector_sub b0 b1 cvector_sub f0 b1 c/\ c= b9 b8 c/\ c= b10 b7 c= b11 b6 c/\ cIN b2 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 b1 * * part cINSERT cvector_sub f0 b1 part cEMPTY cIN b2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cT
+ |- ((real_neg ((real_sub ((real_sub (x' $ i)) (a $ i))) ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i)))))) = ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))))))))
T c= creal_neg creal_sub creal_sub c$ f0 f1 c$ f2 f1 creal_add creal_mul f3 creal_sub c$ f4 f1 c$ f2 f1 creal_mul f5 creal_sub c$ f6 f1 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 c$ f2 f1 creal_add creal_mul f3 c$ f4 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f2 f1 creal_add creal_mul f5 c$ f6 f1 creal_add c$ f2 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1
- (~ ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- F
T c==> c~ c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))) |- ((\v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))) ((vector_sub x') a))
T c==> ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f0 f1 cvector_add c% b5 cvector_sub f2 f1 c% b6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 * / c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 c% b3 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f0 f1 cvector_add c% b5 cvector_sub f2 f1 c% b6 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3 cvector_sub f3 f1
- |- ((!c. (!b. (!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> (~ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))))))))))) = (!c. (!b. (!a. (!x'. (!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)))))))))
T c= ! ! ! ! ! ! c==> c~ c==> c= b3 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b4 b2 cvector_add c% b5 b1 c% b4 b0 c? / c? / c? / c/\ c= creal_add b6 creal_add b7 b8 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b6 b2 cvector_add c% b7 b1 c% b8 b0 c~ ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b6 b7 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 ! ! ! ! ! ! c==> c~ c==> c= b3 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b4 b2 cvector_add c% b5 b1 c% b4 b0 c? / c? / c? / c/\ c= creal_add b6 creal_add b7 b8 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b6 b2 cvector_add c% b7 b1 c% b8 b0 c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b6 b7 creal_add b6 b7 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> (~ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0))))))))) = T)
T c= ! c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 f2 cvector_add c% b0 f3 c% f1 f4 c? / c? / c? / c/\ c= creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c~ ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b2 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 cT
+ (~ (((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))) ==> (((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))))) |- ((~ (((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))) ==> (((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))))) /\ F)
T c==> c~ c==> c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 f1 creal_add creal_mul f2 c$ f5 f1 creal_mul f3 c$ f6 f1 c= creal_sub c$ f0 f1 c$ f4 f1 creal_add creal_mul f2 creal_sub c$ f5 f1 c$ f4 f1 creal_mul f3 creal_sub c$ f6 f1 c$ f4 f1 c/\ c~ c==> c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 f1 creal_add creal_mul f2 c$ f5 f1 creal_mul f3 c$ f6 f1 c= creal_sub c$ f0 f1 c$ f4 f1 creal_add creal_mul f2 creal_sub c$ f5 f1 c$ f4 f1 creal_mul f3 creal_sub c$ f6 f1 c$ f4 f1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- ((((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) _3963598)) _3963599)) ((real_add _3963598) _3963599)) = (real_of_num (NUMERAL (BIT1 _0)))) = (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) _3963598)) _3963599)) ((real_add _3963598) _3963599)) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c= c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f7 creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f7 creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))))) v0)
T * / c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c? / c? / c? / c/\ c= b1 cvector_add c% b2 cvector_sub f0 b0 cvector_add c% b3 cvector_sub f1 b0 c% b4 cvector_sub f2 b0 ! ! ! c==> c= b1 cvector_add c% b5 cvector_sub f0 b0 cvector_add c% b6 cvector_sub f1 b0 c% b7 cvector_sub f2 b0 c/\ c= b5 b2 c/\ c= b6 b3 c= b7 b4 f3
- |- ((!x'. (!z. (!y. (!x. (!t3. (!t2. (!t1. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub b0 f0 cvector_add c% b6 cvector_sub f1 f0 cvector_add c% b5 cvector_sub f2 f0 c% b4 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub b0 f0 cvector_add c% b7 cvector_sub f1 f0 cvector_add c% b8 cvector_sub f2 f0 c% b9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b7 b6 c/\ c= b8 b5 c= b9 b4 c/\ cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- (((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))) ==> (((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))))
T c==> c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c$ f4 f1 creal_add creal_mul f2 c$ f5 f1 creal_mul f3 c$ f6 f1 c= creal_sub c$ f0 f1 c$ f4 f1 creal_add creal_mul f2 creal_sub c$ f5 f1 c$ f4 f1 creal_mul f3 creal_sub c$ f6 f1 c$ f4 f1
+ ((\t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))) t3) |- ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))
T c==> * / c/\ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% b0 ccross cvector_sub f3 f1 cvector_sub f5 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b1 cvector_sub f3 f1 cvector_add c% b2 cvector_sub f5 f1 c% b3 ccross cvector_sub f3 f1 cvector_sub f5 f1 c/\ c= b1 f2 c/\ c= b2 f4 c= b3 b0 f6 c/\ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% f6 ccross cvector_sub f3 f1 cvector_sub f5 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f3 f1 cvector_add c% b1 cvector_sub f5 f1 c% b2 ccross cvector_sub f3 f1 cvector_sub f5 f1 c/\ c= b0 f2 c/\ c= b1 f4 c= b2 f6
- |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ |- (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) SUBSET ((hull affine) ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) = ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c= c==> c/\ c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))) ==> ((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i)))))) = ((((lambdai. ((real_sub (x' $ i)) (a $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul t1) ((lambdai. ((real_sub (b $ i)) (a $ i))) $ i))) $ i)) ((lambdai. ((real_mul t2) ((lambdai. ((real_sub (c $ i)) (a $ i))) $ i))) $ i))) $ i)) ==> ((x' $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul t1) (b $ i))) $ i)) ((lambdai. ((real_mul t2) (c $ i))) $ i))) $ i))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c= creal_sub c$ f1 f0 c$ f2 f0 creal_add creal_mul f3 creal_sub c$ f4 f0 c$ f2 f0 creal_mul f5 creal_sub c$ f6 f0 c$ f2 f0 c= c$ f1 f0 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c$ f2 f0 creal_add creal_mul f3 c$ f4 f0 creal_mul f5 c$ f6 f0 c==> c= c$ clambda / creal_sub c$ f1 b0 c$ f2 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul f3 c$ clambda / creal_sub c$ f4 b1 c$ f2 b1 b1 b0 c$ clambda / creal_mul f5 c$ clambda / creal_sub c$ f6 b1 c$ f2 b1 b1 b0 f0 c= c$ f1 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c$ f2 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul f3 c$ f4 b1 b1 c$ clambda / creal_mul f5 c$ f6 b1 b1 b0 f0
- |- ((~ (_3963654 = _3963656)) \/ ((~ (_3963655 = _3963657)) \/ (((cross _3963654) _3963655) = ((cross _3963656) _3963657))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= ccross f0 f2 ccross f1 f3
- |- ((!t2. (!t1. ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) ==> (~ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))))))) = T)
T c= ! ! c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b0 f1 cvector_add c% b1 f2 c% b0 f3 c? / c? / c? / c/\ c= creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f3 c~ ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b3 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cT
- |- ((?w. (P /\ (Q w))) = (P /\ (?w. (Q w))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- (x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) |- ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) /\ (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a)))))
T c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c/\ c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c= cvector_sub f0 f3 cvector_add c% f1 cvector_sub f4 f3 c% f2 cvector_sub f5 f3
+ |- (((!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))) ==> ((\Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))) Q)) = ((\Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))) Q))
T c= c==> ! c= ! c==> f0 * b0 b1 c==> f0 ! * b0 b1 * / c= ! c==> f0 * b0 b1 c==> f0 ! * b0 b1 f1 * / c= ! c==> f0 * b0 b1 c==> f0 ! * b0 b1 f1
+ |- ((\Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))) Q)
T * / c= ! c==> f0 * b0 b1 c==> f0 ! * b0 b1 f1
- |- ((!t1. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = T)
T c= ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% f7 cvector_sub f2 f0 c% f8 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b1 cvector_sub f1 f0 cvector_add c% b2 cvector_sub f2 f0 c% b3 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b1 b0 c/\ c= b2 f7 c= b3 f8 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- (((~ (((real_add _3963600) ((real_add _3963601) _3963602)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% _3963600) a)) ((vector_add ((% _3963601) b)) ((% _3963602) c)))))) = ((~ (((real_add _3963600) ((real_add _3963601) _3963602)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) = ((vector_add ((% _3963600) a)) ((vector_add ((% _3963601) b)) ((% _3963602) c)))))))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c= c\/ c~ c= creal_add f6 creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% f6 f3 cvector_add c% f7 f4 c% f8 f5 c\/ c~ c= creal_add f6 creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c~ c= cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 cvector_add c% f6 f3 cvector_add c% f7 f4 c% f8 f5
- |- ((!x''. ((~ (x' IN (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (x'' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) = ((~ (x' IN (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (!x'. (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))
T c= ! c\/ c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c\/ c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ |- (((!v1. (!v2. (!v3. (!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))))) ==> ((\v1. (!v2. (!v3. (!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))))) v1)) = ((\v1. (!v2. (!v3. (!w. ((~ (coplanar (v1 INSERT (v2 INSERT (v3 INSERT (w INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))))) v1))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
- (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- (((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% _3963551) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963550 = t2)) /\ ((~ (((vector_sub x') a) = ((vector_add ((% _3963549) ((vector_sub b) a))) ((vector_add ((% _3963550) ((vector_sub c) a))) ((% _3963551) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ (_3963551 = t3)))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% f12 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f11 f8 c\/ c~ c= cvector_sub f6 f0 cvector_add c% f10 cvector_sub f4 f0 cvector_add c% f11 cvector_sub f5 f0 c% f12 ccross cvector_sub f4 f0 cvector_sub f5 f0 c= f12 f9
+ |- (((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a)))) ==> (x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))))) /\ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))))))
T c/\ c==> c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 c% f4 cvector_sub f5 f1 c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 f1 cvector_add c% f2 f3 c% f4 f5 c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f4 f1 cvector_add c% f2 f3 c% f4 f5 c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 c% f4 cvector_sub f5 f1
+ (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) |- (((a IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (_3963545 INSERT EMPTY))))) /\ ((b IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (_3963545 INSERT EMPTY))))) /\ ((c IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (_3963545 INSERT EMPTY))))) /\ (x' IN ((hull affine) (_3963543 INSERT (_3963544 INSERT (_3963545 INSERT EMPTY)))))))) ==> F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF
+ |- (((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F) = F)
T c= c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- ((T = t) = t)
T c= c= cT f0 f0
+ |- (((!v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))))) ==> ((\v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))))) v0)) = ((\v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))))) v0))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c? / c? / c? / c/\ c= b1 cvector_add c% b2 cvector_sub f0 b0 cvector_add c% b3 cvector_sub f1 b0 c% b4 cvector_sub f2 b0 ! ! ! c==> c= b1 cvector_add c% b5 cvector_sub f0 b0 cvector_add c% b6 cvector_sub f1 b0 c% b7 cvector_sub f2 b0 c/\ c= b5 b2 c/\ c= b6 b3 c= b7 b4 * / c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c? / c? / c? / c/\ c= b1 cvector_add c% b2 cvector_sub f0 b0 cvector_add c% b3 cvector_sub f1 b0 c% b4 cvector_sub f2 b0 ! ! ! c==> c= b1 cvector_add c% b5 cvector_sub f0 b0 cvector_add c% b6 cvector_sub f1 b0 c% b7 cvector_sub f2 b0 c/\ c= b5 b2 c/\ c= b6 b3 c= b7 b4 f3 * / c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c? / c? / c? / c/\ c= b1 cvector_add c% b2 cvector_sub f0 b0 cvector_add c% b3 cvector_sub f1 b0 c% b4 cvector_sub f2 b0 ! ! ! c==> c= b1 cvector_add c% b5 cvector_sub f0 b0 cvector_add c% b6 cvector_sub f1 b0 c% b7 cvector_sub f2 b0 c/\ c= b5 b2 c/\ c= b6 b3 c= b7 b4 f3
+ |- (((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)))))) = ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i))))))
T c= c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f3 b0 c$ cvector_add c% f1 cvector_sub f4 f3 c% f2 cvector_sub f5 f3 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f3 b0 c$ cvector_add c% f1 cvector_sub f4 f3 c% f2 cvector_sub f5 f3 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_sub f0 f3 b0 c$ cvector_add c% f1 cvector_sub f4 f3 c% f2 cvector_sub f5 f3 b0
+ ((\t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))) t3) |- ((((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> * / c/\ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% b0 ccross cvector_sub f3 f1 cvector_sub f5 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b1 cvector_sub f3 f1 cvector_add c% b2 cvector_sub f5 f1 c% b3 ccross cvector_sub f3 f1 cvector_sub f5 f1 c/\ c= b1 f2 c/\ c= b2 f4 c= b3 b0 f6 c= c==> c/\ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f4 cvector_sub f5 f1 c% f6 ccross cvector_sub f3 f1 cvector_sub f5 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f3 f1 cvector_add c% b1 cvector_sub f5 f1 c% b2 ccross cvector_sub f3 f1 cvector_sub f5 f1 c/\ c= b0 f2 c/\ c= b1 f4 c= b2 f6 c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY
+ |- ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P)
T * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0
+ |- ((\y. (((dot ((cross x) y)) y) = (real_of_num (NUMERAL _0)))) y)
T * / c= cdot ccross f0 b0 b0 creal_of_num cNUMERAL c_0 f1
+ |- (((!s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) ==> ((\s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) s)) = ((\s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) s))
T c= c==> ! c= ccoplanar b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / c= ccoplanar b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / c= ccoplanar b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ ((\t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))) t1) |- (((?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> * / c? / c? / c/\ c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 cvector_add c% b4 cvector_sub f3 f1 c% b5 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2 f4 c= c==> c? / c? / c/\ c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% b0 cvector_sub f3 f1 c% b1 ccross cvector_sub f2 f1 cvector_sub f3 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b2 cvector_sub f2 f1 cvector_add c% b3 cvector_sub f3 f1 c% b4 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b2 f4 c/\ c= b3 b0 c= b4 b1 c==> cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\x. (!y. (((dot ((cross y) x)) y) = (real_of_num (NUMERAL _0))))) x)
T * / ! c= cdot ccross b1 b0 b1 creal_of_num cNUMERAL c_0 f0
+ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))), (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- ((!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c/\ ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ (~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))), (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((~ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) /\ F)
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 part cEMPTY c/\ c= cvector_sub f0 f1 cvector_add c% f7 cvector_sub f2 f1 cvector_add c% f8 cvector_sub f3 f1 c% f9 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 part cEMPTY c/\ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
+ |- (((!x. (!y. (((dot ((cross x) y)) y) = (real_of_num (NUMERAL _0))))) ==> ((\x. (!y. (((dot ((cross x) y)) y) = (real_of_num (NUMERAL _0))))) x)) = ((\x. (!y. (((dot ((cross x) y)) y) = (real_of_num (NUMERAL _0))))) x))
T c= c==> ! ! c= cdot ccross b0 b1 b1 creal_of_num cNUMERAL c_0 * / ! c= cdot ccross b0 b1 b1 creal_of_num cNUMERAL c_0 f0 * / ! c= cdot ccross b0 b1 b1 creal_of_num cNUMERAL c_0 f0
+ |- ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) = ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) /\ (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))))
T c= c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f1 f0 cvector_add c% b2 cvector_sub f2 f0 c% b3 cvector_sub f3 f0 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f1 f0 cvector_add c% b5 cvector_sub f2 f0 c% b6 cvector_sub f3 f0 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3
+ |- ((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t)))
T c==> cSUBSET f0 f1 cSUBSET * * part chull part caffine f0 * * part chull part caffine f1
+ |- ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c? / c? / c? / c/\ c= b0 cvector_add c% b1 cvector_sub f1 f0 cvector_add c% b2 cvector_sub f2 f0 c% b3 cvector_sub f3 f0 ! ! ! c==> c= b0 cvector_add c% b4 cvector_sub f1 f0 cvector_add c% b5 cvector_sub f2 f0 c% b6 cvector_sub f3 f0 c/\ c= b4 b1 c/\ c= b5 b2 c= b6 b3
+ |- (((x = (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 f1 creal_of_num cNUMERAL c_0
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (((dot ((cross ((vector_sub b) a)) ((vector_sub c) a))) ((cross ((vector_sub b) a)) ((vector_sub c) a))) = (real_of_num (NUMERAL _0))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) = ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (((cross ((vector_sub b) a)) ((vector_sub c) a)) = (vec (NUMERAL _0))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= cdot ccross cvector_sub f1 f0 cvector_sub f2 f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 creal_of_num cNUMERAL c_0 c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= ccross cvector_sub f1 f0 cvector_sub f2 f0 cvec cNUMERAL c_0 c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
+ |- (((!b. ((a ==> b) ==> (a = (a /\ b)))) ==> ((\b. ((a ==> b) ==> (a = (a /\ b)))) b)) = ((\b. ((a ==> b) ==> (a = (a /\ b)))) b))
T c= c==> ! c==> c==> f0 b0 c= f0 c/\ f0 b0 * / c==> c==> f0 b0 c= f0 c/\ f0 b0 f1 * / c==> c==> f0 b0 c= f0 c/\ f0 b0 f1
+ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))), (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 cvector_add c% b1 cvector_sub f3 f1 c% b2 ccross cvector_sub f2 f1 cvector_sub f3 f1 c/\ c= b0 f4 c/\ c= b1 f5 c= b2 f6 c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f2 f1 * * part cINSERT cvector_sub f3 f1 * * part cINSERT ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY c==> c= cvector_sub f0 f1 cvector_add c% f4 cvector_sub f2 f1 cvector_add c% f5 cvector_sub f3 f1 c% f6 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c==> ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\s. (((hull P) ((hull P) s)) = ((hull P) s))) s)
T * / c= * * part chull f0 * * part chull f0 b0 * * part chull f0 b0 f1
+ |- (((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))))) = (((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a)))) ==> (x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))))) /\ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a)))))))
T c= c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c= cvector_sub f0 f3 cvector_add c% f1 cvector_sub f4 f3 c% f2 cvector_sub f5 f3 c/\ c==> c= cvector_sub f0 f3 cvector_add c% f1 cvector_sub f4 f3 c% f2 cvector_sub f5 f3 c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c= cvector_sub f0 f3 cvector_add c% f1 cvector_sub f4 f3 c% f2 cvector_sub f5 f3
+ |- ((\x. ((((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))) /\ ((((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_num (NUMERAL _0))) x) = x) /\ ((((real_add x) (real_of_num (NUMERAL _0))) = x) /\ ((((real_sub x) (real_of_num (NUMERAL _0))) = x) /\ ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))))) x)
T * / c/\ c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ c= creal_add b0 creal_of_num cNUMERAL c_0 b0 c/\ c= creal_sub b0 creal_of_num cNUMERAL c_0 b0 c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 f0
+ |- ((s SUBSET t) = ((s SUBSET t) /\ (((hull affine) s) SUBSET ((hull affine) t))))
T c= cSUBSET f0 f1 c/\ cSUBSET f0 f1 cSUBSET * * part chull part caffine f0 * * part chull part caffine f1
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((((\t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))) t1) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = T)
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c==> * / c? / c? / c/\ c= cvector_sub f6 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b3 cvector_sub f0 f1 cvector_add c% b4 cvector_sub f2 f1 c% b5 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2 f7 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cT
+ |- ((((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))) = T)
T c= c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 cT
+ (~ (?u. (?v. (?w. ((a IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((b IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((c IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) |- (((!v. (!w. ((~ (a IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY))))))))))) ==> ((\v. (!w. ((~ (a IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY))))))))))) _3963544)) = ((\v. (!w. ((~ (a IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (b IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (c IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (x' IN ((hull affine) (_3963543 INSERT (v INSERT (w INSERT EMPTY))))))))))) _3963544))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> ! ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f5 * / ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f5
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) = (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i)) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x' $ i) = (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub x') a) $ i) = (((vector_add ((% t1) ((vector_sub b) a))) ((% t2) ((vector_sub c) a))) $ i)))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 f4 cvector_add c% f2 f5 c% f3 f6 f0 c= c$ cvector_sub f1 f4 f0 c$ cvector_add c% f2 cvector_sub f5 f4 c% f3 cvector_sub f6 f4 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 f4 cvector_add c% f2 f5 c% f3 f6 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub f1 f4 f0 c$ cvector_add c% f2 cvector_sub f5 f4 c% f3 cvector_sub f6 f4 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 f4 cvector_add c% f2 f5 c% f3 f6 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub f1 f4 f0 c$ cvector_add c% f2 cvector_sub f5 f4 c% f3 cvector_sub f6 f4 f0
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- (!u. (!v. (!w. ((~ (((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 ! ! ! c\/ c~ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5
+ (~ ((((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))) ==> ((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))))) |- (((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))))
T c==> c~ c==> c= creal_sub c$ f0 f1 c$ f2 f1 creal_add creal_mul f3 creal_sub c$ f4 f1 c$ f2 f1 creal_mul f5 creal_sub c$ f6 f1 c$ f2 f1 c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c$ f2 f1 creal_add creal_mul f3 c$ f4 f1 creal_mul f5 c$ f6 f1 c\/ c/\ c= creal_add creal_mul f3 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 c$ f4 f1 creal_add creal_mul f5 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f3 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 c$ f4 f1 creal_add creal_mul f5 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul f3 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 c$ f4 f1 creal_add creal_mul f5 c$ f2 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 c$ f2 f1 creal_add creal_mul f3 c$ f4 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f2 f1 creal_add creal_mul f5 c$ f6 f1 creal_add c$ f2 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0
+ |- ((!a. (!b. ((a ==> b) ==> (a = (a /\ b))))) = ((!b. ((T ==> b) ==> (T = (T /\ b)))) /\ (!b. ((F ==> b) ==> (F = (F /\ b))))))
T c= ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 c/\ ! c==> c==> cT b0 c= cT c/\ cT b0 ! c==> c==> cF b0 c= cF c/\ cF b0
+ |- (((!x. ((x = (vec (NUMERAL _0))) = (((dot x) x) = (real_of_num (NUMERAL _0))))) ==> ((\x. ((x = (vec (NUMERAL _0))) = (((dot x) x) = (real_of_num (NUMERAL _0))))) x)) = ((\x. ((x = (vec (NUMERAL _0))) = (((dot x) x) = (real_of_num (NUMERAL _0))))) x))
T c= c==> ! c= c= b0 cvec cNUMERAL c_0 c= cdot b0 b0 creal_of_num cNUMERAL c_0 * / c= c= b0 cvec cNUMERAL c_0 c= cdot b0 b0 creal_of_num cNUMERAL c_0 f0 * / c= c= b0 cvec cNUMERAL c_0 c= cdot b0 b0 creal_of_num cNUMERAL c_0 f0
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (a $ i)))) ((real_add ((real_mul t1) (b $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (a $ i)))) ((real_add ((real_mul t2) (c $ i))) ((real_add (a $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (x' $ i)))))))) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f0 c$ f3 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f1 f2 creal_add creal_mul f4 c$ f5 f2 creal_add c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f6 f2 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0
+ |- (((!x. (!s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))))) ==> ((\x. (!s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))))) x)) = ((\x. (!s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))))) x))
T c= c==> ! ! ! c= cSUBSET * * part cINSERT b0 b1 b2 c/\ cIN b0 b2 cSUBSET b1 b2 * / ! ! c= cSUBSET * * part cINSERT b0 b1 b2 c/\ cIN b0 b2 cSUBSET b1 b2 f0 * / ! ! c= cSUBSET * * part cINSERT b0 b1 b2 c/\ cIN b0 b2 cSUBSET b1 b2 f0
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- ((~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) /\ F)
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c/\ c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 cF
+ |- (((!s. (!t. ((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t))))) ==> ((\s. (!t. ((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t))))) s)) = ((\s. (!t. ((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t))))) s))
T c= c==> ! ! c==> cSUBSET b0 b1 cSUBSET * * part chull part caffine b0 * * part chull part caffine b1 * / ! c==> cSUBSET b0 b1 cSUBSET * * part chull part caffine b0 * * part chull part caffine b1 f0 * / ! c==> cSUBSET b0 b1 cSUBSET * * part chull part caffine b0 * * part chull part caffine b1 f0
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) |- (((!x. (((\t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))) x) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))) ==> ((?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))) = ((?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))) ==> ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c==> ! c==> * / c? / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b3 cvector_sub f0 f1 cvector_add c% b4 cvector_sub f2 f1 c% b5 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b3 f7 c/\ c= b4 b1 c= b5 b2 b0 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c? / c? / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 c% b1 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b2 cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 c% b4 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b2 f7 c/\ c= b3 b0 c= b4 b1 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c? / c? / c/\ c= cvector_sub f6 f1 cvector_add c% f7 cvector_sub f0 f1 cvector_add c% b0 cvector_sub f2 f1 c% b1 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b2 cvector_sub f0 f1 cvector_add c% b3 cvector_sub f2 f1 c% b4 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b2 f7 c/\ c= b3 b0 c= b4 b1 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ |- (((dot ((cross y) x)) y) = (real_of_num (NUMERAL _0)))
T c= cdot ccross f0 f1 f0 creal_of_num cNUMERAL c_0
+ (((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) |- ((((!x'. ((x' IN (a INSERT (b INSERT (c INSERT EMPTY)))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ (!x'. ((x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))) /\ ((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))
T c==> c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ! c==> cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (!a. (!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) b)) ((real_add a) b)) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((!b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) _3963598)) b)) ((real_add _3963598) b)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((\b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) _3963598)) b)) ((real_add _3963598) b)) = (real_of_num (NUMERAL (BIT1 _0))))) _3963599)) = ((\b. (((real_add ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) _3963598)) b)) ((real_add _3963598) b)) = (real_of_num (NUMERAL (BIT1 _0))))) _3963599))
T c==> ! ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= c==> ! c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b0 creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b0 creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 f1 * / c= creal_add creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b0 creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 f1
+ (~ ((((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))) ==> ((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))))) |- ((~ ((((real_sub (x' $ i)) (a $ i)) = ((real_add ((real_mul t1) ((real_sub (b $ i)) (a $ i)))) ((real_mul t2) ((real_sub (c $ i)) (a $ i))))) ==> ((x' $ i) = ((real_add ((real_mul ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) (a $ i))) ((real_add ((real_mul t1) (b $ i))) ((real_mul t2) (c $ i))))))) /\ F)
T c==> c~ c==> c= creal_sub c$ f0 f1 c$ f2 f1 creal_add creal_mul f3 creal_sub c$ f4 f1 c$ f2 f1 creal_mul f5 creal_sub c$ f6 f1 c$ f2 f1 c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c$ f2 f1 creal_add creal_mul f3 c$ f4 f1 creal_mul f5 c$ f6 f1 c/\ c~ c==> c= creal_sub c$ f0 f1 c$ f2 f1 creal_add creal_mul f3 creal_sub c$ f4 f1 c$ f2 f1 creal_mul f5 creal_sub c$ f6 f1 c$ f2 f1 c= c$ f0 f1 creal_add creal_mul creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f5 c$ f2 f1 creal_add creal_mul f3 c$ f4 f1 creal_mul f5 c$ f6 f1 cF
+ ((\t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))) t2) |- (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))
T c==> * / c? / c/\ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% b0 cvector_sub f4 f1 c% b1 ccross cvector_sub f3 f1 cvector_sub f4 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b2 cvector_sub f3 f1 cvector_add c% b3 cvector_sub f4 f1 c% b4 ccross cvector_sub f3 f1 cvector_sub f4 f1 c/\ c= b2 f2 c/\ c= b3 b0 c= b4 b1 f5 c? / c/\ c= cvector_sub f0 f1 cvector_add c% f2 cvector_sub f3 f1 cvector_add c% f5 cvector_sub f4 f1 c% b0 ccross cvector_sub f3 f1 cvector_sub f4 f1 ! ! ! c==> c= cvector_sub f0 f1 cvector_add c% b1 cvector_sub f3 f1 cvector_add c% b2 cvector_sub f4 f1 c% b3 ccross cvector_sub f3 f1 cvector_sub f4 f1 c/\ c= b1 f2 c/\ c= b2 f5 c= b3 b0
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- (!w. ((~ (((real_add _3963600) ((real_add _3963601) w)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((vector_add ((% _3963600) a)) ((vector_add ((% _3963601) b)) ((% w) c)))))))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 ! c\/ c~ c= creal_add f6 creal_add f7 b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 cvector_add c% f6 f3 cvector_add c% f7 f4 c% b0 f5
+ (~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))), ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))), ((\t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))) t1) |- (((\t1. (?t2. (?t3. ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ (!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))) t1) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 * * part cINSERT ccross cvector_sub f0 f1 cvector_sub f2 f1 part cEMPTY c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> * / c? / c? / c/\ c= cvector_sub f6 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b3 cvector_sub f0 f1 cvector_add c% b4 cvector_sub f2 f1 c% b5 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2 f7 c/\ * / c? / c? / c/\ c= cvector_sub f6 f1 cvector_add c% b0 cvector_sub f0 f1 cvector_add c% b1 cvector_sub f2 f1 c% b2 ccross cvector_sub f0 f1 cvector_sub f2 f1 ! ! ! c==> c= cvector_sub f6 f1 cvector_add c% b3 cvector_sub f0 f1 cvector_add c% b4 cvector_sub f2 f1 c% b5 ccross cvector_sub f0 f1 cvector_sub f2 f1 c/\ c= b3 b0 c/\ c= b4 b1 c= b5 b2 f7 c==> cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ |- ((((real_add (real_of_num (NUMERAL _0))) x) = x) /\ ((((real_add x) (real_of_num (NUMERAL _0))) = x) /\ ((((real_sub x) (real_of_num (NUMERAL _0))) = x) /\ ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))))
T c/\ c= creal_add creal_of_num cNUMERAL c_0 f0 f0 c/\ c= creal_add f0 creal_of_num cNUMERAL c_0 f0 c/\ c= creal_sub f0 creal_of_num cNUMERAL c_0 f0 c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) |- ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((~ (((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a))))))) \/ ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY)))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c\/ c~ c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY
+ |- (((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 cF
+ (((a IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))) /\ ((~ (?u. (?v. (?w. (((vec (NUMERAL _0)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub b) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((((vector_sub c) a) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (((cross ((vector_sub b) a)) ((vector_sub c) a)) IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))))))) |- ((b IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((c IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c? / c? / c? / c/\ cIN cvec cNUMERAL c_0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f4 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN ccross cvector_sub f4 f0 cvector_sub f5 f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f4 f0 cvector_add c% f8 cvector_sub f5 f0 c% f9 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f4 f0 cvector_add c% b1 cvector_sub f5 f0 c% b2 ccross cvector_sub f4 f0 cvector_sub f5 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
+ |- ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (((dot ((cross ((vector_sub b) a)) ((vector_sub c) a))) ((cross ((vector_sub b) a)) ((vector_sub c) a))) = (real_of_num (NUMERAL _0))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= cdot ccross cvector_sub f1 f0 cvector_sub f2 f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 creal_of_num cNUMERAL c_0 c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\v2. (!v3. (!v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3)))))))))))))))) v2)
T * / ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c? / c? / c? / c/\ c= b3 cvector_add c% b4 cvector_sub f0 b2 cvector_add c% b5 cvector_sub b0 b2 c% b6 cvector_sub b1 b2 ! ! ! c==> c= b3 cvector_add c% b7 cvector_sub f0 b2 cvector_add c% b8 cvector_sub b0 b2 c% b9 cvector_sub b1 b2 c/\ c= b7 b4 c/\ c= b8 b5 c= b9 b6 f1
+ |- ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (((~ (coplanar ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT (((cross ((vector_sub b) a)) ((vector_sub c) a)) INSERT EMPTY)))))) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub ((vector_sub b) a)) (vec (NUMERAL _0))) INSERT (((vector_sub ((vector_sub c) a)) (vec (NUMERAL _0))) INSERT EMPTY)))))) /\ ((((vector_sub x') a) = ((vector_add ((% t1) ((vector_sub b) a))) ((vector_add ((% t2) ((vector_sub c) a))) ((% t3) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) /\ ((!ta. (!tb. (!tc. ((((vector_sub x') a) = ((vector_add ((% ta) ((vector_sub b) a))) ((vector_add ((% tb) ((vector_sub c) a))) ((% tc) ((cross ((vector_sub b) a)) ((vector_sub c) a)))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))) /\ ((x' IN ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub b) a) INSERT (((vector_sub c) a) INSERT EMPTY))))))))) ==> (x' IN ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 * * part cINSERT ccross cvector_sub f1 f0 cvector_sub f2 f0 part cEMPTY c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub cvector_sub f1 f0 cvec cNUMERAL c_0 * * part cINSERT cvector_sub cvector_sub f2 f0 cvec cNUMERAL c_0 part cEMPTY c/\ c= cvector_sub f6 f0 cvector_add c% f7 cvector_sub f1 f0 cvector_add c% f8 cvector_sub f2 f0 c% f9 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ ! ! ! c==> c= cvector_sub f6 f0 cvector_add c% b0 cvector_sub f1 f0 cvector_add c% b1 cvector_sub f2 f0 c% b2 ccross cvector_sub f1 f0 cvector_sub f2 f0 c/\ c= b0 f7 c/\ c= b1 f8 c= b2 f9 c/\ cIN f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f1 f0 * * part cINSERT cvector_sub f2 f0 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((collinear (x INSERT (y INSERT (z INSERT EMPTY)))) = (((cross ((vector_sub y) x)) ((vector_sub z) x)) = (vec (NUMERAL _0)))) |- ((((cross ((vector_sub y) x)) ((vector_sub z) x)) = (vec (NUMERAL _0))) = (collinear (x INSERT (y INSERT (z INSERT EMPTY)))))
T c==> c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccross cvector_sub f1 f0 cvector_sub f2 f0 cvec cNUMERAL c_0 c= c= ccross cvector_sub f1 f0 cvector_sub f2 f0 cvec cNUMERAL c_0 ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i)))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add ((real_mul t1) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (b $ i)))) ((real_add ((real_mul t2) (a $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (c $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (a $ i))) (x' $ i))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_add creal_mul f4 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f2 c$ f6 f2 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((x' = ((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c)))) ==> (?u. (?v. (?w. ((((real_add u) ((real_add v) w)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((% w) c)))))))))) |- ((~ (((real_add _3963600) ((real_add _3963601) _3963602)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (((vector_add ((% ((real_sub ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t1)) t2)) a)) ((vector_add ((% t1) b)) ((% t2) c))) = ((vector_add ((% _3963600) a)) ((vector_add ((% _3963601) b)) ((% _3963602) c))))))
T c==> c~ c==> c= f0 cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 c? / c? / c? / c/\ c= creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c\/ c~ c= creal_add f6 creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c~ c= cvector_add c% creal_sub creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 f3 cvector_add c% f1 f4 c% f2 f5 cvector_add c% f6 f3 cvector_add c% f7 f4 c% f8 f5
+ |- (((!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0)))))) ==> ((\y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0)))))) y)) = ((\y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0)))))) y))
T c= c==> ! c= c= creal_mul f0 b0 creal_of_num cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= b0 creal_of_num cNUMERAL c_0 * / c= c= creal_mul f0 b0 creal_of_num cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= b0 creal_of_num cNUMERAL c_0 f1 * / c= c= creal_mul f0 b0 creal_of_num cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= b0 creal_of_num cNUMERAL c_0 f1
+ |- ((\v1. (!v2. (!v3. (!v0. ((~ (coplanar (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> (!v. (?t1. (?t2. (?t3. ((v = ((vector_add ((% t1) ((vector_sub v1) v0))) ((vector_add ((% t2) ((vector_sub v2) v0))) ((% t3) ((vector_sub v3) v0))))) /\ (!ta. (!tb. (!tc. ((v = ((vector_add ((% ta) ((vector_sub v1) v0))) ((vector_add ((% tb) ((vector_sub v2) v0))) ((% tc) ((vector_sub v3) v0))))) ==> ((ta = t1) /\ ((tb = t2) /\ (tc = t3))))))))))))))))) v1)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c? / c? / c? / c/\ c= b4 cvector_add c% b5 cvector_sub b0 b3 cvector_add c% b6 cvector_sub b1 b3 c% b7 cvector_sub b2 b3 ! ! ! c==> c= b4 cvector_add c% b8 cvector_sub b0 b3 cvector_add c% b9 cvector_sub b1 b3 c% b10 cvector_sub b2 b3 c/\ c= b8 b5 c/\ c= b9 b6 c= b10 b7 f0
