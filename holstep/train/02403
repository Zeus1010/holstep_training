N Pwssrat.z_not_eq_ytrans
C |- (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))))) ==> (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)))))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c~ c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Tame_defs2.l_y
A |- (!L. (!r. (!x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x)))))
T c= cl'y f0 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.ztrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_list.AQIUNPP3
A |- (!L. (!i. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_list.HQYMRTX1_list
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c/\ cMEM cl'z f0 f1 f2 f3 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f3 c~ c= cl'z f0 f1 f2 f3 cPOWER * part cf_list f0 b0 f3
+ |- ((((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) /\ ((int_le ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))))) = (((NUMERAL (BIT1 _0)) <= (SUC a)) /\ ((SUC a) <= (SUC a))))
T c= c/\ cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cSUC f0 c<= cSUC f0 cSUC f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) /\ (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- ((((((rtrans L) N) r) x) i) = r1), ((MEM x) (((((rtrans L) N) r) x) i)) |- (((MEM x) r1) = T)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c= cMEM f3 f5 cT
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((?y. ((((l'y L) r1) x) = y)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c? / c= cl'y f0 f5 f3 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3
- |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
- |- ((?y. ((((l'y L) r1) x) = y)) ==> (?y. ((((l'y L) r1) x) = y)))
T c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x)))) = T)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3 cT
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) /\ (~ ((final_list L) r1))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cfinal_list f0 f5 c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f5 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 b0 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (good_list L), (transform_assumption_v2 L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))) |- (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)))
T c==> cgood_list f0 c==> ctransform_assumption_v2 f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c~ c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4
+ |- (T = (((((NUMERAL (BIT1 _0)) <= (SUC (((l'm L) r1) x))) /\ ((SUC (((l'm L) r1) x)) <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))))
T c= cT c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cSUC cl'm f0 f1 f2 c<= cSUC cl'm f0 f1 f2 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2
- (~ ((final_list L) (((((rtrans L) N) r) x) i))) |- (((final_list L) (((((rtrans L) N) r) x) i)) = F)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c= cfinal_list f0 crtrans f0 f1 f2 f3 f4 cF
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ |- ((((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x)))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c==> c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f5 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 b0 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3
- |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
- |- ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((\y. ((((l'y L) r1) x) = y)) y) |- (((\y. ((((l'y L) r1) x) = y)) y) /\ (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> * / c= cl'y f0 f5 f3 b0 f6 c/\ * / c= cl'y f0 f5 f3 b0 f6 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302764)) /\ (((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302764)) /\ (((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302764)) /\ (((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0
+ ((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))))) |- (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))))) /\ (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c/\ c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c~ c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4
+ |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
- (~ ((final_list L) (((((rtrans L) N) r) x) i))) |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x)))) = (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((final_list L) (((((rtrans L) N) r) x) i)) ==> ((flag_list L) (((((ntrans L) N) r) x) i))) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x)))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c/\ c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- (((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)), ((((((rtrans L) N) r) x) i) = r1) |- (((next_el r1) x) = ((f_list L) x))
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c= cnext_el f5 f3 cf_list f0 f3
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (transform_assumption_v2 L) |- ((transform_assumption_v2 L) = T)
T c==> ctransform_assumption_v2 f0 c= ctransform_assumption_v2 f0 cT
+ ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) = T)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 cT
+ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) |- ((\i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) (SUC (((l'm L) r1) x)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 cSUC cl'm f0 f1 f2
+ |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((!x. (((\r1. ((((((rtrans L) N) r) x) i) = r1)) x) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))) ==> ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))) = ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x)))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> ! c==> * / c= crtrans f0 f1 f2 f3 f4 b1 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 cT
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) x)
T * / c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 cmarked_list f0 cntrans f0 f1 f2 b0 f3 crtrans f0 f1 f2 b0 f3 b0 f4
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- |- (((!x'. (((\y. ((((l'y L) r1) x) = y)) x') ==> (?y. ((((l'y L) r1) x) = y)))) ==> ((?y. ((((l'y L) r1) x) = y)) ==> (?y. ((((l'y L) r1) x) = y)))) = ((?y. ((((l'y L) r1) x) = y)) ==> (?y. ((((l'y L) r1) x) = y))))
T c= c==> ! c==> * / c= cl'y f0 f1 f2 b1 b0 c? / c= cl'y f0 f1 f2 b1 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
+ |- ((\L. (!r. (!x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x))))) L)
T * / ! ! c= cl'y b0 b1 b2 cPOWER * part cf_list b0 cSUC cl'm b0 b1 b2 b2 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), ((((((rtrans L) N) r) x) i) = r1) |- (((~ ((final_list L) r1)) ==> (((final_list L) r1) = F)) = (((final_list L) r1) = F))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> c= crtrans f0 f1 f2 f3 f4 f5 c= c==> c~ cfinal_list f0 f5 c= cfinal_list f0 f5 cF c= cfinal_list f0 f5 cF
- ((MEM x) (((((rtrans L) N) r) x) i)) |- (((MEM x) (((((rtrans L) N) r) x) i)) = T)
T c==> cMEM f0 crtrans f1 f2 f3 f0 f4 c= cMEM f0 crtrans f1 f2 f3 f0 f4 cT
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num a)) ==> (((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) /\ ((int_le ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))))) = (((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) /\ ((int_le ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c/\ cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c/\ cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = T)
T c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cT
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((LET f) x) = (f x))
T c= cLET f0 f1 * f0 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- ((((((rtrans L) N) r) x) i) = r1), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x) = T)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 cT
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c==> c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- |- (?y. ((((l'y L) r1) x) = y))
T c? / c= cl'y f0 f1 f2 b0
- |- ((!i'. t) = t)
T c= ! f0 f0
- |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ |- (((((((rtrans L) N) r) x) i) = (((((rtrans L) N) r) x) i)) = ((\r1. ((((((rtrans L) N) r) x) i) = r1)) (((((rtrans L) N) r) x) i)))
T c= c= crtrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 * / c= crtrans f0 f1 f2 f3 f4 b0 crtrans f0 f1 f2 f3 f4
- |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
- |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ ((((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) \/ (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((\y. ((((l'y L) r1) x) = y)) y) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))) = T)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> * / c= cl'y f0 f5 f3 b0 f6 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3 cT
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
+ |- ((\x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x))) x)
T * / c= cl'y f0 f1 b0 cPOWER * part cf_list f0 cSUC cl'm f0 f1 b0 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x), ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) |- (((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) /\ (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c/\ * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) |- ((((((NUMERAL (BIT1 _0)) <= (SUC (((l'm L) r1) x))) /\ ((SUC (((l'm L) r1) x)) <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))) = (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cSUC cl'm f0 f1 f2 c<= cSUC cl'm f0 f1 f2 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302764)) /\ (((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) \/ (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((NUMERAL (BIT1 _0)) <= (SUC a))
T c<= cNUMERAL cBIT1 c_0 cSUC f0
- ((((((rtrans L) N) r) x) i) = r1), ((MEM x) (((((rtrans L) N) r) x) i)) |- ((MEM x) r1)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 cMEM f3 f5
- |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((final_list L) (((((rtrans L) N) r) x) i)) ==> ((flag_list L) (((((ntrans L) N) r) x) i))) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x)))) = (((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x)))))
T c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c/\ c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))))) (((((ntrans L) N) r) x) i))
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c/\ cMEM cl'z f0 b0 b1 b2 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 cSUC cl'm f0 b1 b2 c~ c= cl'z f0 b0 b1 b2 cPOWER * part cf_list f0 b3 b2 cntrans f0 f1 f2 f3 f4
- |- (((((l'y L) r1) x) = y) = ((\y. ((((l'y L) r1) x) = y)) y))
T c= c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
+ (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _10302764))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _10302764))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) |- (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) = T)
T c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c= cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((((rtrans L) N) r) x) i) = r1), ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((s_flag_list L) (((((ntrans L) N) r) x) i)) r1) x)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3
- |- ((((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1))) = T)
T c= c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0 cT
- |- ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j)
T * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4
+ |- ((!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))))) ==> (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i))))))) = T)
T c= ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 crtrans f0 f1 b0 b1 b2 c~ c= cztrans f0 f1 b0 b1 b2 cytrans f0 f1 b0 b1 b2 cT
- |- (!y. (((\y. ((((l'y L) r1) x) = y)) y) ==> (?y. ((((l'y L) r1) x) = y))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- |- ((LET_END t) = t)
T c= cLET_END f0 f0
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = T)
T c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cT
- ((((l'y L) r1) x) = y) |- ((\y. ((((l'y L) r1) x) = y)) y)
T c==> c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)) /\ F)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c/\ c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4 cF
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\y. ((((l'y L) r1) x) = y)) y) |- ((((((l'y L) r1) x) = y) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))) = (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c~ c= cl'z f0 cntrans f0 f4 f5 f2 f6 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2 c~ c= cl'z f0 cntrans f0 f4 f5 f2 f6 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), ((((((rtrans L) N) r) x) i) = r1) |- (~ ((final_list L) r1))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> c= crtrans f0 f1 f2 f3 f4 f5 c~ cfinal_list f0 f5
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c= cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cT
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c/\ cMEM cl'z b0 b1 b2 b3 b2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cSUC cl'm b0 b2 b3 c~ c= cl'z b0 b1 b2 b3 cPOWER * part cf_list b0 b4 b3 f0
- ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) |- (((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) /\ (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c/\ * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
+ |- ((\N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cytrans f0 b0 b1 b2 b3 cl'y f0 crtrans f0 b0 b1 b2 b3 b2 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((l'y L) r1) x) = y) ==> (?y. ((((l'y L) r1) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
+ |- ((\r. (!x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x)))) r)
T * / ! c= cl'y f0 b0 b1 cPOWER * part cf_list f0 cSUC cl'm f0 b0 b1 b1 f1
- |- (((((((rtrans L) N) r) x) i) = r1) = ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1))
T c= c= crtrans f0 f1 f2 f3 f4 f5 * / c= crtrans f0 f1 f2 f3 f4 b0 f5
- |- (((((l'y L) r1) x) = (((l'y L) r1) x)) = ((\y. ((((l'y L) r1) x) = y)) (((l'y L) r1) x)))
T c= c= cl'y f0 f1 f2 cl'y f0 f1 f2 * / c= cl'y f0 f1 f2 b0 cl'y f0 f1 f2
+ |- (((!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) ==> ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)) = ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x))
T c= c==> ! ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302764)) /\ (((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((int_le (int_of_num (NUMERAL _0))) _10302764) ==> (((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add _10302764) (int_of_num (NUMERAL (BIT1 _0))))) /\ ((int_le ((int_add _10302764) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add _10302764) (int_of_num (NUMERAL (BIT1 _0)))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c/\ cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))
T c= c<= f0 f1 cint_le cint_of_num f0 cint_of_num f1
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) a)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), ((((((rtrans L) N) r) x) i) = r1) |- (((final_list L) r1) = F)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> c= crtrans f0 f1 f2 f3 f4 f5 c= cfinal_list f0 f5 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((SUC a) <= (SUC a)) = T)
T c= c<= cSUC f0 cSUC f0 cT
+ (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))), ((((marked_list L) N) r) x) |- (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 c~ c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4
+ |- ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)
T * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ (transform_assumption_v2 L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))))) |- (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)))
T c==> ctransform_assumption_v2 f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c~ c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c~ c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4
+ |- ((\x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cytrans f0 f1 f2 b0 b1 cl'y f0 crtrans f0 f1 f2 b0 b1 b0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x'. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x') /\ (~ ((final_list L) r1))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x')) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x')))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x') = (((POWER (f_list L)) i') x')))))))) ==> ((\x'. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x') /\ (~ ((final_list L) r1))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x')) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x')))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x') = (((POWER (f_list L)) i') x')))))))) x)) = ((\x'. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x') /\ (~ ((final_list L) r1))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x')) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x')))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x') = (((POWER (f_list L)) i') x')))))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 b0 c~ cfinal_list f0 f5 c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 b0 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cSUC cl'm f0 f5 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 b0 cPOWER * part cf_list f0 b1 b0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 b0 c~ cfinal_list f0 f5 c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 b0 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cSUC cl'm f0 f5 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 b0 cPOWER * part cf_list f0 b1 b0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 b0 c~ cfinal_list f0 f5 c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 b0 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cSUC cl'm f0 f5 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 b0 cPOWER * part cf_list f0 b1 b0 f3
+ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) |- (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2
+ (good_list L), (transform_assumption_v2 L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))))) |- (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)))
T c==> cgood_list f0 c==> ctransform_assumption_v2 f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c~ c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) a)) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) a))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ |- ((!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))))) ==> (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)))))) = T)
T c= ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 crtrans f0 f1 f2 b0 b1 c~ c= cztrans f0 f1 f2 b0 b1 cytrans f0 f1 f2 b0 b1 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302764)) /\ (((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302764)) /\ (((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302764)) /\ (((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!r'. (!x'. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r') x') /\ (~ ((final_list L) r'))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r') x')) r') /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r') x')))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r') x') = (((POWER (f_list L)) i') x'))))))))) ==> ((\r'. (!x'. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r') x') /\ (~ ((final_list L) r'))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r') x')) r') /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r') x')))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r') x') = (((POWER (f_list L)) i') x'))))))))) r1)) = ((\r'. (!x'. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r') x') /\ (~ ((final_list L) r'))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r') x')) r') /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r') x')))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r') x') = (((POWER (f_list L)) i') x'))))))))) r1))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 b0 b1 c~ cfinal_list f0 b0 c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 b0 b1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cSUC cl'm f0 b0 b1 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 b0 b1 cPOWER * part cf_list f0 b2 b1 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 b0 b1 c~ cfinal_list f0 b0 c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 b0 b1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cSUC cl'm f0 b0 b1 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 b0 b1 cPOWER * part cf_list f0 b2 b1 f5 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 b0 b1 c~ cfinal_list f0 b0 c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 b0 b1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cSUC cl'm f0 b0 b1 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 b0 b1 cPOWER * part cf_list f0 b2 b1 f5
+ |- (((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) ==> ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r)) = ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r))
T c= c==> ! ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2 * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x)))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) /\ (~ ((final_list L) r1))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f5 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 b0 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cfinal_list f0 f5 c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f5 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 b0 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)), ((((marked_list L) N) r) x) |- F
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4 c==> cmarked_list f0 f1 f2 f3 cF
+ (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x)))))) |- ((((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x)))))) /\ (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c==> c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f5 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 b0 f3 c/\ c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f5 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 b0 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) ==> ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)) = ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N))
T c= c==> ! ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1 * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- |- (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))) |- (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c~ c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
+ |- ((\i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) i)
T * / c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 f4
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((!x'. (((\y. ((((l'y L) r1) x) = y)) x') ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))) ==> ((?y. ((((l'y L) r1) x) = y)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))) = ((?y. ((((l'y L) r1) x) = y)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> ! c==> * / c= cl'y f0 f5 f3 b1 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3 c==> c? / c= cl'y f0 f5 f3 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3 c==> c? / c= cl'y f0 f5 f3 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((((rtrans L) N) r) x) i) = r1) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))))) ==> (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i))))) = T)
T c= ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 b0 c~ c= cztrans f0 f1 f2 f3 b0 cytrans f0 f1 f2 f3 b0 cT
+ ((((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) ==> F), ((((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) \/ (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L))
T c= c==> ! ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0 * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _10302764) ==> (((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add _10302764) (int_of_num (NUMERAL (BIT1 _0))))) /\ ((int_le ((int_add _10302764) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add _10302764) (int_of_num (NUMERAL (BIT1 _0)))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c/\ cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (!y. (((\y. ((((l'y L) r1) x) = y)) y) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 ! c==> * / c= cl'y f0 f5 f3 b1 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3
+ |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) /\ (~ ((final_list L) r1))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cfinal_list f0 f5 c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f5 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 b0 f3
- (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302764))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302764))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L)
T * / ! ! ! ! c= cztrans b0 b1 b2 b3 b4 cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- |- (((!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) ==> ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)) = ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r))
T c= c==> ! ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2 * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ |- (((((NUMERAL (BIT1 _0)) <= (SUC (((l'm L) r1) x))) /\ ((SUC (((l'm L) r1) x)) <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cSUC cl'm f0 f1 f2 c<= cSUC cl'm f0 f1 f2 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2
+ |- (!x'. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x') /\ (~ ((final_list L) r1))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x')) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x')))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x') = (((POWER (f_list L)) i') x'))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f6 c~ cfinal_list f0 f5 c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f6 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f5 f6 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f6 cPOWER * part cf_list f0 b0 f6
+ |- (((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x)))) = (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c= c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
+ |- (((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x)))) = (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c= c==> c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((\y. ((((l'y L) r1) x) = y)) y) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> * / c= cl'y f0 f5 f3 b0 f6 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x) /\ (~ ((final_list L) r1))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))) = (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c~ cfinal_list f0 f5 c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f5 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 b0 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))))) L)
T * / ! ! ! ! c= cytrans b0 b1 b2 b3 b4 cl'y b0 crtrans b0 b1 b2 b3 b4 b3 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- ((\y. ((((l'y L) r1) x) = y)) y) |- ((((((l'y L) r1) x) = y) ==> (?y. ((((l'y L) r1) x) = y))) = (?y. ((((l'y L) r1) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- |- ((((\y. ((((l'y L) r1) x) = y)) y) ==> (?y. ((((l'y L) r1) x) = y))) = T)
T c= c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0 cT
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c/\ cMEM cl'z b0 b1 b2 b3 b2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cSUC cl'm b0 b2 b3 c~ c= cl'z b0 b1 b2 b3 cPOWER * part cf_list b0 b4 b3 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c/\ cMEM cl'z b0 b1 b2 b3 b2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cSUC cl'm b0 b2 b3 c~ c= cl'z b0 b1 b2 b3 cPOWER * part cf_list b0 b4 b3 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c/\ cMEM cl'z b0 b1 b2 b3 b2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b4 c<= b4 cSUC cl'm b0 b2 b3 c~ c= cl'z b0 b1 b2 b3 cPOWER * part cf_list b0 b4 b3 f0
+ |- (?r1. ((((((rtrans L) N) r) x) i) = r1))
T c? / c= crtrans f0 f1 f2 f3 f4 b0
+ |- (((!x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x))) ==> ((\x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x))) x)) = ((\x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x))) x))
T c= c==> ! c= cl'y f0 f1 b0 cPOWER * part cf_list f0 cSUC cl'm f0 f1 b0 b0 * / c= cl'y f0 f1 b0 cPOWER * part cf_list f0 cSUC cl'm f0 f1 b0 b0 f2 * / c= cl'y f0 f1 b0 cPOWER * part cf_list f0 cSUC cl'm f0 f1 b0 b0 f2
- |- ((F ==> t) = T)
T c= c==> cF f0 cT
+ |- (((real_le (real_of_num m)) (real_neg (real_of_num n))) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))
T c= creal_le creal_of_num f0 creal_neg creal_of_num f1 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
- ((((((rtrans L) N) r) x) i) = r1) |- ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 * / c= crtrans f0 f1 f2 f3 f4 b0 f5
+ |- (((!i. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) ==> ((\i. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) i)) = ((\i. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) i))
T c= c==> ! ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b1 b2 b3 cmarked_list f0 cntrans f0 b1 b2 b3 b0 crtrans f0 b1 b2 b3 b0 b3 * / ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b1 b2 b3 cmarked_list f0 cntrans f0 b1 b2 b3 b0 crtrans f0 b1 b2 b3 b0 b3 f1 * / ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b1 b2 b3 cmarked_list f0 cntrans f0 b1 b2 b3 b0 crtrans f0 b1 b2 b3 b0 b3 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) |- ((((NUMERAL (BIT1 _0)) <= (SUC (((l'm L) r1) x))) /\ ((SUC (((l'm L) r1) x)) <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 c==> c/\ c<= cNUMERAL cBIT1 c_0 cSUC cl'm f0 f1 f2 c<= cSUC cl'm f0 f1 f2 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2
- (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _10302764))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- ((\y. ((((l'y L) r1) x) = y)) y) |- ((((l'y L) r1) x) = y)
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= cl'y f0 f1 f2 f3
+ |- (((!L. (!r. (!x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x))))) ==> ((\L. (!r. (!x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x))))) L)) = ((\L. (!r. (!x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x))))) L))
T c= c==> ! ! ! c= cl'y b0 b1 b2 cPOWER * part cf_list b0 cSUC cl'm b0 b1 b2 b2 * / ! ! c= cl'y b0 b1 b2 cPOWER * part cf_list b0 cSUC cl'm b0 b1 b2 b2 f0 * / ! ! c= cl'y b0 b1 b2 cPOWER * part cf_list b0 cSUC cl'm b0 b1 b2 b2 f0
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- ((((((rtrans L) N) r) x) i) = r1) |- (((((((rtrans L) N) r) x) i) = r1) /\ (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
+ (good_list L) |- ((good_list L) = T)
T c==> cgood_list f0 c= cgood_list f0 cT
- |- (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((SUC a) <= (SUC a))
T c<= cSUC f0 cSUC f0
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))))) L))
T c= c==> ! ! ! ! ! c= cytrans b0 b1 b2 b3 b4 cl'y b0 crtrans b0 b1 b2 b3 b4 b3 * / ! ! ! ! c= cytrans b0 b1 b2 b3 b4 cl'y b0 crtrans b0 b1 b2 b3 b4 b3 f0 * / ! ! ! ! c= cytrans b0 b1 b2 b3 b4 cl'y b0 crtrans b0 b1 b2 b3 b4 b3 f0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\r'. (!x'. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r') x') /\ (~ ((final_list L) r'))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r') x')) r') /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r') x')))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r') x') = (((POWER (f_list L)) i') x'))))))))) r1)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 b0 b1 c~ cfinal_list f0 b0 c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 b0 b1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cSUC cl'm f0 b0 b1 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 b0 b1 cPOWER * part cf_list f0 b2 b1 f5
+ |- ((\N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) N)
T * / ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 cmarked_list f0 cntrans f0 b0 b1 b2 f1 crtrans f0 b0 b1 b2 f1 b2 f2
- (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302764))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((\y. ((((l'y L) r1) x) = y)) (((l'y L) r1) x))
T * / c= cl'y f0 f1 f2 b0 cl'y f0 f1 f2
+ (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((l'y L) r1) x) = y), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((l'y L) r1) x) = y) /\ (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f5 f3 f6 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c/\ c= cl'y f0 f5 f3 f6 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3
- ((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) |- (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x)) r1) = T)
T c==> cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 c= cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f5 cT
+ |- (((!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) ==> ((\N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) N)) = ((\N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) N))
T c= c==> ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 cmarked_list f0 cntrans f0 b0 b1 b2 f1 crtrans f0 b0 b1 b2 f1 b2 * / ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 cmarked_list f0 cntrans f0 b0 b1 b2 f1 crtrans f0 b0 b1 b2 f1 b2 f2 * / ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 cmarked_list f0 cntrans f0 b0 b1 b2 f1 crtrans f0 b0 b1 b2 f1 b2 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) r)
T * / ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 b0 b1 cmarked_list f0 cntrans f0 f1 b0 b1 f2 crtrans f0 f1 b0 b1 f2 b1 f3
+ |- ((((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!r. (!x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x)))) ==> ((\r. (!x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x)))) r)) = ((\r. (!x. ((((l'y L) r) x) = (((POWER (f_list L)) (SUC (((l'm L) r) x))) x)))) r))
T c= c==> ! ! c= cl'y f0 b0 b1 cPOWER * part cf_list f0 cSUC cl'm f0 b0 b1 b1 * / ! c= cl'y f0 b0 b1 cPOWER * part cf_list f0 cSUC cl'm f0 b0 b1 b1 f1 * / ! c= cl'y f0 b0 b1 cPOWER * part cf_list f0 cSUC cl'm f0 b0 b1 b1 f1
+ (transform_assumption_v2 L), ((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))))) |- (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)))
T c==> ctransform_assumption_v2 f0 c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c~ c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4
+ |- ((~ F) = T)
T c= c~ cF cT
+ (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) |- ((((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302764)) /\ (((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le ((real_add ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302764)) (real_of_num (NUMERAL (BIT1 _0))))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10302764) ==> (((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add _10302764) (int_of_num (NUMERAL (BIT1 _0))))) /\ ((int_le ((int_add _10302764) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add _10302764) (int_of_num (NUMERAL (BIT1 _0)))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c/\ cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- |- (((((((rtrans L) N) r) x) i) = r1) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
- |- (((!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))) ==> ((\N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))) N)) = ((\N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))) N))
T c= c==> ! ! ! c= cmarked_list f0 b0 b1 b2 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 b0 c/\ cMEM b1 b0 c/\ cMEM b2 b1 c/\ cLET / cLET_END c/\ call part cuniq b3 call / c> csizel cfilter * part cMEM b4 b3 cNUMERAL cBIT1 c_0 cflatten b3 cquotient_list f0 b0 c/\ c= cnext_el b1 b2 cf_list f0 b2 c/\ cLET / cLET_END cfinal_list f0 b3 cfind_list b0 ce_list b2 c/\ c==> cfinal_list f0 b1 cflag_list f0 b0 c==> c~ cfinal_list f0 b1 cs_flag_list f0 b0 b1 b2 * / ! ! c= cmarked_list f0 b0 b1 b2 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 b0 c/\ cMEM b1 b0 c/\ cMEM b2 b1 c/\ cLET / cLET_END c/\ call part cuniq b3 call / c> csizel cfilter * part cMEM b4 b3 cNUMERAL cBIT1 c_0 cflatten b3 cquotient_list f0 b0 c/\ c= cnext_el b1 b2 cf_list f0 b2 c/\ cLET / cLET_END cfinal_list f0 b3 cfind_list b0 ce_list b2 c/\ c==> cfinal_list f0 b1 cflag_list f0 b0 c==> c~ cfinal_list f0 b1 cs_flag_list f0 b0 b1 b2 f1 * / ! ! c= cmarked_list f0 b0 b1 b2 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 b0 c/\ cMEM b1 b0 c/\ cMEM b2 b1 c/\ cLET / cLET_END c/\ call part cuniq b3 call / c> csizel cfilter * part cMEM b4 b3 cNUMERAL cBIT1 c_0 cflatten b3 cquotient_list f0 b0 c/\ c= cnext_el b1 b2 cf_list f0 b2 c/\ cLET / cLET_END cfinal_list f0 b3 cfind_list b0 ce_list b2 c/\ c==> cfinal_list f0 b1 cflag_list f0 b0 c==> c~ cfinal_list f0 b1 cs_flag_list f0 b0 b1 b2 f1
+ |- (((!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) ==> ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)) = ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r))
T c= c==> ! ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2 * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
+ ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) |- ((((((rtrans L) N) r) x) i) = r1)
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c= crtrans f0 f1 f2 f3 f4 f5
+ |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
+ ((((((rtrans L) N) r) x) i) = r1) |- ((~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))) = (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c= c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) |- ((\i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) i')
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 f6
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i)))) |- (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c~ c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4
+ |- ((\x'. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x') /\ (~ ((final_list L) r1))))) ==> (((MEM ((((l'z L) (((((ntrans L) N) r) x) i)) r1) x')) r1) /\ (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x')))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x') = (((POWER (f_list L)) i') x')))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 b0 c~ cfinal_list f0 f5 c/\ cMEM cl'z f0 cntrans f0 f1 f2 f3 f4 f5 b0 f5 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cSUC cl'm f0 f5 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 b0 cPOWER * part cf_list f0 b1 b0 f3
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\L. (!i. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L)
T * / ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b2 b3 b4 cmarked_list b0 cntrans b0 b2 b3 b4 b1 crtrans b0 b2 b3 b4 b1 b4 f0
+ |- ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) (((((rtrans L) N) r) x) i))))))) ==> (~ ((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)))) = T)
T c= c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c~ c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))) /\ (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c/\ c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- |- (!r1. (((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1))))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
- ((((((rtrans L) N) r) x) i) = r1), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) |- ((MEM r1) (((((ntrans L) N) r) x) i))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 cMEM f5 cntrans f0 f1 f2 f3 f4
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- (((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)) ==> F)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c==> c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4 cF
- |- ((\N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))) N)
T * / ! ! c= cmarked_list f0 b0 b1 b2 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 b0 c/\ cMEM b1 b0 c/\ cMEM b2 b1 c/\ cLET / cLET_END c/\ call part cuniq b3 call / c> csizel cfilter * part cMEM b4 b3 cNUMERAL cBIT1 c_0 cflatten b3 cquotient_list f0 b0 c/\ c= cnext_el b1 b2 cf_list f0 b2 c/\ cLET / cLET_END cfinal_list f0 b3 cfind_list b0 ce_list b2 c/\ c==> cfinal_list f0 b1 cflag_list f0 b0 c==> c~ cfinal_list f0 b1 cs_flag_list f0 b0 b1 b2 f1
+ |- (((NUMERAL (BIT1 _0)) <= (SUC a)) = T)
T c= c<= cNUMERAL cBIT1 c_0 cSUC f0 cT
+ |- (((!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 * / c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cztrans f0 f1 f2 f3 b0 cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 f4
+ |- (((!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) ==> ((\x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) x)) = ((\x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))) x))
T c= c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 cmarked_list f0 cntrans f0 f1 f2 b0 f3 crtrans f0 f1 f2 b0 f3 b0 * / c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 cmarked_list f0 cntrans f0 f1 f2 b0 f3 crtrans f0 f1 f2 b0 f3 b0 f4 * / c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 cmarked_list f0 cntrans f0 f1 f2 b0 f3 crtrans f0 f1 f2 b0 f3 b0 f4
- ((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) |- ((((((((rtrans L) N) r) x) i) = r1) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1))) = (?r1. ((((((rtrans L) N) r) x) i) = r1)))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c= c==> c= crtrans f0 f1 f2 f3 f4 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((((rtrans L) N) r) x) i) = r1) /\ (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
+ |- (((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) /\ ((int_le ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))))
T c/\ cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) i)) /\ (((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) /\ (((MEM x) (((((rtrans L) N) r) x) i)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) i))) /\ ((((next_el (((((rtrans L) N) r) x) i)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) i)) (e_list x))) /\ ((((final_list L) (((((rtrans L) N) r) x) i)) ==> ((flag_list L) (((((ntrans L) N) r) x) i))) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c/\ c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
+ |- (((!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))) ==> ((\x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))) x)) = ((\x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))) x))
T c= c==> ! ! c= cytrans f0 f1 f2 b0 b1 cl'y f0 crtrans f0 f1 f2 b0 b1 b0 * / ! c= cytrans f0 f1 f2 b0 b1 cl'y f0 crtrans f0 f1 f2 b0 b1 b0 f3 * / ! c= cytrans f0 f1 f2 b0 b1 cl'y f0 crtrans f0 f1 f2 b0 b1 b0 f3
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- ((((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x)))) = ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c= c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3 c==> c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- |- ((\t. ((LET_END t) = t)) t)
T * / c= cLET_END b0 b0 f0
+ |- ((\i. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) i)
T * / ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b1 b2 b3 cmarked_list f0 cntrans f0 b1 b2 b3 b0 crtrans f0 b1 b2 b3 b0 b3 f1
+ |- ((~ ((int_le x) y)) = ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x))
T c= c~ cint_le f0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- (((!L. (!i. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) ==> ((\L. (!i. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L)) = ((\L. (!i. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))))) L))
T c= c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b2 b3 b4 cmarked_list b0 cntrans b0 b2 b3 b4 b1 crtrans b0 b2 b3 b4 b1 b4 * / ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b2 b3 b4 cmarked_list b0 cntrans b0 b2 b3 b4 b1 crtrans b0 b2 b3 b4 b1 b4 f0 * / ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b2 b3 b4 cmarked_list b0 cntrans b0 b2 b3 b4 b1 crtrans b0 b2 b3 b4 b1 b4 f0
+ |- (((NUMERAL (BIT1 _0)) <= (SUC a)) /\ ((SUC a) <= (SUC a)))
T c/\ c<= cNUMERAL cBIT1 c_0 cSUC f0 c<= cSUC f0 cSUC f0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 c==> c/\ c<= cNUMERAL cBIT1 c_0 f6 c<= f6 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 f6 f2
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- ((((marked_list L) (((((ntrans L) N) r) x) i)) r1) x)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3
- |- ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)
T * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
- (((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302764))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302764)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))
T c= cPOWER * * part ctransform_list f0 f1 f2 c, f3 f4 c, cntrans f0 f3 f4 f1 f2 crtrans f0 f3 f4 f1 f2
+ |- ((\r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cztrans f0 f1 b0 b1 b2 cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 f2
- |- (((!x. (((\r1. ((((((rtrans L) N) r) x) i) = r1)) x) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1)))) ==> ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1)))) = ((?r1. ((((((rtrans L) N) r) x) i) = r1)) ==> (?r1. ((((((rtrans L) N) r) x) i) = r1))))
T c= c==> ! c==> * / c= crtrans f0 f1 f2 f3 f4 b1 b0 c? / c= crtrans f0 f1 f2 f3 f4 b1 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0
+ |- ((\r1. ((((((rtrans L) N) r) x) i) = r1)) (((((rtrans L) N) r) x) i))
T * / c= crtrans f0 f1 f2 f3 f4 b0 crtrans f0 f1 f2 f3 f4
- |- (((!j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) ==> ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j)) = ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j))
T c= c==> ! c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4 * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4
+ |- ((~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))) = (((((((ztrans L) N) r) x) i) = (((((ytrans L) N) r) x) i)) ==> F))
T c= c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3 c==> c= cztrans f0 f1 f2 f3 f4 cytrans f0 f1 f2 f3 f4 cF
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((((rtrans L) N) r) x) i) = r1), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((l'y L) r1) x) = y) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c= cl'y f0 f5 f3 f6 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cPOWER * part cf_list f0 cSUC cl'm f0 f5 f3 f3
- (!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x))))) |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (SUC (((l'm L) r1) x)))) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) i') x)))) = T)
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 b0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f6 c<= f6 cSUC cl'm f0 f1 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 f6 f2 cT
- ((((((rtrans L) N) r) x) i) = r1), ((MEM (((((rtrans L) N) r) x) i)) (((((ntrans L) N) r) x) i)) |- (((MEM r1) (((((ntrans L) N) r) x) i)) = T)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c= cMEM f5 cntrans f0 f1 f2 f3 f4 cT
+ (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (!r1. (((\r1. ((((((rtrans L) N) r) x) i) = r1)) r1) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x)))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 ! c==> * / c= crtrans f0 f1 f2 f3 f4 b1 b0 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) (((((rtrans L) N) r) x) i))), (good_list L), (good_list_nodes L), ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) |- (((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) i)) x))) x))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c~ c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f1 f2 f3 f4 f3 f3
- ((\y. ((((l'y L) r1) x) = y)) y) |- (((\y. ((((l'y L) r1) x) = y)) y) /\ (?y. ((((l'y L) r1) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c/\ * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((normal_list L) (((((ntrans L) N) r) x) i)) |- (((normal_list L) (((((ntrans L) N) r) x) i)) = T)
T c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c= cnormal_list f0 cntrans f0 f1 f2 f3 f4 cT
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- ((((l'y L) r1) x) = y) |- (((((l'y L) r1) x) = y) /\ (?y. ((((l'y L) r1) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c/\ c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((?y. ((((l'y L) r1) x) = y)) ==> (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x)))) = (~ (((((l'z L) (((((ntrans L) N) r) x) i)) r1) x) = (((POWER (f_list L)) (SUC (((l'm L) r1) x))) x))))
T c= c==> c? / c= cl'y f0 f1 f2 b0 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2 c~ c= cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2
