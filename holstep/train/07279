N Lp_ineqs_proofs.face_map_in_darts_k
C |- (!H. (!k. (!d. ((d IN ((darts_k k) H)) ==> ((((face_map H) d) IN ((darts_k k) H)) /\ (((inverse (face_map H)) d) IN ((darts_k k) H)))))))
T c==> cIN f0 * * part cdarts_k f1 f2 c/\ cIN cface_map f2 f0 * * part cdarts_k f1 f2 cIN cinverse * part cface_map f2 f0 * * part cdarts_k f1 f2
D TRUTH
A |- T
T cT
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D Fan.POWER_1
A |- (!f. (((POWER f) (NUMERAL (BIT1 _0))) = f))
T c= * * part cPOWER f0 cNUMERAL cBIT1 c_0 f0
D Hypermap.lemma_dart_invariant
A |- (!H. (!x. ((x IN (dart H)) ==> ((((edge_map H) x) IN (dart H)) /\ ((((node_map H) x) IN (dart H)) /\ (((face_map H) x) IN (dart H)))))))
T c==> cIN f0 * part cdart f1 c/\ cIN cedge_map f1 f0 * part cdart f1 c/\ cIN cnode_map f1 f0 * part cdart f1 cIN cface_map f1 f0 * part cdart f1
D Hypermap.lemma_dart_inveriant_under_inverse_maps
A |- (!H. (!x. ((x IN (dart H)) ==> ((((inverse (edge_map H)) x) IN (dart H)) /\ ((((inverse (node_map H)) x) IN (dart H)) /\ (((inverse (face_map H)) x) IN (dart H)))))))
T c==> cIN f0 * part cdart f1 c/\ cIN cinverse * part cedge_map f1 f0 * part cdart f1 c/\ cIN cinverse * part cnode_map f1 f0 * part cdart f1 cIN cinverse * part cface_map f1 f0 * part cdart f1
D Hypermap.face_refl
A |- (!H. (!x. (x IN ((face H) x))))
T cIN f0 * * part cface f1 f0
D Hypermap.lemma_face_identity
A |- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))))
T c==> cIN f0 * * part cface f1 f2 c= * * part cface f1 f2 * * part cface f1 f0
D Hypermap.lemma_in_face
A |- (!H. (!x. (!n. ((((POWER (face_map H)) n) x) IN ((face H) x)))))
T cIN cPOWER * part cface_map f0 f1 f2 * * part cface f0 f2
D Hypermap.lemma_power_inverse_in_face
A |- (!H. (!x. (!y. (!n. ((y IN ((face H) x)) ==> ((((POWER (inverse (face_map H))) n) y) IN ((face H) x)))))))
T c==> cIN f0 * * part cface f1 f2 cIN cPOWER * part cinverse * part cface_map f1 f3 f0 * * part cface f1 f2
D List_hypermap.darts_k
A |- (!H. (!k. (((darts_k k) H) = (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d)))))))
T c= * * part cdarts_k f0 f1 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * part cdart f1 c= cCARD * * part cface f1 b1 f0 b1
+ |- ((y IN ((face H) x)) ==> (((((POWER (inverse (face_map H))) n) y) IN ((face H) x)) = T))
T c==> cIN f0 * * part cface f1 f2 c= cIN cPOWER * part cinverse * part cface_map f1 f3 f0 * * part cface f1 f2 cT
+ (((POWER f) (NUMERAL (BIT1 _0))) = f) |- (f = ((POWER f) (NUMERAL (BIT1 _0))))
T c==> c= * * part cPOWER f0 cNUMERAL cBIT1 c_0 f0 c= f0 * * part cPOWER f0 cNUMERAL cBIT1 c_0
+ |- (T = ((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))))
T c= cT c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1
+ (((face H) ((inverse (face_map H)) d)) = ((face H) d)) |- ((((face H) ((inverse (face_map H)) d)) = ((face H) d)) /\ (((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))) = T))
T c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c/\ c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 cT
+ |- (((face H) ((inverse (face_map H)) d)) = ((face H) d))
T c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- ((x IN (dart H)) ==> ((((node_map H) x) IN (dart H)) = T))
T c==> cIN f0 * part cdart f1 c= cIN cnode_map f1 f0 * part cdart f1 cT
+ |- (((face H) ((face_map H) d)) = ((face H) d))
T c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1
+ |- (((((face H) ((face_map H) d)) = ((face H) d)) ==> (((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d))) = q')) ==> (((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) = ((((face H) ((face_map H) d)) = ((face H) d)) ==> q')))
T c==> c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 f2 c= c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 f2
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ |- ((\n. ((y IN ((face H) x)) ==> ((((POWER (inverse (face_map H))) n) y) IN ((face H) x)))) n)
T * / c==> cIN f0 * * part cface f1 f2 cIN cPOWER * part cinverse * part cface_map f1 b0 f0 * * part cface f1 f2 f3
+ |- (((!H. (!x. (x IN ((face H) x)))) ==> ((\H. (!x. (x IN ((face H) x)))) H)) = ((\H. (!x. (x IN ((face H) x)))) H))
T c= c==> ! ! cIN b1 * * part cface b0 b1 * / ! cIN b1 * * part cface b0 b1 f0 * / ! cIN b1 * * part cface b0 b1 f0
+ |- ((\x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) x)
T * / ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 f1
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (x IN (dart H)) |- (((inverse (face_map H)) x) IN (dart H))
T c==> cIN f0 * part cdart f1 cIN cinverse * part cface_map f1 f0 * part cdart f1
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ |- (((!H. (!k. (((darts_k k) H) = (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d))))))) ==> ((\H. (!k. (((darts_k k) H) = (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d))))))) H)) = ((\H. (!k. (((darts_k k) H) = (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d))))))) H))
T c= c==> ! ! c= * * part cdarts_k b1 b0 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 * part cdart b0 c= cCARD * * part cface b0 b3 b1 b3 * / ! c= * * part cdarts_k b1 b0 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 * part cdart b0 c= cCARD * * part cface b0 b3 b1 b3 f0 * / ! c= * * part cdarts_k b1 b0 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 * part cdart b0 c= cCARD * * part cface b0 b3 b1 b3 f0
+ |- (((!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) ==> ((\x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) x)) = ((\x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) x))
T c= c==> ! ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 * / ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 f1 * / ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 f1
+ |- (((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) = ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d))))
T c= c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1
+ |- (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) = p') ==> ((p' ==> (((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))) = q')) ==> (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) = (p' ==> q'))))
T c==> c= c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 f2 c==> c==> f2 c= c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 f3 c= c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c==> f2 f3
+ (d IN (dart H)) |- ((T /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))))
T c==> cIN f0 * part cdart f1 c/\ c/\ cT c= cCARD * * part cface f1 cface_map f1 f0 cCARD * * part cface f1 f0 c/\ cIN cinverse * part cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cinverse * part cface_map f1 f0 cCARD * * part cface f1 f0
+ |- (((((inverse (face_map H)) d) IN (dart H)) = T) ==> ((T /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))))
T c==> c= cIN cinverse * part cface_map f0 f1 * part cdart f0 cT c/\ c/\ cT c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c/\ cIN cinverse * part cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- ((((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) ==> ((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d))))) = ((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))))
T c= c==> c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1
+ (x IN (dart H)) |- ((((inverse (node_map H)) x) IN (dart H)) /\ (((inverse (face_map H)) x) IN (dart H)))
T c==> cIN f0 * part cdart f1 c/\ cIN cinverse * part cnode_map f1 f0 * part cdart f1 cIN cinverse * part cface_map f1 f0 * part cdart f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((\H. (!x. (!y. (!n. ((y IN ((face H) x)) ==> ((((POWER (inverse (face_map H))) n) y) IN ((face H) x))))))) H)
T * / ! ! ! c==> cIN b2 * * part cface b0 b1 cIN cPOWER * part cinverse * part cface_map b0 b3 b2 * * part cface b0 b1 f0
+ ((CARD ((face H) d)) = k), (d IN (dart H)) |- (((((face_map H) d) IN (dart H)) /\ ((CARD ((face H) ((face_map H) d))) = k)) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = k)))
T c==> c= cCARD * * part cface f0 f1 f2 c==> cIN f1 * part cdart f0 c/\ c/\ cIN cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cface_map f0 f1 f2 c/\ cIN cinverse * part cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 f2
+ |- ((\y. (!n. ((y IN ((face H) x)) ==> ((((POWER (inverse (face_map H))) n) y) IN ((face H) x))))) y)
T * / ! c==> cIN b0 * * part cface f0 f1 cIN cPOWER * part cinverse * part cface_map f0 b1 b0 * * part cface f0 f1 f2
+ |- ((((face_map H) d) IN (GSPEC (\v. (?y. (((SETSPEC v) ((y IN (dart H)) /\ ((CARD ((face H) y)) = k))) y))))) = ((((face_map H) d) IN (dart H)) /\ ((CARD ((face H) ((face_map H) d))) = k)))
T c= cIN cface_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * part cdart f0 c= cCARD * * part cface f0 b1 f2 b1 c/\ cIN cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cface_map f0 f1 f2
+ |- (((d IN (dart H)) /\ ((CARD ((face H) d)) = k)) ==> (((((face_map H) d) IN (dart H)) /\ ((CARD ((face H) ((face_map H) d))) = k)) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = k))))
T c==> c/\ cIN f0 * part cdart f1 c= cCARD * * part cface f1 f0 f2 c/\ c/\ cIN cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cface_map f1 f0 f2 c/\ cIN cinverse * part cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cinverse * part cface_map f1 f0 f2
- (x IN (dart H)) |- (((inverse (node_map H)) x) IN (dart H))
T c==> cIN f0 * part cdart f1 cIN cinverse * part cnode_map f1 f0 * part cdart f1
+ |- (((face_map H) d) IN ((face H) d))
T cIN cface_map f0 f1 * * part cface f0 f1
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((!d. ((d IN ((darts_k k) H)) ==> ((((face_map H) d) IN ((darts_k k) H)) /\ (((inverse (face_map H)) d) IN ((darts_k k) H))))) = T)
T c= ! c==> cIN b0 * * part cdarts_k f0 f1 c/\ cIN cface_map f1 b0 * * part cdarts_k f0 f1 cIN cinverse * part cface_map f1 b0 * * part cdarts_k f0 f1 cT
+ ((((face_map H) d) IN (dart H)) = T) |- (((T /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))) = (((((face_map H) d) IN (dart H)) /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))))
T c==> c= cIN cface_map f0 f1 * part cdart f0 cT c= c/\ c/\ cT c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c/\ cIN cinverse * part cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c/\ c/\ cIN cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c/\ cIN cinverse * part cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1
+ |- (((!H. (!x. ((x IN (dart H)) ==> ((((inverse (edge_map H)) x) IN (dart H)) /\ ((((inverse (node_map H)) x) IN (dart H)) /\ (((inverse (face_map H)) x) IN (dart H))))))) ==> ((\H. (!x. ((x IN (dart H)) ==> ((((inverse (edge_map H)) x) IN (dart H)) /\ ((((inverse (node_map H)) x) IN (dart H)) /\ (((inverse (face_map H)) x) IN (dart H))))))) H)) = ((\H. (!x. ((x IN (dart H)) ==> ((((inverse (edge_map H)) x) IN (dart H)) /\ ((((inverse (node_map H)) x) IN (dart H)) /\ (((inverse (face_map H)) x) IN (dart H))))))) H))
T c= c==> ! ! c==> cIN b1 * part cdart b0 c/\ cIN cinverse * part cedge_map b0 b1 * part cdart b0 c/\ cIN cinverse * part cnode_map b0 b1 * part cdart b0 cIN cinverse * part cface_map b0 b1 * part cdart b0 * / ! c==> cIN b1 * part cdart b0 c/\ cIN cinverse * part cedge_map b0 b1 * part cdart b0 c/\ cIN cinverse * part cnode_map b0 b1 * part cdart b0 cIN cinverse * part cface_map b0 b1 * part cdart b0 f0 * / ! c==> cIN b1 * part cdart b0 c/\ cIN cinverse * part cedge_map b0 b1 * part cdart b0 c/\ cIN cinverse * part cnode_map b0 b1 * part cdart b0 cIN cinverse * part cface_map b0 b1 * part cdart b0 f0
+ (((((POWER (inverse (face_map H))) (NUMERAL (BIT1 _0))) d) IN ((face H) d)) = T) |- (T = ((((POWER (inverse (face_map H))) (NUMERAL (BIT1 _0))) d) IN ((face H) d)))
T c==> c= cIN cPOWER * part cinverse * part cface_map f0 cNUMERAL cBIT1 c_0 f1 * * part cface f0 f1 cT c= cT cIN cPOWER * part cinverse * part cface_map f0 cNUMERAL cBIT1 c_0 f1 * * part cface f0 f1
+ (y IN ((face H) x)) |- ((y IN ((face H) x)) /\ (((((POWER (inverse (face_map H))) n) y) IN ((face H) x)) = T))
T c==> cIN f0 * * part cface f1 f2 c/\ cIN f0 * * part cface f1 f2 c= cIN cPOWER * part cinverse * part cface_map f1 f3 f0 * * part cface f1 f2 cT
- (x IN (dart H)) |- ((x IN (dart H)) /\ ((((edge_map H) x) IN (dart H)) = T))
T c==> cIN f0 * part cdart f1 c/\ cIN f0 * part cdart f1 c= cIN cedge_map f1 f0 * part cdart f1 cT
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- ((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) |- (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) /\ ((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))))
T c==> c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c/\ c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1
- (((face H) ((face_map H) d)) = ((face H) d)), ((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) |- ((((face H) ((face_map H) d)) = ((face H) d)) /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d))))
T c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c==> c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c/\ c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((((d IN (dart H)) ==> ((((inverse (face_map H)) d) IN (dart H)) = T)) ==> ((T /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))))) = ((T /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))))
T c= c==> c==> cIN f0 * part cdart f1 c= cIN cinverse * part cface_map f1 f0 * part cdart f1 cT c/\ c/\ cT c= cCARD * * part cface f1 cface_map f1 f0 cCARD * * part cface f1 f0 c/\ cIN cinverse * part cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cinverse * part cface_map f1 f0 cCARD * * part cface f1 f0 c/\ c/\ cT c= cCARD * * part cface f1 cface_map f1 f0 cCARD * * part cface f1 f0 c/\ cIN cinverse * part cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cinverse * part cface_map f1 f0 cCARD * * part cface f1 f0
+ |- (((!x. (x IN ((face H) x))) ==> ((\x. (x IN ((face H) x))) x)) = ((\x. (x IN ((face H) x))) x))
T c= c==> ! cIN b0 * * part cface f0 b0 * / cIN b0 * * part cface f0 b0 f1 * / cIN b0 * * part cface f0 b0 f1
+ (x IN (dart H)) |- (((face_map H) x) IN (dart H))
T c==> cIN f0 * part cdart f1 cIN cface_map f1 f0 * part cdart f1
+ |- (((!k. (((darts_k k) H) = (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d)))))) ==> ((\k. (((darts_k k) H) = (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d)))))) k)) = ((\k. (((darts_k k) H) = (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d)))))) k))
T c= c==> ! c= * * part cdarts_k b0 f0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 * part cdart f0 c= cCARD * * part cface f0 b2 b0 b2 * / c= * * part cdarts_k b0 f0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 * part cdart f0 c= cCARD * * part cface f0 b2 b0 b2 f1 * / c= * * part cdarts_k b0 f0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 * part cdart f0 c= cCARD * * part cface f0 b2 b0 b2 f1
- |- ((x IN (dart H)) ==> ((((inverse (node_map H)) x) IN (dart H)) = T))
T c==> cIN f0 * part cdart f1 c= cIN cinverse * part cnode_map f1 f0 * part cdart f1 cT
+ |- (((!x. (!y. ((x = y) = (y = x)))) ==> ((\x. (!y. ((x = y) = (y = x)))) x)) = ((\x. (!y. ((x = y) = (y = x)))) x))
T c= c==> ! ! c= c= b0 b1 c= b1 b0 * / ! c= c= b0 b1 c= b1 b0 f0 * / ! c= c= b0 b1 c= b1 b0 f0
+ |- (((!y. (!n. ((y IN ((face H) x)) ==> ((((POWER (inverse (face_map H))) n) y) IN ((face H) x))))) ==> ((\y. (!n. ((y IN ((face H) x)) ==> ((((POWER (inverse (face_map H))) n) y) IN ((face H) x))))) y)) = ((\y. (!n. ((y IN ((face H) x)) ==> ((((POWER (inverse (face_map H))) n) y) IN ((face H) x))))) y))
T c= c==> ! ! c==> cIN b0 * * part cface f0 f1 cIN cPOWER * part cinverse * part cface_map f0 b1 b0 * * part cface f0 f1 * / ! c==> cIN b0 * * part cface f0 f1 cIN cPOWER * part cinverse * part cface_map f0 b1 b0 * * part cface f0 f1 f2 * / ! c==> cIN b0 * * part cface f0 f1 cIN cPOWER * part cinverse * part cface_map f0 b1 b0 * * part cface f0 f1 f2
- |- (((!H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) ==> ((\H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) H)) = ((\H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) H))
T c= c==> ! ! c==> cIN b1 * * part cface b0 f0 c= * * part cface b0 f0 * * part cface b0 b1 * / ! c==> cIN b1 * * part cface b0 f0 c= * * part cface b0 f0 * * part cface b0 b1 f1 * / ! c==> cIN b1 * * part cface b0 f0 c= * * part cface b0 f0 * * part cface b0 b1 f1
+ |- ((x IN (dart H)) ==> ((((inverse (face_map H)) x) IN (dart H)) = T))
T c==> cIN f0 * part cdart f1 c= cIN cinverse * part cface_map f1 f0 * part cdart f1 cT
+ |- (((!y. ((x = y) = (y = x))) ==> ((\y. ((x = y) = (y = x))) y)) = ((\y. ((x = y) = (y = x))) y))
T c= c==> ! c= c= f0 b0 c= b0 f0 * / c= c= f0 b0 c= b0 f0 f1 * / c= c= f0 b0 c= b0 f0 f1
+ |- ((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> (((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))) = T))
T c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 cT
+ ((d IN (dart H)) /\ ((CARD ((face H) d)) = k)) |- (((d IN (dart H)) /\ ((CARD ((face H) d)) = k)) /\ (((((face_map H) d) IN (dart H)) /\ ((CARD ((face H) ((face_map H) d))) = k)) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = k))))
T c==> c/\ cIN f0 * part cdart f1 c= cCARD * * part cface f1 f0 f2 c/\ c/\ cIN f0 * part cdart f1 c= cCARD * * part cface f1 f0 f2 c/\ c/\ cIN cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cface_map f1 f0 f2 c/\ cIN cinverse * part cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cinverse * part cface_map f1 f0 f2
+ |- ((((face H) d) = ((face H) ((face_map H) d))) = (((face H) ((face_map H) d)) = ((face H) d)))
T c= c= * * part cface f0 f1 * * part cface f0 cface_map f0 f1 c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1
- (x IN (dart H)) |- ((x IN (dart H)) /\ ((((inverse (node_map H)) x) IN (dart H)) = T))
T c==> cIN f0 * part cdart f1 c/\ cIN f0 * part cdart f1 c= cIN cinverse * part cnode_map f1 f0 * part cdart f1 cT
+ |- (((inverse (face_map H)) d) IN ((face H) d))
T cIN cinverse * part cface_map f0 f1 * * part cface f0 f1
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) |- (((!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))) ==> ((\y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))) y)) = ((\y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))) y))
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 c= c==> ! c==> cIN b0 * * part cface f0 f1 c= * * part cface f0 f1 * * part cface f0 b0 * / c==> cIN b0 * * part cface f0 f1 c= * * part cface f0 f1 * * part cface f0 b0 f2 * / c==> cIN b0 * * part cface f0 f1 c= * * part cface f0 f1 * * part cface f0 b0 f2
+ |- ((((((face H) ((inverse (face_map H)) d)) = ((face H) d)) = (((face H) ((inverse (face_map H)) d)) = ((face H) d))) ==> (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> (((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))) = q')) ==> (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) = ((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> q')))) = (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> (((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))) = q')) ==> (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) = ((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> q'))))
T c= c==> c= c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c==> c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 f2 c= c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 f2 c==> c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 f2 c= c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 f2
+ |- (((!n. ((((POWER (face_map H)) n) x) IN ((face H) x))) ==> ((\n. ((((POWER (face_map H)) n) x) IN ((face H) x))) n)) = ((\n. ((((POWER (face_map H)) n) x) IN ((face H) x))) n))
T c= c==> ! cIN cPOWER * part cface_map f0 b0 f1 * * part cface f0 f1 * / cIN cPOWER * part cface_map f0 b0 f1 * * part cface f0 f1 f2 * / cIN cPOWER * part cface_map f0 b0 f1 * * part cface f0 f1 f2
- (x IN (dart H)) |- ((x IN (dart H)) /\ ((((node_map H) x) IN (dart H)) = T))
T c==> cIN f0 * part cdart f1 c/\ cIN f0 * part cdart f1 c= cIN cnode_map f1 f0 * part cdart f1 cT
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ (x IN (dart H)) |- ((x IN (dart H)) /\ ((((face_map H) x) IN (dart H)) = T))
T c==> cIN f0 * part cdart f1 c/\ cIN f0 * part cdart f1 c= cIN cface_map f1 f0 * part cdart f1 cT
+ |- ((\q'. (((((face H) ((face_map H) d)) = ((face H) d)) = p') ==> ((p' ==> (((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d))) = q')) ==> (((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) = (p' ==> q'))))) q')
T * / c==> c= c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 f2 c==> c==> f2 c= c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 b0 c= c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c==> f2 b0 f3
+ |- (((d IN (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d))))) ==> ((((face_map H) d) IN (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d))))) /\ (((inverse (face_map H)) d) IN ((darts_k k) H)))) = ((d IN (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d))))) ==> ((((face_map H) d) IN ((darts_k k) H)) /\ (((inverse (face_map H)) d) IN ((darts_k k) H)))))
T c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * part cdart f1 c= cCARD * * part cface f1 b1 f2 b1 c/\ cIN cface_map f1 f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * part cdart f1 c= cCARD * * part cface f1 b1 f2 b1 cIN cinverse * part cface_map f1 f0 * * part cdarts_k f2 f1 c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * part cdart f1 c= cCARD * * part cface f1 b1 f2 b1 c/\ cIN cface_map f1 f0 * * part cdarts_k f2 f1 cIN cinverse * part cface_map f1 f0 * * part cdarts_k f2 f1
+ (d IN (dart H)) |- (((d IN (dart H)) ==> ((((inverse (face_map H)) d) IN (dart H)) = T)) ==> ((T /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))))
T c==> cIN f0 * part cdart f1 c==> c==> cIN f0 * part cdart f1 c= cIN cinverse * part cface_map f1 f0 * part cdart f1 cT c/\ c/\ cT c= cCARD * * part cface f1 cface_map f1 f0 cCARD * * part cface f1 f0 c/\ cIN cinverse * part cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cinverse * part cface_map f1 f0 cCARD * * part cface f1 f0
+ |- ((\f. (f = ((POWER f) (NUMERAL (BIT1 _0))))) f)
T * / c= b0 * * part cPOWER b0 cNUMERAL cBIT1 c_0 f0
+ |- ((d IN ((face H) d)) /\ ((((((POWER (inverse (face_map H))) (NUMERAL (BIT1 _0))) d) IN ((face H) d)) = T) ==> ((((POWER (inverse (face_map H))) (NUMERAL (BIT1 _0))) d) IN ((face H) d))))
T c/\ cIN f0 * * part cface f1 f0 c==> c= cIN cPOWER * part cinverse * part cface_map f1 cNUMERAL cBIT1 c_0 f0 * * part cface f1 f0 cT cIN cPOWER * part cinverse * part cface_map f1 cNUMERAL cBIT1 c_0 f0 * * part cface f1 f0
+ |- ((x = y) = (y = x))
T c= c= f0 f1 c= f1 f0
+ |- ((((d IN ((face H) d)) ==> (((((POWER (inverse (face_map H))) (NUMERAL (BIT1 _0))) d) IN ((face H) d)) = T)) ==> ((((POWER (inverse (face_map H))) (NUMERAL (BIT1 _0))) d) IN ((face H) d))) = ((((POWER (inverse (face_map H))) (NUMERAL (BIT1 _0))) d) IN ((face H) d)))
T c= c==> c==> cIN f0 * * part cface f1 f0 c= cIN cPOWER * part cinverse * part cface_map f1 cNUMERAL cBIT1 c_0 f0 * * part cface f1 f0 cT cIN cPOWER * part cinverse * part cface_map f1 cNUMERAL cBIT1 c_0 f0 * * part cface f1 f0 cIN cPOWER * part cinverse * part cface_map f1 cNUMERAL cBIT1 c_0 f0 * * part cface f1 f0
- |- ((\H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) H)
T * / ! c==> cIN b1 * * part cface b0 f0 c= * * part cface b0 f0 * * part cface b0 b1 f1
+ |- ((\H. (!x. (x IN ((face H) x)))) H)
T * / ! cIN b1 * * part cface b0 b1 f0
- |- ((!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) ==> (!x. (!H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))))
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 ! ! ! c==> cIN b2 * * part cface b1 b0 c= * * part cface b1 b0 * * part cface b1 b2
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) |- (((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))) = T)
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 c= c==> cIN f0 * * part cface f1 f2 c= * * part cface f1 f2 * * part cface f1 f0 cT
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) |- (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 ! ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1
- |- (((!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) ==> (!x. (!H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))))) = (!x. (!H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))))
T c= c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 ! ! ! c==> cIN b2 * * part cface b1 b0 c= * * part cface b1 b0 * * part cface b1 b2 ! ! ! c==> cIN b2 * * part cface b1 b0 c= * * part cface b1 b0 * * part cface b1 b2
+ |- ((\H. (!x. ((x IN (dart H)) ==> ((((edge_map H) x) IN (dart H)) /\ ((((node_map H) x) IN (dart H)) /\ (((face_map H) x) IN (dart H))))))) H)
T * / ! c==> cIN b1 * part cdart b0 c/\ cIN cedge_map b0 b1 * part cdart b0 c/\ cIN cnode_map b0 b1 * part cdart b0 cIN cface_map b0 b1 * part cdart b0 f0
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) |- (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 ! c==> cIN b0 * * part cface f0 f1 c= * * part cface f0 f1 * * part cface f0 b0
+ |- ((\x. (x IN ((face H) x))) x)
T * / cIN b0 * * part cface f0 b0 f1
+ |- (((((face H) ((face_map H) d)) = ((face H) d)) = p') ==> ((p' ==> (((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d))) = q')) ==> (((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) = (p' ==> q'))))
T c==> c= c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 f2 c==> c==> f2 c= c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 f3 c= c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c==> f2 f3
+ |- ((d IN (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d))))) ==> ((((face_map H) d) IN ((darts_k k) H)) /\ (((inverse (face_map H)) d) IN ((darts_k k) H))))
T c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * part cdart f1 c= cCARD * * part cface f1 b1 f2 b1 c/\ cIN cface_map f1 f0 * * part cdarts_k f2 f1 cIN cinverse * part cface_map f1 f0 * * part cdarts_k f2 f1
+ |- (((!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) ==> ((\H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) H)) = ((\H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) H))
T c= c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 * / ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 f0 * / ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 f0
- |- (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) ==> ((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))))
T c==> c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1
- ((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) |- (((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))))
T c==> c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c/\ c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1
+ |- ((\y. ((x = y) = (y = x))) y)
T * / c= c= f0 b0 c= b0 f0 f1
+ |- ((((d IN (dart H)) /\ ((CARD ((face H) d)) = k)) ==> ((((face_map H) d) IN (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d))))) /\ (((inverse (face_map H)) d) IN (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d))))))) = ((d IN (GSPEC (\v. (?y. (((SETSPEC v) ((y IN (dart H)) /\ ((CARD ((face H) y)) = k))) y))))) ==> ((((face_map H) d) IN (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d))))) /\ (((inverse (face_map H)) d) IN (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d))))))))
T c= c==> c/\ cIN f0 * part cdart f1 c= cCARD * * part cface f1 f0 f2 c/\ cIN cface_map f1 f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * part cdart f1 c= cCARD * * part cface f1 b1 f2 b1 cIN cinverse * part cface_map f1 f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * part cdart f1 c= cCARD * * part cface f1 b1 f2 b1 c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * part cdart f1 c= cCARD * * part cface f1 b1 f2 b1 c/\ cIN cface_map f1 f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * part cdart f1 c= cCARD * * part cface f1 b1 f2 b1 cIN cinverse * part cface_map f1 f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * part cdart f1 c= cCARD * * part cface f1 b1 f2 b1
- |- ((x IN (dart H)) ==> ((((edge_map H) x) IN (dart H)) = T))
T c==> cIN f0 * part cdart f1 c= cIN cedge_map f1 f0 * part cdart f1 cT
+ |- (T = (d IN ((face H) d)))
T c= cT cIN f0 * * part cface f1 f0
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ |- (((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))) = (((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d))) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))))
T c= c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c/\ c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1
+ ((((inverse (face_map H)) d) IN (dart H)) = T) |- (((T /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ (T /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))) = ((T /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))))
T c==> c= cIN cinverse * part cface_map f0 f1 * part cdart f0 cT c= c/\ c/\ cT c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c/\ cT c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c/\ c/\ cT c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c/\ cIN cinverse * part cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1
- |- ((((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) ==> ((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))) = ((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))))
T c= c==> c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1
+ |- (((((face_map H) d) IN ((face H) d)) ==> (((face H) d) = ((face H) ((face_map H) d)))) = (((face H) d) = ((face H) ((face_map H) d))))
T c= c==> cIN cface_map f0 f1 * * part cface f0 f1 c= * * part cface f0 f1 * * part cface f0 cface_map f0 f1 c= * * part cface f0 f1 * * part cface f0 cface_map f0 f1
- (((face H) ((inverse (face_map H)) d)) = ((face H) d)), ((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) |- ((((face H) ((inverse (face_map H)) d)) = ((face H) d)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))
T c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c==> c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c/\ c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) |- (!H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 ! ! c==> cIN b1 * * part cface b0 f0 c= * * part cface b0 f0 * * part cface b0 b1
+ |- ((x IN ((face H) x)) = T)
T c= cIN f0 * * part cface f1 f0 cT
- |- ((((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))) = ((T /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))))
T c= c/\ c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c/\ cIN cinverse * part cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c/\ c/\ cT c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c/\ cIN cinverse * part cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1
+ (d IN (dart H)) |- ((((d IN (dart H)) /\ (((((face_map H) d) IN (dart H)) = T) ==> (((((face_map H) d) IN (dart H)) /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))))) ==> (((d IN (dart H)) ==> ((((face_map H) d) IN (dart H)) = T)) ==> (((((face_map H) d) IN (dart H)) /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))))) = (((d IN (dart H)) ==> ((((face_map H) d) IN (dart H)) = T)) ==> (((((face_map H) d) IN (dart H)) /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))))))
T c==> cIN f0 * part cdart f1 c= c==> c/\ cIN f0 * part cdart f1 c==> c= cIN cface_map f1 f0 * part cdart f1 cT c/\ c/\ cIN cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cface_map f1 f0 cCARD * * part cface f1 f0 c/\ cIN cinverse * part cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cinverse * part cface_map f1 f0 cCARD * * part cface f1 f0 c==> c==> cIN f0 * part cdart f1 c= cIN cface_map f1 f0 * part cdart f1 cT c/\ c/\ cIN cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cface_map f1 f0 cCARD * * part cface f1 f0 c/\ cIN cinverse * part cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cinverse * part cface_map f1 f0 cCARD * * part cface f1 f0 c==> c==> cIN f0 * part cdart f1 c= cIN cface_map f1 f0 * part cdart f1 cT c/\ c/\ cIN cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cface_map f1 f0 cCARD * * part cface f1 f0 c/\ cIN cinverse * part cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cinverse * part cface_map f1 f0 cCARD * * part cface f1 f0
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) |- ((!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) /\ (!x. (!H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))))
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 c/\ ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 ! ! ! c==> cIN b2 * * part cface b1 b0 c= * * part cface b1 b0 * * part cface b1 b2
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))), (y IN ((face H) x)) |- ((y IN ((face H) x)) /\ (((face H) x) = ((face H) y)))
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 c==> cIN f0 * * part cface f1 f2 c/\ cIN f0 * * part cface f1 f2 c= * * part cface f1 f2 * * part cface f1 f0
+ (d IN (dart H)) |- ((d IN (dart H)) /\ (((((inverse (face_map H)) d) IN (dart H)) = T) ==> ((T /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))))))
T c==> cIN f0 * part cdart f1 c/\ cIN f0 * part cdart f1 c==> c= cIN cinverse * part cface_map f1 f0 * part cdart f1 cT c/\ c/\ cT c= cCARD * * part cface f1 cface_map f1 f0 cCARD * * part cface f1 f0 c/\ cIN cinverse * part cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cinverse * part cface_map f1 f0 cCARD * * part cface f1 f0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
+ |- ((\k. (((darts_k k) H) = (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d)))))) k)
T * / c= * * part cdarts_k b0 f0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 * part cdart f0 c= cCARD * * part cface f0 b2 b0 b2 f1
+ |- (((!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))) ==> ((\y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))) y)) = ((\y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))) y))
T c= c==> ! c==> cIN b0 * * part cface f0 f1 c= * * part cface f0 f1 * * part cface f0 b0 * / c==> cIN b0 * * part cface f0 f1 c= * * part cface f0 f1 * * part cface f0 b0 f2 * / c==> cIN b0 * * part cface f0 f1 c= * * part cface f0 f1 * * part cface f0 b0 f2
+ ((((face_map H) d) IN (dart H)) = T), (d IN (dart H)) |- (((((face_map H) d) IN (dart H)) /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))))
T c==> c= cIN cface_map f0 f1 * part cdart f0 cT c==> cIN f1 * part cdart f0 c/\ c/\ cIN cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c/\ cIN cinverse * part cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1
+ |- ((\x. (!y. (!n. ((y IN ((face H) x)) ==> ((((POWER (inverse (face_map H))) n) y) IN ((face H) x)))))) x)
T * / ! ! c==> cIN b1 * * part cface f0 b0 cIN cPOWER * part cinverse * part cface_map f0 b2 b1 * * part cface f0 b0 f1
+ |- ((((((POWER (inverse (face_map H))) (NUMERAL (BIT1 _0))) d) IN ((face H) d)) = T) ==> ((((POWER (inverse (face_map H))) (NUMERAL (BIT1 _0))) d) IN ((face H) d)))
T c==> c= cIN cPOWER * part cinverse * part cface_map f0 cNUMERAL cBIT1 c_0 f1 * * part cface f0 f1 cT cIN cPOWER * part cinverse * part cface_map f0 cNUMERAL cBIT1 c_0 f1 * * part cface f0 f1
+ |- ((\p'. (!q'. (((((face H) ((face_map H) d)) = ((face H) d)) = p') ==> ((p' ==> (((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d))) = q')) ==> (((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) = (p' ==> q')))))) p')
T * / ! c==> c= c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 b0 c==> c==> b0 c= c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 b1 c= c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c==> b0 b1 f2
+ |- (((!q'. (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) = p') ==> ((p' ==> (((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))) = q')) ==> (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) = (p' ==> q'))))) ==> ((\q'. (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) = p') ==> ((p' ==> (((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))) = q')) ==> (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) = (p' ==> q'))))) q')) = ((\q'. (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) = p') ==> ((p' ==> (((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))) = q')) ==> (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 f2 c==> c==> f2 c= c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 b0 c= c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c==> f2 b0 * / c==> c= c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 f2 c==> c==> f2 c= c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 b0 c= c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c==> f2 b0 f3 * / c==> c= c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 f2 c==> c==> f2 c= c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 b0 c= c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c==> f2 b0 f3
+ |- ((((((face H) ((face_map H) d)) = ((face H) d)) ==> (((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d))) = T)) ==> (((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) = ((((face H) ((face_map H) d)) = ((face H) d)) ==> T))) = (((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) = ((((face H) ((face_map H) d)) = ((face H) d)) ==> T)))
T c= c==> c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 cT c= c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 cT c= c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 cT
+ (((((POWER (inverse (face_map H))) (NUMERAL (BIT1 _0))) d) IN ((face H) d)) = T) |- ((((((POWER (inverse (face_map H))) (NUMERAL (BIT1 _0))) d) IN ((face H) d)) = T) /\ ((((POWER (inverse (face_map H))) (NUMERAL (BIT1 _0))) d) IN ((face H) d)))
T c==> c= cIN cPOWER * part cinverse * part cface_map f0 cNUMERAL cBIT1 c_0 f1 * * part cface f0 f1 cT c/\ c= cIN cPOWER * part cinverse * part cface_map f0 cNUMERAL cBIT1 c_0 f1 * * part cface f0 f1 cT cIN cPOWER * part cinverse * part cface_map f0 cNUMERAL cBIT1 c_0 f1 * * part cface f0 f1
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))), (y IN ((face H) x)) |- ((!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) /\ (((face H) x) = ((face H) y)))
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 c==> cIN f0 * * part cface f1 f2 c/\ ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 c= * * part cface f1 f2 * * part cface f1 f0
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) |- (((!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) ==> ((\x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) x)) = ((\x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) x))
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 c= c==> ! ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 * / ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 f1 * / ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 f1
- |- (((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) ==> ((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))))
T c==> c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1
- (((face H) ((inverse (face_map H)) d)) = ((face H) d)) |- (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))
T c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c==> c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1
- |- (((!x. (!H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) ==> ((\x. (!H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) x)) = ((\x. (!H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) x))
T c= c==> ! ! ! c==> cIN b2 * * part cface b1 b0 c= * * part cface b1 b0 * * part cface b1 b2 * / ! ! c==> cIN b2 * * part cface b1 b0 c= * * part cface b1 b0 * * part cface b1 b2 f0 * / ! ! c==> cIN b2 * * part cface b1 b0 c= * * part cface b1 b0 * * part cface b1 b2 f0
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- ((d IN (dart H)) ==> (((CARD ((face H) d)) = k) ==> (((((face_map H) d) IN (dart H)) /\ ((CARD ((face H) ((face_map H) d))) = k)) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = k)))))
T c==> cIN f0 * part cdart f1 c==> c= cCARD * * part cface f1 f0 f2 c/\ c/\ cIN cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cface_map f1 f0 f2 c/\ cIN cinverse * part cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cinverse * part cface_map f1 f0 f2
- |- ((x IN (dart H)) ==> ((((inverse (edge_map H)) x) IN (dart H)) = T))
T c==> cIN f0 * part cdart f1 c= cIN cinverse * part cedge_map f1 f0 * part cdart f1 cT
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) |- ((\x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) x)
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 * / ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\x. (!H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) x)
T * / ! ! c==> cIN b2 * * part cface b1 b0 c= * * part cface b1 b0 * * part cface b1 b2 f0
- (((face H) ((face_map H) d)) = ((face H) d)) |- (((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d))))
T c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c==> c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (x IN (dart H)) |- (((edge_map H) x) IN (dart H))
T c==> cIN f0 * part cdart f1 cIN cedge_map f1 f0 * part cdart f1
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) |- ((!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))) = T)
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 c= ! c==> cIN b0 * * part cface f0 f1 c= * * part cface f0 f1 * * part cface f0 b0 cT
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) |- ((\y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))) y)
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 * / c==> cIN b0 * * part cface f0 f1 c= * * part cface f0 f1 * * part cface f0 b0 f2
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (d IN (dart H)) |- ((d IN (dart H)) /\ (((CARD ((face H) d)) = k) ==> (((((face_map H) d) IN (dart H)) /\ ((CARD ((face H) ((face_map H) d))) = k)) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = k)))))
T c==> cIN f0 * part cdart f1 c/\ cIN f0 * part cdart f1 c==> c= cCARD * * part cface f1 f0 f2 c/\ c/\ cIN cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cface_map f1 f0 f2 c/\ cIN cinverse * part cface_map f1 f0 * part cdart f1 c= cCARD * * part cface f1 cinverse * part cface_map f1 f0 f2
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- (k = (CARD ((face H) d))) |- ((CARD ((face H) d)) = k)
T c==> c= f0 cCARD * * part cface f1 f2 c= cCARD * * part cface f1 f2 f0
- (x IN (dart H)) |- ((x IN (dart H)) /\ ((((inverse (edge_map H)) x) IN (dart H)) = T))
T c==> cIN f0 * part cdart f1 c/\ cIN f0 * part cdart f1 c= cIN cinverse * part cedge_map f1 f0 * part cdart f1 cT
- ((CARD ((face H) d)) = k), (d IN (dart H)) |- (((CARD ((face H) d)) = k) /\ (((((face_map H) d) IN (dart H)) /\ ((CARD ((face H) ((face_map H) d))) = k)) /\ ((((inverse (face_map H)) d) IN (dart H)) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = k))))
T c==> c= cCARD * * part cface f0 f1 f2 c==> cIN f1 * part cdart f0 c/\ c= cCARD * * part cface f0 f1 f2 c/\ c/\ cIN cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cface_map f0 f1 f2 c/\ cIN cinverse * part cface_map f0 f1 * part cdart f0 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 f2
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- (((face H) ((inverse (face_map H)) d)) = ((face H) d)), ((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) |- (((((face H) ((inverse (face_map H)) d)) = ((face H) d)) ==> ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d)))) /\ ((CARD ((face H) ((inverse (face_map H)) d))) = (CARD ((face H) d))))
T c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c==> c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c/\ c==> c= * * part cface f0 cinverse * part cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1 c= cCARD * * part cface f0 cinverse * part cface_map f0 f1 cCARD * * part cface f0 f1
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))), (y IN ((face H) x)) |- (((face H) x) = ((face H) y))
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 c==> cIN f0 * * part cface f1 f2 c= * * part cface f1 f2 * * part cface f1 f0
- (d IN (dart H)) |- (T = (d IN (dart H)))
T c==> cIN f0 * part cdart f1 c= cT cIN f0 * part cdart f1
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (x IN (dart H)) |- (((inverse (edge_map H)) x) IN (dart H))
T c==> cIN f0 * part cdart f1 cIN cinverse * part cedge_map f1 f0 * part cdart f1
- (y IN ((face H) x)) |- ((!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) ==> (((face H) x) = ((face H) y)))
T c==> cIN f0 * * part cface f1 f2 c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 c= * * part cface f1 f2 * * part cface f1 f0
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- (x IN (dart H)) |- (((node_map H) x) IN (dart H))
T c==> cIN f0 * part cdart f1 cIN cnode_map f1 f0 * part cdart f1
- (((face H) ((face_map H) d)) = ((face H) d)), ((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) |- (((((face H) ((face_map H) d)) = ((face H) d)) ==> ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d)))) /\ ((CARD ((face H) ((face_map H) d))) = (CARD ((face H) d))))
T c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c==> c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c/\ c==> c= * * part cface f0 cface_map f0 f1 * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1 c= cCARD * * part cface f0 cface_map f0 f1 cCARD * * part cface f0 f1
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) |- ((\H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) H)
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 * / ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 f0
- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y)))))) |- ((!H. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) = T)
T c==> ! ! ! c==> cIN b2 * * part cface b0 b1 c= * * part cface b0 b1 * * part cface b0 b2 c= ! ! c==> cIN b1 * * part cface b0 f0 c= * * part cface b0 f0 * * part cface b0 b1 cT
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (d IN (dart H)) |- ((d IN (dart H)) = T)
T c==> cIN f0 * part cdart f1 c= cIN f0 * part cdart f1 cT
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
