N REFLECT_ALONG_1D
C |- (!v. (!x. (((dimindex UNIV) = (NUMERAL (BIT1 _0))) ==> (((reflect_along v) x) = (((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x))))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c= creflect_along f0 f1 cCOND c= f0 cvec cNUMERAL c_0 f1 cvector_neg f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LEFT_FORALL_OR_THM
A |- (!P. (!Q. ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
D RIGHT_FORALL_OR_THM
A |- (!P. (!Q. ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COND_RAND
A |- (!b. (!f. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y)))))))
T c= * f0 cCOND f1 f2 f3 cCOND f1 * f0 f2 * f0 f3
D COND_RATOR
A |- (!b. (!f. (!g. (!x. (((((COND b) f) g) x) = (((COND b) (f x)) (g x)))))))
T c= cCOND f0 f1 f2 f3 cCOND f0 * f1 f3 * f2 f3
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_MUL_LINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_inv x)) x) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_inv f0 f0 creal_of_num cNUMERAL cBIT1 c_0
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_EQ_ADD_LCANCEL
A |- (!x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))))
T c= c= creal_add f0 f1 creal_add f0 f2 c= f1 f2
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D Real_ext.REAL_SV_LMUL_0
A |- (!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_MUL_RID
A |- (!x. (((real_mul x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_MUL_AC
A |- ((((real_mul m) n) = ((real_mul n) m)) /\ ((((real_mul ((real_mul m) n)) p) = ((real_mul m) ((real_mul n) p))) /\ (((real_mul m) ((real_mul n) p)) = ((real_mul n) ((real_mul m) p)))))
T c/\ c= creal_mul f0 f1 creal_mul f1 f0 c/\ c= creal_mul creal_mul f0 f1 f2 creal_mul f0 creal_mul f1 f2 c= creal_mul f0 creal_mul f1 f2 creal_mul f1 creal_mul f0 f2
D REAL_MUL_RINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul x) (real_inv x)) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_DIV_1
A |- (!x. (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_INV_MUL
A |- (!x. (!y. ((real_inv ((real_mul x) y)) = ((real_mul (real_inv x)) (real_inv y)))))
T c= creal_inv creal_mul f0 f1 creal_mul creal_inv f0 creal_inv f1
D DECIMAL
A |- (!x. (!y. (((DECIMAL x) y) = ((real_div (real_of_num x)) (real_of_num y)))))
T c= cDECIMAL f0 f1 creal_div creal_of_num f0 creal_of_num f1
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D FORALL_1
A |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (P i))) = (P (NUMERAL (BIT1 _0))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 c_0 * f0 b0 * f0 cNUMERAL cBIT1 c_0
D SUM_1
A |- (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 _0)))) f) = (f (NUMERAL (BIT1 _0))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 f0 * f0 cNUMERAL cBIT1 c_0
D dot
A |- (!x. (!y. (((dot x) y) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (y $ i)))))))
T c= cdot f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0
D VEC_COMPONENT
A |- (!k. (!i. (((vec k) $ i) = (real_of_num k))))
T c= c$ cvec f0 f1 creal_of_num f0
D VECTOR_SUB_COMPONENT
A |- (!x. (!y. (!i. ((((vector_sub x) y) $ i) = ((real_sub (x $ i)) (y $ i))))))
T c= c$ cvector_sub f0 f1 f2 creal_sub c$ f0 f2 c$ f1 f2
D VECTOR_NEG_COMPONENT
A |- (!x. (!i. (((vector_neg x) $ i) = (real_neg (x $ i)))))
T c= c$ cvector_neg f0 f1 creal_neg c$ f0 f1
D VECTOR_MUL_COMPONENT
A |- (!c. (!x. (!i. ((((% c) x) $ i) = ((real_mul c) (x $ i))))))
T c= c$ c% f0 f1 f2 creal_mul f0 c$ f1 f2
D reflect_along
A |- (!x. (!v. (((reflect_along v) x) = ((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((dot x) v)) ((dot v) v)))) v)))))
T c= creflect_along f0 f1 cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div cdot f1 f0 cdot f0 f0 f0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) /\ (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0
+ |- (((!f. (!g. (!x. (((((COND b) f) g) x) = (((COND b) (f x)) (g x)))))) ==> ((\f. (!g. (!x. (((((COND b) f) g) x) = (((COND b) (f x)) (g x)))))) f)) = ((\f. (!g. (!x. (((((COND b) f) g) x) = (((COND b) (f x)) (g x)))))) f))
T c= c==> ! ! ! c= cCOND f0 b0 b1 b2 cCOND f0 * b0 b2 * b1 b2 * / ! ! c= cCOND f0 b0 b1 b2 cCOND f0 * b0 b2 * b1 b2 f1 * / ! ! c= cCOND f0 b0 b1 b2 cCOND f0 * b0 b2 * b1 b2 f1
+ |- (T = ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))))))))
T c= cT c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))) = (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))))) ==> (((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) e')))) = (((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) e'))))
T c= c==> c==> c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 f2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 f2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2
- ((real_of_num (NUMERAL _0)) = (v $ (NUMERAL (BIT1 _0)))) |- ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))
T c==> c= creal_of_num cNUMERAL c_0 c$ f0 cNUMERAL cBIT1 c_0 c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!g'. (!t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= cvector_neg f1 b2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cCOND b0 b1 b2 * / ! ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= cvector_neg f1 b2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= cvector_neg f1 b2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cCOND b0 b1 b2 f2
- (?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (!x. (((\x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) x) ==> F))
T c==> * / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f2 cF
- |- ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))) = F)
T c= c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((~ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))) = F)) = ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))) = F))
T c= c==> c~ c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!x. (((\z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) x) ==> F)) ==> ((?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F)) = ((?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF
- (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z')) = ((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y)
T * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1
+ ((dimindex UNIV) = (NUMERAL (BIT1 _0))) |- (((dimindex UNIV) = (NUMERAL (BIT1 _0))) /\ (((reflect_along v) x) = (((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c/\ c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c= creflect_along f0 f1 cCOND c= f0 cvec cNUMERAL c_0 f1 cvector_neg f1
+ |- (((!b. (!f. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))))) ==> ((\b. (!f. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))))) b)) = ((\b. (!f. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))))) b))
T c= c==> ! ! ! ! c= * b1 cCOND b0 b2 b3 cCOND b0 * b1 b2 * b1 b3 * / ! ! ! c= * b1 cCOND b0 b2 b3 cCOND b0 * b1 b2 * b1 b3 f0 * / ! ! ! c= * b1 cCOND b0 b2 b3 cCOND b0 * b1 b2 * b1 b3 f0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((real_mul (x $ i)) (v $ i)) = ((real_mul (x $ i)) (v $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ f2 f0 creal_mul c$ f1 f0 c$ f2 f0
+ |- (((!x. (((\x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) x) ==> F)) ==> ((?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F)) = ((?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((((\z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) z) ==> F) = T)
T c= c==> * / c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
+ |- (!x. (((\x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) x) ==> F))
T c==> * / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- (((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))
T cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0
+ |- (((!x. (((\z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) x) ==> F)) ==> ((?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) = ((?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))
T c= c==> ! c==> * / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = T) ==> ((T ==> (((v $ i) = ((vec (NUMERAL _0)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))) = (T ==> q')))) = ((T ==> (((v $ i) = ((vec (NUMERAL _0)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))) = (T ==> q'))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 cT c==> c==> cT c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> cT f2 c==> c==> cT c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> cT f2
+ |- ((\v. (!x. ((~ (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))))) v)
T * / ! c\/ c~ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 f0
- (~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) |- (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = F)
T c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ ((\z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z') |- (((\z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z') /\ F)
T c==> * / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f3 c/\ * / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f3 cF
+ |- (((!i. (((vector_neg x) $ i) = (real_neg (x $ i)))) ==> ((\i. (((vector_neg x) $ i) = (real_neg (x $ i)))) i)) = ((\i. (((vector_neg x) $ i) = (real_neg (x $ i)))) i))
T c= c==> ! c= c$ cvector_neg f0 b0 creal_neg c$ f0 b0 * / c= c$ cvector_neg f0 b0 creal_neg c$ f0 b0 f1 * / c= c$ cvector_neg f0 b0 creal_neg c$ f0 b0 f1
+ |- ((((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))))))) ==> (((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) x) |- (((\x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) x) /\ F)
T c==> * / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ |- (T = ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c= cT c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((T ==> (((v $ i) = ((vec (NUMERAL _0)) $ i)) = ((v $ i) = ((vec (NUMERAL _0)) $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))) = (T ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))) = (T ==> ((v $ i) = ((vec (NUMERAL _0)) $ i)))))
T c= c==> c==> cT c= c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1 c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1 c==> cT c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1 c==> cT c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1
- (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) |- ((?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) /\ (((real_mul (v $ x)) (v $ x)) = ((real_mul (v $ x)) (v $ x))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ f1 f0 creal_mul c$ f1 f0 c$ f1 f0
+ |- ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (?z. (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) = (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c? / c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (v $ x)) (v $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f0 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f0 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f1
+ |- ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (?x. (?z'. ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) = (?x. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (?z'. ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c? / c? / c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c? / c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))) = (((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))) /\ ((~ (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))))
T c= c\/ c~ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c/\ c\/ c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c\/ c~ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0
+ |- ((((?v. (?z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F) ==> (((~ q) = (?v. (?z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> q)) = (((~ q) = (?v. (?z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((((\x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) x) ==> F) = T)
T c= c==> * / c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
+ |- (((!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) x)) = ((\x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))) x))
T c= c==> ! c= creal_mul b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 f0 * / c= creal_mul b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 f0
+ ((dimindex UNIV) = (NUMERAL (BIT1 _0))) |- ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) ==> (x = t')) ==> (((~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) t') e'))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c==> c==> c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= f1 f2 c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cvector_neg f1 f3 c= cCOND c= f0 cvec cNUMERAL c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 f3
- ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ (NUMERAL (BIT1 _0))))
T c= c$ cvector_sub f0 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f1 cNUMERAL cBIT1 c_0 c$ cCOND c= c$ f1 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 cvector_neg f0 cNUMERAL cBIT1 c_0
+ |- ((((\v. (?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) v) ==> F) = T)
T c= c==> * / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((?z. (((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (?x. (?z. (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) = (?z. ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (?x. (?z. (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c/\ c? / c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c? / c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c? / c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))) = (T ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> cT c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0
- |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (x $ i)) (v $ i)) = ((real_mul (x $ i)) (v $ i))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ f1 b0 creal_mul c$ f0 b0 c$ f1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0
+ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = F) |- ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = F) /\ ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))
T c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c/\ c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0
+ |- ((((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ==> (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))) = (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))
T c= c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0
- (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c? / c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((((~ (!v. (!x. ((~ (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))))) = (?v. (?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> (!v. (!x. ((~ (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))))) = (!v. (!x. ((~ (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))))))
T c= c==> c= c~ ! ! c\/ c~ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 c? / c? / c? / c? / c/\ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 ! ! c\/ c~ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 ! ! c\/ c~ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0
+ |- (((?z. (P z)) /\ Q) = (?z. ((P z) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z)) = ((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\g. (!x. (((((COND b) f) g) x) = (((COND b) (f x)) (g x))))) g)
T * / ! c= cCOND f0 f1 b0 b1 cCOND f0 * f1 b1 * b0 b1 f2
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- (!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) (v $ x)) = ((real_mul (x $ x)) (v $ x)))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ f2 f0 creal_mul c$ f1 f0 c$ f2 f0
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (v $ x)) (v $ x)) = ((real_mul (v $ x)) (v $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (v $ x)) (v $ x))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ f0 b0 creal_mul c$ f0 b0 c$ f0 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0
+ ((dimindex UNIV) = (NUMERAL (BIT1 _0))) |- (((((NUMERAL (BIT1 _0)) <= _261027) /\ (_261027 <= (dimindex UNIV))) ==> ((v $ _261027) = ((vec (NUMERAL _0)) $ _261027))) = ((((NUMERAL (BIT1 _0)) <= _261027) /\ (_261027 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261027) = ((vec (NUMERAL _0)) $ _261027))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0
- |- ((((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F) ==> (~ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) = (~ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> c= c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (x $ i)) (v $ i)) = ((real_mul (x $ i)) (v $ i))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ f1 b0 creal_mul c$ f0 b0 c$ f1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0
+ |- (((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))) /\ ((~ (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))))
T c/\ c\/ c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c\/ c~ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0
+ |- ((\t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f2 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b1 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f2 cNUMERAL cBIT1 c_0 c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f3
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((\x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) x) ==> F)) ==> ((?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F)) = ((?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!g'. (!t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 b2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 b2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 b2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2
- |- (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> (((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = ((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f2
+ |- (((!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))) ==> ((\x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))) x)) = ((\x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))) x))
T c= c==> ! ! c= * f0 cCOND f1 b0 b1 cCOND f1 * f0 b0 * f0 b1 * / ! c= * f0 cCOND f1 b0 b1 cCOND f1 * f0 b0 * f0 b1 f2 * / ! c= * f0 cCOND f1 b0 b1 cCOND f1 * f0 b0 * f0 b1 f2
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) |- ((T ==> (((v $ i) = ((vec (NUMERAL _0)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))) = (T ==> q')))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c==> c==> cT c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> cT f2
+ ((dimindex UNIV) = (NUMERAL (BIT1 _0))) |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i)) = ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f1 f0 c$ cCOND c= c$ f1 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f1 f0 c$ cCOND c= c$ f1 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f1 f0 c$ cCOND c= c$ f1 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((\v. (?z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) v) ==> F) = T)
T c= c==> * / c? / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
+ |- (((~ q) = (?v. (?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c? / c/\ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) = T)
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV cT
- |- (((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (v $ x)) (v $ x)) = ((real_mul (v $ x)) (v $ x)))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ f1 f0 creal_mul c$ f1 f0 c$ f1 f0 cT
+ |- ((!x. ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))) = ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (!x. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))))
T c= ! c\/ c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 c\/ c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0
+ |- (((!x. (!i. (((vector_neg x) $ i) = (real_neg (x $ i))))) ==> ((\x. (!i. (((vector_neg x) $ i) = (real_neg (x $ i))))) x)) = ((\x. (!i. (((vector_neg x) $ i) = (real_neg (x $ i))))) x))
T c= c==> ! ! c= c$ cvector_neg b0 b1 creal_neg c$ b0 b1 * / ! c= c$ cvector_neg b0 b1 creal_neg c$ b0 b1 f0 * / ! c= c$ cvector_neg b0 b1 creal_neg c$ b0 b1 f0
+ ((dimindex UNIV) = (NUMERAL (BIT1 _0))) |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0))))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> q'))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3
- |- ((!x. t) = t)
T c= ! f0 f0
- |- ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) x) |- (((?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) ==> F) = F)
T c==> * / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- ((\b. (!f. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))))) b)
T * / ! ! ! c= * b1 cCOND b0 b2 b3 cCOND b0 * b1 b2 * b1 b3 f0
+ ((\z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) z) |- (((?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> b0 b1 f2
- |- ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)))
T c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1
+ |- (((!v. (!x. ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))))) ==> ((\v. (!x. ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))))) v)) = ((\v. (!x. ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))))) v))
T c= c==> ! ! c\/ c~ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 * / ! c\/ c~ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 f0 * / ! c\/ c~ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 f0
+ ((dimindex UNIV) = (NUMERAL (BIT1 _0))) |- ((((v = (vec (NUMERAL _0))) = ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) ==> (x = t')) ==> (((~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) t') e'))))) = ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) ==> (x = t')) ==> (((~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) t') e')))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c= c==> c= c= f0 cvec cNUMERAL c_0 c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c==> c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= f1 f2 c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cvector_neg f1 f3 c= cCOND c= f0 cvec cNUMERAL c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 f3 c==> c==> c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= f1 f2 c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cvector_neg f1 f3 c= cCOND c= f0 cvec cNUMERAL c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 f3
+ |- ((\i. (((vec k) $ i) = (real_of_num k))) i)
T * / c= c$ cvec f0 b0 creal_of_num f0 f1
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((NUMERAL (BIT1 _0)) <= i) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- (((!g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (x $ i)) (v $ i)) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (x $ i)) (v $ i)) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (x $ i)) (v $ i)) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f1 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f1 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f1 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f1 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f1 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f1 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
- ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z)) = ((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((dimindex UNIV) = (NUMERAL (BIT1 _0))) ==> (((reflect_along v) x) = (((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)))) = T)
T c= c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c= creflect_along f0 f1 cCOND c= f0 cvec cNUMERAL c_0 f1 cvector_neg f1 cT
+ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) |- (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))) = (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))))
T c==> c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0
+ ((\z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) z) |- (((\z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) z) /\ F)
T c==> * / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ ((\v. (?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) v) |- (?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c==> * / c? / c? / c? / c/\ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((v = (vec (NUMERAL _0))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND g') t') e')))))
T c==> c= c= f0 cvec cNUMERAL c_0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= cvector_neg f2 f4 c= cCOND c= f0 cvec cNUMERAL c_0 f2 cvector_neg f2 cCOND f1 f3 f4
+ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) |- (((~ (((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))) = (v $ (NUMERAL (BIT1 _0))))) ==> ((((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))) = (v $ (NUMERAL (BIT1 _0)))) = F)) = ((((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))) = (v $ (NUMERAL (BIT1 _0)))) = F))
T c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= c==> c~ c= c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c= c= c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 cF c= c= c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 cF
+ |- ((\x. ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))))) x)
T * / c\/ c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b0 cNUMERAL cBIT1 c_0 f1
+ |- ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))) ==> F)
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((dimindex UNIV) = (NUMERAL (BIT1 _0))) |- (((((NUMERAL (BIT1 _0)) <= _261027) /\ (_261027 <= (NUMERAL (BIT1 _0)))) ==> (((v $ _261027) = ((vec (NUMERAL _0)) $ _261027)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261027) /\ (_261027 <= (dimindex UNIV))) ==> ((v $ _261027) = ((vec (NUMERAL _0)) $ _261027))) = ((((NUMERAL (BIT1 _0)) <= _261027) /\ (_261027 <= (NUMERAL (BIT1 _0)))) ==> q')))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f2
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\i. (f i))) = ((sum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2 cT
- |- ((\t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= cvector_neg f2 b1 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 cCOND f1 b0 b1 f3
+ |- (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))
T c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0
+ |- ((((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))) = (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))))
T c= c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (x $ i)) (v $ i)) = ((real_mul (x $ i)) (v $ i)))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ f2 f0 creal_mul c$ f1 f0 c$ f2 f0 cT
- |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (x $ i)) (v $ i)) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ f1 b0 * f2 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
+ |- (((!t'. (!e'. (((v = (vec (NUMERAL _0))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((v = (vec (NUMERAL _0))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((v = (vec (NUMERAL _0))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 cvec cNUMERAL c_0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= cvector_neg f2 b1 c= cCOND c= f0 cvec cNUMERAL c_0 f2 cvector_neg f2 cCOND f1 b0 b1 * / ! c==> c= c= f0 cvec cNUMERAL c_0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= cvector_neg f2 b1 c= cCOND c= f0 cvec cNUMERAL c_0 f2 cvector_neg f2 cCOND f1 b0 b1 f3 * / ! c==> c= c= f0 cvec cNUMERAL c_0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= cvector_neg f2 b1 c= cCOND c= f0 cvec cNUMERAL c_0 f2 cvector_neg f2 cCOND f1 b0 b1 f3
+ ((\v. (?z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) v) |- (((\v. (?z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) v) /\ F)
T c==> * / c? / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (v $ i)) (v $ i)) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f0 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f0 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f1
+ ((\x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) x) |- (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> * / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c==> b0 b1 f3
+ |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> (((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 c==> b0 b1 f3 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 c==> b0 b1 f3
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0
+ |- ((((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = ((vector_neg x) $ (NUMERAL (BIT1 _0)))) = (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = (x $ (NUMERAL (BIT1 _0))))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = ((vector_neg x) $ (NUMERAL (BIT1 _0))))) = (((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = (x $ (NUMERAL (BIT1 _0))))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = ((vector_neg x) $ (NUMERAL (BIT1 _0))))) = (((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))))
T c= c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ cvector_neg f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ cvector_neg f1 cNUMERAL cBIT1 c_0 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ cvector_neg f1 cNUMERAL cBIT1 c_0 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0
- |- ((((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0))))) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> (((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = ((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> (((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = ((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f2 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f2
+ |- (((!i. (((vec k) $ i) = (real_of_num k))) ==> ((\i. (((vec k) $ i) = (real_of_num k))) i)) = ((\i. (((vec k) $ i) = (real_of_num k))) i))
T c= c==> ! c= c$ cvec f0 b0 creal_of_num f0 * / c= c$ cvec f0 b0 creal_of_num f0 f1 * / c= c$ cvec f0 b0 creal_of_num f0 f1
- |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (?z. (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) = (?z'. ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c? / c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) e')))
T c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cvector_neg f1 f2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 f2
+ ((\x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) x) |- (((?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) ==> F) = F)
T c==> * / c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c? / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- ((((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> (((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)) = ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)))) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = ((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))))) = (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = ((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0
- ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_mul z) (v $ (NUMERAL (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul f1 c$ f0 cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))))
T c\/ c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- (~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) |- (~ (((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))) = (v $ (NUMERAL (BIT1 _0)))))
T c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c~ c= c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0
+ ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul z') ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0)))))))) ((real_mul z') (x $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul f3 c$ f2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ f3 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 f3 f0 c$ cCOND c= c$ f3 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ f3 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 f3 f0 c$ cCOND c= c$ f3 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ f3 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 f3 f0 c$ cCOND c= c$ f3 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ f3 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 f3 f0 c$ cCOND c= c$ f3 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0 c==> f1 b0 f4 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ f3 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 f3 f0 c$ cCOND c= c$ f3 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ f3 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 f3 f0 c$ cCOND c= c$ f3 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0 c==> f1 b0 f4
+ |- (!z'. (((\z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z') ==> F))
T c==> * / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f3 cF
+ ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_mul z') ((real_mul ((real_pow (real_inv (v $ (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (v $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul z') (x $ (NUMERAL (BIT1 _0)))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul f3 creal_mul creal_pow creal_inv c$ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow c$ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 c$ f2 cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- T |- (T = T)
T c==> cT c= cT cT
- |- (((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) ==> (x = t')) ==> (((~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) t') e'))))) = ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) ==> (x = t')) ==> (((~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) t') e')))))
T c= c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c==> c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= f1 f2 c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cvector_neg f1 f3 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 f3 c==> c==> c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= f1 f2 c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cvector_neg f1 f3 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 f3
+ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = T) |- ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = T) /\ ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))))
T c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cT c/\ c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cT c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0
+ |- (((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = (x $ (NUMERAL (BIT1 _0)))) = (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))))) ==> (((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = ((vector_neg x) $ (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = (x $ (NUMERAL (BIT1 _0))))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = ((vector_neg x) $ (NUMERAL (BIT1 _0))))) = (((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) e')))) = (((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = ((vector_neg x) $ (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = (x $ (NUMERAL (BIT1 _0))))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = ((vector_neg x) $ (NUMERAL (BIT1 _0))))) = (((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) e'))))
T c= c==> c==> c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ cvector_neg f1 cNUMERAL cBIT1 c_0 f2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ cvector_neg f1 cNUMERAL cBIT1 c_0 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ cvector_neg f1 cNUMERAL cBIT1 c_0 f2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ cvector_neg f1 cNUMERAL cBIT1 c_0 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2
+ |- ((\x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y))))) x)
T * / ! c= * f0 cCOND f1 b0 b1 cCOND f1 * f0 b0 * f0 b1 f2
+ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_mul z) (v $ (NUMERAL (BIT1 _0))))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul f1 c$ f0 cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (v $ i)) (v $ i)) = ((real_mul (v $ i)) (v $ i))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ f0 b0 creal_mul c$ f0 b0 c$ f0 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0
+ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))) |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) |- (((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))) = (v $ (NUMERAL (BIT1 _0))))
T c==> c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0
+ |- (((!t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f2 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b1 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f2 cNUMERAL cBIT1 c_0 c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 * / ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f2 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b1 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f2 cNUMERAL cBIT1 c_0 c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f3 * / ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f2 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b1 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f2 cNUMERAL cBIT1 c_0 c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f3
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) (v $ x)) = ((real_mul (x $ x)) (v $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) (v $ x))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ f1 b0 creal_mul c$ f0 b0 c$ f1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0
- |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (x $ i)) (v $ i)) = ((real_mul (x $ i)) (v $ i)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ f2 f0 creal_mul c$ f1 f0 c$ f2 f0
- (~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) |- (((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = F)
T c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 cF
+ |- (!z. (((\z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) z) ==> F))
T c==> * / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- (((!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) ==> ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y)) = ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y))
T c= c==> ! ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1 * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((!g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (v $ x)) (v $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (v $ x)) (v $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (v $ x)) (v $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f0 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f0 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f0 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f0 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f1 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f0 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f0 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f1
- |- ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND g') t') e')))))
T c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= cvector_neg f2 f4 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 cCOND f1 f3 f4
+ ((\z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z') |- (((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F) = F)
T c==> * / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f3 c= c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F)
T c= c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!v. (((reflect_along v) x) = ((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((dot x) v)) ((dot v) v)))) v)))) ==> ((\v. (((reflect_along v) x) = ((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((dot x) v)) ((dot v) v)))) v)))) v)) = ((\v. (((reflect_along v) x) = ((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((dot x) v)) ((dot v) v)))) v)))) v))
T c= c==> ! c= creflect_along b0 f0 cvector_sub f0 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div cdot f0 b0 cdot b0 b0 b0 * / c= creflect_along b0 f0 cvector_sub f0 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div cdot f0 b0 cdot b0 b0 b0 f1 * / c= creflect_along b0 f0 cvector_sub f0 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div cdot f0 b0 cdot b0 b0 b0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ |- (!v. (((\v. (?z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) v) ==> F))
T c==> * / c? / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- (!v. (((\v. (?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) v) ==> F))
T c==> * / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (x $ i)) (v $ i)) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f1 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f1 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
+ ((\z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z') |- (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> * / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f3 c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) |- ((~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) /\ ((vector_neg x) = (vector_neg x)))
T c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cvector_neg f1 cvector_neg f1
+ ((dimindex UNIV) = (NUMERAL (BIT1 _0))), (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) /\ (((((reflect_along v) x) $ i) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) $ i)) = ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ creflect_along f1 f2 f0 c$ cCOND c= f1 cvec cNUMERAL c_0 f2 cvector_neg f2 f0 c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 f1 f0 c$ cCOND c= c$ f1 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0
- (~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) |- ((((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))) = (v $ (NUMERAL (BIT1 _0)))) = F)
T c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= c= c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 cF
+ |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((\z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) x) ==> F)) ==> ((?z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F)) = ((?z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((?v. ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ (?x. (?z. (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) = (?v. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (?x. (?z. (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c/\ c? / c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c? / c? / c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c? / c? / c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((vector_neg x) = (vector_neg x)))
T c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cvector_neg f1 cvector_neg f1
- |- (((!q'. (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0 c==> f1 b0 f3 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0 c==> f1 b0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!x. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))) = (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (!x. (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))))
T c= ! c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0
- T |- (T /\ (((v $ i) = ((vec (NUMERAL _0)) $ i)) = ((v $ i) = ((vec (NUMERAL _0)) $ i))))
T c==> cT c/\ cT c= c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1 c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1
+ |- ((\g'. (!t'. (!e'. (((v = (vec (NUMERAL _0))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 cvec cNUMERAL c_0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= cvector_neg f1 b2 c= cCOND c= f0 cvec cNUMERAL c_0 f1 cvector_neg f1 cCOND b0 b1 b2 f2
+ |- (((!x. (!i. ((((% c) x) $ i) = ((real_mul c) (x $ i))))) ==> ((\x. (!i. ((((% c) x) $ i) = ((real_mul c) (x $ i))))) x)) = ((\x. (!i. ((((% c) x) $ i) = ((real_mul c) (x $ i))))) x))
T c= c==> ! ! c= c$ c% f0 b0 b1 creal_mul f0 c$ b0 b1 * / ! c= c$ c% f0 b0 b1 creal_mul f0 c$ b0 b1 f1 * / ! c= c$ c% f0 b0 b1 creal_mul f0 c$ b0 b1 f1
- |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c==> b0 b1 f3 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c==> b0 b1 f3
+ |- ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\v. (((reflect_along v) x) = ((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((dot x) v)) ((dot v) v)))) v)))) v)
T * / c= creflect_along b0 f0 cvector_sub f0 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div cdot f0 b0 cdot b0 b0 b0 f1
+ |- ((y = z) = (((real_add (real_neg z)) y) = ((real_add (real_neg z)) z)))
T c= c= f0 f1 c= creal_add creal_neg f1 f0 creal_add creal_neg f1 f1
+ |- ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))
T c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0
+ |- ((\x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul x) (real_inv x)) = (real_of_num (NUMERAL (BIT1 _0)))))) (v $ (NUMERAL (BIT1 _0))))
T * / c==> c~ c= b0 creal_of_num cNUMERAL c_0 c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0
- |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ f3 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 f3 f0 c$ cCOND c= c$ f3 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ f3 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 f3 f0 c$ cCOND c= c$ f3 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0 c==> f1 b0 f4
- ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) |- ((real_of_num (NUMERAL _0)) = (v $ (NUMERAL (BIT1 _0))))
T c==> c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_num cNUMERAL c_0 c$ f0 cNUMERAL cBIT1 c_0
+ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))) |- ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ F)
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\e'. ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND g') t') e')))))) e')
T * / c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= cvector_neg f2 b0 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 cCOND f1 f3 b0 f4
+ |- (((!x. (((\v. (?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) x) ==> F)) ==> ((?v. (?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F)) = ((?v. (?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c? / c/\ c= creal_mul c$ b1 cNUMERAL cBIT1 c_0 creal_inv c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b3 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b3 cNUMERAL cBIT1 c_0 c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b1 cNUMERAL cBIT1 c_0 creal_inv c$ b1 cNUMERAL cBIT1 c_0 c$ b1 cNUMERAL cBIT1 c_0 creal_neg c$ b3 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c? / c/\ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c? / c/\ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((\e'. ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))) e')
T * / c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f2 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f1 c= c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f2 cNUMERAL cBIT1 c_0 c= creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 cCOND f1 f3 b0 f4
+ |- ((\e'. (((v = (vec (NUMERAL _0))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 cvec cNUMERAL c_0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= cvector_neg f2 b0 c= cCOND c= f0 cvec cNUMERAL c_0 f2 cvector_neg f2 cCOND f1 f3 b0 f4
+ |- (((!x. (((((COND b) f) g) x) = (((COND b) (f x)) (g x)))) ==> ((\x. (((((COND b) f) g) x) = (((COND b) (f x)) (g x)))) x)) = ((\x. (((((COND b) f) g) x) = (((COND b) (f x)) (g x)))) x))
T c= c==> ! c= cCOND f0 f1 f2 b0 cCOND f0 * f1 b0 * f2 b0 * / c= cCOND f0 f1 f2 b0 cCOND f0 * f1 b0 * f2 b0 f3 * / c= cCOND f0 f1 f2 b0 cCOND f0 * f1 b0 * f2 b0 f3
+ |- ((\x. (((((COND b) f) g) x) = (((COND b) (f x)) (g x)))) x)
T * / c= cCOND f0 f1 f2 b0 cCOND f0 * f1 b0 * f2 b0 f3
+ |- ((((~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((vector_neg x) = (vector_neg x))) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)))) = ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x))))
T c= c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cvector_neg f1 cvector_neg f1 c= cCOND c= f0 cvec cNUMERAL c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 c= cCOND c= f0 cvec cNUMERAL c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1
+ |- (((!g'. (!t'. (!e'. (((v = (vec (NUMERAL _0))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((v = (vec (NUMERAL _0))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((v = (vec (NUMERAL _0))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 cvec cNUMERAL c_0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= cvector_neg f1 b2 c= cCOND c= f0 cvec cNUMERAL c_0 f1 cvector_neg f1 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 cvec cNUMERAL c_0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= cvector_neg f1 b2 c= cCOND c= f0 cvec cNUMERAL c_0 f1 cvector_neg f1 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= f0 cvec cNUMERAL c_0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= cvector_neg f1 b2 c= cCOND c= f0 cvec cNUMERAL c_0 f1 cvector_neg f1 cCOND b0 b1 b2 f2
- (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul z') ((real_mul ((real_pow (real_inv (v $ (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (v $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT1 _0)))))))) ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul z') (x $ (NUMERAL (BIT1 _0)))))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul f3 creal_mul creal_pow creal_inv c$ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow c$ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul f3 c$ f2 cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (v $ x)) (v $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ f0 b0 * f1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f1
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- (((((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F) ==> (~ ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) = (~ ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> c= c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= cvector_neg f2 b1 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 cCOND f1 b0 b1 * / ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= cvector_neg f2 b1 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 cCOND f1 b0 b1 f3 * / ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= cvector_neg f2 b1 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 cCOND f1 b0 b1 f3
+ |- ((~ (x = y)) = (?z. (((real_mul ((real_sub x) y)) z) = (real_of_num (NUMERAL (BIT1 _0))))))
T c= c~ c= f0 f1 c? / c= creal_mul creal_sub f0 f1 b0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) (v $ x)))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0
- |- ((\q'. (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0 c==> f1 b0 f3
+ |- (((!x. (!y. (!i. ((((vector_sub x) y) $ i) = ((real_sub (x $ i)) (y $ i)))))) ==> ((\x. (!y. (!i. ((((vector_sub x) y) $ i) = ((real_sub (x $ i)) (y $ i)))))) x)) = ((\x. (!y. (!i. ((((vector_sub x) y) $ i) = ((real_sub (x $ i)) (y $ i)))))) x))
T c= c==> ! ! ! c= c$ cvector_sub b0 b1 b2 creal_sub c$ b0 b2 c$ b1 b2 * / ! ! c= c$ cvector_sub b0 b1 b2 creal_sub c$ b0 b2 c$ b1 b2 f0 * / ! ! c= c$ cvector_sub b0 b1 b2 creal_sub c$ b0 b2 c$ b1 b2 f0
+ ((\v. (?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) v) |- (((?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- ((\f. (!x. (!y. ((f (((COND b) x) y)) = (((COND b) (f x)) (f y)))))) f)
T * / ! ! c= * b0 cCOND f0 b1 b2 cCOND f0 * b0 b1 * b0 b2 f1
+ |- (((!x. (((\v. (?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) x) ==> F)) ==> ((?v. (?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F)) = ((?v. (?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b2 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((((\x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) x) ==> F) = T)
T c= c==> * / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
- |- ((!x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) /\ (!w. (!x. (!y. (!z. ((((real_add ((real_mul w) y)) ((real_mul x) z)) = ((real_add ((real_mul w) z)) ((real_mul x) y))) = ((w = x) \/ (y = z))))))))
T c/\ ! ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 ! ! ! ! c= c= creal_add creal_mul b0 b2 creal_mul b1 b3 creal_add creal_mul b0 b3 creal_mul b1 b2 c\/ c= b0 b1 c= b2 b3
+ |- (((!g. (!x. (((((COND b) f) g) x) = (((COND b) (f x)) (g x))))) ==> ((\g. (!x. (((((COND b) f) g) x) = (((COND b) (f x)) (g x))))) g)) = ((\g. (!x. (((((COND b) f) g) x) = (((COND b) (f x)) (g x))))) g))
T c= c==> ! ! c= cCOND f0 f1 b0 b1 cCOND f0 * f1 b1 * b0 b1 * / ! c= cCOND f0 f1 b0 b1 cCOND f0 * f1 b1 * b0 b1 f2 * / ! c= cCOND f0 f1 b0 b1 cCOND f0 * f1 b1 * b0 b1 f2
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((((\z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) z) ==> F) = T)
T c= c==> * / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
+ |- (((!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) ==> ((\z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) z)) = ((\z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) z))
T c= c==> ! c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 * / c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 f2 * / c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 f2
- |- ((!v'. ((~ (((real_mul (v' $ (NUMERAL (BIT1 _0)))) (real_inv (v' $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (!x. (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))))) = ((!v. (~ (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (!x. (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))))
T c= ! c\/ c~ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 c\/ ! c~ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0
- |- (((T ==> (((v $ i) = ((vec (NUMERAL _0)) $ i)) = ((v $ i) = ((vec (NUMERAL _0)) $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))) = (T ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))) = (T ==> ((v $ i) = ((vec (NUMERAL _0)) $ i)))))
T c= c==> c==> cT c= c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1 c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT1 c_0 c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1 c==> cT c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cNUMERAL cBIT1 c_0 c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1 c==> cT c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1
- (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) |- ((?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((\v. (?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) v) |- (((\v. (?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) v) /\ F)
T c==> * / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- ((\b. (!f. (!g. (!x. (((((COND b) f) g) x) = (((COND b) (f x)) (g x))))))) b)
T * / ! ! ! c= cCOND b0 b1 b2 b3 cCOND b0 * b1 b3 * b2 b3 f0
+ ((\z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z') |- ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> * / c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f3 c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))) = (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))))
T c==> c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0
+ |- ((!v. ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (!x. (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))))) = ((!v. (~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))))) \/ (!x. (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0)))))))
T c= ! c\/ c~ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 c\/ ! c~ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b0 cNUMERAL cBIT1 c_0
- |- (((!g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) (v $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) (v $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) (v $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f1 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f1 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f1 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f1 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f1 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f1 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
- ((dimindex UNIV) = (NUMERAL (BIT1 _0))), (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = T) ==> ((T ==> (((v $ i) = ((vec (NUMERAL _0)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))) = (T ==> q')))) = ((T ==> (((v $ i) = ((vec (NUMERAL _0)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))) = (T ==> q'))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV cT c==> c==> cT c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> cT f2 c==> c==> cT c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> cT f2
+ ((\z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) z) |- (((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))) ==> F) = F)
T c==> * / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ ((\z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) z) |- (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> * / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0
+ ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!y. (!i. ((((vector_sub x) y) $ i) = ((real_sub (x $ i)) (y $ i))))) ==> ((\y. (!i. ((((vector_sub x) y) $ i) = ((real_sub (x $ i)) (y $ i))))) y)) = ((\y. (!i. ((((vector_sub x) y) $ i) = ((real_sub (x $ i)) (y $ i))))) y))
T c= c==> ! ! c= c$ cvector_sub f0 b0 b1 creal_sub c$ f0 b1 c$ b0 b1 * / ! c= c$ cvector_sub f0 b0 b1 creal_sub c$ f0 b1 c$ b0 b1 f1 * / ! c= c$ cvector_sub f0 b0 b1 creal_sub c$ f0 b1 c$ b0 b1 f1
+ |- (((!e'. (((v = (vec (NUMERAL _0))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND g') t') e')))))) ==> ((\e'. (((v = (vec (NUMERAL _0))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND g') t') e')))))) e')) = ((\e'. (((v = (vec (NUMERAL _0))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND (v = (vec (NUMERAL _0)))) x) (vector_neg x)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 cvec cNUMERAL c_0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= cvector_neg f2 b0 c= cCOND c= f0 cvec cNUMERAL c_0 f2 cvector_neg f2 cCOND f1 f3 b0 * / c==> c= c= f0 cvec cNUMERAL c_0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= cvector_neg f2 b0 c= cCOND c= f0 cvec cNUMERAL c_0 f2 cvector_neg f2 cCOND f1 f3 b0 f4 * / c==> c= c= f0 cvec cNUMERAL c_0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= cvector_neg f2 b0 c= cCOND c= f0 cvec cNUMERAL c_0 f2 cvector_neg f2 cCOND f1 f3 b0 f4
+ |- ((\k. (!i. (((vec k) $ i) = (real_of_num k)))) k)
T * / ! c= c$ cvec b0 b1 creal_of_num b0 f0
- |- ((((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))) = F) ==> (~ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) = (~ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c= c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))) /\ ((~ (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))) = (((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ==> (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))))
T c= c/\ c\/ c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c\/ c~ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0
+ |- ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))) (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))) = (((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = (x $ (NUMERAL (BIT1 _0))))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = ((vector_neg x) $ (NUMERAL (BIT1 _0))))))
T c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ cvector_neg f1 cNUMERAL cBIT1 c_0
+ |- (((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul x) (real_inv x)) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((\x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul x) (real_inv x)) = (real_of_num (NUMERAL (BIT1 _0)))))) (v $ (NUMERAL (BIT1 _0))))) = ((\x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul x) (real_inv x)) = (real_of_num (NUMERAL (BIT1 _0)))))) (v $ (NUMERAL (BIT1 _0)))))
T c= c==> ! c==> c~ c= b0 creal_of_num cNUMERAL c_0 c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 * / c==> c~ c= b0 creal_of_num cNUMERAL c_0 c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 * / c==> c~ c= b0 creal_of_num cNUMERAL c_0 c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0
- |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0))))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3
- |- (((!g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (v $ i)) (v $ i)) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (v $ i)) (v $ i)) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (v $ i)) (v $ i)) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f0 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f0 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f0 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f0 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f1 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f0 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f0 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((dimindex UNIV) = (NUMERAL (BIT1 _0))) |- ((((((NUMERAL (BIT1 _0)) <= _261027) /\ (_261027 <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= _261027) /\ (_261027 <= (NUMERAL (BIT1 _0))))) ==> (((((NUMERAL (BIT1 _0)) <= _261027) /\ (_261027 <= (NUMERAL (BIT1 _0)))) ==> (((v $ _261027) = ((vec (NUMERAL _0)) $ _261027)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261027) /\ (_261027 <= (dimindex UNIV))) ==> ((v $ _261027) = ((vec (NUMERAL _0)) $ _261027))) = ((((NUMERAL (BIT1 _0)) <= _261027) /\ (_261027 <= (NUMERAL (BIT1 _0)))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= _261027) /\ (_261027 <= (NUMERAL (BIT1 _0)))) ==> (((v $ _261027) = ((vec (NUMERAL _0)) $ _261027)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261027) /\ (_261027 <= (dimindex UNIV))) ==> ((v $ _261027) = ((vec (NUMERAL _0)) $ _261027))) = ((((NUMERAL (BIT1 _0)) <= _261027) /\ (_261027 <= (NUMERAL (BIT1 _0)))) ==> q'))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f2 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f2
+ |- ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = (x $ (NUMERAL (BIT1 _0))))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = ((vector_neg x) $ (NUMERAL (BIT1 _0))))) = ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ (NUMERAL (BIT1 _0)))))
T c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ cvector_neg f1 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cNUMERAL cBIT1 c_0
+ |- ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ==> ((((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))) = (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))
T c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0
- |- (((!e'. ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND g') t') e')))))) ==> ((\e'. ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND g') t') e')))))) e')) = ((\e'. ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= cvector_neg f2 b0 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 cCOND f1 f3 b0 * / c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= cvector_neg f2 b0 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 cCOND f1 f3 b0 f4 * / c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= cvector_neg f2 b0 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 cCOND f1 f3 b0 f4
- |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (v $ i)) (v $ i)) = ((real_mul (v $ i)) (v $ i)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ f1 f0 creal_mul c$ f1 f0 c$ f1 f0
+ |- ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) |- ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))) = (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))
T c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f1 cNUMERAL cBIT1 c_0
+ |- ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = (x $ (NUMERAL (BIT1 _0)))) = t')) ==> (((~ g') ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = ((vector_neg x) $ (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = (x $ (NUMERAL (BIT1 _0))))) ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = ((vector_neg x) $ (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))
T c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f1 c= c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ cvector_neg f2 cNUMERAL cBIT1 c_0 f4 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ cvector_neg f2 cNUMERAL cBIT1 c_0 cCOND f1 f3 f4
- |- ((!v'. ((~ (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((v' $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (!x. (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v' $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v' $ (NUMERAL (BIT1 _0))))) (real_inv (v' $ (NUMERAL (BIT1 _0)))))))) (v' $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))))) = ((~ (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (!v. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (!x. (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))))))
T c= ! c\/ c~ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 c\/ c~ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 ! c\/ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0
+ |- ((((?v. (?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F) ==> (((~ q) = (?v. (?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> q)) = (((~ q) = (?v. (?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c? / c/\ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c? / c/\ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c? / c/\ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) |- (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ (NUMERAL (BIT1 _0))) = (x $ (NUMERAL (BIT1 _0)))) = (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))))
T c==> c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 c= creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) |- (((real_of_num (NUMERAL _0)) = (v $ (NUMERAL (BIT1 _0)))) = F)
T c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= creal_of_num cNUMERAL c_0 c$ f0 cNUMERAL cBIT1 c_0 cF
+ ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z')) = ((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. ((~ (((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))) x)
T * / c\/ c~ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 f1
+ ((\z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) z) |- (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> * / c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (v $ i)) (v $ i)) = ((real_mul (v $ i)) (v $ i)))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ f1 f0 creal_mul c$ f1 f0 c$ f1 f0 cT
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ |- (!z'. (((\z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z') ==> F))
T c==> * / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f3 cF
+ |- ((\c. (!x. (!i. ((((% c) x) $ i) = ((real_mul c) (x $ i)))))) c)
T * / ! ! c= c$ c% b0 b1 b2 creal_mul b0 c$ b1 b2 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z)) = ((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) ==> (((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F)) = (((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F))
T c= c==> c~ c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul z') ((real_mul ((real_pow (real_inv (v $ (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (v $ (NUMERAL (BIT1 _0)))) (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT1 _0)))))))) ((real_mul z') ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_mul creal_pow creal_inv c$ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow c$ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul f3 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!i. (((a <= i) /\ (i <= b)) ==> ((f i) = (g i)))) ==> (((sum (a .. b)) (\i. (f i))) = ((sum (a .. b)) g))) = T)
T c= c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 / * f2 b0 csum * * part c.. f0 f1 f3 cT
+ |- ((((\z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z') ==> F) = T)
T c= c==> * / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f3 cF cT
+ |- ((\x. (!y. (((dot x) y) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (y $ i))))))) x)
T * / ! c= cdot b0 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ b0 b2 c$ b1 b2 f0
+ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) |- (((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) /\ (x = x))
T c==> c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= f1 f1
+ |- (((real_mul (real_of_num m)) (real_neg (real_of_num n))) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_of_num f0 creal_neg creal_of_num f1 creal_neg creal_of_num c* f0 f1
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((v $ i) = ((vec (NUMERAL _0)) $ i)))) = ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 c_0 c= c$ f0 b0 c$ cvec cNUMERAL c_0 b0 c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((!v'. ((~ ((v' $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (!x. (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))))) = ((!v. (~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))))) \/ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (!x. (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0)))))))))
T c= ! c\/ c~ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 c\/ ! c~ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0
+ |- (((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (?x. (?z. (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) = (?x. ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (?z. (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c? / c? / c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c? / c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0
- |- (~ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))
T c~ c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((\x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) x) ==> F)) ==> ((?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) ==> F)) = ((?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (?x. (?z. (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) = (?x. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (?z. (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c? / c? / c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c? / c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F)
T c= c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((real_of_num m) = (real_of_num n)) = (m = n))
T c= c= creal_of_num f0 creal_of_num f1 c= f0 f1
- (((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))) = (v $ (NUMERAL (BIT1 _0)))) |- ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))
T c==> c= c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = ((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0
- (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((real_mul (v $ i)) (v $ i)) = ((real_mul (v $ i)) (v $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ f1 f0 creal_mul c$ f1 f0 c$ f1 f0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((i <= (dimindex UNIV)) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= f0 cdimindex part cUNIV cT
- |- (!g. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\i. (f i))) = ((sum s) g))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2
- (?v. (?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((?v. (?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c? / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!v'. ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (!x. (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))))) = ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (!v. (!x. (((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (x $ (NUMERAL (BIT1 _0))))))))
T c= ! c\/ c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0 c\/ c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! ! c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b1 cNUMERAL cBIT1 c_0
- |- (!g. ((!i. (((a <= i) /\ (i <= b)) ==> ((f i) = (g i)))) ==> (((sum (a .. b)) (\i. (f i))) = ((sum (a .. b)) g))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 / * f2 b0 csum * * part c.. f0 f1 f3
- ((dimindex UNIV) = (NUMERAL (BIT1 _0))), (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))) = (T ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> cT c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) /\ (((real_mul (x $ x)) (v $ x)) = ((real_mul (x $ x)) (v $ x))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ f2 f0 creal_mul c$ f1 f0 c$ f2 f0
- (?v. (?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((?v. (?z. (?x. (?z'. ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c? / c? / c? / c? / c/\ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c/\ c= creal_mul c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (v $ x)) (v $ x)) = ((real_mul (v $ x)) (v $ x)))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ f1 f0 creal_mul c$ f1 f0 c$ f1 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3
- ((dimindex UNIV) = (NUMERAL (BIT1 _0))), (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) |- ((T ==> (((v $ i) = ((vec (NUMERAL _0)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((v $ i) = ((vec (NUMERAL _0)) $ i))) = (T ==> q')))
T c==> c= cdimindex part cUNIV cNUMERAL cBIT1 c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c==> c==> cT c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> cT f2
- |- ((!v'. ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (((v' $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (!x. (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v' $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v' $ (NUMERAL (BIT1 _0))))) (real_inv (v' $ (NUMERAL (BIT1 _0)))))))) (v' $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))))) = ((~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) \/ (!v. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) \/ (!x. (((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0))))) = (real_neg (x $ (NUMERAL (BIT1 _0))))))))))
T c= ! c\/ c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 c\/ c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c\/ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0 c= c$ cvector_sub f1 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 f2 f0 c$ cCOND c= c$ f2 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 f0
- |- ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) ==> (x = t')) ==> (((~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) t') e'))))
T c==> c==> c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= f1 f2 c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cvector_neg f1 f3 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 f3
- |- ((\g'. (!t'. (!e'. ((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (x = t')) ==> (((~ g') ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= f1 b1 c==> c==> c~ b0 c= cvector_neg f1 b2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cCOND b0 b1 b2 f2
- |- (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0 c==> f1 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> ((((vector_sub x) ((% ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (v $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))))) v)) $ i) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) $ i))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ f3 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 f3 f0 c$ cCOND c= c$ f3 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ cvector_sub f2 c% creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 creal_mul c$ f3 cNUMERAL cBIT1 c_0 c$ f3 cNUMERAL cBIT1 c_0 f3 f0 c$ cCOND c= c$ f3 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 cvector_neg f2 f0 c==> f1 f4
- (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_add (real_neg (real_of_num (NUMERAL _0)))) (v $ (NUMERAL (BIT1 _0)))) = ((real_add (real_neg (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_neg creal_of_num cNUMERAL c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_add creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((~ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) ==> ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F)) = ((((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F))
T c= c==> c~ c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0)))) ==> (x = x)) ==> (((~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) e')))) = (((~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((vector_neg x) = e')) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) e'))))
T c= c==> c==> c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= f1 f1 c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cvector_neg f1 f2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 f2 c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cvector_neg f1 f2 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 f2
- |- ((((~ ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) ==> ((vector_neg x) = (vector_neg x))) ==> ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)))) = ((((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x)) = (((COND ((v $ (NUMERAL (BIT1 _0))) = ((vec (NUMERAL _0)) $ (NUMERAL (BIT1 _0))))) x) (vector_neg x))))
T c= c==> c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cvector_neg f1 cvector_neg f1 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 c= cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1 cCOND c= c$ f0 cNUMERAL cBIT1 c_0 c$ cvec cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cvector_neg f1
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (v $ i)) (v $ i)) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ f0 b0 * f1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f1
- (?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) |- ((?x. (?z. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add (real_neg (real_of_num (NUMERAL _0)))) (v $ (NUMERAL (BIT1 _0)))) = ((real_add (real_neg (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_neg creal_of_num cNUMERAL c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_add creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) |- (((NUMERAL (BIT1 _0)) <= _261028) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (?z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b1 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b1 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b1 cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (v $ x)) (v $ x)))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0
- |- (T ==> (((v $ i) = ((vec (NUMERAL _0)) $ i)) = ((v $ i) = ((vec (NUMERAL _0)) $ i))))
T c==> cT c= c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1 c= c$ f0 f1 c$ cvec cNUMERAL c_0 f1
- |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (v $ i)) (v $ i)) = ((real_mul (v $ i)) (v $ i))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ f0 b0 creal_mul c$ f0 b0 c$ f0 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0
- (?v. (?z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((?v. (?z. (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c? / c? / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c/\ c= c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b2 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ b0 cNUMERAL cBIT1 c_0 creal_inv c$ b0 cNUMERAL cBIT1 c_0 c$ b0 cNUMERAL cBIT1 c_0 creal_neg c$ b2 cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) (v $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b1 c$ f1 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b1 c$ f1 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
- (~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) |- (~ ((real_of_num (NUMERAL _0)) = (v $ (NUMERAL (BIT1 _0)))))
T c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= creal_of_num cNUMERAL c_0 c$ f0 cNUMERAL cBIT1 c_0
- |- (~ ((((real_mul (v $ (NUMERAL (BIT1 _0)))) (real_inv (v $ (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))
T c~ c/\ c= creal_mul c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) (v $ x)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ f1 b0 * f2 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) |- ((_261028 <= (NUMERAL (BIT1 _0))) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c<= f0 cNUMERAL cBIT1 c_0 cT
- |- (~ (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (x $ (NUMERAL (BIT1 _0))))) z) = (real_of_num (NUMERAL (BIT1 _0))))))
T c~ c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_sub creal_sub c$ f1 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL cBIT1 c_0
- (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ f2 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ f2 cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((v $ _261028) = ((vec (NUMERAL _0)) $ _261028)) = q')) ==> (((((NUMERAL (BIT1 _0)) <= _261028) /\ (_261028 <= (NUMERAL (BIT1 _0)))) ==> ((v $ _261028) = ((vec (NUMERAL _0)) $ _261028))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> b0 b1 f2 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> b0 b1 f2
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (v $ x)) (v $ x)) = ((real_mul (v $ x)) (v $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (v $ x)) (v $ x)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (v $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (v $ x)) (v $ x))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ f0 b0 creal_mul c$ f0 b0 c$ f0 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f0 b0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- (((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) (v $ x)) = ((real_mul (x $ x)) (v $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) (v $ x)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (v $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul (x $ x)) (v $ x))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f0 b0 c$ f1 b0 creal_mul c$ f0 b0 c$ f1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0
- |- (((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul (x $ x)) (v $ x)) = ((real_mul (x $ x)) (v $ x)))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ f1 f0 c$ f2 f0 creal_mul c$ f1 f0 c$ f2 f0 cT
- (?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((?x. (?z'. (((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) z) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_sub (x $ (NUMERAL (BIT1 _0)))) ((real_mul ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_mul (x $ (NUMERAL (BIT1 _0)))) (v $ (NUMERAL (BIT1 _0))))) ((real_mul (real_inv (v $ (NUMERAL (BIT1 _0))))) (real_inv (v $ (NUMERAL (BIT1 _0)))))))) (v $ (NUMERAL (BIT1 _0)))))) (real_neg (x $ (NUMERAL (BIT1 _0)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_sub c$ b0 cNUMERAL cBIT1 c_0 creal_mul creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_mul c$ b0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_mul creal_inv c$ f0 cNUMERAL cBIT1 c_0 creal_inv c$ f0 cNUMERAL cBIT1 c_0 c$ f0 cNUMERAL cBIT1 c_0 creal_neg c$ b0 cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
- (~ ((v $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) |- (((~ ((real_of_num (NUMERAL _0)) = (v $ (NUMERAL (BIT1 _0))))) ==> (((real_of_num (NUMERAL _0)) = (v $ (NUMERAL (BIT1 _0)))) = F)) = (((real_of_num (NUMERAL _0)) = (v $ (NUMERAL (BIT1 _0)))) = F))
T c==> c~ c= c$ f0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c~ c= creal_of_num cNUMERAL c_0 c$ f0 cNUMERAL cBIT1 c_0 c= c= creal_of_num cNUMERAL c_0 c$ f0 cNUMERAL cBIT1 c_0 cF c= c= creal_of_num cNUMERAL c_0 c$ f0 cNUMERAL cBIT1 c_0 cF
