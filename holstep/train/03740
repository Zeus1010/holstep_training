N Fnjlbxs.FCDJDOT
C |- (pack_ineq_def_a ==> ((?W. ((packing W) /\ ((W SUBSET ball_annulus) /\ ((real_gt (scriptL W)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> c? / c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus creal_gt cscriptL b0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c? / ccontravening b0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_IMP
A |- (!t1. (!t2. ((~ (t1 ==> t2)) = (t1 /\ (~ t2)))))
T c= c~ c==> f0 f1 c/\ f0 c~ f1
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D Hypermap.EQ_SUC
A |- (!m. (!n. (((SUC m) = (SUC n)) = (m = n))))
T c= c= cSUC f0 cSUC f1 c= f0 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ADD_CLAUSES
A |- ((!n. (((NUMERAL _0) + n) = n)) /\ ((!m. ((m + (NUMERAL _0)) = m)) /\ ((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) /\ (!m. (!n. ((m + (SUC n)) = (SUC (m + n))))))))
T c/\ ! c= c+ cNUMERAL c_0 b0 b0 c/\ ! c= c+ b0 cNUMERAL c_0 b0 c/\ ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 ! ! c= c+ b0 cSUC b1 cSUC c+ b0 b1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D EQ_ADD_RCANCEL
A |- (!m. (!n. (!p. (((m + p) = (n + p)) = (m = n)))))
T c= c= c+ f0 f1 c+ f2 f1 c= f0 f2
D BIT0
A |- (!n. ((BIT0 n) = (n + n)))
T c= cBIT0 f0 c+ f0 f0
D BIT1
A |- (!n. ((BIT1 n) = (SUC (n + n))))
T c= cBIT1 f0 cSUC c+ f0 f0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D Ssrnat.mulSnr
A |- (!m. (!n. (((SUC m) * n) = ((m * n) + n))))
T c= c* cSUC f0 f1 c+ c* f0 f1 f1
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_ASSOC
A |- (!m. (!n. (!p. ((m * (n * p)) = ((m * n) * p)))))
T c= c* f0 c* f1 f2 c* c* f0 f1 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D EQ_MULT_LCANCEL
A |- (!m. (!n. (!p. (((m * n) = (m * p)) = ((m = (NUMERAL _0)) \/ (n = p))))))
T c= c= c* f0 f1 c* f0 f2 c\/ c= f0 cNUMERAL c_0 c= f1 f2
D MULT_2
A |- (!n. (((NUMERAL (BIT0 (BIT1 _0))) * n) = (n + n)))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 f0 c+ f0 f0
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_EQ
A |- ((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) /\ (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))))
T c/\ ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_MUL_LINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_inv x)) x) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_inv f0 f0 creal_of_num cNUMERAL cBIT1 c_0
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D Real_ext.REAL_SV_LMUL_0
A |- (!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_LTE_TRANS
A |- (!x. (!y. (!z. ((((real_lt x) y) /\ ((real_le y) z)) ==> ((real_lt x) z)))))
T c==> c/\ creal_lt f0 f1 creal_le f1 f2 creal_lt f0 f2
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_MUL_RID
A |- (!x. (((real_mul x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_MUL_AC
A |- ((((real_mul m) n) = ((real_mul n) m)) /\ ((((real_mul ((real_mul m) n)) p) = ((real_mul m) ((real_mul n) p))) /\ (((real_mul m) ((real_mul n) p)) = ((real_mul n) ((real_mul m) p)))))
T c/\ c= creal_mul f0 f1 creal_mul f1 f0 c/\ c= creal_mul creal_mul f0 f1 f2 creal_mul f0 creal_mul f1 f2 c= creal_mul f0 creal_mul f1 f2 creal_mul f1 creal_mul f0 f2
D Real_ext.REAL_PROP_POS_MUL2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 f1
D REAL_NOT_LE
A |- (!x. (!y. ((~ ((real_le x) y)) = ((real_lt y) x))))
T c= c~ creal_le f0 f1 creal_lt f1 f0
D REAL_LT_01
A |- ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))
T creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_INV_INV
A |- (!x. ((real_inv (real_inv x)) = x))
T c= creal_inv creal_inv f0 f0
D REAL_INV_NEG
A |- (!x. ((real_inv (real_neg x)) = (real_neg (real_inv x))))
T c= creal_inv creal_neg f0 creal_neg creal_inv f0
D REAL_DIV_1
A |- (!x. (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_INV_MUL
A |- (!x. (!y. ((real_inv ((real_mul x) y)) = ((real_mul (real_inv x)) (real_inv y)))))
T c= creal_inv creal_mul f0 f1 creal_mul creal_inv f0 creal_inv f1
D REAL_INV_DIV
A |- (!x. (!y. ((real_inv ((real_div x) y)) = ((real_div y) x))))
T c= creal_inv creal_div f0 f1 creal_div f1 f0
D DECIMAL
A |- (!x. (!y. (((DECIMAL x) y) = ((real_div (real_of_num x)) (real_of_num y)))))
T c= cDECIMAL f0 f1 creal_div creal_of_num f0 creal_of_num f1
D RAT_LEMMA2
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> (((real_add ((real_div x1) y1)) ((real_div x2) y2)) = ((real_mul ((real_add ((real_mul x1) y2)) ((real_mul x2) y1))) ((real_mul (real_inv y1)) (real_inv y2)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_add creal_div f2 f0 creal_div f3 f1 creal_mul creal_add creal_mul f2 f1 creal_mul f3 f0 creal_mul creal_inv f0 creal_inv f1
D RAT_LEMMA5
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> ((((real_div x1) y1) = ((real_div x2) y2)) = (((real_mul x1) y2) = ((real_mul x2) y1))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= c= creal_div f2 f0 creal_div f3 f1 c= creal_mul f2 f1 creal_mul f3 f0
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D MEMBER_NOT_EMPTY
A |- (!s. ((?x. (x IN s)) = (~ (s = EMPTY))))
T c= c? / cIN b0 f0 c~ c= f0 part cEMPTY
D DIST_SYM
A |- (!x. (!y. ((distance (x , y)) = (distance (y , x)))))
T c= cdistance c, f0 f1 cdistance c, f1 f0
D Sphere.h0
A |- (h0 = ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))
T c= ch0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
D Fan_defs.set_of_edge
A |- (!v. (!E. (!V. ((((set_of_edge v) V) E) = (GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN E) /\ (w IN V))) w))))))))
T c= * * * part cset_of_edge f0 f1 f2 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f2 cIN b1 f1 b1
D Counting_spheres.DLWCHEM
A |- (!V. (((packing V) /\ (pack_ineq_def_a /\ ((V SUBSET ball_annulus) /\ (~ (local_annulus_inequality V))))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> c/\ cpacking f0 c/\ cpack_ineq_def_a c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
D Counting_spheres.XULJEPR
A |- (!V. (((packing V) /\ ((V SUBSET ball_annulus) /\ (pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))))) ==> (local_annulus_inequality V)))
T c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
D Tame_defs.contravening
A |- (!V. ((contravening V) = ((packing V) /\ ((V SUBSET ball_annulus) /\ (((real_gt (scriptL V)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) /\ ((!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))) /\ (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))))))
T c= ccontravening f0 c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus c/\ creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ ! c==> cIN b0 f0 csurrounded_node c, f0 * part cESTD f0 b0 ! c==> cIN b0 f0 c\/ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
D ssreflect_eq_def
A |- (!v. (!P. (((ssreflect_eq v) P) = P)))
T c= cssreflect_eq f0 f1 f1
D bool_elim
A |- (!P. (((P T) /\ (P F)) ==> (!x. (P x))))
T c==> c/\ * f0 cT * f0 cF ! * f0 b0
D Ssrbool.contraLR
A |- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c))))
T c==> c==> c~ f0 c~ f1 c==> f1 f0
D Ssrbool.contraT
A |- (!b. (((~ b) ==> F) ==> b))
T c==> c==> c~ f0 cF f0
D Ssrbool.implybF
A |- (!b. ((b ==> F) = (~ b)))
T c= c==> f0 cF c~ f0
D Tame_general.IN_ESTD
A |- (!V. (!v. (!w. (((v INSERT (w INSERT EMPTY)) IN (ESTD V)) = ((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))))))
T c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c/\ cIN f0 f2 c/\ cIN f1 f2 c/\ c~ c= f0 f1 creal_le cdistance c, f0 f1 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
D Fnjlbxs.ECTC_sub_ESTD
A |- (!V. ((ECTC V) SUBSET (ESTD V)))
T cSUBSET * part cECTC f0 * part cESTD f0
D Fnjlbxs.bij_scriptL
A |- (!f. (!V. (!W. (((((BIJ f) V) W) /\ (!v. ((v IN V) ==> ((vector_norm v) = (vector_norm (f v)))))) ==> ((scriptL W) = (scriptL V))))))
T c==> c/\ cBIJ f0 f1 f2 ! c==> cIN b0 f1 c= cvector_norm b0 cvector_norm * f0 b0 c= cscriptL f2 cscriptL f1
D Fnjlbxs.scriptL_attains_max_in_ball_annulus
A |- (?W. ((packing W) /\ ((W SUBSET ball_annulus) /\ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W)))))))
T c? / c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL b0
D Fnjlbxs.FNJLBXS
A |- (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> (?W. (?phi. ((((BIJ phi) V) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN V) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w))))))))))))
T c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus c? / c? / c/\ cBIJ b1 f0 b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ ! c==> cIN b2 f0 c= cvector_norm b2 cvector_norm * b1 b2 ! c==> cIN b2 b0 c\/ c= * * * part cset_of_edge b2 b0 * part cESTD b0 part cEMPTY csurrounded_node c, b0 * part cESTD b0 b2
D Fnjlbxs.isolated_node_norm_ECTC
A |- (!V. (!v. (((packing V) /\ ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
D Fnjlbxs.not_surrounded_node_norm_ECTC
A |- (!V. (!v. (((packing V) /\ ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v)))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
D Fnjlbxs.local_annulus_inequality_scriptL
A |- (!V. ((local_annulus_inequality V) = ((real_le (scriptL V)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))
T c= clocal_annulus_inequality f0 creal_le cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0
- (~ (local_annulus_inequality V)) |- (((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))
T c==> c~ clocal_annulus_inequality f0 c==> c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((((set_of_edge v) V) (ESTD V)) = EMPTY), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus) |- (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c? / c/\ cIN b0 f1 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f1 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0
- (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))) |- (((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))) = T)
T c==> ! c==> cIN b0 f0 c\/ c= * * * part cset_of_edge b0 f0 * part cESTD f0 part cEMPTY csurrounded_node c, f0 * part cESTD f0 b0 c= c==> cIN f1 f0 c\/ c= * * * part cset_of_edge f1 f0 * part cESTD f0 part cEMPTY csurrounded_node c, f0 * part cESTD f0 f1 cT
- (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((scriptL V) = (scriptL W1)), (v IN V) |- (((((set_of_edge v) V) (ECTC V)) = EMPTY) = ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c= c= * * * part cset_of_edge f2 f1 * part cECTC f1 part cEMPTY c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c/\ cIN f2 f1 c= * * * part cset_of_edge f2 f1 * part cECTC f1 part cEMPTY
+ ((v INSERT (x INSERT EMPTY)) IN (ESTD V)), (x IN V) |- (((v INSERT (x INSERT EMPTY)) IN (ESTD V)) /\ (x IN V))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c==> cIN f1 f2 c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 cIN f1 f2
+ (packing V), (V SUBSET ball_annulus) |- ((V SUBSET ball_annulus) /\ (((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ cSUBSET f0 part cball_annulus c==> c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (~ (u = v)), (u IN V), (v IN V) |- ((~ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) ==> (~ ((((set_of_edge v) V) (ESTD V)) = EMPTY)))
T c==> c~ c= f0 f1 c==> cIN f0 f2 c==> cIN f1 f2 c==> c~ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f1 c~ c= * * * part cset_of_edge f1 f2 * part cESTD f2 part cEMPTY
+ |- (((!V. (!v. (!w. (((v INSERT (w INSERT EMPTY)) IN (ESTD V)) = ((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))))) ==> ((\V. (!v. (!w. (((v INSERT (w INSERT EMPTY)) IN (ESTD V)) = ((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))))) V)) = ((\V. (!v. (!w. (((v INSERT (w INSERT EMPTY)) IN (ESTD V)) = ((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))))) V))
T c= c==> ! ! ! c= cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * part cESTD b0 c/\ cIN b1 b0 c/\ cIN b2 b0 c/\ c~ c= b1 b2 creal_le cdistance c, b1 b2 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 * / ! ! c= cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * part cESTD b0 c/\ cIN b1 b0 c/\ cIN b2 b0 c/\ c~ c= b1 b2 creal_le cdistance c, b1 b2 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 f0 * / ! ! c= cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * part cESTD b0 c/\ cIN b1 b0 c/\ cIN b2 b0 c/\ c~ c= b1 b2 creal_le cdistance c, b1 b2 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 f0
- |- ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))
T c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) |- (((((BIJ f) W1) V) /\ ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))))) ==> (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> c/\ cBIJ f1 f0 f2 c/\ cpacking f2 c/\ cSUBSET f2 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 ! c==> cIN b0 f2 c\/ c= * * * part cset_of_edge b0 f2 * part cESTD f2 part cEMPTY csurrounded_node c, f2 * part cESTD f2 b0 c? / ccontravening b0
- T, (packing V) |- (T /\ ((pack_ineq_def_a /\ ((V SUBSET ball_annulus) /\ (~ (local_annulus_inequality V)))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cT c==> cpacking f0 c/\ cT c==> c/\ cpack_ineq_def_a c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ (!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))), (packing V1), (V1 SUBSET ball_annulus) |- (((((v IN V1) /\ (~ ((surrounded_node (V1 , (ECTC V1))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((v IN V1) ==> ((~ ((surrounded_node (V1 , (ECTC V1))) v)) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((v IN V1) ==> ((~ ((surrounded_node (V1 , (ECTC V1))) v)) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c= c==> c==> c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f1 f0 c==> c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f1 f0 c==> c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (!x. ((x IN (ECTC V)) ==> (x IN (ESTD V)))), ((v INSERT (x INSERT EMPTY)) IN (ECTC V)) |- (((v INSERT (x INSERT EMPTY)) IN (ECTC V)) /\ ((x IN V) ==> (?x. (((v INSERT (x INSERT EMPTY)) IN (ESTD V)) /\ (x IN V)))))
T c==> ! c==> cIN b0 * part cECTC f0 cIN b0 * part cESTD f0 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cECTC f0 c/\ cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cECTC f0 c==> cIN f2 f0 c? / c/\ cIN * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * part cESTD f0 cIN b0 f0
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
- (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))), ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) |- ((!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c~ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c/\ ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c~ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) ==> (?x. (x IN (((set_of_edge v) V) (ESTD V))))) = (((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> (?x. (x IN (((set_of_edge v) V) (ESTD V))))))
T c= c==> creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c? / cIN b0 * * * part cset_of_edge f1 f2 * part cESTD f2 c==> creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c? / cIN b0 * * * part cset_of_edge f1 f2 * part cESTD f2
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))) |- F
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- ((!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c~ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c~ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c~ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((((surrounded_node (V , (ECTC V))) v) = x) ==> (?x. (((surrounded_node (V , (ECTC V))) v) = x)))
T c==> c= csurrounded_node c, f0 * part cECTC f0 f1 f2 c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0
- ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!x. (P x)))
T c==> c/\ * f0 cT * f0 cF c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
+ |- (((((packing V1) /\ (pack_ineq_def_a /\ ((V1 SUBSET ball_annulus) /\ (~ (local_annulus_inequality V1))))) ==> (((CARD V1) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V1) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V1) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) ==> ((packing V1) ==> ((pack_ineq_def_a /\ ((V1 SUBSET ball_annulus) /\ (~ (local_annulus_inequality V1)))) ==> (((CARD V1) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V1) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V1) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))) = ((packing V1) ==> ((pack_ineq_def_a /\ ((V1 SUBSET ball_annulus) /\ (~ (local_annulus_inequality V1)))) ==> (((CARD V1) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V1) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V1) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))))
T c= c==> c==> c/\ cpacking f0 c/\ cpack_ineq_def_a c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> cpacking f0 c==> c/\ cpack_ineq_def_a c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> cpacking f0 c==> c/\ cpack_ineq_def_a c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- ((((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c= * * * part cset_of_edge b0 f0 * part cECTC f0 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) |- ((!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c==> ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c~ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((contravening V) = ((\V. (contravening V)) V))
T c= ccontravening f0 * / ccontravening b0 f0
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- (packing V) |- ((T /\ ((V SUBSET ball_annulus) /\ (pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))))) ==> (local_annulus_inequality V))
T c==> cpacking f0 c==> c/\ cT c/\ cSUBSET f0 part cball_annulus c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
+ |- (P = ((ssreflect_eq h) P))
T c= f0 cssreflect_eq f1 f0
+ ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) |- (~ (local_annulus_inequality V))
T c==> c= cscriptL f0 cscriptL f1 c==> creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c~ clocal_annulus_inequality f0
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))), (packing V), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus), (((BIJ f) W1) V) |- ((!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))) /\ (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 c==> cpacking f1 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c==> cBIJ f2 f0 f1 c/\ ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c? / ccontravening b0
- ((\x. (((surrounded_node (V , (ECTC V))) v) = x)) x) |- (((\x. (((surrounded_node (V , (ECTC V))) v) = x)) x) /\ (?x. (((surrounded_node (V , (ECTC V))) v) = x)))
T c==> * / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 f2 c/\ * / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 f2 c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ |- (((!V. ((local_annulus_inequality V) = ((real_le (scriptL V)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ==> ((\V. ((local_annulus_inequality V) = ((real_le (scriptL V)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) V)) = ((\V. ((local_annulus_inequality V) = ((real_le (scriptL V)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) V))
T c= c==> ! c= clocal_annulus_inequality b0 creal_le cscriptL b0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 * / c= clocal_annulus_inequality b0 creal_le cscriptL b0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 f0 * / c= clocal_annulus_inequality b0 creal_le cscriptL b0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 f0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((((set_of_edge v) V) (ESTD V)) = EMPTY), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus) |- ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c= * * * part cset_of_edge f1 f2 * part cESTD f2 part cEMPTY c==> c= cscriptL f2 cscriptL f0 c==> cIN f1 f2 c==> cSUBSET f2 part cball_annulus c/\ cSUBSET f2 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f2 c/\ cIN f1 f2 c= * * * part cset_of_edge f1 f2 * part cECTC f2 part cEMPTY
+ T, ((real_le (scriptL W0)) (scriptL W1)), ((real_lt x) (scriptL W0)) |- (T /\ ((real_lt x) (scriptL W1)))
T c==> cT c==> creal_le cscriptL f0 cscriptL f1 c==> creal_lt f2 cscriptL f0 c/\ cT creal_lt f2 cscriptL f1
+ |- ((SUC (_0 + (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) = (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))
T c= cSUC c+ c_0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 c_0
+ ((((set_of_edge v) V) (ESTD V)) = EMPTY), ((u IN V) /\ (~ (u = v))), (u IN V), (v IN V) |- ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))
T c==> c= * * * part cset_of_edge f0 f1 * part cESTD f1 part cEMPTY c==> c/\ cIN f2 f1 c~ c= f2 f0 c==> cIN f2 f1 c==> cIN f0 f1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f2 f0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus), ((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) |- (T = ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c==> cssreflect_eq f3 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cT c/\ cSUBSET f1 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c/\ cIN f2 f1 c~ csurrounded_node c, f1 * part cECTC f1 f2
+ ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- ((real_lt (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) (scriptL W0))
T c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_lt creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cscriptL f0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), (V SUBSET ball_annulus) |- ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> cSUBSET f1 part cball_annulus c==> cIN f2 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((v IN V) /\ ((u IN V) /\ ((~ (v = u)) /\ ((real_le (distance (v , u))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))) /\ (u IN V)) = (((v INSERT (u INSERT EMPTY)) IN (ESTD V)) /\ (u IN V)))
T c= c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ c~ c= f0 f2 creal_le cdistance c, f0 f2 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cIN f2 f1 c/\ cIN * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part cESTD f1 cIN f2 f1
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((((set_of_edge v) V) (ESTD V)) = EMPTY), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (v IN V), (V SUBSET ball_annulus) |- (((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) ==> (local_annulus_inequality V)) ==> F)
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c==> c==> c? / c/\ cIN b0 f1 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f1 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f1 cF
+ (packing V1), ((((set_of_edge v) V1) (ECTC V1)) = EMPTY), (v IN V1), (V1 SUBSET ball_annulus) |- ((packing V1) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cpacking f0 c==> c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c==> cIN f1 f0 c==> cSUBSET f0 part cball_annulus c/\ cpacking f0 c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- ((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) |- (((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) = T)
T c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 cT
+ ((((set_of_edge v) V1) (ECTC V1)) = EMPTY), (v IN V1), (V1 SUBSET ball_annulus) |- (((((set_of_edge v) V1) (ECTC V1)) = EMPTY) /\ ((packing V1) ==> ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c= * * * part cset_of_edge f0 f1 * part cECTC f1 part cEMPTY c==> cIN f0 f1 c==> cSUBSET f1 part cball_annulus c/\ c= * * * part cset_of_edge f0 f1 * part cECTC f1 part cEMPTY c==> cpacking f1 c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))))
T c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1 c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1
- (packing W1), (W1 SUBSET ball_annulus) |- ((W1 SUBSET ball_annulus) /\ (?W. (?phi. ((((BIJ phi) W1) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w)))))))))))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ cSUBSET f0 part cball_annulus c? / c? / c/\ cBIJ b1 f0 b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ ! c==> cIN b2 f0 c= cvector_norm b2 cvector_norm * b1 b2 ! c==> cIN b2 b0 c\/ c= * * * part cset_of_edge b2 b0 * part cESTD b0 part cEMPTY csurrounded_node c, b0 * part cESTD b0 b2
- (packing V) |- (T ==> ((pack_ineq_def_a /\ ((V SUBSET ball_annulus) /\ (~ (local_annulus_inequality V)))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cpacking f0 c==> cT c==> c/\ cpack_ineq_def_a c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
- |- ((!x. (((real_lt x) (scriptL W0)) ==> ((real_lt x) (scriptL W1)))) ==> (!x. (((real_lt x) (scriptL W0)) ==> ((real_lt x) (scriptL W1)))))
T c==> ! c==> creal_lt b0 cscriptL f0 creal_lt b0 cscriptL f1 ! c==> creal_lt b0 cscriptL f0 creal_lt b0 cscriptL f1
+ |- ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) = p') ==> ((p' ==> ((T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) ==> (T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT f3 c==> c==> f3 c= c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c= c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 f4
- (!b. (((~ b) ==> F) ==> b)) |- ((!b. (((~ b) ==> F) ==> b)) /\ (!b. (((~ b) ==> F) ==> b)))
T c==> ! c==> c==> c~ b0 cF b0 c/\ ! c==> c==> c~ b0 cF b0 ! c==> c==> c~ b0 cF b0
- ((((set_of_edge v) V) (ESTD V)) = EMPTY), (u IN V), (v IN V) |- ((~ (u = v)) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))
T c==> c= * * * part cset_of_edge f0 f1 * part cESTD f1 part cEMPTY c==> cIN f2 f1 c==> cIN f0 f1 c==> c~ c= f2 f0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f2 f0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus) |- ((\x. (((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = x)) ==> (x \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) x)
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus * / c==> cssreflect_eq f3 c= csurrounded_node c, f1 * part cECTC f1 f2 b0 c\/ b0 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f4
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- ((\p'. (!q'. ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = F)) = p') ==> ((p' ==> ((F \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = F)) ==> (F \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cF b0 c==> c==> b0 c= c\/ cF c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cF c\/ cF c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3
+ |- (((x IN (GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN (ECTC V)) /\ (w IN V))) w))))) ==> (?x. (x IN (((set_of_edge v) V) (ESTD V))))) = ((x IN (((set_of_edge v) V) (ECTC V))) ==> (?x. (x IN (((set_of_edge v) V) (ESTD V))))))
T c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * part cECTC f2 cIN b1 f2 b1 c? / cIN b0 * * * part cset_of_edge f1 f2 * part cESTD f2 c==> cIN f0 * * * part cset_of_edge f1 f2 * part cECTC f2 c? / cIN b0 * * * part cset_of_edge f1 f2 * part cESTD f2
+ |- (((!y. (!x. (((real_gt x) y) = ((real_lt y) x)))) ==> ((\y. (!x. (((real_gt x) y) = ((real_lt y) x)))) y)) = ((\y. (!x. (((real_gt x) y) = ((real_lt y) x)))) y))
T c= c==> ! ! c= creal_gt b1 b0 creal_lt b0 b1 * / ! c= creal_gt b1 b0 creal_lt b0 b1 f0 * / ! c= creal_gt b1 b0 creal_lt b0 b1 f0
+ (~ (u = v)) |- (((T /\ (T /\ ((~ F) /\ ((real_le (distance (v , u))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))) /\ T) = ((T /\ (T /\ ((~ (v = u)) /\ ((real_le (distance (v , u))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))) /\ T))
T c==> c~ c= f0 f1 c= c/\ c/\ cT c/\ cT c/\ c~ cF creal_le cdistance c, f1 f0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cT c/\ c/\ cT c/\ cT c/\ c~ c= f1 f0 creal_le cdistance c, f1 f0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cT
- (~ (u = v)), ((((set_of_edge v) V) (ESTD V)) = EMPTY), (u IN V), (v IN V) |- ((~ (u = v)) /\ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))
T c==> c~ c= f0 f1 c==> c= * * * part cset_of_edge f1 f2 * part cESTD f2 part cEMPTY c==> cIN f0 f2 c==> cIN f1 f2 c/\ c~ c= f0 f1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f1
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- pack_ineq_def_a, (packing W1), ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- ((packing W1) /\ (((W1 SUBSET ball_annulus) /\ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1))))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ cpacking f0 c==> c/\ cSUBSET f0 part cball_annulus ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c? / ccontravening b0
+ (v IN V) |- (((T /\ (T /\ ((~ (v = u)) /\ ((real_le (distance (v , u))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))) /\ T) = (((v IN V) /\ (T /\ ((~ (v = u)) /\ ((real_le (distance (v , u))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))) /\ T))
T c==> cIN f0 f1 c= c/\ c/\ cT c/\ cT c/\ c~ c= f0 f2 creal_le cdistance c, f0 f2 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cT c/\ c/\ cIN f0 f1 c/\ cT c/\ c~ c= f0 f2 creal_le cdistance c, f0 f2 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cT
- ((u IN V) /\ (~ (u = v))) |- (((u IN V) /\ (~ (u = v))) /\ (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))
T c==> c/\ cIN f0 f1 c~ c= f0 f2 c/\ c/\ cIN f0 f1 c~ c= f0 f2 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2
+ |- (((BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))) * (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) = (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))
T c= c* cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 c_0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- ((~ ((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) ==> (local_annulus_inequality V))) = (((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) ==> (local_annulus_inequality V)) ==> F))
T c= c~ c==> c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0 c==> c==> c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0 cF
+ |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- ((((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c~ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- ((real_lt x) y) |- (((real_lt x) y) /\ (((real_le y) z) ==> ((real_lt x) z)))
T c==> creal_lt f0 f1 c/\ creal_lt f0 f1 c==> creal_le f1 f2 creal_lt f0 f2
+ |- ((\t2. ((~ (t1 ==> t2)) = (t1 /\ (~ t2)))) t2)
T * / c= c~ c==> f0 b0 c/\ f0 c~ b0 f1
+ |- (((T /\ A) = A) /\ ((A /\ T) = A))
T c/\ c= c/\ cT f0 f0 c= c/\ f0 cT f0
+ (packing V), (V SUBSET ball_annulus) |- ((packing V) /\ (?W. (?phi. ((((BIJ phi) V) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN V) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w)))))))))))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ cpacking f0 c? / c? / c/\ cBIJ b1 f0 b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ ! c==> cIN b2 f0 c= cvector_norm b2 cvector_norm * b1 b2 ! c==> cIN b2 b0 c\/ c= * * * part cset_of_edge b2 b0 * part cESTD b0 part cEMPTY csurrounded_node c, b0 * part cESTD b0 b2
- |- (((!x. (((\x. (((surrounded_node (V , (ECTC V))) v) = x)) x) ==> (?x. (((surrounded_node (V , (ECTC V))) v) = x)))) ==> ((?x. (((surrounded_node (V , (ECTC V))) v) = x)) ==> (?x. (((surrounded_node (V , (ECTC V))) v) = x)))) = ((?x. (((surrounded_node (V , (ECTC V))) v) = x)) ==> (?x. (((surrounded_node (V , (ECTC V))) v) = x))))
T c= c==> ! c==> * / c= csurrounded_node c, f0 * part cECTC f0 f1 b1 b0 c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b1 c==> c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 c==> c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0
+ pack_ineq_def_a |- (pack_ineq_def_a /\ ((?W. ((packing W) /\ ((W SUBSET ball_annulus) /\ ((real_gt (scriptL W)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c/\ cpack_ineq_def_a c==> c? / c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus creal_gt cscriptL b0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c? / ccontravening b0
+ (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- (((!b. (((~ c) ==> (~ b)) ==> (b ==> c))) ==> ((\b. (((~ c) ==> (~ b)) ==> (b ==> c))) b)) = ((\b. (((~ c) ==> (~ b)) ==> (b ==> c))) b))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c= c==> ! c==> c==> c~ f0 c~ b0 c==> b0 f0 * / c==> c==> c~ f0 c~ b0 c==> b0 f0 f1 * / c==> c==> c~ f0 c~ b0 c==> b0 f0 f1
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- ((\c. (((~ c) ==> (~ b)) ==> (b ==> c))) c)
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 * / c==> c==> c~ b0 c~ f0 c==> f0 b0 f1
+ |- (((!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> (?W. (?phi. ((((BIJ phi) V) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN V) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w)))))))))))) ==> ((\V. (((packing V) /\ (V SUBSET ball_annulus)) ==> (?W. (?phi. ((((BIJ phi) V) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN V) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w)))))))))))) V)) = ((\V. (((packing V) /\ (V SUBSET ball_annulus)) ==> (?W. (?phi. ((((BIJ phi) V) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN V) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w)))))))))))) V))
T c= c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus c? / c? / c/\ cBIJ b2 b0 b1 c/\ cpacking b1 c/\ cSUBSET b1 part cball_annulus c/\ ! c==> cIN b3 b0 c= cvector_norm b3 cvector_norm * b2 b3 ! c==> cIN b3 b1 c\/ c= * * * part cset_of_edge b3 b1 * part cESTD b1 part cEMPTY csurrounded_node c, b1 * part cESTD b1 b3 * / c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus c? / c? / c/\ cBIJ b2 b0 b1 c/\ cpacking b1 c/\ cSUBSET b1 part cball_annulus c/\ ! c==> cIN b3 b0 c= cvector_norm b3 cvector_norm * b2 b3 ! c==> cIN b3 b1 c\/ c= * * * part cset_of_edge b3 b1 * part cESTD b1 part cEMPTY csurrounded_node c, b1 * part cESTD b1 b3 f0 * / c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus c? / c? / c/\ cBIJ b2 b0 b1 c/\ cpacking b1 c/\ cSUBSET b1 part cball_annulus c/\ ! c==> cIN b3 b0 c= cvector_norm b3 cvector_norm * b2 b3 ! c==> cIN b3 b1 c\/ c= * * * part cset_of_edge b3 b1 * part cESTD b1 part cEMPTY csurrounded_node c, b1 * part cESTD b1 b3 f0
+ (!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))), (packing V), ((((set_of_edge v) V) (ECTC V)) = EMPTY), (v IN V), (V SUBSET ball_annulus) |- ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f0 c==> c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c==> cIN f1 f0 c==> cSUBSET f0 part cball_annulus c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (packing V) |- (((T /\ ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> cpacking f0 c= c==> c/\ cT c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- (v IN V) |- (T = (v IN V))
T c==> cIN f0 f1 c= cT cIN f0 f1
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ |- (((?phi. (P phi)) ==> Q) = (!phi. ((P phi) ==> Q)))
T c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1
+ |- ((\v. (!P. (((ssreflect_eq v) P) = P))) v)
T * / ! c= cssreflect_eq b0 b1 b1 f0
- (packing V), (V SUBSET ball_annulus) |- (((pack_ineq_def_a ==> ((T /\ (~ (local_annulus_inequality V))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) ==> ((pack_ineq_def_a /\ (T /\ (~ (local_annulus_inequality V)))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) = ((pack_ineq_def_a /\ (T /\ (~ (local_annulus_inequality V)))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c= c==> c==> cpack_ineq_def_a c==> c/\ cT c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> c/\ cpack_ineq_def_a c/\ cT c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> c/\ cpack_ineq_def_a c/\ cT c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- (!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))), (((BIJ f) W1) V) |- ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ ((scriptL V) = (scriptL W1)))
T c==> ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 c==> cBIJ f1 f0 f2 c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 c= cscriptL f2 cscriptL f0
+ |- (((!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) ==> (((((set_of_edge v) V) (ESTD V)) = EMPTY) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))) = (((((set_of_edge v) V) (ESTD V)) = EMPTY) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))
T c= c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c==> c= * * * part cset_of_edge f0 f1 * part cESTD f1 part cEMPTY creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f2 f0 c==> c= * * * part cset_of_edge f0 f1 * part cESTD f1 part cEMPTY creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f2 f0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((((set_of_edge v) V) (ESTD V)) = EMPTY), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (v IN V), (V SUBSET ball_annulus) |- (((((set_of_edge v) V) (ESTD V)) = EMPTY) /\ ((surrounded_node (V , (ESTD V))) v))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c/\ c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 f2
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((((set_of_edge v) V) (ESTD V)) = EMPTY), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus) |- ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (~ (local_annulus_inequality V)), ((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) |- ((~ (local_annulus_inequality V)) /\ (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))
T c==> c~ clocal_annulus_inequality f0 c==> c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!V. ((ECTC V) SUBSET (ESTD V))) ==> ((\V. ((ECTC V) SUBSET (ESTD V))) V)) = ((\V. ((ECTC V) SUBSET (ESTD V))) V))
T c= c==> ! cSUBSET * part cECTC b0 * part cESTD b0 * / cSUBSET * part cECTC b0 * part cESTD b0 f0 * / cSUBSET * part cECTC b0 * part cESTD b0 f0
+ |- ((~ ((((set_of_edge v) V) (ECTC V)) = EMPTY)) ==> (~ ((((set_of_edge v) V) (ESTD V)) = EMPTY)))
T c==> c~ c= * * * part cset_of_edge f0 f1 * part cECTC f1 part cEMPTY c~ c= * * * part cset_of_edge f0 f1 * part cESTD f1 part cEMPTY
- (packing W1) |- ((T /\ (W1 SUBSET ball_annulus)) ==> (?W. (?phi. ((((BIJ phi) W1) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w)))))))))))
T c==> cpacking f0 c==> c/\ cT cSUBSET f0 part cball_annulus c? / c? / c/\ cBIJ b1 f0 b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ ! c==> cIN b2 f0 c= cvector_norm b2 cvector_norm * b1 b2 ! c==> cIN b2 b0 c\/ c= * * * part cset_of_edge b2 b0 * part cESTD b0 part cEMPTY csurrounded_node c, b0 * part cESTD b0 b2
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (packing V), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus) |- (?V. (contravening V))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c? / ccontravening b0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) |- (((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) = (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))
T c==> c= cscriptL f0 cscriptL f1 c==> creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- |- (((((packing W) /\ (W SUBSET ball_annulus)) ==> (((real_le (scriptL W)) (scriptL W1)) = ((real_le (scriptL W)) (scriptL W1)))) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))))) = ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1)))))
T c= c==> c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus c= creal_le cscriptL f0 cscriptL f1 creal_le cscriptL f0 cscriptL f1 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1 c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1 c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1
- ((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) |- (((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) /\ ((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ |- ((\y. ((distance (x , y)) = (distance (y , x)))) y)
T * / c= cdistance c, f0 b0 cdistance c, b0 f0 f1
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((((BIJ f) W1) V) /\ ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (((BIJ f) W1) V) |- (?V. (contravening V))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c/\ cBIJ f1 f0 f2 c/\ cpacking f2 c/\ cSUBSET f2 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 ! c==> cIN b0 f2 c\/ c= * * * part cset_of_edge b0 f2 * part cESTD f2 part cEMPTY csurrounded_node c, f2 * part cESTD f2 b0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cBIJ f1 f0 f2 c? / ccontravening b0
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- (((?W. ((packing W) /\ ((W SUBSET ball_annulus) /\ ((real_gt (scriptL W)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ==> (?V. (contravening V))) = (!W. (((packing W) /\ ((W SUBSET ball_annulus) /\ ((real_gt (scriptL W)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ==> (?V. (contravening V)))))
T c= c==> c? / c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus creal_gt cscriptL b0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c? / ccontravening b0 ! c==> c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus creal_gt cscriptL b0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c? / ccontravening b1
+ pack_ineq_def_a, (~ (local_annulus_inequality V)), (V SUBSET ball_annulus) |- ((packing V) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))
T c==> cpack_ineq_def_a c==> c~ clocal_annulus_inequality f0 c==> cSUBSET f0 part cball_annulus c==> cpacking f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ |- ((T ==> (((real_le (scriptL W0)) (scriptL W1)) = q')) ==> (((T /\ T) ==> ((real_le (scriptL W0)) (scriptL W1))) = (T ==> q')))
T c==> c==> cT c= creal_le cscriptL f0 cscriptL f1 f2 c= c==> c/\ cT cT creal_le cscriptL f0 cscriptL f1 c==> cT f2
+ |- (((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((F \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= c\/ cF c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c~ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c~ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus) |- (((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c==> cssreflect_eq f3 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (packing V) |- (T ==> (((V SUBSET ball_annulus) /\ (pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))))) ==> (local_annulus_inequality V)))
T c==> cpacking f0 c==> cT c==> c/\ cSUBSET f0 part cball_annulus c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((((set_of_edge v) V) (ESTD V)) = EMPTY), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus) |- ((((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c= * * * part cset_of_edge f1 f2 * part cESTD f2 part cEMPTY c==> c= cscriptL f2 cscriptL f0 c==> cIN f1 f2 c==> cSUBSET f2 part cball_annulus c= c==> c/\ cSUBSET f2 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f2 c/\ cIN f1 f2 c= * * * part cset_of_edge f1 f2 * part cECTC f2 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))) |- (T = (!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1)))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c= cT ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) |- (!W. ((?phi. ((((BIJ phi) W1) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w))))))))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 ! c==> c? / c/\ cBIJ b1 f0 b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ ! c==> cIN b2 f0 c= cvector_norm b2 cvector_norm * b1 b2 ! c==> cIN b2 b0 c\/ c= * * * part cset_of_edge b2 b0 * part cESTD b0 part cEMPTY csurrounded_node c, b0 * part cESTD b0 b2 c? / ccontravening b1
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- T, pack_ineq_def_a, (packing V), (V SUBSET ball_annulus) |- (T /\ ((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cT c==> cpack_ineq_def_a c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ cT c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- ((packing W) /\ (W SUBSET ball_annulus)) |- (((packing W) /\ (W SUBSET ball_annulus)) /\ (((real_le (scriptL W)) (scriptL W1)) = ((real_le (scriptL W)) (scriptL W1))))
T c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus c/\ c/\ cpacking f0 cSUBSET f0 part cball_annulus c= creal_le cscriptL f0 cscriptL f1 creal_le cscriptL f0 cscriptL f1
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. (((real_lt x) (scriptL W0)) ==> ((real_lt x) (scriptL W1)))), ((real_lt x) (scriptL W0)) |- (((real_lt x) (scriptL W0)) /\ ((real_lt x) (scriptL W1)))
T c==> ! c==> creal_lt b0 cscriptL f0 creal_lt b0 cscriptL f1 c==> creal_lt f2 cscriptL f0 c/\ creal_lt f2 cscriptL f0 creal_lt f2 cscriptL f1
+ ((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) |- ((real_le (distance (v , u))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))
T c==> creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_le cdistance c, f1 f0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (v IN V) |- (((((set_of_edge v) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) v))
T c==> ! c==> cIN b0 f0 c\/ c= * * * part cset_of_edge b0 f0 * part cESTD f0 part cEMPTY csurrounded_node c, f0 * part cESTD f0 b0 c==> cIN f1 f0 c\/ c= * * * part cset_of_edge f1 f0 * part cESTD f0 part cEMPTY csurrounded_node c, f0 * part cESTD f0 f1
+ (((real_lt y) x) = ((real_gt x) y)) |- (((real_gt x) y) = ((real_lt y) x))
T c==> c= creal_lt f0 f1 creal_gt f1 f0 c= creal_gt f1 f0 creal_lt f0 f1
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus) |- (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c\/ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((x IN (GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN (ECTC V)) /\ (w IN V))) w))))) ==> (?x. (x IN (((set_of_edge v) V) (ESTD V)))))
T c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * part cECTC f2 cIN b1 f2 b1 c? / cIN b0 * * * part cset_of_edge f1 f2 * part cESTD f2
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((((set_of_edge v) V) (ESTD V)) = EMPTY), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (v IN V), (V SUBSET ball_annulus) |- ((!b. (((~ b) ==> F) ==> b)) ==> ((surrounded_node (V , (ESTD V))) v))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c==> ! c==> c==> c~ b0 cF b0 csurrounded_node c, f1 * part cESTD f1 f2
+ |- (((((packing V1) /\ ((V1 SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) /\ ((v IN V1) /\ (~ ((surrounded_node (V1 , (ECTC V1))) v)))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((packing V1) ==> (((V1 SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) /\ ((v IN V1) /\ (~ ((surrounded_node (V1 , (ECTC V1))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((packing V1) ==> (((V1 SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) /\ ((v IN V1) /\ (~ ((surrounded_node (V1 , (ECTC V1))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c= c==> c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f0 c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f0 c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (packing V), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus) |- ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c==> cIN f2 f1 csurrounded_node c, f1 * part cESTD f1 f2
+ (packing V), (V SUBSET ball_annulus) |- ((((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) ==> (((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c= c==> c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\x. (!y. ((distance (x , y)) = (distance (y , x))))) x)
T * / ! c= cdistance c, b0 b1 cdistance c, b1 b0 f0
+ |- (((!w. (((v INSERT (w INSERT EMPTY)) IN (ESTD V)) = ((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))) ==> ((\w. (((v INSERT (w INSERT EMPTY)) IN (ESTD V)) = ((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))) w)) = ((\w. (((v INSERT (w INSERT EMPTY)) IN (ESTD V)) = ((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))) w))
T c= c==> ! c= cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cESTD f1 c/\ cIN f0 f1 c/\ cIN b0 f1 c/\ c~ c= f0 b0 creal_le cdistance c, f0 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 * / c= cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cESTD f1 c/\ cIN f0 f1 c/\ cIN b0 f1 c/\ c~ c= f0 b0 creal_le cdistance c, f0 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 f2 * / c= cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cESTD f1 c/\ cIN f0 f1 c/\ cIN b0 f1 c/\ c~ c= f0 b0 creal_le cdistance c, f0 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 f2
- ((~ c) ==> (~ b)) |- ((!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) ==> (b ==> c))
T c==> c==> c~ f0 c~ f1 c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c==> f1 f0
+ (packing V) |- ((V SUBSET ball_annulus) ==> (((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((real_le (scriptL W0)) (scriptL W1)) |- (((real_le (scriptL W0)) (scriptL W1)) /\ (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> creal_le cscriptL f0 cscriptL f1 c/\ creal_le cscriptL f0 cscriptL f1 c= creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ ((scriptL V) = (scriptL W1)) |- ((T /\ (T /\ (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) /\ ((!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))) /\ (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))))) = (T /\ (T /\ (((real_gt (scriptL V)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) /\ ((!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))) /\ (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))))))
T c==> c= cscriptL f0 cscriptL f1 c= c/\ cT c/\ cT c/\ creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ ! c==> cIN b0 f0 csurrounded_node c, f0 * part cESTD f0 b0 ! c==> cIN b0 f0 c\/ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ cT c/\ cT c/\ creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ ! c==> cIN b0 f0 csurrounded_node c, f0 * part cESTD f0 b0 ! c==> cIN b0 f0 c\/ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((((((BIJ f1) V1) W) /\ (!v. ((v IN V1) ==> ((vector_norm v) = (vector_norm (f1 v)))))) ==> ((scriptL W) = (scriptL V1))) ==> ((((BIJ f1) V1) W) ==> ((!v. ((v IN V1) ==> ((vector_norm v) = (vector_norm (f1 v))))) ==> ((scriptL W) = (scriptL V1))))) = ((((BIJ f1) V1) W) ==> ((!v. ((v IN V1) ==> ((vector_norm v) = (vector_norm (f1 v))))) ==> ((scriptL W) = (scriptL V1)))))
T c= c==> c==> c/\ cBIJ f0 f1 f2 ! c==> cIN b0 f1 c= cvector_norm b0 cvector_norm * f0 b0 c= cscriptL f2 cscriptL f1 c==> cBIJ f0 f1 f2 c==> ! c==> cIN b0 f1 c= cvector_norm b0 cvector_norm * f0 b0 c= cscriptL f2 cscriptL f1 c==> cBIJ f0 f1 f2 c==> ! c==> cIN b0 f1 c= cvector_norm b0 cvector_norm * f0 b0 c= cscriptL f2 cscriptL f1
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
+ (packing V1) |- (((((V1 SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) /\ ((v IN V1) /\ ((((set_of_edge v) V1) (ECTC V1)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((V1 SUBSET ball_annulus) ==> (((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) /\ ((v IN V1) /\ ((((set_of_edge v) V1) (ECTC V1)) = EMPTY))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((V1 SUBSET ball_annulus) ==> (((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) /\ ((v IN V1) /\ ((((set_of_edge v) V1) (ECTC V1)) = EMPTY))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> cpacking f0 c= c==> c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 part cball_annulus c==> c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 part cball_annulus c==> c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (v IN V), (V SUBSET ball_annulus) |- (((((set_of_edge v) V) (ESTD V)) = EMPTY) ==> ((surrounded_node (V , (ESTD V))) v))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c==> c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 f2
+ (!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))), (packing V), (v IN V), (V SUBSET ball_annulus) |- ((v IN V) /\ ((~ ((surrounded_node (V , (ECTC V))) v)) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f0 c==> cIN f1 f0 c==> cSUBSET f0 part cball_annulus c/\ cIN f1 f0 c==> c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (~ (u = v)), (u IN V), (v IN V) |- ((~ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) ==> (?x. (x IN (((set_of_edge v) V) (ESTD V)))))
T c==> c~ c= f0 f1 c==> cIN f0 f2 c==> cIN f1 f2 c==> c~ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f1 c? / cIN b0 * * * part cset_of_edge f1 f2 * part cESTD f2
+ |- (((!x. (((real_lt y) x) = ((real_gt x) y))) ==> ((\x. (((real_lt y) x) = ((real_gt x) y))) x)) = ((\x. (((real_lt y) x) = ((real_gt x) y))) x))
T c= c==> ! c= creal_lt f0 b0 creal_gt b0 f0 * / c= creal_lt f0 b0 creal_gt b0 f0 f1 * / c= creal_lt f0 b0 creal_gt b0 f0 f1
+ ((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) |- (((surrounded_node (V , (ECTC V))) v) = F)
T c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= csurrounded_node c, f1 * part cECTC f1 f2 cF
+ |- (((BIT0 (BIT0 (BIT1 (BIT1 _0)))) EXP (NUMERAL (BIT0 (BIT1 _0)))) = (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))
T c= cEXP cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0
+ ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) |- (((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))
T c==> c= cscriptL f0 cscriptL f1 c==> creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (((BIJ f) W1) V) |- (?V. (contravening V))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cBIJ f2 f0 f1 c? / ccontravening b0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((((set_of_edge v) V) (ESTD V)) = EMPTY), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (v IN V), (V SUBSET ball_annulus) |- (~ ((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) ==> (local_annulus_inequality V)))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c~ c==> c? / c/\ cIN b0 f1 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f1 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f1
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((v IN V) = p') ==> ((p' ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))
T c==> c= cIN f0 f1 f2 c==> c==> f2 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f3 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f2 f3
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ pack_ineq_def_a, ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- (!W. (((packing W) /\ ((W SUBSET ball_annulus) /\ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W)))))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 ! c==> c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL b0 c? / ccontravening b1
- |- (((((u IN V) /\ (~ (u = v))) ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))) ==> ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))) = ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))
T c= c==> c==> c/\ cIN f0 f1 c~ c= f0 f2 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2
- |- ((\p'. (!q'. (((v IN V) = p') ==> ((p' ==> (((surrounded_node (V , (ESTD V))) v) = q')) ==> (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= csurrounded_node c, f1 * part cESTD f1 f0 b1 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> b0 b1 f2
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((((set_of_edge v) V) (ESTD V)) = EMPTY), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (v IN V), (V SUBSET ball_annulus) |- ((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) /\ ((real_lt (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) (scriptL V)))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c/\ c? / c/\ cIN b0 f1 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f1 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 creal_lt creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cscriptL f1
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus) |- ((v IN V) /\ (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c/\ cIN f2 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ pack_ineq_def_a, (~ (local_annulus_inequality V)), (packing V), (V SUBSET ball_annulus) |- (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))
T c==> cpack_ineq_def_a c==> c~ clocal_annulus_inequality f0 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- (!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) |- ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))
T c==> ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 c==> cIN f2 f0 c= cvector_norm f2 cvector_norm * f1 f2
+ |- (((BIT0 (BIT1 _0)) * (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) = (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))
T c= c* cBIT0 cBIT1 c_0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- (((BIJ f) W1) V) |- (T ==> ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) ==> ((scriptL V) = (scriptL W1))))
T c==> cBIJ f0 f1 f2 c==> cT c==> ! c==> cIN b0 f1 c= cvector_norm b0 cvector_norm * f0 b0 c= cscriptL f2 cscriptL f1
+ |- (((((packing V1) /\ ((V1 SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) /\ ((v IN V1) /\ ((((set_of_edge v) V1) (ECTC V1)) = EMPTY))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((packing V1) ==> (((V1 SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) /\ ((v IN V1) /\ ((((set_of_edge v) V1) (ECTC V1)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((packing V1) ==> (((V1 SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) /\ ((v IN V1) /\ ((((set_of_edge v) V1) (ECTC V1)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c= c==> c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f0 c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f0 c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (packing V) |- (T ==> (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cpacking f0 c==> cT c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (packing V) |- (((T ==> (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((T /\ ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((T /\ ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cpacking f0 c= c==> c==> cT c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cT c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cT c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\P. (P = ((ssreflect_eq h) P))) P)
T * / c= b0 cssreflect_eq f0 b0 f1
+ |- ((\V. ((contravening V) = ((packing V) /\ ((V SUBSET ball_annulus) /\ (((real_gt (scriptL V)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) /\ ((!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))) /\ (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))))))) V)
T * / c= ccontravening b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ creal_gt cscriptL b0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL b0 c/\ c\/ c= cCARD b0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD b0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD b0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ ! c==> cIN b1 b0 csurrounded_node c, b0 * part cESTD b0 b1 ! c==> cIN b1 b0 c\/ csurrounded_node c, b0 * part cECTC b0 b1 c= cvector_norm b1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- ((\Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))) Q)
T * / c= c==> c? / * f0 b1 b0 ! c==> * f0 b1 b0 f1
+ |- (((real_lt (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) (scriptL V)) = (~ ((real_le (scriptL V)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))
T c= creal_lt creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cscriptL f0 c~ creal_le cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- (~ (((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))) /\ (~ ((real_le (distance (u , v))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))
T c~ c/\ creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c~ creal_le cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
- pack_ineq_def_a, (packing V), (V SUBSET ball_annulus) |- (((T ==> ((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) ==> ((T /\ (~ (local_annulus_inequality V))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) = ((T /\ (~ (local_annulus_inequality V))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c= c==> c==> cT c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> c/\ cT c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> c/\ cT c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ (!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))), (packing V1), (V1 SUBSET ball_annulus) |- (((((v IN V1) /\ ((((set_of_edge v) V1) (ECTC V1)) = EMPTY)) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((v IN V1) ==> (((((set_of_edge v) V1) (ECTC V1)) = EMPTY) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((v IN V1) ==> (((((set_of_edge v) V1) (ECTC V1)) = EMPTY) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c= c==> c==> c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f1 f0 c==> c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f1 f0 c==> c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) /\ (~ ((real_le (distance (u , v))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))) = (~ ((~ ((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))) \/ ((real_le (distance (u , v))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))
T c= c/\ creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c~ creal_le cdistance c, f0 f1 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c~ c\/ c~ creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_le cdistance c, f0 f1 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- (((!P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) ==> ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P)) = ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P))
T c= c==> ! ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0
+ (~ (u = v)), ((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))), (u IN V), (v IN V) |- (((v IN V) /\ (T /\ ((~ (v = u)) /\ ((real_le (distance (v , u))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))) /\ (u IN V))
T c==> c~ c= f0 f1 c==> creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cIN f0 f2 c==> cIN f1 f2 c/\ c/\ cIN f1 f2 c/\ cT c/\ c~ c= f1 f0 creal_le cdistance c, f1 f0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cIN f0 f2
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))), ((((set_of_edge v) V) (ESTD V)) = EMPTY), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus) |- ((!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> c/\ cSUBSET f1 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f1 c/\ cIN b0 f1 c= * * * part cset_of_edge b0 f1 * part cECTC f1 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c/\ ! c==> c/\ cSUBSET f1 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f1 c/\ cIN b0 f1 c= * * * part cset_of_edge b0 f1 * part cECTC f1 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (packing V) |- (!v. ((T /\ ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v)))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cpacking f0 ! c==> c/\ cT c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c~ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V) |- (((T ==> (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((T /\ ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v)))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((T /\ ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v)))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cpacking f0 c= c==> c==> cT c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cT c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cT c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus) |- (((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = F)) ==> (F \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c==> cssreflect_eq f3 c= csurrounded_node c, f1 * part cECTC f1 f2 cF c\/ cF c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((((v IN V) ==> (((surrounded_node (V , (ESTD V))) v) = ((surrounded_node (V , (ESTD V))) v))) ==> (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)))) = (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))))
T c= c==> c==> cIN f0 f1 c= csurrounded_node c, f1 * part cESTD f1 f0 csurrounded_node c, f1 * part cESTD f1 f0 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing W1), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (W1 SUBSET ball_annulus) |- (?V. (contravening V))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f0 part cball_annulus c? / ccontravening b0
+ |- (((?phi. ((((BIJ phi) W1) V) /\ ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))))))) ==> (?V. (contravening V))) = (!phi. (((((BIJ phi) W1) V) /\ ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))))) ==> (?V. (contravening V)))))
T c= c==> c? / c/\ cBIJ b0 f0 f1 c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b1 f0 c= cvector_norm b1 cvector_norm * b0 b1 ! c==> cIN b1 f1 c\/ c= * * * part cset_of_edge b1 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b1 c? / ccontravening b0 ! c==> c/\ cBIJ b0 f0 f1 c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b1 f0 c= cvector_norm b1 cvector_norm * b0 b1 ! c==> cIN b1 f1 c\/ c= * * * part cset_of_edge b1 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b1 c? / ccontravening b1
+ (packing V) |- (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cpacking f0 ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c= * * * part cset_of_edge b0 f0 * part cECTC f0 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- ((~ b) ==> F) |- ((!b. (((~ b) ==> F) ==> b)) ==> b)
T c==> c==> c~ f0 cF c==> ! c==> c==> c~ b0 cF b0 f0
+ (~ ((surrounded_node (V , (ECTC V))) v)), (packing V), (v IN V), (V SUBSET ball_annulus) |- ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c~ csurrounded_node c, f0 * part cECTC f0 f1 c==> cpacking f0 c==> cIN f1 f0 c==> cSUBSET f0 part cball_annulus c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- (T = ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))
T c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= cT creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- (((x IN (GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN (ECTC V)) /\ (w IN V))) w))))) ==> (?x. (x IN (GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN (ESTD V)) /\ (w IN V))) w))))))) = ((x IN (GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN (ECTC V)) /\ (w IN V))) w))))) ==> (?x. (x IN (((set_of_edge v) V) (ESTD V))))))
T c= c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * part cECTC f2 cIN b1 f2 b1 c? / cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN * * part cINSERT f1 * * part cINSERT b2 part cEMPTY * part cESTD f2 cIN b2 f2 b2 c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * part cECTC f2 cIN b1 f2 b1 c? / cIN b0 * * * part cset_of_edge f1 f2 * part cESTD f2
+ |- ((!W. (((packing W) /\ ((W SUBSET ball_annulus) /\ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W)))))) ==> (?V. (contravening V)))) = ((?W. ((packing W) /\ ((W SUBSET ball_annulus) /\ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W))))))) ==> (?V. (contravening V))))
T c= ! c==> c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL b0 c? / ccontravening b1 c==> c? / c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL b0 c? / ccontravening b0
- (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))), ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) |- (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) /\ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c= * * * part cset_of_edge b0 f0 * part cECTC f0 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c/\ c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (V SUBSET ball_annulus) |- ((v IN V) ==> (((((set_of_edge v) V) (ECTC V)) = EMPTY) ==> ((packing V) ==> ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> cSUBSET f0 part cball_annulus c==> cIN f1 f0 c==> c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c==> cpacking f0 c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ pack_ineq_def_a, ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- (((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) /\ (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c? / ccontravening b0
+ (packing V) |- (((T /\ ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v)))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> cpacking f0 c= c==> c/\ cT c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- (((!P. (((ssreflect_eq v) P) = P)) ==> ((\P. (((ssreflect_eq v) P) = P)) P)) = ((\P. (((ssreflect_eq v) P) = P)) P))
T c= c==> ! c= cssreflect_eq f0 b0 b0 * / c= cssreflect_eq f0 b0 b0 f1 * / c= cssreflect_eq f0 b0 b0 f1
- |- ((?v. t) = t)
T c= c? / f0 f0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), (((((set_of_edge v) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) v)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (v IN V), (V SUBSET ball_annulus) |- ((((((set_of_edge v) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) v)) /\ ((surrounded_node (V , (ESTD V))) v))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> c\/ c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 f2 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c/\ c\/ c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 f2 csurrounded_node c, f1 * part cESTD f1 f2
+ (~ (u = v)), ((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))), (v IN V) |- (((v IN V) /\ (T /\ ((~ (v = u)) /\ ((real_le (distance (v , u))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))) /\ T)
T c==> c~ c= f0 f1 c==> creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cIN f1 f2 c/\ c/\ cIN f1 f2 c/\ cT c/\ c~ c= f1 f0 creal_le cdistance c, f1 f0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cT
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) |- ((((((BIJ f) W1) V) /\ ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))))) ==> (?V. (contravening V))) = T)
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= c==> c/\ cBIJ f1 f0 f2 c/\ cpacking f2 c/\ cSUBSET f2 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 ! c==> cIN b0 f2 c\/ c= * * * part cset_of_edge b0 f2 * part cESTD f2 part cEMPTY csurrounded_node c, f2 * part cESTD f2 b0 c? / ccontravening b0 cT
+ ((real_le (scriptL W0)) (scriptL W1)) |- ((((real_lt x) (scriptL W0)) /\ T) ==> ((real_lt x) (scriptL W1)))
T c==> creal_le cscriptL f0 cscriptL f1 c==> c/\ creal_lt f2 cscriptL f0 cT creal_lt f2 cscriptL f1
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))) |- ((((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1))) = T)
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c= c==> c/\ cpacking f1 cSUBSET f1 part cball_annulus creal_le cscriptL f1 cscriptL f0 cT
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (packing V), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus) |- ((!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))) /\ (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c/\ ! c==> cIN b0 f1 csurrounded_node c, f1 * part cESTD f1 b0 ! c==> cIN b0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (T = ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) = (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))))
T c= cT c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus), ((\x. (((surrounded_node (V , (ECTC V))) v) = x)) x) |- (((\x. (((surrounded_node (V , (ECTC V))) v) = x)) x) /\ (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c==> * / c= csurrounded_node c, f1 * part cECTC f1 f2 b0 f3 c/\ * / c= csurrounded_node c, f1 * part cECTC f1 f2 b0 f3 c\/ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (u IN V) |- ((u IN V) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ |- ((((surrounded_node (V , (ECTC V))) v) = ((surrounded_node (V , (ECTC V))) v)) = ((\x. (((surrounded_node (V , (ECTC V))) v) = x)) ((surrounded_node (V , (ECTC V))) v)))
T c= c= csurrounded_node c, f0 * part cECTC f0 f1 csurrounded_node c, f0 * part cECTC f0 f1 * / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 csurrounded_node c, f0 * part cECTC f0 f1
- |- ((!b. (((~ b) ==> F) ==> b)) ==> (!b. (((~ b) ==> F) ==> b)))
T c==> ! c==> c==> c~ b0 cF b0 ! c==> c==> c~ b0 cF b0
+ |- ((\q'. (((T /\ T) = p') ==> ((p' ==> (((real_le (scriptL W0)) (scriptL W1)) = q')) ==> (((T /\ T) ==> ((real_le (scriptL W0)) (scriptL W1))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cT cT f0 c==> c==> f0 c= creal_le cscriptL f1 cscriptL f2 b0 c= c==> c/\ cT cT creal_le cscriptL f1 cscriptL f2 c==> f0 b0 f3
+ |- ((\P. (((ssreflect_eq v) P) = P)) P)
T * / c= cssreflect_eq f0 b0 b0 f1
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (((BIJ f) W1) V) |- (((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))) /\ (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cBIJ f2 f0 f1 c/\ c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c? / ccontravening b0
+ (packing V) |- (((!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> cpacking f0 c= c==> ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c= * * * part cset_of_edge b0 f0 * part cECTC f0 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (~ (u = v)), (u IN V), (v IN V) |- ((((~ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) ==> (~ ((((set_of_edge v) V) (ESTD V)) = EMPTY))) ==> (((((set_of_edge v) V) (ESTD V)) = EMPTY) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))) = (((((set_of_edge v) V) (ESTD V)) = EMPTY) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))
T c==> c~ c= f0 f1 c==> cIN f0 f2 c==> cIN f1 f2 c= c==> c==> c~ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f1 c~ c= * * * part cset_of_edge f1 f2 * part cESTD f2 part cEMPTY c==> c= * * * part cset_of_edge f1 f2 * part cESTD f2 part cEMPTY creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f1 c==> c= * * * part cset_of_edge f1 f2 * part cESTD f2 part cEMPTY creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f1
+ (!x. ((x IN (ECTC V)) ==> (x IN (ESTD V)))) |- ((x IN (ECTC V)) ==> (x IN (ESTD V)))
T c==> ! c==> cIN b0 * part cECTC f0 cIN b0 * part cESTD f0 c==> cIN f1 * part cECTC f0 cIN f1 * part cESTD f0
- T, (packing V), (V SUBSET ball_annulus) |- (T /\ ((pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))) ==> (local_annulus_inequality V)))
T c==> cT c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ cT c==> c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
+ (!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))), (packing V), (V SUBSET ball_annulus) |- ((v IN V) ==> (((((set_of_edge v) V) (ECTC V)) = EMPTY) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> cIN f1 f0 c==> c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- ((((~ c) ==> (~ b)) ==> (b ==> c)) = T)
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c= c==> c==> c~ f0 c~ f1 c==> f1 f0 cT
+ |- ((!phi. (((((BIJ phi) W1) V) /\ ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))))) ==> (?V. (contravening V)))) = ((?phi. ((((BIJ phi) W1) V) /\ ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))))))) ==> (?V. (contravening V))))
T c= ! c==> c/\ cBIJ b0 f0 f1 c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b1 f0 c= cvector_norm b1 cvector_norm * b0 b1 ! c==> cIN b1 f1 c\/ c= * * * part cset_of_edge b1 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b1 c? / ccontravening b1 c==> c? / c/\ cBIJ b0 f0 f1 c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b1 f0 c= cvector_norm b1 cvector_norm * b0 b1 ! c==> cIN b1 f1 c\/ c= * * * part cset_of_edge b1 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b1 c? / ccontravening b0
+ (!x. ((x IN (ECTC V)) ==> (x IN (ESTD V)))) |- ((!x. ((x IN (ECTC V)) ==> (x IN (ESTD V)))) /\ ((((v INSERT (x INSERT EMPTY)) IN (ECTC V)) /\ (x IN V)) ==> (?x. (((v INSERT (x INSERT EMPTY)) IN (ESTD V)) /\ (x IN V)))))
T c==> ! c==> cIN b0 * part cECTC f0 cIN b0 * part cESTD f0 c/\ ! c==> cIN b0 * part cECTC f0 cIN b0 * part cESTD f0 c==> c/\ cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cECTC f0 cIN f2 f0 c? / c/\ cIN * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * part cESTD f0 cIN b0 f0
+ (packing V), ((((set_of_edge v) V) (ECTC V)) = EMPTY), (v IN V), (V SUBSET ball_annulus) |- ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> cpacking f0 c==> c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c==> cIN f1 f0 c==> cSUBSET f0 part cball_annulus c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))), ((~ c) ==> (~ b)) |- (((~ c) ==> (~ b)) /\ (b ==> c))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c==> c==> c~ f0 c~ f1 c/\ c==> c~ f0 c~ f1 c==> f1 f0
+ (!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))), (packing V), (V SUBSET ball_annulus) |- (((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!p'. (!q'. ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = F)) = p') ==> ((p' ==> ((F \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = F)) ==> (F \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = F)) = p') ==> ((p' ==> ((F \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = F)) ==> (F \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = F)) = p') ==> ((p' ==> ((F \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = F)) ==> (F \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cF b0 c==> c==> b0 c= c\/ cF c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cF c\/ cF c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cF b0 c==> c==> b0 c= c\/ cF c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cF c\/ cF c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3 * / ! c==> c= cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cF b0 c==> c==> b0 c= c\/ cF c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cF c\/ cF c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3
- |- (((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c= c==> c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) |- ((?phi. ((((BIJ phi) W1) V) /\ ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))))))) ==> (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> c? / c/\ cBIJ b0 f0 f1 c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b1 f0 c= cvector_norm b1 cvector_norm * b0 b1 ! c==> cIN b1 f1 c\/ c= * * * part cset_of_edge b1 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b1 c? / ccontravening b0
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- ((!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) ==> (!b. (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 ! ! c==> c==> c~ b1 c~ b0 c==> b0 b1
- |- (!x. (((\x. (((surrounded_node (V , (ECTC V))) v) = x)) x) ==> (?x. (((surrounded_node (V , (ECTC V))) v) = x))))
T c==> * / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 f2 c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0
- (packing V) |- ((T /\ (pack_ineq_def_a /\ ((V SUBSET ball_annulus) /\ (~ (local_annulus_inequality V))))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))
T c==> cpacking f0 c==> c/\ cT c/\ cpack_ineq_def_a c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ |- (((NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) * (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))
T c= c* cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (packing V), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus) |- (T /\ (T /\ (((real_gt (scriptL V)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) /\ ((!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))) /\ (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c/\ cT c/\ cT c/\ creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c/\ c\/ c= cCARD f1 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f1 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ ! c==> cIN b0 f1 csurrounded_node c, f1 * part cESTD f1 b0 ! c==> cIN b0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((?x. (((surrounded_node (V , (ECTC V))) v) = x)) ==> (?x. (((surrounded_node (V , (ECTC V))) v) = x)))
T c==> c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((surrounded_node (V , (ECTC V))) v) = x) |- ((x \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c= csurrounded_node c, f0 * part cECTC f0 f1 f2 c= c\/ f2 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c\/ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- pack_ineq_def_a, (packing W1), ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))), (W1 SUBSET ball_annulus) |- ((W1 SUBSET ball_annulus) /\ ((!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f0 part cball_annulus c/\ cSUBSET f0 part cball_annulus c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c? / ccontravening b0
- (packing W1) |- (T ==> ((W1 SUBSET ball_annulus) ==> (?W. (?phi. ((((BIJ phi) W1) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w))))))))))))
T c==> cpacking f0 c==> cT c==> cSUBSET f0 part cball_annulus c? / c? / c/\ cBIJ b1 f0 b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ ! c==> cIN b2 f0 c= cvector_norm b2 cvector_norm * b1 b2 ! c==> cIN b2 b0 c\/ c= * * * part cset_of_edge b2 b0 * part cESTD b0 part cEMPTY csurrounded_node c, b0 * part cESTD b0 b2
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (packing V), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus) |- (T /\ (T /\ (T /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1)))) /\ ((((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) /\ ((!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))) /\ (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c/\ cT c/\ cT c/\ cT c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ c\/ c= cCARD f1 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f1 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ ! c==> cIN b0 f1 csurrounded_node c, f1 * part cESTD f1 b0 ! c==> cIN b0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- ((((T /\ (W0 SUBSET ball_annulus)) ==> ((real_le (scriptL W0)) (scriptL W1))) ==> ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) = ((((packing W0) /\ (W0 SUBSET ball_annulus)) ==> ((real_le (scriptL W0)) (scriptL W1))) ==> ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= c==> c==> c/\ cT cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ T, (packing V) |- (T /\ (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cT c==> cpacking f0 c/\ cT c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ ((real_le (scriptL W0)) (scriptL W1)) |- (((real_lt x) (scriptL W0)) ==> (T ==> ((real_lt x) (scriptL W1))))
T c==> creal_le cscriptL f0 cscriptL f1 c==> creal_lt f2 cscriptL f0 c==> cT creal_lt f2 cscriptL f1
- |- (((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) ==> ((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ |- (((((v INSERT (x INSERT EMPTY)) IN (ECTC V)) /\ (x IN V)) ==> (?x. (((v INSERT (x INSERT EMPTY)) IN (ESTD V)) /\ (x IN V)))) = ((((v INSERT (x INSERT EMPTY)) IN (ECTC V)) /\ (x IN V)) ==> (?x. (x IN (GSPEC (\v'. (?y. (((SETSPEC v') (((v INSERT (y INSERT EMPTY)) IN (ESTD V)) /\ (y IN V))) y))))))))
T c= c==> c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cECTC f2 cIN f1 f2 c? / c/\ cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cESTD f2 cIN b0 f2 c==> c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cECTC f2 cIN f1 f2 c? / cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * part cESTD f2 cIN b2 f2 b2
+ |- ((\V. (((packing V) /\ (V SUBSET ball_annulus)) ==> (?W. (?phi. ((((BIJ phi) V) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN V) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w)))))))))))) V)
T * / c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus c? / c? / c/\ cBIJ b2 b0 b1 c/\ cpacking b1 c/\ cSUBSET b1 part cball_annulus c/\ ! c==> cIN b3 b0 c= cvector_norm b3 cvector_norm * b2 b3 ! c==> cIN b3 b1 c\/ c= * * * part cset_of_edge b3 b1 * part cESTD b1 part cEMPTY csurrounded_node c, b1 * part cESTD b1 b3 f0
+ |- (((!q'. ((((T /\ T) ==> ((real_le (scriptL W0)) (scriptL W1))) = p') ==> ((p' ==> (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = q')) ==> ((((T /\ T) ==> ((real_le (scriptL W0)) (scriptL W1))) ==> ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) = (p' ==> q'))))) ==> ((\q'. ((((T /\ T) ==> ((real_le (scriptL W0)) (scriptL W1))) = p') ==> ((p' ==> (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = q')) ==> ((((T /\ T) ==> ((real_le (scriptL W0)) (scriptL W1))) ==> ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) = (p' ==> q'))))) q')) = ((\q'. ((((T /\ T) ==> ((real_le (scriptL W0)) (scriptL W1))) = p') ==> ((p' ==> (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = q')) ==> ((((T /\ T) ==> ((real_le (scriptL W0)) (scriptL W1))) ==> ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c==> c/\ cT cT creal_le cscriptL f0 cscriptL f1 f2 c==> c==> f2 c= creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 b0 c= c==> c==> c/\ cT cT creal_le cscriptL f0 cscriptL f1 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> f2 b0 * / c==> c= c==> c/\ cT cT creal_le cscriptL f0 cscriptL f1 f2 c==> c==> f2 c= creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 b0 c= c==> c==> c/\ cT cT creal_le cscriptL f0 cscriptL f1 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> f2 b0 f3 * / c==> c= c==> c/\ cT cT creal_le cscriptL f0 cscriptL f1 f2 c==> c==> f2 c= creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 b0 c= c==> c==> c/\ cT cT creal_le cscriptL f0 cscriptL f1 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> f2 b0 f3
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V) |- ((((V SUBSET ball_annulus) ==> (((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cpacking f0 c= c==> c==> cSUBSET f0 part cball_annulus c==> c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) |- (((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) /\ T) = ((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) /\ ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= c/\ c? / c/\ cIN b0 f1 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f1 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 cT c/\ c? / c/\ cIN b0 f1 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f1 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- (((T /\ T) ==> ((real_le (scriptL W0)) (scriptL W1))) = (T ==> ((real_le (scriptL W0)) (scriptL W1))))
T c= c==> c/\ cT cT creal_le cscriptL f0 cscriptL f1 c==> cT creal_le cscriptL f0 cscriptL f1
- (packing V), (V SUBSET ball_annulus) |- ((pack_ineq_def_a /\ (T /\ (~ (local_annulus_inequality V)))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> c/\ cpack_ineq_def_a c/\ cT c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ ((scriptL V) = (scriptL W1)) |- (((real_lt (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) (scriptL W1)) = ((real_lt (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) (scriptL V)))
T c==> c= cscriptL f0 cscriptL f1 c= creal_lt creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cscriptL f1 creal_lt creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cscriptL f0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((((set_of_edge v) V) (ESTD V)) = EMPTY), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus) |- ((!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c= * * * part cset_of_edge f1 f2 * part cESTD f2 part cEMPTY c==> c= cscriptL f2 cscriptL f0 c==> cIN f1 f2 c==> cSUBSET f2 part cball_annulus c==> ! c==> c/\ cSUBSET f2 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f2 c/\ cIN b0 f2 c= * * * part cset_of_edge b0 f2 * part cECTC f2 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus), ((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) |- ((!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> c/\ cSUBSET f1 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f1 c/\ cIN b0 f1 c~ csurrounded_node c, f1 * part cECTC f1 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c==> cssreflect_eq f3 c~ csurrounded_node c, f1 * part cECTC f1 f2 c/\ ! c==> c/\ cSUBSET f1 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f1 c/\ cIN b0 f1 c~ csurrounded_node c, f1 * part cECTC f1 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (((BIJ f) W1) V) |- (?V. (contravening V))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cBIJ f2 f0 f1 c? / ccontravening b0
- (packing V), (V SUBSET ball_annulus) |- ((T /\ (pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))))) ==> (local_annulus_inequality V))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> c/\ cT c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
- (packing V) |- (((pack_ineq_def_a ==> (((V SUBSET ball_annulus) /\ (~ (local_annulus_inequality V))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) ==> ((pack_ineq_def_a /\ ((V SUBSET ball_annulus) /\ (~ (local_annulus_inequality V)))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) = ((pack_ineq_def_a /\ ((V SUBSET ball_annulus) /\ (~ (local_annulus_inequality V)))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cpacking f0 c= c==> c==> cpack_ineq_def_a c==> c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> c/\ cpack_ineq_def_a c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> c/\ cpack_ineq_def_a c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- |- ((((packing W) /\ (W SUBSET ball_annulus)) = p') ==> ((p' ==> (((real_le (scriptL W)) (scriptL W1)) = q')) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (p' ==> q'))))
T c==> c= c/\ cpacking f0 cSUBSET f0 part cball_annulus f1 c==> c==> f1 c= creal_le cscriptL f0 cscriptL f2 f3 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f2 c==> f1 f3
- T |- (T = T)
T c==> cT c= cT cT
+ (!x. (((real_lt x) (scriptL W0)) ==> ((real_lt x) (scriptL W1)))), ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- ((real_lt (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) (scriptL W1))
T c==> ! c==> creal_lt b0 cscriptL f0 creal_lt b0 cscriptL f1 c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_lt creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cscriptL f1
+ (v IN V1), (V1 SUBSET ball_annulus) |- ((v IN V1) /\ ((~ ((surrounded_node (V1 , (ECTC V1))) v)) ==> ((packing V1) ==> ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> cIN f0 f1 c==> cSUBSET f1 part cball_annulus c/\ cIN f0 f1 c==> c~ csurrounded_node c, f1 * part cECTC f1 f0 c==> cpacking f1 c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))) |- (!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0
- ((\x. (((surrounded_node (V , (ECTC V))) v) = x)) x) |- (((((surrounded_node (V , (ECTC V))) v) = x) ==> (?x. (((surrounded_node (V , (ECTC V))) v) = x))) = (?x. (((surrounded_node (V , (ECTC V))) v) = x)))
T c==> * / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 f2 c= c==> c= csurrounded_node c, f0 * part cECTC f0 f1 f2 c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0
+ |- ((\x. (!y. ((~ ((real_le x) y)) = ((real_lt y) x)))) x)
T * / ! c= c~ creal_le b0 b1 creal_lt b1 b0 f0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (packing V), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus) |- ((packing V) /\ ((V SUBSET ball_annulus) /\ (((real_gt (scriptL V)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) /\ ((!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))) /\ (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus c/\ creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c/\ c\/ c= cCARD f1 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f1 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ ! c==> cIN b0 f1 csurrounded_node c, f1 * part cESTD f1 b0 ! c==> cIN b0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- (((!p'. (!q'. ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) = p') ==> ((p' ==> ((T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) ==> (T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) = p') ==> ((p' ==> ((T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) ==> (T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) = p') ==> ((p' ==> ((T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) ==> (T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT b0 c==> c==> b0 c= c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT b0 c==> c==> b0 c= c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3 * / ! c==> c= cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT b0 c==> c==> b0 c= c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (packing V), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus) |- (contravening V)
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus ccontravening f1
+ ((((set_of_edge v) V) (ESTD V)) = EMPTY) |- ((((set_of_edge v) V) (ECTC V)) = EMPTY)
T c==> c= * * * part cset_of_edge f0 f1 * part cESTD f1 part cEMPTY c= * * * part cset_of_edge f0 f1 * part cECTC f1 part cEMPTY
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- ((\b. (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))) b)
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 * / ! c==> c==> c~ b1 c~ b0 c==> b0 b1 f0
+ (packing V) |- ((T /\ ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> cpacking f0 c==> c/\ cT c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (!x. (P x))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF ! * f0 b0
+ ((((set_of_edge v) V) (ESTD V)) = EMPTY), (v IN V) |- ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = T)
T c==> c= * * * part cset_of_edge f0 f1 * part cESTD f1 part cEMPTY c==> cIN f0 f1 c= c==> c/\ cIN f2 f1 c~ c= f2 f0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f2 f0 cT
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus), ((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) |- (((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) /\ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c==> cssreflect_eq f3 c~ csurrounded_node c, f1 * part cECTC f1 f2 c/\ cssreflect_eq f3 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (((surrounded_node (V , (ECTC V))) v) = x) |- ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = x)) ==> (x \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (x \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c= csurrounded_node c, f0 * part cECTC f0 f1 f2 c= c==> cssreflect_eq f3 c= csurrounded_node c, f0 * part cECTC f0 f1 f2 c\/ f2 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c\/ f2 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0))))) * (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) = (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))
T c= c* cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 c_0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- (((A /\ B) ==> C) ==> (A ==> (B ==> C)))
T c==> c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (packing V), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus) |- (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = T)
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c= c==> cIN f2 f1 csurrounded_node c, f1 * part cESTD f1 f2 cT
+ |- ((\p'. (!q'. ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) = p') ==> ((p' ==> ((T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) ==> (T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT b0 c==> c==> b0 c= c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((x IN (GSPEC (\v'. (?y. (((SETSPEC v') (((v INSERT (y INSERT EMPTY)) IN (ECTC V)) /\ (y IN V))) y))))) ==> (?x. (x IN (GSPEC (\GEN%PVAR%5439. (?w. (((SETSPEC GEN%PVAR%5439) (((v INSERT (w INSERT EMPTY)) IN (ESTD V)) /\ (w IN V))) w)))))))
T c==> cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * part cECTC f2 cIN b1 f2 b1 c? / cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN * * part cINSERT f1 * * part cINSERT b2 part cEMPTY * part cESTD f2 cIN b2 f2 b2
+ |- (T = ((~ P) = (P = F)))
T c= cT c= c~ f0 c= f0 cF
+ |- ((((real_le (scriptL W0)) (scriptL W1)) = p') ==> ((p' ==> (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = q')) ==> ((((real_le (scriptL W0)) (scriptL W1)) ==> ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) = (p' ==> q'))))
T c==> c= creal_le cscriptL f0 cscriptL f1 f2 c==> c==> f2 c= creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 f3 c= c==> creal_le cscriptL f0 cscriptL f1 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> f2 f3
+ (v IN V), (V SUBSET ball_annulus) |- ((~ ((surrounded_node (V , (ECTC V))) v)) ==> ((packing V) ==> ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> cIN f0 f1 c==> cSUBSET f1 part cball_annulus c==> c~ csurrounded_node c, f1 * part cECTC f1 f0 c==> cpacking f1 c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))) |- ((\w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))) w)
T c==> ! c==> cIN b0 f0 c\/ c= * * * part cset_of_edge b0 f0 * part cESTD f0 part cEMPTY csurrounded_node c, f0 * part cESTD f0 b0 * / c==> cIN b0 f0 c\/ c= * * * part cset_of_edge b0 f0 * part cESTD f0 part cEMPTY csurrounded_node c, f0 * part cESTD f0 b0 f1
- |- (((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> (?x. (x IN (((set_of_edge v) V) (ESTD V))))) = ((~ ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) ==> (?x. (x IN (((set_of_edge v) V) (ESTD V))))))
T c= c==> creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c? / cIN b0 * * * part cset_of_edge f1 f2 * part cESTD f2 c==> c~ creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f1 c? / cIN b0 * * * part cset_of_edge f1 f2 * part cESTD f2
+ |- (((!b. ((b ==> F) = (~ b))) ==> ((\b. ((b ==> F) = (~ b))) b)) = ((\b. ((b ==> F) = (~ b))) b))
T c= c==> ! c= c==> b0 cF c~ b0 * / c= c==> b0 cF c~ b0 f0 * / c= c==> b0 cF c~ b0 f0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus) |- ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) ==> (T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = F)) ==> (F \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c/\ c==> cssreflect_eq f3 c= csurrounded_node c, f1 * part cECTC f1 f2 cT c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cssreflect_eq f3 c= csurrounded_node c, f1 * part cECTC f1 f2 cF c\/ cF c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ T, (packing V) |- (T /\ (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cT c==> cpacking f0 c/\ cT c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- ((!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) /\ (((((set_of_edge v) V) (ESTD V)) = EMPTY) ==> ((((set_of_edge v) V) (ECTC V)) = EMPTY)))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c/\ ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c==> c= * * * part cset_of_edge f0 f1 * part cESTD f1 part cEMPTY c= * * * part cset_of_edge f0 f1 * part cECTC f1 part cEMPTY
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (packing V), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus) |- (!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus ! c==> cIN b0 f1 csurrounded_node c, f1 * part cESTD f1 b0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (((BIJ f) W1) V) |- (?V. (contravening V))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cBIJ f2 f0 f1 c? / ccontravening b0
+ |- ((\w. (((v INSERT (w INSERT EMPTY)) IN (ESTD V)) = ((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ ((real_le (distance (v , w))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))) w)
T * / c= cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cESTD f1 c/\ cIN f0 f1 c/\ cIN b0 f1 c/\ c~ c= f0 b0 creal_le cdistance c, f0 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 f2
+ |- (T = ((~ ((real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) = (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) = (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))))
T c= cT c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
- |- ((v IN V) ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> cIN f0 f1 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing W1), ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))), (W1 SUBSET ball_annulus) |- (?V. (contravening V))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f0 c==> c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f0 part cball_annulus c? / ccontravening b0
+ (!x. ((x IN (ECTC V)) ==> (x IN (ESTD V)))), ((v INSERT (x INSERT EMPTY)) IN (ECTC V)) |- ((v INSERT (x INSERT EMPTY)) IN (ESTD V))
T c==> ! c==> cIN b0 * part cECTC f0 cIN b0 * part cESTD f0 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cECTC f0 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cESTD f0
+ (V1 SUBSET ball_annulus) |- ((V1 SUBSET ball_annulus) /\ ((v IN V1) ==> ((~ ((surrounded_node (V1 , (ECTC V1))) v)) ==> ((packing V1) ==> ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))
T c==> cSUBSET f0 part cball_annulus c/\ cSUBSET f0 part cball_annulus c==> cIN f1 f0 c==> c~ csurrounded_node c, f0 * part cECTC f0 f1 c==> cpacking f0 c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!x. (((real_gt x) y) = ((real_lt y) x))) ==> ((\x. (((real_gt x) y) = ((real_lt y) x))) x)) = ((\x. (((real_gt x) y) = ((real_lt y) x))) x))
T c= c==> ! c= creal_gt b0 f0 creal_lt f0 b0 * / c= creal_gt b0 f0 creal_lt f0 b0 f1 * / c= creal_gt b0 f0 creal_lt f0 b0 f1
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (packing V), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus) |- (T /\ ((V SUBSET ball_annulus) /\ (((real_gt (scriptL V)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) /\ ((!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))) /\ (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c/\ cT c/\ cSUBSET f1 part cball_annulus c/\ creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c/\ c\/ c= cCARD f1 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f1 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ ! c==> cIN b0 f1 csurrounded_node c, f1 * part cESTD f1 b0 ! c==> cIN b0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (packing V) |- ((((V SUBSET ball_annulus) ==> ((pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))) ==> (local_annulus_inequality V))) ==> (((V SUBSET ball_annulus) /\ (pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))))) ==> (local_annulus_inequality V))) = (((V SUBSET ball_annulus) /\ (pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))))) ==> (local_annulus_inequality V)))
T c==> cpacking f0 c= c==> c==> cSUBSET f0 part cball_annulus c==> c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0 c==> c/\ cSUBSET f0 part cball_annulus c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0 c==> c/\ cSUBSET f0 part cball_annulus c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
+ (((real_gt x) y) = ((real_lt y) x)) |- (((real_lt y) x) = ((real_gt x) y))
T c==> c= creal_gt f0 f1 creal_lt f1 f0 c= creal_lt f1 f0 creal_gt f0 f1
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (((BIJ f) W1) V) |- (((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))) ==> (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cBIJ f2 f0 f1 c==> c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c? / ccontravening b0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((((set_of_edge v) V) (ESTD V)) = EMPTY), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (v IN V), (V SUBSET ball_annulus) |- F
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus cF
- |- (T = (((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) ==> ((real_le (distance (u , v))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))
T c= cT c==> creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_le cdistance c, f0 f1 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ (V SUBSET ball_annulus) |- ((v IN V) ==> ((~ ((surrounded_node (V , (ECTC V))) v)) ==> ((packing V) ==> ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> cSUBSET f0 part cball_annulus c==> cIN f1 f0 c==> c~ csurrounded_node c, f0 * part cECTC f0 f1 c==> cpacking f0 c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (packing V), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus) |- ((((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) /\ ((!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))) /\ (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c/\ c\/ c= cCARD f1 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f1 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ ! c==> cIN b0 f1 csurrounded_node c, f1 * part cESTD f1 b0 ! c==> cIN b0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (((BIJ f) W1) V) |- ((V SUBSET ball_annulus) ==> (((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cBIJ f2 f0 f1 c==> cSUBSET f1 part cball_annulus c==> c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c? / ccontravening b0
- T, pack_ineq_def_a, (packing V), (V SUBSET ball_annulus) |- (T /\ ((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) ==> (local_annulus_inequality V)))
T c==> cT c==> cpack_ineq_def_a c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ cT c==> c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
+ (~ (u = v)), ((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))), (u IN V), (v IN V) |- (u IN (GSPEC (\v'. (?y. (((SETSPEC v') (((v INSERT (y INSERT EMPTY)) IN (ESTD V)) /\ (y IN V))) y)))))
T c==> c~ c= f0 f1 c==> creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cIN f0 f2 c==> cIN f1 f2 cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN * * part cINSERT f1 * * part cINSERT b1 part cEMPTY * part cESTD f2 cIN b1 f2 b1
+ |- ((((((real_lt x) y) /\ ((real_le y) z)) ==> ((real_lt x) z)) ==> (((real_lt x) y) ==> (((real_le y) z) ==> ((real_lt x) z)))) = (((real_lt x) y) ==> (((real_le y) z) ==> ((real_lt x) z))))
T c= c==> c==> c/\ creal_lt f0 f1 creal_le f1 f2 creal_lt f0 f2 c==> creal_lt f0 f1 c==> creal_le f1 f2 creal_lt f0 f2 c==> creal_lt f0 f1 c==> creal_le f1 f2 creal_lt f0 f2
+ |- (((((real_le (scriptL W0)) (scriptL W1)) ==> (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) ==> ((((T /\ T) ==> ((real_le (scriptL W0)) (scriptL W1))) ==> ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) = (((real_le (scriptL W0)) (scriptL W1)) ==> ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) = ((((T /\ T) ==> ((real_le (scriptL W0)) (scriptL W1))) ==> ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) = (((real_le (scriptL W0)) (scriptL W1)) ==> ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))
T c= c==> c==> creal_le cscriptL f0 cscriptL f1 c= creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= c==> c==> c/\ cT cT creal_le cscriptL f0 cscriptL f1 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> creal_le cscriptL f0 cscriptL f1 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= c==> c==> c/\ cT cT creal_le cscriptL f0 cscriptL f1 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> creal_le cscriptL f0 cscriptL f1 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) ==> (T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((ssreflect_eq h) ((surrounded_node (V , (ECTC V))) v)) ==> T))
T c= c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cssreflect_eq f0 csurrounded_node c, f1 * part cECTC f1 f2 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ pack_ineq_def_a, (packing V), (V SUBSET ball_annulus) |- ((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) ==> (local_annulus_inequality V))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ pack_ineq_def_a, ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- ((?W. ((packing W) /\ ((W SUBSET ball_annulus) /\ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W))))))) ==> (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> c? / c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL b0 c? / ccontravening b0
+ |- (T = (((surrounded_node (V , (ESTD V))) v) ==> ((surrounded_node (V , (ESTD V))) v)))
T c= cT c==> csurrounded_node c, f0 * part cESTD f0 f1 csurrounded_node c, f0 * part cESTD f0 f1
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus) |- ((((\x. (((surrounded_node (V , (ECTC V))) v) = x)) x) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = T)
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c= c==> * / c= csurrounded_node c, f1 * part cECTC f1 f2 b0 f3 c\/ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
+ pack_ineq_def_a, ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- (((packing W1) /\ ((W1 SUBSET ball_annulus) /\ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))))) ==> (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c? / ccontravening b0
+ (V SUBSET ball_annulus) |- ((V SUBSET ball_annulus) /\ ((packing V) ==> (?W. (?phi. ((((BIJ phi) V) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN V) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w))))))))))))
T c==> cSUBSET f0 part cball_annulus c/\ cSUBSET f0 part cball_annulus c==> cpacking f0 c? / c? / c/\ cBIJ b1 f0 b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ ! c==> cIN b2 f0 c= cvector_norm b2 cvector_norm * b1 b2 ! c==> cIN b2 b0 c\/ c= * * * part cset_of_edge b2 b0 * part cESTD b0 part cEMPTY csurrounded_node c, b0 * part cESTD b0 b2
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ |- ((BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) = ((BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) + (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))
T c= cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c+ cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
- |- (((!p'. (!q'. (((v IN V) = p') ==> ((p' ==> (((surrounded_node (V , (ESTD V))) v) = q')) ==> (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = (p' ==> q')))))) ==> ((\p'. (!q'. (((v IN V) = p') ==> ((p' ==> (((surrounded_node (V , (ESTD V))) v) = q')) ==> (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((v IN V) = p') ==> ((p' ==> (((surrounded_node (V , (ESTD V))) v) = q')) ==> (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= csurrounded_node c, f1 * part cESTD f1 f0 b1 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> b0 b1 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= csurrounded_node c, f1 * part cESTD f1 f0 b1 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> b0 b1 f2 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= csurrounded_node c, f1 * part cESTD f1 f0 b1 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> b0 b1 f2
+ ((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) |- (~ ((surrounded_node (V , (ECTC V))) v))
T c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c~ csurrounded_node c, f1 * part cECTC f1 f2
- ((surrounded_node (V , (ESTD V))) v) |- (((surrounded_node (V , (ESTD V))) v) /\ ((surrounded_node (V , (ESTD V))) v))
T c==> csurrounded_node c, f0 * part cESTD f0 f1 c/\ csurrounded_node c, f0 * part cESTD f0 f1 csurrounded_node c, f0 * part cESTD f0 f1
- (((BIJ f) W1) V) |- (((T ==> ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) ==> ((scriptL V) = (scriptL W1)))) ==> ((T /\ (!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v)))))) ==> ((scriptL V) = (scriptL W1)))) = ((T /\ (!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v)))))) ==> ((scriptL V) = (scriptL W1))))
T c==> cBIJ f0 f1 f2 c= c==> c==> cT c==> ! c==> cIN b0 f1 c= cvector_norm b0 cvector_norm * f0 b0 c= cscriptL f2 cscriptL f1 c==> c/\ cT ! c==> cIN b0 f1 c= cvector_norm b0 cvector_norm * f0 b0 c= cscriptL f2 cscriptL f1 c==> c/\ cT ! c==> cIN b0 f1 c= cvector_norm b0 cvector_norm * f0 b0 c= cscriptL f2 cscriptL f1
- |- ((((\x. (((surrounded_node (V , (ECTC V))) v) = x)) x) ==> (?x. (((surrounded_node (V , (ECTC V))) v) = x))) = T)
T c= c==> * / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 f2 c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 cT
+ pack_ineq_def_a, (packing V), (V SUBSET ball_annulus) |- ((((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) ==> (local_annulus_inequality V)) ==> F) = F)
T c==> cpack_ineq_def_a c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c= c==> c==> c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0 cF cF
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing W1), (W1 SUBSET ball_annulus) |- (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) ==> (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c? / ccontravening b0
+ |- (((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) ==> (T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = F)) ==> (F \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (!x. (((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = x)) ==> (x \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c/\ c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cF c\/ cF c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 b0 c\/ b0 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ ((v INSERT (x INSERT EMPTY)) IN (ESTD V)), (x IN V) |- ((x IN V) /\ (?x. (((v INSERT (x INSERT EMPTY)) IN (ESTD V)) /\ (x IN V))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c==> cIN f1 f2 c/\ cIN f1 f2 c? / c/\ cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cESTD f2 cIN b0 f2
+ (packing V1) |- (((((V1 SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) /\ ((v IN V1) /\ (~ ((surrounded_node (V1 , (ECTC V1))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((V1 SUBSET ball_annulus) ==> (((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) /\ ((v IN V1) /\ (~ ((surrounded_node (V1 , (ECTC V1))) v)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((V1 SUBSET ball_annulus) ==> (((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V1)))) /\ ((v IN V1) /\ (~ ((surrounded_node (V1 , (ECTC V1))) v)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> cpacking f0 c= c==> c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 part cball_annulus c==> c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cSUBSET f0 part cball_annulus c==> c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))), ((~ c) ==> (~ b)) |- ((!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) /\ (b ==> c))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c==> c==> c~ f0 c~ f1 c/\ ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c==> f1 f0
+ |- ((!W. ((?phi. ((((BIJ phi) W1) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w))))))))) ==> (?V. (contravening V)))) = ((?W. (?phi. ((((BIJ phi) W1) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w)))))))))) ==> (?V. (contravening V))))
T c= ! c==> c? / c/\ cBIJ b1 f0 b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ ! c==> cIN b2 f0 c= cvector_norm b2 cvector_norm * b1 b2 ! c==> cIN b2 b0 c\/ c= * * * part cset_of_edge b2 b0 * part cESTD b0 part cEMPTY csurrounded_node c, b0 * part cESTD b0 b2 c? / ccontravening b1 c==> c? / c? / c/\ cBIJ b1 f0 b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ ! c==> cIN b2 f0 c= cvector_norm b2 cvector_norm * b1 b2 ! c==> cIN b2 b0 c\/ c= * * * part cset_of_edge b2 b0 * part cESTD b0 part cEMPTY csurrounded_node c, b0 * part cESTD b0 b2 c? / ccontravening b0
- pack_ineq_def_a, (packing V) |- ((((V SUBSET ball_annulus) ==> ((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) ==> (((V SUBSET ball_annulus) /\ (~ (local_annulus_inequality V))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) = (((V SUBSET ball_annulus) /\ (~ (local_annulus_inequality V))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cpack_ineq_def_a c==> cpacking f0 c= c==> c==> cSUBSET f0 part cball_annulus c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus), ((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) |- ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v)))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c==> cssreflect_eq f3 c~ csurrounded_node c, f1 * part cECTC f1 f2 c/\ cSUBSET f1 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c/\ cIN f2 f1 c~ csurrounded_node c, f1 * part cECTC f1 f2
- |- (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)))
T c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0
- (((surrounded_node (V , (ECTC V))) v) = x) |- ((\x. (((surrounded_node (V , (ECTC V))) v) = x)) x)
T c==> c= csurrounded_node c, f0 * part cECTC f0 f1 f2 * / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 f2
- (packing V), (V SUBSET ball_annulus) |- (pack_ineq_def_a ==> ((T /\ (~ (local_annulus_inequality V))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> cpack_ineq_def_a c==> c/\ cT c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ ((v INSERT (x INSERT EMPTY)) IN (ESTD V)) |- (((v INSERT (x INSERT EMPTY)) IN (ESTD V)) = T)
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 cT
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), (((((set_of_edge v) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) v)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (v IN V), (V SUBSET ball_annulus) |- ((surrounded_node (V , (ESTD V))) v)
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> c\/ c= * * * part cset_of_edge f2 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 f2 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus csurrounded_node c, f1 * part cESTD f1 f2
+ ((v INSERT (x INSERT EMPTY)) IN (ESTD V)), (x IN V) |- ((\x. (((v INSERT (x INSERT EMPTY)) IN (ESTD V)) /\ (x IN V))) x)
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c==> cIN f1 f2 * / c/\ cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cESTD f2 cIN b0 f2 f1
+ |- (((~ ((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))) \/ ((real_le (distance (u , v))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) = (((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) ==> ((real_le (distance (u , v))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))
T c= c\/ c~ creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_le cdistance c, f0 f1 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_le cdistance c, f0 f1 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((~ P) = (P = F))
T c= c~ f0 c= f0 cF
+ (packing V), (V SUBSET ball_annulus) |- ((V SUBSET ball_annulus) /\ (((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ cSUBSET f0 part cball_annulus c==> c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
- (packing V), (V SUBSET ball_annulus) |- (T ==> ((pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))) ==> (local_annulus_inequality V)))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> cT c==> c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
- pack_ineq_def_a, (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))), (packing V), (V SUBSET ball_annulus) |- (local_annulus_inequality V)
T c==> cpack_ineq_def_a c==> c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus clocal_annulus_inequality f0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((scriptL V) = (scriptL W1)), (v IN V), (V SUBSET ball_annulus), ((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) |- ((!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c= cscriptL f1 cscriptL f0 c==> cIN f2 f1 c==> cSUBSET f1 part cball_annulus c==> cssreflect_eq f3 c~ csurrounded_node c, f1 * part cECTC f1 f2 c==> ! c==> c/\ cSUBSET f1 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f1 c/\ cIN b0 f1 c~ csurrounded_node c, f1 * part cECTC f1 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\q'. ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) = p') ==> ((p' ==> ((T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> ((((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = T)) ==> (T \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT f3 c==> c==> f3 c= c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> cssreflect_eq f0 c= csurrounded_node c, f1 * part cECTC f1 f2 cT c\/ cT c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f4
- (packing V), (V SUBSET ball_annulus) |- (((T ==> ((pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))) ==> (local_annulus_inequality V))) ==> ((T /\ (pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))))) ==> (local_annulus_inequality V))) = ((T /\ (pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))))) ==> (local_annulus_inequality V)))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c= c==> c==> cT c==> c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0 c==> c/\ cT c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0 c==> c/\ cT c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus), (((BIJ f) W1) V) |- ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) ==> ((!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c==> cBIJ f2 f0 f1 c==> ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c? / ccontravening b0
+ (packing V) |- (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cpacking f0 ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c~ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ pack_ineq_def_a, ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))), ((packing W1) /\ ((W1 SUBSET ball_annulus) /\ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))))) |- (((packing W1) /\ ((W1 SUBSET ball_annulus) /\ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))))) /\ (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c/\ c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c? / ccontravening b0
+ ((scriptL V) = (scriptL W1)) |- ((T /\ (T /\ (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1)))) /\ ((((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) /\ ((!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))) /\ (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))))) = (T /\ (T /\ (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) /\ ((!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))) /\ (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))))))
T c==> c= cscriptL f0 cscriptL f1 c= c/\ cT c/\ cT c/\ creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c/\ c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ ! c==> cIN b0 f0 csurrounded_node c, f0 * part cESTD f0 b0 ! c==> cIN b0 f0 c\/ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ cT c/\ cT c/\ creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ ! c==> cIN b0 f0 csurrounded_node c, f0 * part cESTD f0 b0 ! c==> cIN b0 f0 c\/ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_le (scriptL W0)) (scriptL W1)) ==> (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> creal_le cscriptL f0 cscriptL f1 c= creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- ((((v INSERT (x INSERT EMPTY)) IN (ESTD V)) /\ (x IN V)) = ((\x. (((v INSERT (x INSERT EMPTY)) IN (ESTD V)) /\ (x IN V))) x))
T c= c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 cIN f1 f2 * / c/\ cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cESTD f2 cIN b0 f2 f1
+ pack_ineq_def_a, (V1 SUBSET ball_annulus) |- ((V1 SUBSET ball_annulus) /\ ((packing V1) ==> ((?v. ((v IN V1) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V1) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) ==> (local_annulus_inequality V1))))
T c==> cpack_ineq_def_a c==> cSUBSET f0 part cball_annulus c/\ cSUBSET f0 part cball_annulus c==> cpacking f0 c==> c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((((BIJ f) W1) V) /\ ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) |- (((((BIJ f) W1) V) /\ ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))))) /\ (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c/\ cBIJ f1 f0 f2 c/\ cpacking f2 c/\ cSUBSET f2 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 ! c==> cIN b0 f2 c\/ c= * * * part cset_of_edge b0 f2 * part cESTD f2 part cEMPTY csurrounded_node c, f2 * part cESTD f2 b0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ c/\ cBIJ f1 f0 f2 c/\ cpacking f2 c/\ cSUBSET f2 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 ! c==> cIN b0 f2 c\/ c= * * * part cset_of_edge b0 f2 * part cESTD f2 part cEMPTY csurrounded_node c, f2 * part cESTD f2 b0 c? / ccontravening b0
+ |- ((\p'. (!q'. ((((T /\ T) ==> ((real_le (scriptL W0)) (scriptL W1))) = p') ==> ((p' ==> (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = q')) ==> ((((T /\ T) ==> ((real_le (scriptL W0)) (scriptL W1))) ==> ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c/\ cT cT creal_le cscriptL f0 cscriptL f1 b0 c==> c==> b0 c= creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 b1 c= c==> c==> c/\ cT cT creal_le cscriptL f0 cscriptL f1 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> b0 b1 f2
+ ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- ((W0 SUBSET ball_annulus) = T)
T c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= cSUBSET f0 part cball_annulus cT
+ |- (((?x. (((surrounded_node (V , (ECTC V))) v) = x)) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c= c==> c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 c\/ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c\/ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
+ (!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))), (packing V), (V SUBSET ball_annulus) |- ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ (((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (packing V), ((scriptL V) = (scriptL W1)), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus) |- (T /\ (T /\ (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))) /\ ((!v. ((v IN V) ==> ((surrounded_node (V , (ESTD V))) v))) /\ (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c/\ cT c/\ cT c/\ creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c/\ c\/ c= cCARD f1 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f1 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f1 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ ! c==> cIN b0 f1 csurrounded_node c, f1 * part cESTD f1 b0 ! c==> cIN b0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ pack_ineq_def_a, (~ (local_annulus_inequality V)), (packing V), (V SUBSET ball_annulus) |- ((~ (local_annulus_inequality V)) /\ (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))
T c==> cpack_ineq_def_a c==> c~ clocal_annulus_inequality f0 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ |- (((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) /\ (~ (local_annulus_inequality V))) = (~ ((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) ==> (local_annulus_inequality V))))
T c= c/\ c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 c~ clocal_annulus_inequality f0 c~ c==> c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
+ ((~ (s = EMPTY)) = (?x. (x IN s))) |- ((?x. (x IN s)) = (~ (s = EMPTY)))
T c==> c= c~ c= f0 part cEMPTY c? / cIN b0 f0 c= c? / cIN b0 f0 c~ c= f0 part cEMPTY
+ |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 cF
+ ((v INSERT (x INSERT EMPTY)) IN (ESTD V)) |- (((v INSERT (x INSERT EMPTY)) IN (ESTD V)) /\ ((x IN V) ==> (?x. (((v INSERT (x INSERT EMPTY)) IN (ESTD V)) /\ (x IN V)))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c==> cIN f1 f2 c? / c/\ cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cESTD f2 cIN b0 f2
+ |- ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P)
T * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))), (!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))), (packing V), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus), (((BIJ f) W1) V) |- (?V. (contravening V))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 c==> cpacking f1 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c==> cBIJ f2 f0 f1 c? / ccontravening b0
+ |- (((BIT0 (BIT1 _0)) * (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))) = (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))
T c= c* cBIT0 cBIT1 c_0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0
+ pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((((BIJ f) W1) V) /\ ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) |- (?V. (contravening V))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c/\ cBIJ f1 f0 f2 c/\ cpacking f2 c/\ cSUBSET f2 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 ! c==> cIN b0 f2 c\/ c= * * * part cset_of_edge b0 f2 * part cESTD f2 part cEMPTY csurrounded_node c, f2 * part cESTD f2 b0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c? / ccontravening b0
- |- ((((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) ==> ((real_le (distance (u , v))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) = T)
T c= c==> creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_le cdistance c, f0 f1 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cT
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- ((!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) /\ (!b. (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c/\ ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 ! ! c==> c==> c~ b1 c~ b0 c==> b0 b1
+ |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) * (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))
T c= c* cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- (((((real_le (scriptL W0)) (scriptL W1)) = ((real_le (scriptL W0)) (scriptL W1))) ==> ((((real_le (scriptL W0)) (scriptL W1)) ==> (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = q')) ==> ((((real_le (scriptL W0)) (scriptL W1)) ==> ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) = (((real_le (scriptL W0)) (scriptL W1)) ==> q')))) = ((((real_le (scriptL W0)) (scriptL W1)) ==> (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = q')) ==> ((((real_le (scriptL W0)) (scriptL W1)) ==> ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) = (((real_le (scriptL W0)) (scriptL W1)) ==> q'))))
T c= c==> c= creal_le cscriptL f0 cscriptL f1 creal_le cscriptL f0 cscriptL f1 c==> c==> creal_le cscriptL f0 cscriptL f1 c= creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> creal_le cscriptL f0 cscriptL f1 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> creal_le cscriptL f0 cscriptL f1 f2 c==> c==> creal_le cscriptL f0 cscriptL f1 c= creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> creal_le cscriptL f0 cscriptL f1 creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> creal_le cscriptL f0 cscriptL f1 f2
+ |- (((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) /\ (~ ((real_le (scriptL V)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) = ((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) /\ (~ (local_annulus_inequality V))))
T c= c/\ c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 c~ creal_le cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 c~ clocal_annulus_inequality f0
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
+ (~ (u = v)), (u IN V), (v IN V) |- (((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) ==> (?x. (x IN (((set_of_edge v) V) (ESTD V)))))
T c==> c~ c= f0 f1 c==> cIN f0 f2 c==> cIN f1 f2 c==> creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c? / cIN b0 * * * part cset_of_edge f1 f2 * part cESTD f2
+ pack_ineq_def_a, (~ (local_annulus_inequality V1)), (V1 SUBSET ball_annulus) |- ((~ (local_annulus_inequality V1)) /\ ((packing V1) ==> (((CARD V1) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V1) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V1) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cpack_ineq_def_a c==> c~ clocal_annulus_inequality f0 c==> cSUBSET f0 part cball_annulus c/\ c~ clocal_annulus_inequality f0 c==> cpacking f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((scriptL V) = (scriptL W1)), (V SUBSET ball_annulus) |- (!v. ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c= cscriptL f1 cscriptL f0 c==> cSUBSET f1 part cball_annulus ! c==> cIN b0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\s. ((~ (s = EMPTY)) = (?x. (x IN s)))) s)
T * / c= c~ c= b0 part cEMPTY c? / cIN b1 b0 f0
+ (~ (u = v)), ((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))), (u IN V), (v IN V) |- (((v IN V) /\ ((u IN V) /\ ((~ (v = u)) /\ ((real_le (distance (v , u))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))) /\ (u IN V))
T c==> c~ c= f0 f1 c==> creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cIN f0 f2 c==> cIN f1 f2 c/\ c/\ cIN f1 f2 c/\ cIN f0 f2 c/\ c~ c= f1 f0 creal_le cdistance c, f1 f0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cIN f0 f2
+ (((ssreflect_eq h) P) = P) |- (P = ((ssreflect_eq h) P))
T c==> c= cssreflect_eq f0 f1 f1 c= f1 cssreflect_eq f0 f1
+ ((v INSERT (x INSERT EMPTY)) IN (ESTD V)), (x IN V) |- (T = (((v INSERT (x INSERT EMPTY)) IN (ESTD V)) /\ (x IN V)))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 c==> cIN f1 f2 c= cT c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cESTD f2 cIN f1 f2
- |- (((v IN V) ==> (((surrounded_node (V , (ESTD V))) v) = q')) ==> (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = ((v IN V) ==> q')))
T c==> c==> cIN f0 f1 c= csurrounded_node c, f1 * part cESTD f1 f0 f2 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> cIN f0 f1 f2
+ ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- (((real_le (scriptL W0)) (scriptL W1)) ==> ((real_lt (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) (scriptL W1)))
T c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> creal_le cscriptL f0 cscriptL f1 creal_lt creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cscriptL f1
+ |- ((~ (((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))) /\ (~ ((real_le (distance (u , v))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) = (~ (((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) /\ (~ ((real_le (distance (u , v))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))
T c= c~ c/\ creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c~ creal_le cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c~ c/\ creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c~ creal_le cdistance c, f0 f1 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ (v = u) |- (u = v)
T c==> c= f0 f1 c= f1 f0
+ |- ((~ ((real_lt (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))) \/ ((real_le (distance (u , v))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))
T c\/ c~ creal_lt cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_le cdistance c, f0 f1 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
+ |- ((((v INSERT (x INSERT EMPTY)) IN (ECTC V)) /\ (x IN V)) ==> (?x. (x IN (GSPEC (\v'. (?y. (((SETSPEC v') (((v INSERT (y INSERT EMPTY)) IN (ESTD V)) /\ (y IN V))) y)))))))
T c==> c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cECTC f2 cIN f1 f2 c? / cIN b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * part cESTD f2 cIN b2 f2 b2
+ (((surrounded_node (V , (ECTC V))) v) = x) |- ((ssreflect_eq h) (((surrounded_node (V , (ECTC V))) v) = x))
T c==> c= csurrounded_node c, f0 * part cECTC f0 f1 f2 cssreflect_eq f3 c= csurrounded_node c, f0 * part cECTC f0 f1 f2
- |- ((((u IN V) /\ (~ (u = v))) = p') ==> ((p' ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = q')) ==> ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 f1 c~ c= f0 f2 f3 c==> c==> f3 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 f4 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> f3 f4
- |- ((((u IN V) /\ (~ (u = v))) ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = q')) ==> ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (((u IN V) /\ (~ (u = v))) ==> q')))
T c==> c==> c/\ cIN f0 f1 c~ c= f0 f2 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 f3 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> c/\ cIN f0 f1 c~ c= f0 f2 f3
- ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) |- ((!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c==> ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c= * * * part cset_of_edge b0 f0 * part cECTC f0 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- ((((set_of_edge v) V) (ESTD V)) = EMPTY), (v IN V) |- ((u IN V) ==> ((~ (u = v)) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))
T c==> c= * * * part cset_of_edge f0 f1 * part cESTD f1 part cEMPTY c==> cIN f0 f1 c==> cIN f2 f1 c==> c~ c= f2 f0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f2 f0
- (packing V) |- (((T ==> (((V SUBSET ball_annulus) /\ (pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))))) ==> (local_annulus_inequality V))) ==> ((T /\ ((V SUBSET ball_annulus) /\ (pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))))) ==> (local_annulus_inequality V))) = ((T /\ ((V SUBSET ball_annulus) /\ (pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))))) ==> (local_annulus_inequality V)))
T c==> cpacking f0 c= c==> c==> cT c==> c/\ cSUBSET f0 part cball_annulus c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0 c==> c/\ cT c/\ cSUBSET f0 part cball_annulus c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0 c==> c/\ cT c/\ cSUBSET f0 part cball_annulus c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
- pack_ineq_def_a, (packing W1), ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- ((W1 SUBSET ball_annulus) ==> ((!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f0 part cball_annulus c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c? / ccontravening b0
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- (((!b. (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))) ==> ((\b. (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))) b)) = ((\b. (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))) b))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c= c==> ! ! c==> c==> c~ b1 c~ b0 c==> b0 b1 * / ! c==> c==> c~ b1 c~ b0 c==> b0 b1 f0 * / ! c==> c==> c~ b1 c~ b0 c==> b0 b1 f0
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- pack_ineq_def_a, (packing V) |- (pack_ineq_def_a /\ (((V SUBSET ball_annulus) /\ (~ (local_annulus_inequality V))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cpack_ineq_def_a c==> cpacking f0 c/\ cpack_ineq_def_a c==> c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- |- (((!q'. ((((packing W) /\ (W SUBSET ball_annulus)) = p') ==> ((p' ==> (((real_le (scriptL W)) (scriptL W1)) = q')) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (p' ==> q'))))) ==> ((\q'. ((((packing W) /\ (W SUBSET ball_annulus)) = p') ==> ((p' ==> (((real_le (scriptL W)) (scriptL W1)) = q')) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (p' ==> q'))))) q')) = ((\q'. ((((packing W) /\ (W SUBSET ball_annulus)) = p') ==> ((p' ==> (((real_le (scriptL W)) (scriptL W1)) = q')) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cpacking f0 cSUBSET f0 part cball_annulus f1 c==> c==> f1 c= creal_le cscriptL f0 cscriptL f2 b0 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f2 c==> f1 b0 * / c==> c= c/\ cpacking f0 cSUBSET f0 part cball_annulus f1 c==> c==> f1 c= creal_le cscriptL f0 cscriptL f2 b0 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f2 c==> f1 b0 f3 * / c==> c= c/\ cpacking f0 cSUBSET f0 part cball_annulus f1 c==> c==> f1 c= creal_le cscriptL f0 cscriptL f2 b0 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f2 c==> f1 b0 f3
- ((packing W) /\ (W SUBSET ball_annulus)) |- ((W SUBSET ball_annulus) = T)
T c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus c= cSUBSET f0 part cball_annulus cT
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- (((!c. (((~ c) ==> (~ b)) ==> (b ==> c))) ==> ((\c. (((~ c) ==> (~ b)) ==> (b ==> c))) c)) = ((\c. (((~ c) ==> (~ b)) ==> (b ==> c))) c))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c= c==> ! c==> c==> c~ b0 c~ f0 c==> f0 b0 * / c==> c==> c~ b0 c~ f0 c==> f0 b0 f1 * / c==> c==> c~ b0 c~ f0 c==> f0 b0 f1
- |- ((\p'. (!q'. ((((u IN V) /\ (~ (u = v))) = p') ==> ((p' ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = q')) ==> ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 f1 c~ c= f0 f2 b0 c==> c==> b0 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 b1 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> b0 b1 f3
- pack_ineq_def_a, (packing V), (V SUBSET ball_annulus) |- (pack_ineq_def_a /\ ((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) ==> (local_annulus_inequality V)))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ cpack_ineq_def_a c==> c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
- (((BIJ f) W1) V) |- ((((BIJ f) W1) V) = T)
T c==> cBIJ f0 f1 f2 c= cBIJ f0 f1 f2 cT
- (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))), ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) |- ((!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c= * * * part cset_of_edge b0 f0 * part cECTC f0 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c= * * * part cset_of_edge f1 f0 * part cECTC f0 part cEMPTY c/\ ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c= * * * part cset_of_edge b0 f0 * part cECTC f0 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (!x. (((real_lt x) (scriptL W0)) ==> ((real_lt x) (scriptL W1)))) |- ((((real_lt x) (scriptL W0)) ==> ((real_lt x) (scriptL W1))) = T)
T c==> ! c==> creal_lt b0 cscriptL f0 creal_lt b0 cscriptL f1 c= c==> creal_lt f2 cscriptL f0 creal_lt f2 cscriptL f1 cT
- pack_ineq_def_a |- (pack_ineq_def_a = T)
T c==> cpack_ineq_def_a c= cpack_ineq_def_a cT
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) |- ((((BIJ f) W1) V) ==> (((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cBIJ f1 f0 f2 c==> c/\ cpacking f2 c/\ cSUBSET f2 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 ! c==> cIN b0 f2 c\/ c= * * * part cset_of_edge b0 f2 * part cESTD f2 part cEMPTY csurrounded_node c, f2 * part cESTD f2 b0 c? / ccontravening b0
- |- ((\q'. ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) = p') ==> ((p' ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = q')) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 f3 c==> c==> f3 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f4
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((((P T) /\ (P F)) ==> (!x. (P x))) = T)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c= c==> c/\ * f0 cT * f0 cF ! * f0 b0 cT
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))) |- ((!x. ((P x) ==> Q)) = ((?x. (P x)) ==> Q))
T c==> c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1 c= ! c==> * f0 b0 f1 c==> c? / * f0 b0 f1
- ((u IN V) /\ (~ (u = v))) |- ((u = v) = F)
T c==> c/\ cIN f0 f1 c~ c= f0 f2 c= c= f0 f2 cF
- ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) |- (T = ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))
T c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= cT creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0
- (V SUBSET ball_annulus) |- (T = (V SUBSET ball_annulus))
T c==> cSUBSET f0 part cball_annulus c= cT cSUBSET f0 part cball_annulus
- |- ((((v IN V) ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ==> (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= c==> c==> cIN f0 f1 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (!b. (((~ b) ==> F) ==> b)) |- ((((~ b) ==> F) ==> b) = T)
T c==> ! c==> c==> c~ b0 cF b0 c= c==> c==> c~ f0 cF f0 cT
- ((u IN V) /\ (~ (u = v))) |- (~ (v = u))
T c==> c/\ cIN f0 f1 c~ c= f0 f2 c~ c= f2 f0
- ((real_le (scriptL W0)) (scriptL W1)) |- (((real_le (scriptL W0)) (scriptL W1)) = T)
T c==> creal_le cscriptL f0 cscriptL f1 c= creal_le cscriptL f0 cscriptL f1 cT
- |- ((\p'. (!q'. ((((packing W) /\ (W SUBSET ball_annulus)) = p') ==> ((p' ==> (((real_le (scriptL W)) (scriptL W1)) = q')) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cpacking f0 cSUBSET f0 part cball_annulus b0 c==> c==> b0 c= creal_le cscriptL f0 cscriptL f1 b1 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1 c==> b0 b1 f2
- (((BIJ f) W1) V) |- ((T /\ (!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v)))))) ==> ((scriptL V) = (scriptL W1)))
T c==> cBIJ f0 f1 f2 c==> c/\ cT ! c==> cIN b0 f1 c= cvector_norm b0 cvector_norm * f0 b0 c= cscriptL f2 cscriptL f1
- |- ((\p'. (!q'. ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) = p') ==> ((p' ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = q')) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 b0 c==> c==> b0 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3
- |- (((!q'. ((((u IN V) /\ (~ (u = v))) = p') ==> ((p' ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = q')) ==> ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (p' ==> q'))))) ==> ((\q'. ((((u IN V) /\ (~ (u = v))) = p') ==> ((p' ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = q')) ==> ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (p' ==> q'))))) q')) = ((\q'. ((((u IN V) /\ (~ (u = v))) = p') ==> ((p' ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = q')) ==> ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 f1 c~ c= f0 f2 f3 c==> c==> f3 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 b0 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> f3 b0 * / c==> c= c/\ cIN f0 f1 c~ c= f0 f2 f3 c==> c==> f3 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 b0 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> f3 b0 f4 * / c==> c= c/\ cIN f0 f1 c~ c= f0 f2 f3 c==> c==> f3 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 b0 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> f3 b0 f4
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing W1), ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))), (W1 SUBSET ball_annulus) |- ((!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))) /\ (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f0 c==> c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c? / ccontravening b0
- (!x. (((real_lt x) (scriptL W0)) ==> ((real_lt x) (scriptL W1)))), ((real_lt x) (scriptL W0)) |- ((!x. (((real_lt x) (scriptL W0)) ==> ((real_lt x) (scriptL W1)))) /\ ((real_lt x) (scriptL W1)))
T c==> ! c==> creal_lt b0 cscriptL f0 creal_lt b0 cscriptL f1 c==> creal_lt f2 cscriptL f0 c/\ ! c==> creal_lt b0 cscriptL f0 creal_lt b0 cscriptL f1 creal_lt f2 cscriptL f1
- |- ((\q'. (((v IN V) = p') ==> ((p' ==> (((surrounded_node (V , (ESTD V))) v) = q')) ==> (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= csurrounded_node c, f1 * part cESTD f1 f0 b0 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> f2 b0 f3
- |- (((packing W) /\ (W SUBSET ball_annulus)) ==> (((real_le (scriptL W)) (scriptL W1)) = ((real_le (scriptL W)) (scriptL W1))))
T c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus c= creal_le cscriptL f0 cscriptL f1 creal_le cscriptL f0 cscriptL f1
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus), (((BIJ f) W1) V) |- (((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))) /\ (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c==> cBIJ f2 f0 f1 c/\ c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c? / ccontravening b0
- |- ((((packing W) /\ (W SUBSET ball_annulus)) ==> (((real_le (scriptL W)) (scriptL W1)) = q')) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (((packing W) /\ (W SUBSET ball_annulus)) ==> q')))
T c==> c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus c= creal_le cscriptL f0 cscriptL f1 f2 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1 c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus f2
- |- (((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x))))) = (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c= c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 ! c==> c==> c~ b0 c~ f0 c==> f0 b0
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) = p') ==> ((p' ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = q')) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 f3 c==> c==> f3 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f4 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 f4
- (!x. (((real_lt x) (scriptL W0)) ==> ((real_lt x) (scriptL W1)))) |- ((!x. (((real_lt x) (scriptL W0)) ==> ((real_lt x) (scriptL W1)))) /\ (!x. (((real_lt x) (scriptL W0)) ==> ((real_lt x) (scriptL W1)))))
T c==> ! c==> creal_lt b0 cscriptL f0 creal_lt b0 cscriptL f1 c/\ ! c==> creal_lt b0 cscriptL f0 creal_lt b0 cscriptL f1 ! c==> creal_lt b0 cscriptL f0 creal_lt b0 cscriptL f1
- pack_ineq_def_a, (packing V), (V SUBSET ball_annulus) |- (((T ==> ((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) ==> (local_annulus_inequality V))) ==> ((T /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))) ==> (local_annulus_inequality V))) = ((T /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))) ==> (local_annulus_inequality V)))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c= c==> c==> cT c==> c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0 c==> c/\ cT c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0 c==> c/\ cT c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
- (((BIJ f1) V1) W) |- ((((BIJ f1) V1) W) /\ ((!v. ((v IN V1) ==> ((vector_norm v) = (vector_norm (f1 v))))) ==> ((scriptL W) = (scriptL V1))))
T c==> cBIJ f0 f1 f2 c/\ cBIJ f0 f1 f2 c==> ! c==> cIN b0 f1 c= cvector_norm b0 cvector_norm * f0 b0 c= cscriptL f2 cscriptL f1
- |- ((\q'. ((((u IN V) /\ (~ (u = v))) = p') ==> ((p' ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = q')) ==> ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 f1 c~ c= f0 f2 f3 c==> c==> f3 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 b0 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> f3 b0 f4
- pack_ineq_def_a, (packing W1), ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))), ((W1 SUBSET ball_annulus) /\ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1))))) |- (((W1 SUBSET ball_annulus) /\ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1))))) /\ (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus creal_gt cscriptL f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> c/\ cSUBSET f0 part cball_annulus ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ c/\ cSUBSET f0 part cball_annulus ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c? / ccontravening b0
- |- ((((v IN V) = (v IN V)) ==> (((v IN V) ==> (((surrounded_node (V , (ESTD V))) v) = q')) ==> (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = ((v IN V) ==> q')))) = (((v IN V) ==> (((surrounded_node (V , (ESTD V))) v) = q')) ==> (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = ((v IN V) ==> q'))))
T c= c==> c= cIN f0 f1 cIN f0 f1 c==> c==> cIN f0 f1 c= csurrounded_node c, f1 * part cESTD f1 f0 f2 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> cIN f0 f1 f2 c==> c==> cIN f0 f1 c= csurrounded_node c, f1 * part cESTD f1 f0 f2 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> cIN f0 f1 f2
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (((BIJ f) W1) V) |- ((packing V) /\ (((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cBIJ f2 f0 f1 c/\ cpacking f1 c==> c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c? / ccontravening b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (((BIJ f) W1) V) |- ((packing V) ==> (((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cBIJ f1 f0 f2 c==> cpacking f2 c==> c/\ cSUBSET f2 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 ! c==> cIN b0 f2 c\/ c= * * * part cset_of_edge b0 f2 * part cESTD f2 part cEMPTY csurrounded_node c, f2 * part cESTD f2 b0 c? / ccontravening b0
- |- ((\p'. (!q'. (((v IN V) = p') ==> ((p' ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f2
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (((BIJ f) W1) V) |- ((((BIJ f) W1) V) /\ (((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cBIJ f1 f0 f2 c/\ cBIJ f1 f0 f2 c==> c/\ cpacking f2 c/\ cSUBSET f2 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 ! c==> cIN b0 f2 c\/ c= * * * part cset_of_edge b0 f2 * part cESTD f2 part cEMPTY csurrounded_node c, f2 * part cESTD f2 b0 c? / ccontravening b0
- |- (((!p'. (!q'. ((((packing W) /\ (W SUBSET ball_annulus)) = p') ==> ((p' ==> (((real_le (scriptL W)) (scriptL W1)) = q')) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((packing W) /\ (W SUBSET ball_annulus)) = p') ==> ((p' ==> (((real_le (scriptL W)) (scriptL W1)) = q')) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((packing W) /\ (W SUBSET ball_annulus)) = p') ==> ((p' ==> (((real_le (scriptL W)) (scriptL W1)) = q')) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cpacking f0 cSUBSET f0 part cball_annulus b0 c==> c==> b0 c= creal_le cscriptL f0 cscriptL f1 b1 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1 c==> b0 b1 * / ! c==> c= c/\ cpacking f0 cSUBSET f0 part cball_annulus b0 c==> c==> b0 c= creal_le cscriptL f0 cscriptL f1 b1 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1 c==> b0 b1 f2 * / ! c==> c= c/\ cpacking f0 cSUBSET f0 part cball_annulus b0 c==> c==> b0 c= creal_le cscriptL f0 cscriptL f1 b1 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1 c==> b0 b1 f2
- ((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) |- (((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c/\ cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((((v IN V) = (v IN V)) ==> (((v IN V) ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((v IN V) ==> q')))) = (((v IN V) ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((v IN V) ==> q'))))
T c= c==> c= cIN f0 f1 cIN f0 f1 c==> c==> cIN f0 f1 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f0 f1 f2 c==> c==> cIN f0 f1 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f0 f1 f2
- |- ((((surrounded_node (V , (ECTC V))) v) = x) = ((\x. (((surrounded_node (V , (ECTC V))) v) = x)) x))
T c= c= csurrounded_node c, f0 * part cECTC f0 f1 f2 * / c= csurrounded_node c, f0 * part cECTC f0 f1 b0 f2
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- ((!c. (((~ c) ==> (~ b)) ==> (b ==> c))) = T)
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c= ! c==> c==> c~ b0 c~ f0 c==> f0 b0 cT
- (!x. ((x IN (ECTC V)) ==> (x IN (ESTD V)))) |- (((x IN (ECTC V)) ==> (x IN (ESTD V))) = T)
T c==> ! c==> cIN b0 * part cECTC f0 cIN b0 * part cESTD f0 c= c==> cIN f1 * part cECTC f0 cIN f1 * part cESTD f0 cT
- (((surrounded_node (V , (ECTC V))) v) = x) |- ((((surrounded_node (V , (ECTC V))) v) = x) /\ (?x. (((surrounded_node (V , (ECTC V))) v) = x)))
T c==> c= csurrounded_node c, f0 * part cECTC f0 f1 f2 c/\ c= csurrounded_node c, f0 * part cECTC f0 f1 f2 c? / c= csurrounded_node c, f0 * part cECTC f0 f1 b0
- pack_ineq_def_a, (packing V), (V SUBSET ball_annulus) |- (pack_ineq_def_a /\ ((T /\ (~ (local_annulus_inequality V))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ cpack_ineq_def_a c==> c/\ cT c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- pack_ineq_def_a, (packing V), (V SUBSET ball_annulus) |- ((V SUBSET ball_annulus) /\ ((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ cSUBSET f0 part cball_annulus c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- |- (((!p'. (!q'. ((((u IN V) /\ (~ (u = v))) = p') ==> ((p' ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = q')) ==> ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((u IN V) /\ (~ (u = v))) = p') ==> ((p' ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = q')) ==> ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((u IN V) /\ (~ (u = v))) = p') ==> ((p' ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = q')) ==> ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 f1 c~ c= f0 f2 b0 c==> c==> b0 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 b1 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> b0 b1 * / ! c==> c= c/\ cIN f0 f1 c~ c= f0 f2 b0 c==> c==> b0 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 b1 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> b0 b1 f3 * / ! c==> c= c/\ cIN f0 f1 c~ c= f0 f2 b0 c==> c==> b0 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 b1 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> b0 b1 f3
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((u IN V) /\ (~ (u = v))) = ((u IN V) /\ (~ (u = v)))) ==> ((((u IN V) /\ (~ (u = v))) ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = q')) ==> ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (((u IN V) /\ (~ (u = v))) ==> q')))) = ((((u IN V) /\ (~ (u = v))) ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = q')) ==> ((((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))) = (((u IN V) /\ (~ (u = v))) ==> q'))))
T c= c==> c= c/\ cIN f0 f1 c~ c= f0 f2 c/\ cIN f0 f1 c~ c= f0 f2 c==> c==> c/\ cIN f0 f1 c~ c= f0 f2 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 f3 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> c/\ cIN f0 f1 c~ c= f0 f2 f3 c==> c==> c/\ cIN f0 f1 c~ c= f0 f2 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 f3 c= c==> c/\ cIN f0 f1 c~ c= f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 c==> c/\ cIN f0 f1 c~ c= f0 f2 f3
- |- ((\q'. (((v IN V) = p') ==> ((p' ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f2 b0 f3
- |- (((v IN V) ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((v IN V) ==> q')))
T c==> c==> cIN f0 f1 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f2 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f0 f1 f2
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- ((!x. ((P x) ==> Q)) = ((?x. (P x)) ==> Q)) |- (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))
T c==> c= ! c==> * f0 b0 f1 c==> c? / * f0 b0 f1 c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus), (((BIJ f) W1) V) |- (((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))) ==> (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c==> cBIJ f2 f0 f1 c==> c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c? / ccontravening b0
- T, (packing V) |- (T /\ (((V SUBSET ball_annulus) /\ (pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))))) ==> (local_annulus_inequality V)))
T c==> cT c==> cpacking f0 c/\ cT c==> c/\ cSUBSET f0 part cball_annulus c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (((P T) /\ (P F)) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ c/\ * f0 cT * f0 cF ! * f0 b0
- pack_ineq_def_a, (packing V), (V SUBSET ball_annulus) |- (T ==> ((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> cT c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- (v IN V) |- ((v IN V) /\ ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> cIN f0 f1 c/\ cIN f0 f1 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- |- (((((packing W) /\ (W SUBSET ball_annulus)) = ((packing W) /\ (W SUBSET ball_annulus))) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> (((real_le (scriptL W)) (scriptL W1)) = q')) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (((packing W) /\ (W SUBSET ball_annulus)) ==> q')))) = ((((packing W) /\ (W SUBSET ball_annulus)) ==> (((real_le (scriptL W)) (scriptL W1)) = q')) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (((packing W) /\ (W SUBSET ball_annulus)) ==> q'))))
T c= c==> c= c/\ cpacking f0 cSUBSET f0 part cball_annulus c/\ cpacking f0 cSUBSET f0 part cball_annulus c==> c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus c= creal_le cscriptL f0 cscriptL f1 f2 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1 c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus f2 c==> c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus c= creal_le cscriptL f0 cscriptL f1 f2 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f1 c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus f2
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- ((((set_of_edge v) V) (ESTD V)) = EMPTY), (u IN V), (v IN V) |- ((u IN V) /\ ((~ (u = v)) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))
T c==> c= * * * part cset_of_edge f0 f1 * part cESTD f1 part cEMPTY c==> cIN f2 f1 c==> cIN f0 f1 c/\ cIN f2 f1 c==> c~ c= f2 f0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f2 f0
- (~ (local_annulus_inequality V)), ((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) |- (((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) /\ (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))
T c==> c~ clocal_annulus_inequality f0 c==> c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c/\ c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- pack_ineq_def_a, ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- ((packing W1) ==> (((W1 SUBSET ball_annulus) /\ (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1))))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cpacking f1 c==> c/\ cSUBSET f1 part cball_annulus ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f1 c? / ccontravening b0
- |- (((!p'. (!q'. ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) = p') ==> ((p' ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = q')) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) = p') ==> ((p' ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = q')) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) = p') ==> ((p' ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = q')) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 b0 c==> c==> b0 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 b0 c==> c==> b0 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3 * / ! c==> c= cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 b0 c==> c==> b0 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f3
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((real_le y) z), ((real_lt x) y) |- ((real_lt x) z)
T c==> creal_le f0 f1 c==> creal_lt f2 f0 creal_lt f2 f1
- (!b. (((~ b) ==> F) ==> b)), ((~ b) ==> F) |- (((~ b) ==> F) /\ b)
T c==> ! c==> c==> c~ b0 cF b0 c==> c==> c~ f0 cF c/\ c==> c~ f0 cF f0
- pack_ineq_def_a, (packing V), (V SUBSET ball_annulus) |- ((T /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))) ==> (local_annulus_inequality V))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> c/\ cT c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
- (packing V), (V SUBSET ball_annulus) |- (pack_ineq_def_a ==> ((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> cpack_ineq_def_a c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- |- (((v IN V) = p') ==> ((p' ==> (((surrounded_node (V , (ESTD V))) v) = q')) ==> (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = (p' ==> q'))))
T c==> c= cIN f0 f1 f2 c==> c==> f2 c= csurrounded_node c, f1 * part cESTD f1 f0 f3 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> f2 f3
- |- ((v IN V) ==> (((surrounded_node (V , (ESTD V))) v) = ((surrounded_node (V , (ESTD V))) v)))
T c==> cIN f0 f1 c= csurrounded_node c, f1 * part cESTD f1 f0 csurrounded_node c, f1 * part cESTD f1 f0
- (!b. (((~ b) ==> F) ==> b)), ((~ b) ==> F) |- ((!b. (((~ b) ==> F) ==> b)) /\ b)
T c==> ! c==> c==> c~ b0 cF b0 c==> c==> c~ f0 cF c/\ ! c==> c==> c~ b0 cF b0 f0
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))), (packing V), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus), (((BIJ f) W1) V) |- ((!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))) ==> (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 c==> cpacking f2 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f2 part cball_annulus c==> cBIJ f1 f0 f2 c==> ! c==> cIN b0 f2 c\/ c= * * * part cset_of_edge b0 f2 * part cESTD f2 part cEMPTY csurrounded_node c, f2 * part cESTD f2 b0 c? / ccontravening b0
- ((real_lt x) (scriptL W0)) |- ((!x. (((real_lt x) (scriptL W0)) ==> ((real_lt x) (scriptL W1)))) ==> ((real_lt x) (scriptL W1)))
T c==> creal_lt f0 cscriptL f1 c==> ! c==> creal_lt b0 cscriptL f1 creal_lt b0 cscriptL f2 creal_lt f0 cscriptL f2
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) |- ((!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) /\ (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c= * * * part cset_of_edge b0 f0 * part cECTC f0 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c= * * * part cset_of_edge b0 f0 * part cECTC f0 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c= * * * part cset_of_edge b0 f0 * part cECTC f0 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))
T c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = q')) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> q')))
T c==> c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f3 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 f3
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing W1), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (W1 SUBSET ball_annulus) |- (((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) /\ (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f0 part cball_annulus c/\ creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c? / ccontravening b0
- ((u IN V) /\ (~ (u = v))) |- ((v = u) = F)
T c==> c/\ cIN f0 f1 c~ c= f0 f2 c= c= f2 f0 cF
- ((u IN V) /\ (~ (u = v))) |- ((u IN V) = T)
T c==> c/\ cIN f0 f1 c~ c= f0 f2 c= cIN f0 f1 cT
- |- ((\q'. ((((packing W) /\ (W SUBSET ball_annulus)) = p') ==> ((p' ==> (((real_le (scriptL W)) (scriptL W1)) = q')) ==> ((((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL W1))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cpacking f0 cSUBSET f0 part cball_annulus f1 c==> c==> f1 c= creal_le cscriptL f0 cscriptL f2 b0 c= c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus creal_le cscriptL f0 cscriptL f2 c==> f1 b0 f3
- (!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) |- ((\v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) v)
T c==> ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 * / c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 f2
- pack_ineq_def_a, (packing V), (V SUBSET ball_annulus) |- (T ==> ((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) ==> (local_annulus_inequality V)))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> cT c==> c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
- (packing V), (V SUBSET ball_annulus) |- (((pack_ineq_def_a ==> ((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) ==> (local_annulus_inequality V))) ==> ((pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))) ==> (local_annulus_inequality V))) = ((pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))) ==> (local_annulus_inequality V)))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c= c==> c==> cpack_ineq_def_a c==> c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0 c==> c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0 c==> c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- (((!p'. (!q'. (((v IN V) = p') ==> ((p' ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((v IN V) = p') ==> ((p' ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((v IN V) = p') ==> ((p' ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f2 * / ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> b0 b1 f2
- ((ssreflect_eq h) ((surrounded_node (V , (ECTC V))) v)) |- (((ssreflect_eq h) ((surrounded_node (V , (ECTC V))) v)) = T)
T c==> cssreflect_eq f0 csurrounded_node c, f1 * part cECTC f1 f2 c= cssreflect_eq f0 csurrounded_node c, f1 * part cECTC f1 f2 cT
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (distance (u , v)))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add (distance (u , v))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cdistance c, f0 f1 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cdistance c, f0 f1 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
- ((packing W) /\ (W SUBSET ball_annulus)) |- ((packing W) = T)
T c==> c/\ cpacking f0 cSUBSET f0 part cball_annulus c= cpacking f0 cT
- pack_ineq_def_a, (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))), (packing V), (V SUBSET ball_annulus) |- ((?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))))) /\ (local_annulus_inequality V))
T c==> cpack_ineq_def_a c==> c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
- (packing V) |- (((T ==> ((pack_ineq_def_a /\ ((V SUBSET ball_annulus) /\ (~ (local_annulus_inequality V)))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) ==> ((T /\ (pack_ineq_def_a /\ ((V SUBSET ball_annulus) /\ (~ (local_annulus_inequality V))))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) = ((T /\ (pack_ineq_def_a /\ ((V SUBSET ball_annulus) /\ (~ (local_annulus_inequality V))))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))
T c==> cpacking f0 c= c==> c==> cT c==> c/\ cpack_ineq_def_a c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> c/\ cT c/\ cpack_ineq_def_a c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> c/\ cT c/\ cpack_ineq_def_a c/\ cSUBSET f0 part cball_annulus c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- (packing V), (V SUBSET ball_annulus) |- ((((pack_ineq_def_a /\ (~ (local_annulus_inequality V))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) ==> (pack_ineq_def_a ==> ((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))) = (pack_ineq_def_a ==> ((~ (local_annulus_inequality V)) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c= c==> c==> c/\ cpack_ineq_def_a c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> cpack_ineq_def_a c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 c==> cpack_ineq_def_a c==> c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- ((real_le y) z), ((real_lt x) y) |- (((real_le y) z) /\ ((real_lt x) z))
T c==> creal_le f0 f1 c==> creal_lt f2 f0 c/\ creal_le f0 f1 creal_lt f2 f1
- |- (((u IN V) /\ (~ (u = v))) ==> (((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))) = ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v)))))
T c==> c/\ cIN f0 f1 c~ c= f0 f2 c= creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, f0 f2
- |- (((!q'. (((v IN V) = p') ==> ((p' ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) ==> ((\q'. (((v IN V) = p') ==> ((p' ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q')) = ((\q'. (((v IN V) = p') ==> ((p' ==> ((((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = q')) ==> (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 f1 f2 c==> c==> f2 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f2 b0 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f2 b0 f3 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f2 b0 f3
- |- (((!q'. ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) = p') ==> ((p' ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = q')) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) = p') ==> ((p' ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = q')) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) = p') ==> ((p' ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = q')) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 f3 c==> c==> f3 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 * / c==> c= cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 f3 c==> c==> f3 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f4 * / c==> c= cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 f3 c==> c==> f3 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> f3 b0 f4
- (!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) |- (((v IN W1) ==> ((vector_norm v) = (vector_norm (f v)))) = T)
T c==> ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 c= c==> cIN f2 f0 c= cvector_norm f2 cvector_norm * f1 f2 cT
- ((u IN V) /\ (~ (u = v))) |- (((~ (u = v)) ==> ((u = v) = F)) = ((u = v) = F))
T c==> c/\ cIN f0 f1 c~ c= f0 f2 c= c==> c~ c= f0 f2 c= c= f0 f2 cF c= c= f0 f2 cF
- T, (packing W1) |- (T /\ ((W1 SUBSET ball_annulus) ==> (?W. (?phi. ((((BIJ phi) W1) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w))))))))))))
T c==> cT c==> cpacking f0 c/\ cT c==> cSUBSET f0 part cball_annulus c? / c? / c/\ cBIJ b1 f0 b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ ! c==> cIN b2 f0 c= cvector_norm b2 cvector_norm * b1 b2 ! c==> cIN b2 b0 c\/ c= * * * part cset_of_edge b2 b0 * part cESTD b0 part cEMPTY csurrounded_node c, b0 * part cESTD b0 b2
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), ((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))))), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (((BIJ f) W1) V) |- (((packing V) /\ ((V SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))))) /\ (?V. (contravening V)))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cBIJ f2 f0 f1 c/\ c/\ cpacking f1 c/\ cSUBSET f1 part cball_annulus c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c? / ccontravening b0
- (v IN V) |- ((v IN V) /\ (((surrounded_node (V , (ESTD V))) v) = ((surrounded_node (V , (ESTD V))) v)))
T c==> cIN f0 f1 c/\ cIN f0 f1 c= csurrounded_node c, f1 * part cESTD f1 f0 csurrounded_node c, f1 * part cESTD f1 f0
- (packing V), (V SUBSET ball_annulus) |- ((V SUBSET ball_annulus) /\ ((pack_ineq_def_a /\ (?v. ((v IN V) /\ (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (!u. (((u IN V) /\ (~ (u = v))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (u , v))))))))) ==> (local_annulus_inequality V)))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c/\ cSUBSET f0 part cball_annulus c==> c/\ cpack_ineq_def_a c? / c/\ cIN b0 f0 c/\ c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cIN b1 f0 c~ c= b1 b0 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b1 b0 clocal_annulus_inequality f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- |- (((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = ((v IN V) ==> (((surrounded_node (V , (ECTC V))) v) \/ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c= c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f0 f1 c\/ csurrounded_node c, f1 * part cECTC f1 f0 c= cvector_norm f0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- ((packing W0) /\ ((W0 SUBSET ball_annulus) /\ ((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) |- (((real_gt (scriptL W0)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))) = T)
T c==> c/\ cpacking f0 c/\ cSUBSET f0 part cball_annulus creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c= creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cT
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (packing V), (V SUBSET ball_annulus) |- ((pack_ineq_def_a /\ (~ (local_annulus_inequality V))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))
T c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> c/\ cpack_ineq_def_a c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- (packing W1) |- (((T ==> ((W1 SUBSET ball_annulus) ==> (?W. (?phi. ((((BIJ phi) W1) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w)))))))))))) ==> ((T /\ (W1 SUBSET ball_annulus)) ==> (?W. (?phi. ((((BIJ phi) W1) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w)))))))))))) = ((T /\ (W1 SUBSET ball_annulus)) ==> (?W. (?phi. ((((BIJ phi) W1) W) /\ ((packing W) /\ ((W SUBSET ball_annulus) /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (phi v))))) /\ (!w. ((w IN W) ==> (((((set_of_edge w) W) (ESTD W)) = EMPTY) \/ ((surrounded_node (W , (ESTD W))) w))))))))))))
T c==> cpacking f0 c= c==> c==> cT c==> cSUBSET f0 part cball_annulus c? / c? / c/\ cBIJ b1 f0 b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ ! c==> cIN b2 f0 c= cvector_norm b2 cvector_norm * b1 b2 ! c==> cIN b2 b0 c\/ c= * * * part cset_of_edge b2 b0 * part cESTD b0 part cEMPTY csurrounded_node c, b0 * part cESTD b0 b2 c==> c/\ cT cSUBSET f0 part cball_annulus c? / c? / c/\ cBIJ b1 f0 b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ ! c==> cIN b2 f0 c= cvector_norm b2 cvector_norm * b1 b2 ! c==> cIN b2 b0 c\/ c= * * * part cset_of_edge b2 b0 * part cESTD b0 part cEMPTY csurrounded_node c, b0 * part cESTD b0 b2 c==> c/\ cT cSUBSET f0 part cball_annulus c? / c? / c/\ cBIJ b1 f0 b0 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ ! c==> cIN b2 f0 c= cvector_norm b2 cvector_norm * b1 b2 ! c==> cIN b2 b0 c\/ c= * * * part cset_of_edge b2 b0 * part cESTD b0 part cEMPTY csurrounded_node c, b0 * part cESTD b0 b2
- T, (((BIJ f) W1) V) |- (T /\ ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) ==> ((scriptL V) = (scriptL W1))))
T c==> cT c==> cBIJ f0 f1 f2 c/\ cT c==> ! c==> cIN b0 f1 c= cvector_norm b0 cvector_norm * f0 b0 c= cscriptL f2 cscriptL f1
- |- ((!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ ((((set_of_edge v) V) (ECTC V)) = EMPTY)))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c= * * * part cset_of_edge b0 f0 * part cECTC f0 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c= * * * part cset_of_edge b0 f0 * part cECTC f0 part cEMPTY c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (packing V), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus), (((BIJ f) W1) V) |- ((V SUBSET ball_annulus) /\ (((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ (!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w))))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> cpacking f1 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f1 part cball_annulus c==> cBIJ f2 f0 f1 c/\ cSUBSET f1 part cball_annulus c==> c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f2 b0 ! c==> cIN b0 f1 c\/ c= * * * part cset_of_edge b0 f1 * part cESTD f1 part cEMPTY csurrounded_node c, f1 * part cESTD f1 b0 c? / ccontravening b0
- |- (((!q'. (((v IN V) = p') ==> ((p' ==> (((surrounded_node (V , (ESTD V))) v) = q')) ==> (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = (p' ==> q'))))) ==> ((\q'. (((v IN V) = p') ==> ((p' ==> (((surrounded_node (V , (ESTD V))) v) = q')) ==> (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = (p' ==> q'))))) q')) = ((\q'. (((v IN V) = p') ==> ((p' ==> (((surrounded_node (V , (ESTD V))) v) = q')) ==> (((v IN V) ==> ((surrounded_node (V , (ESTD V))) v)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN f0 f1 f2 c==> c==> f2 c= csurrounded_node c, f1 * part cESTD f1 f0 b0 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> f2 b0 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= csurrounded_node c, f1 * part cESTD f1 f0 b0 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> f2 b0 f3 * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= csurrounded_node c, f1 * part cESTD f1 f0 b0 c= c==> cIN f0 f1 csurrounded_node c, f1 * part cESTD f1 f0 c==> f2 b0 f3
- (!v. (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))), ((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) |- (((V SUBSET ball_annulus) /\ ((!W. (((packing W) /\ (W SUBSET ball_annulus)) ==> ((real_le (scriptL W)) (scriptL V)))) /\ ((v IN V) /\ (~ ((surrounded_node (V , (ECTC V))) v))))) /\ ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b1 cSUBSET b1 part cball_annulus creal_le cscriptL b1 cscriptL f0 c/\ cIN b0 f0 c~ csurrounded_node c, f0 * part cECTC f0 b0 c= cvector_norm b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c/\ c/\ cSUBSET f0 part cball_annulus c/\ ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c/\ cIN f1 f0 c~ csurrounded_node c, f0 * part cECTC f0 f1 c= cvector_norm f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- pack_ineq_def_a, (packing V), (V SUBSET ball_annulus) |- ((T /\ (~ (local_annulus_inequality V))) ==> (((CARD V) = (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0)))))) \/ (((CARD V) = (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 _0)))))) \/ ((CARD V) = (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))
T c==> cpack_ineq_def_a c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> c/\ cT c~ clocal_annulus_inequality f0 c\/ c= cCARD f0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 c\/ c= cCARD f0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 c_0 c= cCARD f0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0
- ((u IN V) /\ (~ (u = v))) |- (((~ (v = u)) ==> ((v = u) = F)) = ((v = u) = F))
T c==> c/\ cIN f0 f1 c~ c= f0 f2 c= c==> c~ c= f2 f0 c= c= f2 f0 cF c= c= f2 f0 cF
- |- (((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) = ((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v)))) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = q')) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> q')))) = ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> (((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = q')) ==> ((((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> ((vector_norm v) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (((ssreflect_eq h) (~ ((surrounded_node (V , (ECTC V))) v))) ==> q'))))
T c= c==> c= cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c==> c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f3 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 f3 c==> c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f3 c= c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 c= cvector_norm f2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> cssreflect_eq f0 c~ csurrounded_node c, f1 * part cECTC f1 f2 f3
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- pack_ineq_def_a, (!V. (((packing V) /\ (V SUBSET ball_annulus)) ==> ((real_le (scriptL V)) (scriptL W1)))), (!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))), (packing V), ((real_gt (scriptL W1)) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0))))))), (V SUBSET ball_annulus), (((BIJ f) W1) V) |- ((!v. ((v IN W1) ==> ((vector_norm v) = (vector_norm (f v))))) /\ ((!w. ((w IN V) ==> (((((set_of_edge w) V) (ESTD V)) = EMPTY) \/ ((surrounded_node (V , (ESTD V))) w)))) ==> (?V. (contravening V))))
T c==> cpack_ineq_def_a c==> ! c==> c/\ cpacking b0 cSUBSET b0 part cball_annulus creal_le cscriptL b0 cscriptL f0 c==> ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 c==> cpacking f2 c==> creal_gt cscriptL f0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 c==> cSUBSET f2 part cball_annulus c==> cBIJ f1 f0 f2 c/\ ! c==> cIN b0 f0 c= cvector_norm b0 cvector_norm * f1 b0 c==> ! c==> cIN b0 f2 c\/ c= * * * part cset_of_edge b0 f2 * part cESTD f2 part cEMPTY csurrounded_node c, f2 * part cESTD f2 b0 c? / ccontravening b0
- (((surrounded_node (V , (ECTC V))) v) = x) |- (x = ((surrounded_node (V , (ECTC V))) v))
T c==> c= csurrounded_node c, f0 * part cECTC f0 f1 f2 c= f2 csurrounded_node c, f0 * part cECTC f0 f1
