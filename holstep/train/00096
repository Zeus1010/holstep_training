N Conforming.reperentation_of_ds2
C |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= c, f0 c, f9 c, f7 f8 f13 c/\ c= c, f0 c, f7 c, f8 f9 f14 c/\ c= c, f0 c, f8 c, f9 f7 f15 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c= f12 * * part cINSERT f13 * * part cINSERT f14 * * part cINSERT f15 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ADD_CLAUSES
A |- ((!n. (((NUMERAL _0) + n) = n)) /\ ((!m. ((m + (NUMERAL _0)) = m)) /\ ((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) /\ (!m. (!n. ((m + (SUC n)) = (SUC (m + n))))))))
T c/\ ! c= c+ cNUMERAL c_0 b0 b0 c/\ ! c= c+ b0 cNUMERAL c_0 b0 c/\ ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 ! ! c= c+ b0 cSUC b1 cSUC c+ b0 b1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D Hypermap.THREE
A |- ((NUMERAL (BIT1 (BIT1 _0))) = (SUC (NUMERAL (BIT0 (BIT1 _0)))))
T c= cNUMERAL cBIT1 cBIT1 c_0 cSUC cNUMERAL cBIT0 cBIT1 c_0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D FINITE_EMPTY
A |- (FINITE EMPTY)
T cFINITE part cEMPTY
D FINITE_INSERT
A |- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s))))
T c= cFINITE * * part cINSERT f0 f1 cFINITE f1
D Oxl_2012.CARD_INSERT
A |- (!x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))))
T c==> cFINITE f0 c= cCARD * * part cINSERT f1 f0 cCOND cIN f1 f0 cCARD f0 cSUC cCARD f0
D Oxl_2012.CARD_EMPTY
A |- ((CARD EMPTY) = (NUMERAL _0))
T c= cCARD part cEMPTY cNUMERAL c_0
D CARD_SUBSET_LE
A |- (!a. (!b. (((FINITE b) /\ ((a SUBSET b) /\ ((CARD b) <= (CARD a)))) ==> (a = b))))
T c==> c/\ cFINITE f0 c/\ cSUBSET f1 f0 c<= cCARD f0 cCARD f1 c= f1 f0
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Fan.POWER_1
A |- (!f. (((POWER f) (NUMERAL (BIT1 _0))) = f))
T c= * * part cPOWER f0 cNUMERAL cBIT1 c_0 f0
D Fan.POWER_2
A |- (!f. (((POWER f) (NUMERAL (BIT0 (BIT1 _0)))) = (f o f)))
T c= * * part cPOWER f0 cNUMERAL cBIT0 cBIT1 c_0 * * part co f0 f0
D Hypermap.face
A |- (!H. (!x. (((face H) x) = ((orbit_map (face_map H)) x))))
T c= * * part cface f0 f1 * * part corbit_map * part cface_map f0 f1
D Hypermap.in_orbit_lemma
A |- (!f. (!n. (!x. (!y. ((y = (((POWER f) n) x)) ==> (y IN ((orbit_map f) x)))))))
T c==> c= f0 cPOWER f1 f2 f3 cIN f0 * * part corbit_map f1 f3
D Hypermap.lemma_orbit_finite
A |- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x))))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 cFINITE * * part corbit_map f1 f2
D Hypermap.card_orbit_le
A |- (!f. (!n. (!x. (((~ (n = (NUMERAL _0))) /\ ((((POWER f) n) x) = x)) ==> ((CARD ((orbit_map f) x)) <= n)))))
T c==> c/\ c~ c= f0 cNUMERAL c_0 c= cPOWER f1 f0 f2 f2 c<= cCARD * * part corbit_map f1 f2 f0
D Fan.orbit_map
A |- (!f. (!x. (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER f) n) x))))))))
T c= * * part corbit_map f0 f1 * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER f0 b1 f1
D Fan.finite_d_fan
A |- (!x. (!V. (!E. ((FAN (x , (V , E))) ==> (FINITE (d_fan (x , (V , E))))))))
T c==> cFAN c, f0 c, f1 f2 cFINITE * part cd_fan c, f0 c, f1 f2
D Fan.into_domain_power_efn_fan
A |- (!x. (!V. (!E. (!n. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (p e_fan)) n) y) = (((POWER (((e_fan x) V) E)) n) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (p n_fan)) n) y) = (((POWER (((n_fan x) V) E)) n) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (p f1_fan)) n) y) = (((POWER (((f1_fan x) V) E)) n) y))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c= f3 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * f3 part ce_fan f4 b0 cPOWER * * * part ce_fan f0 f1 f2 f4 b0 c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * f3 part cn_fan f4 b0 cPOWER * * * part cn_fan f0 f1 f2 f4 b0 ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * f3 part cf1_fan f4 b0 cPOWER * * * part cf1_fan f0 f1 f2 f4 b0
D Fan.hypermap_of_fan_rep
A |- (!x. (!V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = (p e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = (p n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = (p f1_fan))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c= f3 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * f3 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * f3 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * f3 part cf1_fan
D Fan.dartset_fully_surrounded_is_non_isolated_fan
A |- (!x. (!V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2
D Conforming.STEP3_REDUCE_FAN
A |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f10 cFAN c, f0 c, f1 f10
D Conforming.add_edge_imp_card_set_edge_ge1_fan
A |- (!x. (!V. (!E. (!E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= f3 * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f3 cNUMERAL cBIT1 c_0
D Conforming.SIGMA_FAN_OF_FANADD_AT_POINT3
A |- (!x. (!V. (!E. (!E1. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) w) v) = u)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f5 f6 f4 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT f6 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 f6 f4 f5
D Conforming.f1_fan_of_f10_eq_f20
A |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f20 = (x , (v , (u , w)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f20 = ((((f1_fan x) V) E1) f10))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= f13 c, f0 c, f9 c, f7 f8 c/\ c= f14 c, f0 c, f7 c, f8 f9 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c= f14 cf1_fan f0 f1 f11 f13
D Conforming.f1_fan_of_f20_eq_f30
A |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f30 = ((((f1_fan x) V) E1) f20))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= f13 c, f0 c, f7 c, f8 f9 c/\ c= f14 c, f0 c, f8 c, f9 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c= f14 cf1_fan f0 f1 f11 f13
D Conforming.f1_fan_of_f30_eq_f10
A |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f10 = ((((f1_fan x) V) E1) f30))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= f13 c, f0 c, f9 c, f7 f8 c/\ c= f14 c, f0 c, f8 c, f9 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c= f13 cf1_fan f0 f1 f11 f14
D Conforming.f10_in_d1_fanadd
A |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (f10 IN (d1_fan (x , (V , E1)))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= f13 c, f0 c, f9 c, f7 f8 c/\ c= c, f0 c, f7 c, f8 f9 f14 c/\ c= c, f0 c, f8 c, f9 f7 f15 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 cIN f13 * part cd1_fan c, f0 c, f1 f11
D Conforming.pair_disjoint_f10_f20_f30
A |- (!x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> ((~ (f10 = f20)) /\ ((~ (f20 = f30)) /\ (~ (f30 = f10)))))))))))))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= f13 c, f0 c, f9 c, f7 f8 c/\ c= f14 c, f0 c, f7 c, f8 f9 c/\ c= f15 c, f0 c, f8 c, f9 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c/\ c~ c= f13 f14 c/\ c~ c= f14 f15 c~ c= f15 f13
D Conforming.f1_fan_permutes_prime
A |- (!x. (!V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> ((permutes (p f1_fan)) (d_fan (x , (V , E)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c= f3 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cpermutes * f3 part cf1_fan * part cd_fan c, f0 c, f1 f2
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- (((!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))) ==> ((\s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))) (d1_fan (x , (V , E1))))) = ((\s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (FINITE ((orbit_map p) x)))))) (d1_fan (x , (V , E1)))))
T c= c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 * / ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 * part cd1_fan c, f0 c, f1 f2 * / ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 cFINITE * * part corbit_map b1 b2 * part cd1_fan c, f0 c, f1 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (f10 IN (d1_fan (x , (V , E1)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) f10)) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cIN f10 * part cd1_fan c, f2 c, f0 f7 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
+ |- ((\p. (((FAN (x , (V , E1))) /\ (p = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p e_fan)) (NUMERAL (BIT1 _0))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p n_fan)) (NUMERAL (BIT1 _0))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p f1_fan)) (NUMERAL (BIT1 _0))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))))))) (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))
T * / c==> c/\ cFAN c, f0 c, f1 f2 c= b0 / * * part cres * * * b1 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b1 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b0 part ce_fan cNUMERAL cBIT1 c_0 b1 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b1 c/\ ! c==> cIN b1 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b0 part cn_fan cNUMERAL cBIT1 c_0 b1 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b1 ! c==> cIN b1 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b0 part cf1_fan cNUMERAL cBIT1 c_0 b1 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b1 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2
+ |- ((\E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> ((permutes (p f1_fan)) (d_fan (x , (V , E))))))) E1)
T * / ! c==> c/\ cFAN c, f0 c, f1 b0 c= b1 / * * part cres * * * b2 f0 f1 b0 * part cd1_fan c, f0 c, f1 b0 cpermutes * b1 part cf1_fan * part cd_fan c, f0 c, f1 b0 f2
+ |- ((\p. (((FAN (x , (V , E1))) /\ (p = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> ((permutes (p f1_fan)) (d_fan (x , (V , E1)))))) (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))
T * / c==> c/\ cFAN c, f0 c, f1 f2 c= b0 / * * part cres * * * b1 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cpermutes * b0 part cf1_fan * part cd_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) |- ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- ((\f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f30 = ((((f1_fan x) V) E1) f20)))))))))))) f2)
T * / ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b9 f1 c> cCARD * * * part cset_of_edge b9 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 b0 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c~ c= cf1_fan f0 f1 f2 b1 f4 c/\ c= cpr2 f4 b2 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b3 b4 b2 c/\ c= b5 * * part cface chypermap1_of_fanx c, f0 c, f1 f5 c, f0 c, b2 c, b4 csigma_fan f0 f1 f5 b2 b4 c/\ c= b6 * * part cface chypermap1_of_fanx c, f0 c, f1 f5 c, f0 c, b4 c, b2 csigma_fan f0 f1 f5 b4 b2 c/\ c= b7 c, f0 c, b2 c, b3 b4 c/\ c= b8 c, f0 c, b3 c, b4 b2 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY part cEMPTY f5 c= b8 cf1_fan f0 f1 f5 b7 f6
+ (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))), ((x' = ((I (((f1_fan x) V) E1)) f10)) \/ (x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10)))) |- (((x' = ((I (((f1_fan x) V) E1)) f10)) \/ (x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10)))) /\ F)
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c==> c\/ c= f4 cI * * * part cf1_fan f0 f1 f2 f3 c= f4 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3 c/\ c\/ c= f4 cI * * * part cf1_fan f0 f1 f2 f3 c= f4 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), (((((f1_fan x) V) E1) f10) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) /\ ((((((f1_fan x) V) E1) f10) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) /\ (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)))) ==> ((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10))) ==> (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 f11 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f10 c==> c= c, f2 c, f5 c, f6 f13 f11 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cIN f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> cIN cf1_fan f2 f0 f7 f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> cIN cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> c==> c/\ cIN f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c/\ cIN cf1_fan f2 f0 f7 f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 cIN cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 cSUBSET * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f11 * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY
+ |- (((((FINITE (d1_fan (x , (V , E1)))) /\ ((permutes ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (d1_fan (x , (V , E1))))) ==> (FINITE ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))) = ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c= c==> c==> c/\ cFINITE * part cd1_fan c, f0 c, f1 f2 cpermutes * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 cFINITE * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- ((\E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f30 = ((((f1_fan x) V) E1) f20)))))))))))))))) E)
T * / ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b13 f1 c> cCARD * * * part cset_of_edge b13 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 c/\ c> cCARD b2 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ c= cf1_fan f0 f1 b0 b3 b4 c/\ c= cf1_fan f0 f1 b0 b4 b5 c/\ c~ c= cf1_fan f0 f1 b0 b5 b3 c/\ c= cpr2 b3 b6 c/\ c= cpr2 b4 b7 c/\ c= cpr2 b5 b8 c/\ cIN * * part cINSERT b6 * * part cINSERT b7 part cEMPTY b0 c/\ cIN * * part cINSERT b7 * * part cINSERT b8 part cEMPTY b0 c/\ c~ cIN * * part cINSERT b8 * * part cINSERT b6 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b7 b8 b6 c/\ c= b9 * * part cface chypermap1_of_fanx c, f0 c, f1 b1 c, f0 c, b6 c, b8 csigma_fan f0 f1 b1 b6 b8 c/\ c= b10 * * part cface chypermap1_of_fanx c, f0 c, f1 b1 c, f0 c, b8 c, b6 csigma_fan f0 f1 b1 b8 b6 c/\ c= b11 c, f0 c, b6 c, b7 b8 c/\ c= b12 c, f0 c, b7 c, b8 b6 c= * * part cUNION b0 * * part cINSERT * * part cINSERT b6 * * part cINSERT b8 part cEMPTY part cEMPTY b1 c= b12 cf1_fan f0 f1 b1 b11 f2
+ |- (((f10 = f20) \/ (f10 = f30)) ==> ((CARD (f20 INSERT (f30 INSERT EMPTY))) = (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))))
T c==> c\/ c= f0 f1 c= f0 f2 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0
+ |- ((((f30 = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10)) ==> (f30 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10))) ==> (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))) = (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c= c==> c==> c= f0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 f4 cIN f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 b1 f4 * * part cINSERT f4 * * part cINSERT cf1_fan f1 f2 f3 f4 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f4 part cEMPTY c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 b1 f4 * * part cINSERT f4 * * part cINSERT cf1_fan f1 f2 f3 f4 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f4 part cEMPTY
+ |- (((!x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) ==> ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)) = ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x))
T c= c==> ! ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
+ (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = ((I (((f1_fan x) V) E1)) f10)) |- (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) f10)))
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 cI * * * part cf1_fan f0 f1 f2 f3 c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 f3
- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) f10))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) f10)))
T c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) f10)), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 _0))) f10)), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) f10)), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) f10) = f10)) ==> ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 c_0 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> c==> c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 f10 c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f10 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
+ (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))) /\ F)
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c/\ c= f4 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3 cF
+ |- (((!f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))) ==> ((\f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))) f1)) = ((\f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))) f1))
T c= c==> ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b6 f1 c> cCARD * * * part cset_of_edge b6 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c~ c= cf1_fan f0 f1 f2 b2 b0 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ c= cpr2 b2 b5 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b4 b5 b3 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b3 * * part cINSERT b5 part cEMPTY part cEMPTY f4 cFAN c, f0 c, f1 f4 * / ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b6 f1 c> cCARD * * * part cset_of_edge b6 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c~ c= cf1_fan f0 f1 f2 b2 b0 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ c= cpr2 b2 b5 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b4 b5 b3 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b3 * * part cINSERT b5 part cEMPTY part cEMPTY f4 cFAN c, f0 c, f1 f4 f5 * / ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b6 f1 c> cCARD * * * part cset_of_edge b6 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c~ c= cf1_fan f0 f1 f2 b2 b0 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ c= cpr2 b2 b5 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b4 b5 b3 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b3 * * part cINSERT b5 part cEMPTY part cEMPTY f4 cFAN c, f0 c, f1 f4 f5
+ |- (((f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) /\ ((((((f1_fan x) V) E1) f10) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) /\ (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)))) ==> ((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)))
T c==> c/\ cIN f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 c/\ cIN cf1_fan f1 f2 f3 f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 cIN cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 cSUBSET * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0
+ |- ((!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b9 f1 c> cCARD * * * part cset_of_edge b9 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 b0 c/\ c~ c= cf1_fan f0 f1 f2 b0 f4 c/\ c= cpr2 f4 b1 c/\ c= cpr2 f5 b2 c/\ c= cpr2 b0 b3 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b3 * * part cINSERT b1 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b2 b3 b1 c/\ c= b4 * * part cface chypermap1_of_fanx c, f0 c, f1 f6 c, f0 c, b1 c, b3 csigma_fan f0 f1 f6 b1 b3 c/\ c= b5 * * part cface chypermap1_of_fanx c, f0 c, f1 f6 c, f0 c, b3 c, b1 csigma_fan f0 f1 f6 b3 b1 c/\ c= c, f0 c, b3 c, b1 b2 b6 c/\ c= c, f0 c, b1 c, b2 b3 b7 c/\ c= c, f0 c, b2 c, b3 b1 b8 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b1 * * part cINSERT b3 part cEMPTY part cEMPTY f6 c= b5 * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cT
+ (((((f1_fan x) V) E1) f10) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) |- ((((((f1_fan x) V) E1) f10) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) = T)
T c==> cIN cf1_fan f0 f1 f2 f3 * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c= cIN cf1_fan f0 f1 f2 f3 * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f7 * * part cface chypermap1_of_fanx c, f2 c, f0 f8 c, f2 c, f6 c, f5 csigma_fan f2 f0 f8 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f8 c, f2 c, f5 c, f6 csigma_fan f2 f0 f8 f5 f6 c==> c= cf1_fan f2 f0 f1 f4 f10 c==> c= cf1_fan f2 f0 f1 f10 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f10 f11 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f11 f5 f6 c==> c/\ c= c, f2 c, f5 c, f6 f11 f12 c/\ c= c, f2 c, f6 c, f11 f5 f13 c/\ c= c, f2 c, f11 c, f5 f6 f14 c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f8 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f11 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f11 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f10 * * part cINSERT f3 part cEMPTY f15 c= f9 * * part cINSERT f12 * * part cINSERT f13 * * part cINSERT f14 part cEMPTY
- |- ((\g'. (!t'. (!e'. (((f20 = f30) = g') ==> ((g' ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ g') ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cSUC cNUMERAL c_0 b2 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND b0 b1 b2 f2
+ (FINITE ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (CARD (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))), ((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) |- ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))
T c==> cFINITE * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cCARD * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY c==> cSUBSET * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) f10)), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 _0))) f10)), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) f10)), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 c_0 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) f10)), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), (((((f1_fan x) V) E1) f10) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((((f1_fan x) V) E1) f10) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) /\ (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 f11 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f10 c==> c= c, f2 c, f5 c, f6 f13 f11 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f11 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cIN f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> cIN cf1_fan f2 f0 f7 f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c/\ cIN cf1_fan f2 f0 f7 f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f11 * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY
+ |- (((!x. (!V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> ((permutes (p f1_fan)) (d_fan (x , (V , E))))))))) ==> ((\x. (!V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> ((permutes (p f1_fan)) (d_fan (x , (V , E))))))))) x)) = ((\x. (!V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> ((permutes (p f1_fan)) (d_fan (x , (V , E))))))))) x))
T c= c==> ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c= b3 / * * part cres * * * b4 b0 b1 b2 * part cd1_fan c, b0 c, b1 b2 cpermutes * b3 part cf1_fan * part cd_fan c, b0 c, b1 b2 * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c= b3 / * * part cres * * * b4 b0 b1 b2 * part cd1_fan c, b0 c, b1 b2 cpermutes * b3 part cf1_fan * part cd_fan c, b0 c, b1 b2 f0 * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c= b3 / * * part cres * * * b4 b0 b1 b2 * part cd1_fan c, b0 c, b1 b2 cpermutes * b3 part cf1_fan * part cd_fan c, b0 c, b1 b2 f0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- (((!x. (!y. ((y = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL _0)) x)) ==> (y IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) x))))) ==> ((\x. (!y. ((y = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL _0)) x)) ==> (y IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) x))))) f10)) = ((\x. (!y. ((y = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL _0)) x)) ==> (y IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) x))))) f10))
T c= c==> ! ! c==> c= b1 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL c_0 b0 cIN b1 * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b0 * / ! c==> c= b1 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL c_0 b0 cIN b1 * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b0 f3 * / ! c==> c= b1 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL c_0 b0 cIN b1 * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b0 f3
+ |- (((!n. (!p. (((FAN (x , (V , E1))) /\ (p = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p e_fan)) n) y) = (((POWER (((e_fan x) V) E1)) n) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p n_fan)) n) y) = (((POWER (((n_fan x) V) E1)) n) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p f1_fan)) n) y) = (((POWER (((f1_fan x) V) E1)) n) y))))))))) ==> ((\n. (!p. (((FAN (x , (V , E1))) /\ (p = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p e_fan)) n) y) = (((POWER (((e_fan x) V) E1)) n) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p n_fan)) n) y) = (((POWER (((n_fan x) V) E1)) n) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p f1_fan)) n) y) = (((POWER (((f1_fan x) V) E1)) n) y))))))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((\n. (!p. (((FAN (x , (V , E1))) /\ (p = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p e_fan)) n) y) = (((POWER (((e_fan x) V) E1)) n) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p n_fan)) n) y) = (((POWER (((n_fan x) V) E1)) n) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p f1_fan)) n) y) = (((POWER (((f1_fan x) V) E1)) n) y))))))))) (NUMERAL (BIT0 (BIT1 _0)))))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 f2 c= b1 / * * part cres * * * b2 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part ce_fan b0 b2 cPOWER * * * part ce_fan f0 f1 f2 b0 b2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cn_fan b0 b2 cPOWER * * * part cn_fan f0 f1 f2 b0 b2 ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cf1_fan b0 b2 cPOWER * * * part cf1_fan f0 f1 f2 b0 b2 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c= b1 / * * part cres * * * b2 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part ce_fan b0 b2 cPOWER * * * part ce_fan f0 f1 f2 b0 b2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cn_fan b0 b2 cPOWER * * * part cn_fan f0 f1 f2 b0 b2 ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cf1_fan b0 b2 cPOWER * * * part cf1_fan f0 f1 f2 b0 b2 cNUMERAL cBIT0 cBIT1 c_0 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c= b1 / * * part cres * * * b2 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part ce_fan b0 b2 cPOWER * * * part ce_fan f0 f1 f2 b0 b2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cn_fan b0 b2 cPOWER * * * part cn_fan f0 f1 f2 b0 b2 ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cf1_fan b0 b2 cPOWER * * * part cf1_fan f0 f1 f2 b0 b2 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((f30 = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10)) ==> (f30 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)))
T c==> c= f0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 f4 cIN f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4
- |- (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
+ |- ((\V. (!E. (!E1. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) w) v) = u)))))))) V)
T * / ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cFAN c, f0 c, b0 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b1 c/\ c~ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b4 b5 b3 c/\ cfan80 c, f0 c, b0 b1 c/\ ! c==> cIN b6 b0 c> cCARD * * * part cset_of_edge b6 b0 b1 cNUMERAL cBIT1 c_0 c= * * part cUNION b1 * * part cINSERT * * part cINSERT b3 * * part cINSERT b5 part cEMPTY part cEMPTY b2 c= csigma_fan f0 b0 b2 b5 b3 b4 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), (((((f1_fan x) V) E1) f10) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) ==> (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 f11 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f10 c==> c= c, f2 c, f5 c, f6 f13 f11 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cIN f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> cIN cf1_fan f2 f0 f7 f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> cIN cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f11 * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY
+ |- (((!n. (!p. (((FAN (x , (V , E1))) /\ (p = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p e_fan)) n) y) = (((POWER (((e_fan x) V) E1)) n) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p n_fan)) n) y) = (((POWER (((n_fan x) V) E1)) n) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p f1_fan)) n) y) = (((POWER (((f1_fan x) V) E1)) n) y))))))))) ==> ((\n. (!p. (((FAN (x , (V , E1))) /\ (p = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p e_fan)) n) y) = (((POWER (((e_fan x) V) E1)) n) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p n_fan)) n) y) = (((POWER (((n_fan x) V) E1)) n) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p f1_fan)) n) y) = (((POWER (((f1_fan x) V) E1)) n) y))))))))) (NUMERAL (BIT1 _0)))) = ((\n. (!p. (((FAN (x , (V , E1))) /\ (p = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p e_fan)) n) y) = (((POWER (((e_fan x) V) E1)) n) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p n_fan)) n) y) = (((POWER (((n_fan x) V) E1)) n) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p f1_fan)) n) y) = (((POWER (((f1_fan x) V) E1)) n) y))))))))) (NUMERAL (BIT1 _0))))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 f2 c= b1 / * * part cres * * * b2 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part ce_fan b0 b2 cPOWER * * * part ce_fan f0 f1 f2 b0 b2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cn_fan b0 b2 cPOWER * * * part cn_fan f0 f1 f2 b0 b2 ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cf1_fan b0 b2 cPOWER * * * part cf1_fan f0 f1 f2 b0 b2 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c= b1 / * * part cres * * * b2 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part ce_fan b0 b2 cPOWER * * * part ce_fan f0 f1 f2 b0 b2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cn_fan b0 b2 cPOWER * * * part cn_fan f0 f1 f2 b0 b2 ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cf1_fan b0 b2 cPOWER * * * part cf1_fan f0 f1 f2 b0 b2 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c= b1 / * * part cres * * * b2 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part ce_fan b0 b2 cPOWER * * * part ce_fan f0 f1 f2 b0 b2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cn_fan b0 b2 cPOWER * * * part cn_fan f0 f1 f2 b0 b2 ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cf1_fan b0 b2 cPOWER * * * part cf1_fan f0 f1 f2 b0 b2 cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) f10)), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 _0))) f10)), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((f20 = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) f10)) ==> (f20 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10))) ==> (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 f11 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f10 c==> c= c, f2 c, f5 c, f6 f13 f11 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f11 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 c_0 f11 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 c_0 f11 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cIN f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> c==> c= f10 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 c_0 f11 cIN f10 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f11 * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY
+ |- ((\x. (!V. (!E. (!n. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (p e_fan)) n) y) = (((POWER (((e_fan x) V) E)) n) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (p n_fan)) n) y) = (((POWER (((n_fan x) V) E)) n) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E)))) ==> ((((POWER (p f1_fan)) n) y) = (((POWER (((f1_fan x) V) E)) n) y)))))))))))) x)
T * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c= b4 / * * part cres * * * b5 b0 b1 b2 * part cd1_fan c, b0 c, b1 b2 c/\ ! c==> cIN b5 * part cd1_fan c, b0 c, b1 b2 c= cPOWER * b4 part ce_fan b3 b5 cPOWER * * * part ce_fan b0 b1 b2 b3 b5 c/\ ! c==> cIN b5 * part cd1_fan c, b0 c, b1 b2 c= cPOWER * b4 part cn_fan b3 b5 cPOWER * * * part cn_fan b0 b1 b2 b3 b5 ! c==> cIN b5 * part cd1_fan c, b0 c, b1 b2 c= cPOWER * b4 part cf1_fan b3 b5 cPOWER * * * part cf1_fan b0 b1 b2 b3 b5 f0
+ |- ((\f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f10 = ((((f1_fan x) V) E1) f30)))) f30)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= f13 c, f0 c, f9 c, f7 f8 c/\ c= b0 c, f0 c, f8 c, f9 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c= f13 cf1_fan f0 f1 f11 b0 f14
- |- ((\e'. ((((f10 = f20) \/ (f10 = f30)) = g') ==> ((g' ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND g') t') e')))))) e')
T * / c==> c= c\/ c= f0 f1 c= f0 f2 f3 c==> c==> f3 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f4 c==> c==> c~ f3 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b0 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f3 f4 b0 f5
- (x' = f10) |- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))) = (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))))
T c==> c= f0 f1 c= corbit_map * * part cres * * * part cf1_fan f2 f3 f4 * part cd1_fan c, f2 c, f3 f4 f1 cI * * * part cf1_fan f2 f3 f4 cI * * * part cf1_fan f2 f3 f4 f1 corbit_map * * part cres * * * part cf1_fan f2 f3 f4 * part cd1_fan c, f2 c, f3 f4 f1 cI * * * part cf1_fan f2 f3 f4 cI * * * part cf1_fan f2 f3 f4 f1
- (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = f10), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((~ F) ==> F)
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 f3 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c==> c~ cF cF
+ |- ((\t'. (!e'. (((f30 IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (f30 IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY b0 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 b0 b1 f2
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E))))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f2 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f3 f0 f1 f4 f5 c==> c~ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c==> cFAN c, f3 c, f0 f1 c==> cFAN c, f3 c, f0 f2 c==> cfan80 c, f3 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f7 * * part cINSERT f6 part cEMPTY part cEMPTY f2 c==> c= f8 * * part cface chypermap1_of_fanx c, f3 c, f0 f2 c, f3 c, f7 c, f6 csigma_fan f3 f0 f2 f7 f6 c==> c= f9 * * part cface chypermap1_of_fanx c, f3 c, f0 f2 c, f3 c, f6 c, f7 csigma_fan f3 f0 f2 f6 f7 c==> c= * part cface_map chypermap1_of_fanx c, f3 c, f0 f2 * * part cres * * * part cf1_fan f3 f0 f2 * part cd1_fan c, f3 c, f0 f2 c==> c= c, f3 c, f10 c, f6 f7 f11 c==> c= c, f3 c, f7 c, f10 f6 f12 c==> c= c, f3 c, f6 c, f7 f10 f13 c==> c= cf1_fan f3 f0 f1 f5 f14 c==> c= cf1_fan f3 f0 f1 f14 f4 c==> c= cpr2 f5 f7 c==> c= cpr2 f14 f10 c==> c= cpr2 f4 f6 c==> c= csigma_fan f3 f0 f1 f10 f6 f7 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f3 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f7 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f5 * * part cINSERT f14 * * part cINSERT f4 part cEMPTY f15 c==> c==> c/\ cFAN c, f3 c, f0 f1 ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f3 c, f0 f1 * part cd1_fan c, f3 c, f0 f1 c= * * part cface chypermap1_of_fanx c, f3 c, f0 f2 c, f3 c, f6 c, f7 csigma_fan f3 f0 f2 f6 f7 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f11 part cEMPTY
- (x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))) |- (F = F)
T c==> c= f0 cI * * * part cf1_fan f1 f2 f3 cI * * * part cf1_fan f1 f2 f3 f4 c= cF cF
+ (FINITE (d1_fan (x , (V , E1)))), ((permutes ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (d1_fan (x , (V , E1)))) |- (((FINITE ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))) = ((((FINITE (d1_fan (x , (V , E1)))) /\ ((permutes ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (d1_fan (x , (V , E1))))) ==> (FINITE ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c==> cFINITE * part cd1_fan c, f0 c, f1 f2 c==> cpermutes * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c= c==> cFINITE * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY c==> c==> c/\ cFINITE * part cd1_fan c, f0 c, f1 f2 cpermutes * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 cFINITE * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY
+ |- (((!x. (((face H) x) = ((orbit_map (face_map H)) x))) ==> ((\x. (((face H) x) = ((orbit_map (face_map H)) x))) x)) = ((\x. (((face H) x) = ((orbit_map (face_map H)) x))) x))
T c= c==> ! c= * * part cface f0 b0 * * part corbit_map * part cface_map f0 b0 * / c= * * part cface f0 b0 * * part corbit_map * part cface_map f0 b0 f1 * / c= * * part cface f0 b0 * * part corbit_map * part cface_map f0 b0 f1
+ |- (((!x. (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER f) n) x))))))) ==> ((\x. (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER f) n) x))))))) x)) = ((\x. (((orbit_map f) x) = (GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER f) n) x))))))) x))
T c= c==> ! c= * * part corbit_map f0 b0 * part cGSPEC / c? / cSETSPEC b1 c>= b2 cNUMERAL c_0 cPOWER f0 b2 b0 * / c= * * part corbit_map f0 b0 * part cGSPEC / c? / cSETSPEC b1 c>= b2 cNUMERAL c_0 cPOWER f0 b2 b0 f1 * / c= * * part corbit_map f0 b0 * part cGSPEC / c? / cSETSPEC b1 c>= b2 cNUMERAL c_0 cPOWER f0 b2 b0 f1
- |- (((((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E))))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))) = (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c= * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, f4 c, f5 csigma_fan f0 f1 f3 f4 f5 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c= * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, f4 c, f5 csigma_fan f0 f1 f3 f4 f5 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY
+ ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (CARD (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))), ((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) |- ((FINITE ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cCARD * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY c==> cSUBSET * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c==> cFINITE * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY
- |- ((\g'. (!t'. (!e'. ((((f10 = f20) \/ (f10 = f30)) = g') ==> ((g' ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c\/ c= f0 f1 c= f0 f2 b0 c==> c==> b0 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b2 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND b0 b1 b2 f3
+ |- ((\u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))) u)
T * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 b0 c/\ c= cpr2 f6 b1 c/\ cIN * * part cINSERT f7 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b1 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT b1 part cEMPTY part cEMPTY f8 cFAN c, f0 c, f1 f8 f9
+ |- ((\y. ((y = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL _0)) f10)) ==> (y IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)))) f10)
T * / c==> c= b0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL c_0 f3 cIN b0 * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3
- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10)))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))))
T c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3
+ |- ((\x. (!y. ((y = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL _0)) x)) ==> (y IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) x))))) f10)
T * / ! c==> c= b1 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL c_0 b0 cIN b1 * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b0 f3
+ |- (((!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1))))))))) ==> ((\f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1))))))))) f2)) = ((\f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1))))))))) f2))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b5 f1 c> cCARD * * * part cset_of_edge b5 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 b0 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c~ c= cf1_fan f0 f1 f2 b1 f4 c/\ c= cpr2 f4 b2 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b3 b4 b2 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY part cEMPTY f5 cFAN c, f0 c, f1 f5 * / ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b5 f1 c> cCARD * * * part cset_of_edge b5 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 b0 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c~ c= cf1_fan f0 f1 f2 b1 f4 c/\ c= cpr2 f4 b2 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b3 b4 b2 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY part cEMPTY f5 cFAN c, f0 c, f1 f5 f6 * / ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b5 f1 c> cCARD * * * part cset_of_edge b5 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 b0 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c~ c= cf1_fan f0 f1 f2 b1 f4 c/\ c= cpr2 f4 b2 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b3 b4 b2 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY part cEMPTY f5 cFAN c, f0 c, f1 f5 f6
+ |- ((\x. (!V. (!E. (!E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))))))) x)
T * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b4 b1 c> cCARD * * * part cset_of_edge b4 b1 b2 cNUMERAL cBIT1 c_0 c= b3 * * part cUNION b2 * * part cINSERT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY ! c==> cIN b4 b1 c> cCARD * * * part cset_of_edge b4 b1 b3 cNUMERAL cBIT1 c_0 f2
+ |- ((\e'. (((f20 IN (f30 INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (f30 INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (f30 INSERT EMPTY))) = e')) ==> ((((COND (f20 IN (f30 INSERT EMPTY))) (CARD (f30 INSERT EMPTY))) (SUC (CARD (f30 INSERT EMPTY)))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY f3 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 f3 b0 f4
- |- (T = ((SUC (SUC (SUC (NUMERAL _0)))) = (NUMERAL (BIT1 (BIT1 _0)))))
T c= cT c= cSUC cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0
+ |- (F ==> ((CARD EMPTY) = (NUMERAL _0)))
T c==> cF c= cCARD part cEMPTY cNUMERAL c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (f10 IN (d1_fan (x , (V , E1)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((f10 IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) f10))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cIN f10 * part cd1_fan c, f2 c, f0 f7 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> c==> cIN f10 * part cd1_fan c, f2 c, f0 f7 c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((f10 IN (d1_fan (x , (V , E1)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> cIN f10 * part cd1_fan c, f2 c, f0 f7 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
+ |- (((f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) ==> (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))) = (((f10 = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL _0)) f10)) ==> (f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10))) ==> (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))))
T c= c==> cIN f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 b1 f0 * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY c==> c==> c= f0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 cNUMERAL c_0 f0 cIN f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 b1 f0 * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY
+ |- ((\V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (f10 IN (d1_fan (x , (V , E1)))))))))))))))))))) V)
T * / ! ! ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b15 b0 c> cCARD * * * part cset_of_edge b15 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c/\ c> cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY b3 c/\ c= cf1_fan f0 b0 b1 b4 b5 c/\ c= cf1_fan f0 b0 b1 b5 b6 c/\ c~ c= cf1_fan f0 b0 b1 b6 b4 c/\ c= cpr2 b4 b7 c/\ c= cpr2 b5 b8 c/\ c= cpr2 b6 b9 c/\ cIN * * part cINSERT b7 * * part cINSERT b8 part cEMPTY b1 c/\ cIN * * part cINSERT b8 * * part cINSERT b9 part cEMPTY b1 c/\ c~ cIN * * part cINSERT b9 * * part cINSERT b7 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b8 b9 b7 c/\ c= b10 * * part cface chypermap1_of_fanx c, f0 c, b0 b2 c, f0 c, b7 c, b9 csigma_fan f0 b0 b2 b7 b9 c/\ c= b11 * * part cface chypermap1_of_fanx c, f0 c, b0 b2 c, f0 c, b9 c, b7 csigma_fan f0 b0 b2 b9 b7 c/\ c= b12 c, f0 c, b9 c, b7 b8 c/\ c= c, f0 c, b7 c, b8 b9 b13 c/\ c= c, f0 c, b8 c, b9 b7 b14 c= * * part cUNION b1 * * part cINSERT * * part cINSERT b7 * * part cINSERT b9 part cEMPTY part cEMPTY b2 cIN b12 * part cd1_fan c, f0 c, b0 b2 f1
+ ((x' = f10) ==> F), (((x' = ((I (((f1_fan x) V) E1)) f10)) \/ (x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10)))) ==> F), ((x' = f10) \/ ((x' = ((((f1_fan x) V) E1) f10)) \/ (x' = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- F
T c==> c==> c= f0 f1 cF c==> c==> c\/ c= f0 cI * * * part cf1_fan f2 f3 f4 f1 c= f0 cI * * * part cf1_fan f2 f3 f4 cI * * * part cf1_fan f2 f3 f4 f1 cF c==> c\/ c= f0 f1 c\/ c= f0 cf1_fan f2 f3 f4 f1 c= f0 cf1_fan f2 f3 f4 cf1_fan f2 f3 f4 f1 cF
- |- (((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s)) = ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s))
T c= c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) f10)), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 _0))) f10)), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))) = f10) ==> ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (SUC (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 c_0 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> c==> c= cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 f10 c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f10 cSUC cNUMERAL cBIT0 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
+ |- (!n. (!x. (!y. ((y = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) x)) ==> (y IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) x))))))
T c==> c= f0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 f5 cIN f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f5
+ |- ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1))))))) v)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 b0 c/\ c= cpr2 f5 b1 c/\ c= cpr2 f6 b2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY part cEMPTY f7 cFAN c, f0 c, f1 f7 f8
+ ((u INSERT (w INSERT EMPTY)) IN E) |- (((u INSERT (w INSERT EMPTY)) IN E) = T)
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
+ |- (((!u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) w) v) = u)))) ==> ((\u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) w) v) = u)))) u)) = ((\u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) w) v) = u)))) u))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b1 * * part cINSERT f4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 f4 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT b1 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 b1 f4 b0 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b1 * * part cINSERT f4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 f4 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT b1 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 b1 f4 b0 f5 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b1 * * part cINSERT f4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 f4 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT b1 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 b1 f4 b0 f5
+ |- ((((f10 IN (f20 INSERT (f30 INSERT EMPTY))) = ((f10 = f20) \/ (f10 = f30))) ==> ((((f10 = f20) \/ (f10 = f30)) ==> ((CARD (f20 INSERT (f30 INSERT EMPTY))) = t')) ==> (((~ ((f10 = f20) \/ (f10 = f30))) ==> ((SUC (CARD (f20 INSERT (f30 INSERT EMPTY)))) = e')) ==> ((((COND (f10 IN (f20 INSERT (f30 INSERT EMPTY)))) (CARD (f20 INSERT (f30 INSERT EMPTY)))) (SUC (CARD (f20 INSERT (f30 INSERT EMPTY))))) = (((COND ((f10 = f20) \/ (f10 = f30))) t') e'))))) = ((((f10 = f20) \/ (f10 = f30)) ==> ((CARD (f20 INSERT (f30 INSERT EMPTY))) = t')) ==> (((~ ((f10 = f20) \/ (f10 = f30))) ==> ((SUC (CARD (f20 INSERT (f30 INSERT EMPTY)))) = e')) ==> ((((COND (f10 IN (f20 INSERT (f30 INSERT EMPTY)))) (CARD (f20 INSERT (f30 INSERT EMPTY)))) (SUC (CARD (f20 INSERT (f30 INSERT EMPTY))))) = (((COND ((f10 = f20) \/ (f10 = f30))) t') e')))))
T c= c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c= f0 f1 c= f0 f2 c==> c==> c\/ c= f0 f1 c= f0 f2 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> c~ c\/ c= f0 f1 c= f0 f2 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND c\/ c= f0 f1 c= f0 f2 f3 f4 c==> c==> c\/ c= f0 f1 c= f0 f2 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> c~ c\/ c= f0 f1 c= f0 f2 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND c\/ c= f0 f1 c= f0 f2 f3 f4
+ |- ((\u. (!w. (!ds1. (!ds2. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f30 = ((((f1_fan x) V) E1) f20))))))))) u)
T * / ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b6 f1 c> cCARD * * * part cset_of_edge b6 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 b0 c/\ c= cpr2 f6 b1 c/\ cIN * * part cINSERT f7 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b1 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 f7 c/\ c= b2 * * part cface chypermap1_of_fanx c, f0 c, f1 f8 c, f0 c, f7 c, b1 csigma_fan f0 f1 f8 f7 b1 c/\ c= b3 * * part cface chypermap1_of_fanx c, f0 c, f1 f8 c, f0 c, b1 c, f7 csigma_fan f0 f1 f8 b1 f7 c/\ c= b4 c, f0 c, f7 c, b0 b1 c/\ c= b5 c, f0 c, b0 c, b1 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT b1 part cEMPTY part cEMPTY f8 c= b5 cf1_fan f0 f1 f8 b4 f9
+ |- (((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (f10 IN (d1_fan (x , (V , E1))))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))) = ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= f13 c, f0 c, f9 c, f7 f8 c/\ c= c, f0 c, f7 c, f8 f9 f14 c/\ c= c, f0 c, f8 c, f9 f7 f15 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 cIN f13 * part cd1_fan c, f0 c, f1 f11 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f11 * part cd1_fan c, f0 c, f1 f11 b1 f13 * * part cINSERT f13 * * part cINSERT cf1_fan f0 f1 f11 f13 * * part cINSERT cf1_fan f0 f1 f11 cf1_fan f0 f1 f11 f13 part cEMPTY c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f11 * part cd1_fan c, f0 c, f1 f11 b1 f13 * * part cINSERT f13 * * part cINSERT cf1_fan f0 f1 f11 f13 * * part cINSERT cf1_fan f0 f1 f11 cf1_fan f0 f1 f11 f13 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) f10)), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (f10 IN (d1_fan (x , (V , E1)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cIN f10 * part cd1_fan c, f2 c, f0 f7 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> c/\ ! c==> cIN b0 * part cd1_fan c, f2 c, f0 f7 c= cPOWER * * part cres * * * part ce_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part ce_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ ! c==> cIN b0 * part cd1_fan c, f2 c, f0 f7 c= cPOWER * * part cres * * * part cn_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part cn_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 b0 ! c==> cIN b0 * part cd1_fan c, f2 c, f0 f7 c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 b0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f3 c==> c/\ c~ c= cf1_fan f2 f0 f1 f3 f4 c/\ c= cpr2 f4 f6 c/\ c= cpr2 f5 f7 c/\ c= cpr2 f3 f8 c/\ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f8 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f7 f8 f6 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f6 c, f8 csigma_fan f2 f0 f10 f6 f8 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f8 c, f6 csigma_fan f2 f0 f10 f8 f6 c/\ c= c, f2 c, f8 c, f6 f7 f12 c/\ c= c, f2 c, f6 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f6 f14 c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f8 part cEMPTY part cEMPTY f10 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f15 c= f11 * * part cINSERT f12 * * part cINSERT f13 * * part cINSERT f14 part cEMPTY
+ |- ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)
T * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cf1_fan f2 f0 f1 f4 f5 c==> c= cf1_fan f2 f0 f1 f5 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f5 f7 c==> c/\ c= cpr2 f3 f8 c/\ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f8 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f7 f8 f6 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f6 c, f8 csigma_fan f2 f0 f10 f6 f8 c/\ c= f11 * * part cface chypermap1_of_fanx c, f2 c, f0 f10 c, f2 c, f8 c, f6 csigma_fan f2 f0 f10 f8 f6 c/\ c= c, f2 c, f8 c, f6 f7 f12 c/\ c= c, f2 c, f6 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f6 f14 c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f8 part cEMPTY part cEMPTY f10 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f15 c= f11 * * part cINSERT f12 * * part cINSERT f13 * * part cINSERT f14 part cEMPTY
+ (FAN (x , (V , E1))) |- ((((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))) = ((((FAN (x , (V , E1))) /\ ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) e_fan)) (NUMERAL (BIT1 _0))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) n_fan)) (NUMERAL (BIT1 _0))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) f1_fan)) (NUMERAL (BIT1 _0))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 _0))) y))))))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c==> cFAN c, f0 c, f1 f2 c= c==> c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 b0 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY c==> c==> c/\ cFAN c, f0 c, f1 f2 c= / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * / * * part cres * * * b1 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part ce_fan cNUMERAL cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * / * * part cres * * * b1 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cn_fan cNUMERAL cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * / * * part cres * * * b1 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cf1_fan cNUMERAL cBIT1 c_0 b0 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY
+ |- ((CARD (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))) = (((COND (f10 IN (f20 INSERT (f30 INSERT EMPTY)))) (CARD (f20 INSERT (f30 INSERT EMPTY)))) (SUC (CARD (f20 INSERT (f30 INSERT EMPTY))))))
T c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (x' = ((I (((f1_fan x) V) E1)) f10)) |- (F = F)
T c==> c= f0 cI * * * part cf1_fan f1 f2 f3 f4 c= cF cF
+ |- (((!n. (!x. (!y. ((y = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) x)) ==> (y IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) x)))))) ==> ((\n. (!x. (!y. ((y = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) x)) ==> (y IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) x)))))) (NUMERAL _0))) = ((\n. (!x. (!y. ((y = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) x)) ==> (y IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) x)))))) (NUMERAL _0)))
T c= c==> ! ! ! c==> c= b2 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b0 b1 cIN b2 * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 * / ! ! c==> c= b2 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b0 b1 cIN b2 * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 cNUMERAL c_0 * / ! ! c==> c= b2 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b0 b1 cIN b2 * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 cNUMERAL c_0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((FAN (x , (V , E))) /\ ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) f1_fan)))))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= c, f2 c, f10 c, f5 f6 f11 c==> c= c, f2 c, f6 c, f10 f5 f12 c==> c= c, f2 c, f5 c, f6 f10 f13 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f10 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> c==> c/\ cFAN c, f2 c, f0 f1 c= / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 part cn_fan c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * / * * part cres * * * b0 f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 part cf1_fan c= * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f11 part cEMPTY
+ (FAN (x , (V , E1))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), ((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) |- (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (CARD (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c==> cFAN c, f0 c, f1 f2 c==> c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> cSUBSET * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cCARD * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((FAN (x , (V , E1))) /\ (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= c, f2 c, f10 c, f5 f6 f11 c==> c= c, f2 c, f6 c, f10 f5 f12 c==> c= c, f2 c, f5 c, f6 f10 f13 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f10 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c/\ cFAN c, f2 c, f0 f7 c= * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f11 part cEMPTY
+ (FINITE ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (CARD (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))), ((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) |- ((((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10)))))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))) = ((((FINITE ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) /\ (((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) /\ ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (CARD (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))) ==> ((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) = ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c==> cFINITE * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cCARD * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY c==> cSUBSET * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c= c==> c= * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY c==> c==> c/\ cFINITE * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c/\ cSUBSET * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cCARD * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY c= * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY
+ |- (((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))) = (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= f3 * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f3 cNUMERAL cBIT1 c_0 c= * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, f5 c, f4 csigma_fan f0 f1 f3 f5 f4 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c= * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, f5 c, f4 csigma_fan f0 f1 f3 f5 f4 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY
+ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))) |- ((((f10 IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) f10))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))) = ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 c= c==> c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f3 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f3 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f3 * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY
+ |- ((!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b8 f1 c> cCARD * * * part cset_of_edge b8 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 b0 c/\ c= cpr2 f5 b1 c/\ c= cpr2 f6 b2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ c= b3 * * part cface chypermap1_of_fanx c, f0 c, f1 f7 c, f0 c, b0 c, b2 csigma_fan f0 f1 f7 b0 b2 c/\ c= b4 * * part cface chypermap1_of_fanx c, f0 c, f1 f7 c, f0 c, b2 c, b0 csigma_fan f0 f1 f7 b2 b0 c/\ c= c, f0 c, b2 c, b0 b1 b5 c/\ c= c, f0 c, b0 c, b1 b2 b6 c/\ c= c, f0 c, b1 c, b2 b0 b7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY part cEMPTY f7 c= b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f2 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f3 f0 f1 f4 f5 c==> c~ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c==> cFAN c, f3 c, f0 f1 c==> cFAN c, f3 c, f0 f2 c==> cfan80 c, f3 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f7 * * part cINSERT f6 part cEMPTY part cEMPTY f2 c==> c= f8 * * part cface chypermap1_of_fanx c, f3 c, f0 f2 c, f3 c, f7 c, f6 csigma_fan f3 f0 f2 f7 f6 c==> c= f9 * * part cface chypermap1_of_fanx c, f3 c, f0 f2 c, f3 c, f6 c, f7 csigma_fan f3 f0 f2 f6 f7 c==> c= * part cface_map chypermap1_of_fanx c, f3 c, f0 f2 * * part cres * * * part cf1_fan f3 f0 f2 * part cd1_fan c, f3 c, f0 f2 c==> c= c, f3 c, f10 c, f6 f7 f11 c==> c= c, f3 c, f7 c, f10 f6 f12 c==> c= c, f3 c, f6 c, f7 f10 f13 c==> c= cf1_fan f3 f0 f1 f5 f14 c==> c= cf1_fan f3 f0 f1 f14 f4 c==> c= cpr2 f5 f7 c==> c= cpr2 f14 f10 c==> c= cpr2 f4 f6 c==> c= csigma_fan f3 f0 f1 f10 f6 f7 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f3 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f7 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f5 * * part cINSERT f14 * * part cINSERT f4 part cEMPTY f15 c= * * part cface chypermap1_of_fanx c, f3 c, f0 f2 c, f3 c, f6 c, f7 csigma_fan f3 f0 f2 f6 f7 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f11 part cEMPTY
+ (f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) |- ((f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) = T)
T c==> cIN f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 c= cIN f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!e'. (((f10 IN (f20 INSERT (f30 INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (f20 INSERT (f30 INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (f20 INSERT (f30 INSERT EMPTY)))) = e')) ==> ((((COND (f10 IN (f20 INSERT (f30 INSERT EMPTY)))) (CARD (f20 INSERT (f30 INSERT EMPTY)))) (SUC (CARD (f20 INSERT (f30 INSERT EMPTY))))) = (((COND g') t') e')))))) ==> ((\e'. (((f10 IN (f20 INSERT (f30 INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (f20 INSERT (f30 INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (f20 INSERT (f30 INSERT EMPTY)))) = e')) ==> ((((COND (f10 IN (f20 INSERT (f30 INSERT EMPTY)))) (CARD (f20 INSERT (f30 INSERT EMPTY)))) (SUC (CARD (f20 INSERT (f30 INSERT EMPTY))))) = (((COND g') t') e')))))) e')) = ((\e'. (((f10 IN (f20 INSERT (f30 INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (f20 INSERT (f30 INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (f20 INSERT (f30 INSERT EMPTY)))) = e')) ==> ((((COND (f10 IN (f20 INSERT (f30 INSERT EMPTY)))) (CARD (f20 INSERT (f30 INSERT EMPTY)))) (SUC (CARD (f20 INSERT (f30 INSERT EMPTY))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 f4 b0 * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 f4 b0 f5 * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 f4 b0 f5
+ ((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) |- (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) /\ (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= c, f0 c, f9 c, f7 f8 f13 c/\ c= c, f0 c, f7 c, f8 f9 f14 c/\ c= c, f0 c, f8 c, f9 f7 f15 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c/\ c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= c, f0 c, f9 c, f7 f8 f13 c/\ c= c, f0 c, f7 c, f8 f9 f14 c/\ c= c, f0 c, f8 c, f9 f7 f15 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c= f12 * * part cINSERT f13 * * part cINSERT f14 * * part cINSERT f15 part cEMPTY
+ |- ((\f20. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f20 = (x , (v , (u , w)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f20 = ((((f1_fan x) V) E1) f10)))) f20)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= f13 c, f0 c, f9 c, f7 f8 c/\ c= b0 c, f0 c, f7 c, f8 f9 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c= b0 cf1_fan f0 f1 f11 f13 f14
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ ((CARD (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((NUMERAL (BIT1 (BIT1 _0))) = (CARD (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 c/\ c= cf1_fan f2 f0 f1 f3 f4 c/\ c= cf1_fan f2 f0 f1 f4 f5 c/\ c~ c= cf1_fan f2 f0 f1 f5 f3 c/\ c= cpr2 f3 f7 c/\ c= cpr2 f4 f8 c/\ c= cpr2 f5 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f2 c, f0 f11 c, f2 c, f7 c, f9 csigma_fan f2 f0 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f2 c, f0 f11 c, f2 c, f9 c, f7 csigma_fan f2 f0 f11 f9 f7 c/\ c= c, f2 c, f9 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f9 f14 c/\ c= c, f2 c, f8 c, f9 f7 f15 c= * * part cUNION f1 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c==> c> cCARD f6 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f6 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 c= f12 * * part cINSERT f13 * * part cINSERT f14 * * part cINSERT f15 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) f10)), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) f10)), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 _0))) f10)) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 c_0 f10 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
+ |- (((((FAN (x , (V , E1))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1))))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))) = (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c= * * part cface chypermap1_of_fanx c, f0 c, f1 f2 c, f0 c, f3 c, f4 csigma_fan f0 f1 f2 f3 f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c= * * part cface chypermap1_of_fanx c, f0 c, f1 f2 c, f0 c, f3 c, f4 csigma_fan f0 f1 f2 f3 f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (f10 IN (d1_fan (x , (V , E1)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cIN f10 * part cd1_fan c, f2 c, f0 f7 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
+ ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) |- (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c==> c> cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 c= c> cCARD f0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (CARD (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))) |- (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (CARD (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))) = T)
T c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cCARD * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY c= c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cCARD * * part cINSERT f3 * * part cINSERT cf1_fan f0 f1 f2 f3 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 part cEMPTY cT
- |- ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))
T c= cHAS_SIZE f0 f1 c/\ cFINITE f0 c= cCARD f0 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))) |- (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f2 f0 f1 f4 f5 c/\ c= cf1_fan f2 f0 f1 f5 f6 c/\ c~ c= cf1_fan f2 f0 f1 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f2 c, f0 f11 c, f2 c, f7 c, f9 csigma_fan f2 f0 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f2 c, f0 f11 c, f2 c, f9 c, f7 csigma_fan f2 f0 f11 f9 f7 c/\ c= c, f2 c, f9 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f9 f14 c/\ c= c, f2 c, f8 c, f9 f7 f15 c= * * part cUNION f1 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c= f12 * * part cINSERT f13 * * part cINSERT f14 * * part cINSERT f15 part cEMPTY
- |- ((~ (f20 = f30)) ==> ((SUC (SUC (NUMERAL _0))) = (SUC (SUC (NUMERAL _0)))))
T c==> c~ c= f0 f1 c= cSUC cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0
+ |- (((~ F) ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (f30 IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND F) (NUMERAL _0)) e')))
T c==> c==> c~ cF c= cSUC cCARD part cEMPTY f0 c= cCOND cIN f1 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND cF cNUMERAL c_0 f0
+ |- (((FINITE EMPTY) ==> ((CARD (f30 INSERT EMPTY)) = (((COND (f30 IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))))) = ((CARD (f30 INSERT EMPTY)) = (((COND (f30 IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY)))))
T c= c==> cFINITE part cEMPTY c= cCARD * * part cINSERT f0 part cEMPTY cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY c= cCARD * * part cINSERT f0 part cEMPTY cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY
+ |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- (!p. (((FAN (x , (V , E1))) /\ (p = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p e_fan)) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p n_fan)) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p f1_fan)) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c= f3 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * f3 part ce_fan cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * f3 part cn_fan cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * f3 part cf1_fan cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0
+ (~ (f10 = ((((f1_fan x) V) E1) f10))), (~ (((((f1_fan x) V) E1) f10) = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (~ (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) = f10)), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))) |- (((SUC (SUC (SUC (NUMERAL _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) = ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (NUMERAL (BIT1 (BIT1 _0)))))
T c==> c~ c= f0 cf1_fan f1 f2 f3 f0 c==> c~ c= cf1_fan f1 f2 f3 f0 cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 c==> c~ c= cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 f0 c==> c= f4 cf1_fan f1 f2 f3 f0 c==> c= f5 cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 c= c= cSUC cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cCOND c\/ c= f0 f4 c= f0 f5 cCOND c= f4 f5 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f4 f5 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f7 * * part cface chypermap1_of_fanx c, f2 c, f0 f8 c, f2 c, f6 c, f5 csigma_fan f2 f0 f8 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f8 c, f2 c, f5 c, f6 csigma_fan f2 f0 f8 f5 f6 c==> c= c, f2 c, f10 c, f5 f6 f11 c==> c= c, f2 c, f6 c, f10 f5 f12 c==> c= c, f2 c, f5 c, f6 f10 f13 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f10 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c/\ c= c, f2 c, f10 c, f5 f6 f11 c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f8 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c= f9 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f11 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) f10)), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) f10)), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (f10 IN (d1_fan (x , (V , E1)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((f10 IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 _0))) f10))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cIN f10 * part cd1_fan c, f2 c, f0 f7 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> c==> cIN f10 * part cd1_fan c, f2 c, f0 f7 c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 c_0 f10 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) |- (((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 _0))) y))) = T)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 c= c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 f3 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 c_0 f3 cT
+ |- ((((f20 = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) f10)) ==> (f20 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10))) ==> (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))) = (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c= c==> c==> c= f0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 cNUMERAL cBIT1 c_0 f4 cIN f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 b1 f4 * * part cINSERT f4 * * part cINSERT cf1_fan f1 f2 f3 f4 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f4 part cEMPTY c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 b1 f4 * * part cINSERT f4 * * part cINSERT cf1_fan f1 f2 f3 f4 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f4 part cEMPTY
+ (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = f10), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- F
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 f3 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 cF
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((f20 = ((((f1_fan x) V) E1) f10)) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))) = ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f20 = (x , (v , (u , w)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f20 = ((((f1_fan x) V) E1) f10))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= c, f2 c, f6 c, f10 f5 f11 c==> c= c, f2 c, f5 c, f6 f10 f12 c==> c= cf1_fan f2 f0 f1 f4 f13 c==> c= cf1_fan f2 f0 f1 f13 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f13 f10 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c> cCARD f14 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f14 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f13 * * part cINSERT f3 part cEMPTY f14 c= c==> c= f11 cf1_fan f2 f0 f7 f12 c= * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f15 part cEMPTY c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 c/\ cIN f14 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c/\ c> cCARD f14 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f13 * * part cINSERT f3 part cEMPTY f14 c/\ c= cf1_fan f2 f0 f1 f4 f13 c/\ c= cf1_fan f2 f0 f1 f13 f3 c/\ c~ c= cf1_fan f2 f0 f1 f3 f4 c/\ c= cpr2 f4 f6 c/\ c= cpr2 f13 f10 c/\ c= cpr2 f3 f5 c/\ cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c/\ cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f10 f5 f6 c/\ c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c/\ c= f12 c, f2 c, f5 c, f6 f10 c/\ c= f11 c, f2 c, f6 c, f10 f5 c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c= f11 cf1_fan f2 f0 f7 f12 c= * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f15 part cEMPTY
+ |- ((FINITE EMPTY) = T)
T c= cFINITE part cEMPTY cT
+ |- (((f20 IN (f30 INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (f30 INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (f30 INSERT EMPTY))) = e')) ==> ((((COND (f20 IN (f30 INSERT EMPTY))) (CARD (f30 INSERT EMPTY))) (SUC (CARD (f30 INSERT EMPTY)))) = (((COND g') t') e')))))
T c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY f3 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY f4 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 f3 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds), ((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) |- (((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) /\ (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 f11 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f10 c==> c= c, f2 c, f5 c, f6 f13 f11 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> cSUBSET * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c/\ cSUBSET * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f11 * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY
- (~ (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) = f10)) |- ((((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) = f10) = F)
T c==> c~ c= cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 f3 c= c= cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 f3 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((f20 = f30) = g') ==> ((g' ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ g') ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= cSUC cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cSUC cNUMERAL c_0 f4 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f2 f3 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) f10)), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), (((((f1_fan x) V) E1) f10) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((f30 = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10)) ==> (f30 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10))) ==> (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 f11 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f10 c==> c= c, f2 c, f5 c, f6 f13 f11 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f11 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f11 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cIN f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> cIN cf1_fan f2 f0 f7 f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> c==> c= f12 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f11 cIN f12 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f11 * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY
- |- (T = (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))))
T c= cT c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- (((!e'. (((f20 IN (f30 INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (f30 INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (f30 INSERT EMPTY))) = e')) ==> ((((COND (f20 IN (f30 INSERT EMPTY))) (CARD (f30 INSERT EMPTY))) (SUC (CARD (f30 INSERT EMPTY)))) = (((COND g') t') e')))))) ==> ((\e'. (((f20 IN (f30 INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (f30 INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (f30 INSERT EMPTY))) = e')) ==> ((((COND (f20 IN (f30 INSERT EMPTY))) (CARD (f30 INSERT EMPTY))) (SUC (CARD (f30 INSERT EMPTY)))) = (((COND g') t') e')))))) e')) = ((\e'. (((f20 IN (f30 INSERT EMPTY)) = g') ==> ((g' ==> ((CARD (f30 INSERT EMPTY)) = t')) ==> (((~ g') ==> ((SUC (CARD (f30 INSERT EMPTY))) = e')) ==> ((((COND (f20 IN (f30 INSERT EMPTY))) (CARD (f30 INSERT EMPTY))) (SUC (CARD (f30 INSERT EMPTY)))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY f3 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 f3 b0 * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY f3 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 f3 b0 f4 * / c==> c= cIN f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> f2 c= cCARD * * part cINSERT f1 part cEMPTY f3 c==> c==> c~ f2 c= cSUC cCARD * * part cINSERT f1 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 part cEMPTY cCARD * * part cINSERT f1 part cEMPTY cSUC cCARD * * part cINSERT f1 part cEMPTY cCOND f2 f3 b0 f4
+ |- (((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f20 = (x , (v , (u , w)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f20 = ((((f1_fan x) V) E1) f10))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))) = (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= f13 c, f0 c, f9 c, f7 f8 c/\ c= f14 c, f0 c, f7 c, f8 f9 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c= f14 cf1_fan f0 f1 f11 f13 c= * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 * * part cINSERT f13 * * part cINSERT f14 * * part cINSERT f15 part cEMPTY c= * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 * * part cINSERT f13 * * part cINSERT f14 * * part cINSERT f15 part cEMPTY
+ |- ((!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b13 f1 c> cCARD * * * part cset_of_edge b13 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ c= cf1_fan f0 f1 f2 b2 b3 c/\ c= cf1_fan f0 f1 f2 b3 b4 c/\ c~ c= cf1_fan f0 f1 f2 b4 b2 c/\ c= cpr2 b2 b5 c/\ c= cpr2 b3 b6 c/\ c= cpr2 b4 b7 c/\ cIN * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f2 c/\ cIN * * part cINSERT b6 * * part cINSERT b7 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b7 * * part cINSERT b5 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b6 b7 b5 c/\ c= b8 * * part cface chypermap1_of_fanx c, f0 c, f1 b0 c, f0 c, b5 c, b7 csigma_fan f0 f1 b0 b5 b7 c/\ c= b9 * * part cface chypermap1_of_fanx c, f0 c, f1 b0 c, f0 c, b7 c, b5 csigma_fan f0 f1 b0 b7 b5 c/\ c= c, f0 c, b7 c, b5 b6 b10 c/\ c= c, f0 c, b5 c, b6 b7 b11 c/\ c= c, f0 c, b6 c, b7 b5 b12 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b5 * * part cINSERT b7 part cEMPTY part cEMPTY b0 c= b9 * * part cINSERT b10 * * part cINSERT b11 * * part cINSERT b12 part cEMPTY cT
+ |- ((\E. ((FAN (x , (V , E))) ==> (FINITE (d_fan (x , (V , E)))))) E1)
T * / c==> cFAN c, f0 c, f1 b0 cFINITE * part cd_fan c, f0 c, f1 b0 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))) = ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f10 = ((((f1_fan x) V) E1) f30))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 c==> c= c, f2 c, f12 c, f5 f6 f10 c==> c= c, f2 c, f5 c, f6 f12 f11 c==> c= cf1_fan f2 f0 f1 f4 f13 c==> c= cf1_fan f2 f0 f1 f13 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f13 f12 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f12 f5 f6 c==> c> cCARD f14 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f14 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f12 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f12 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f13 * * part cINSERT f3 part cEMPTY f14 c= c==> c= f11 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 c= * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 c/\ cIN f14 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c/\ c> cCARD f14 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f13 * * part cINSERT f3 part cEMPTY f14 c/\ c= cf1_fan f2 f0 f1 f4 f13 c/\ c= cf1_fan f2 f0 f1 f13 f3 c/\ c~ c= cf1_fan f2 f0 f1 f3 f4 c/\ c= cpr2 f4 f6 c/\ c= cpr2 f13 f12 c/\ c= cpr2 f3 f5 c/\ cIN * * part cINSERT f6 * * part cINSERT f12 part cEMPTY f1 c/\ cIN * * part cINSERT f12 * * part cINSERT f5 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f12 f5 f6 c/\ c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c/\ c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c/\ c= f11 c, f2 c, f5 c, f6 f12 c/\ c= f10 c, f2 c, f12 c, f5 f6 c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c= f11 cf1_fan f2 f0 f7 f10 c= * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY
+ |- (((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (NUMERAL (BIT1 (BIT1 _0)))) = ((CARD (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))))
T c= c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (f10 IN (d1_fan (x , (V , E1))))))))))))))))) ds)
T * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b12 f1 c> cCARD * * * part cset_of_edge b12 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c= cf1_fan f0 f1 f2 b2 b3 c/\ c~ c= cf1_fan f0 f1 f2 b3 b1 c/\ c= cpr2 b1 b4 c/\ c= cpr2 b2 b5 c/\ c= cpr2 b3 b6 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2 c/\ cIN * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b6 * * part cINSERT b4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b5 b6 b4 c/\ c= b7 * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, b4 c, b6 csigma_fan f0 f1 f3 b4 b6 c/\ c= b8 * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, b6 c, b4 csigma_fan f0 f1 f3 b6 b4 c/\ c= b9 c, f0 c, b6 c, b4 b5 c/\ c= c, f0 c, b4 c, b5 b6 b10 c/\ c= c, f0 c, b5 c, b6 b4 b11 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b4 * * part cINSERT b6 part cEMPTY part cEMPTY f3 cIN b9 * part cd1_fan c, f0 c, f1 f3 f4
+ |- ((\ds2. (!f10. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f10 = ((((f1_fan x) V) E1) f30)))))) ds2)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= b0 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= b1 c, f0 c, f9 c, f7 f8 c/\ c= b2 c, f0 c, f8 c, f9 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c= b1 cf1_fan f0 f1 f11 b2 f12
+ |- ((\ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f30 = ((((f1_fan x) V) E1) f20)))))))))))))) ds)
T * / ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b11 f1 c> cCARD * * * part cset_of_edge b11 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c= cf1_fan f0 f1 f2 b2 b3 c/\ c~ c= cf1_fan f0 f1 f2 b3 b1 c/\ c= cpr2 b1 b4 c/\ c= cpr2 b2 b5 c/\ c= cpr2 b3 b6 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2 c/\ cIN * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b6 * * part cINSERT b4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b5 b6 b4 c/\ c= b7 * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, b4 c, b6 csigma_fan f0 f1 f3 b4 b6 c/\ c= b8 * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, b6 c, b4 csigma_fan f0 f1 f3 b6 b4 c/\ c= b9 c, f0 c, b4 c, b5 b6 c/\ c= b10 c, f0 c, b5 c, b6 b4 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b4 * * part cINSERT b6 part cEMPTY part cEMPTY f3 c= b10 cf1_fan f0 f1 f3 b9 f4
+ |- (((!y. ((y = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) f10)) ==> (y IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)))) ==> ((\y. ((y = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) f10)) ==> (y IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)))) f20)) = ((\y. ((y = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) f10)) ==> (y IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)))) f20))
T c= c==> ! c==> c= b0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 f3 cIN b0 * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 * / c==> c= b0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 f3 cIN b0 * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 * / c==> c= b0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 f3 cIN b0 * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4
+ |- (((!a. (!b. (((FINITE b) /\ ((a SUBSET b) /\ ((CARD b) <= (CARD a)))) ==> (a = b)))) ==> ((\a. (!b. (((FINITE b) /\ ((a SUBSET b) /\ ((CARD b) <= (CARD a)))) ==> (a = b)))) (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))) = ((\a. (!b. (((FINITE b) /\ ((a SUBSET b) /\ ((CARD b) <= (CARD a)))) ==> (a = b)))) (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c= c==> ! ! c==> c/\ cFINITE b1 c/\ cSUBSET b0 b1 c<= cCARD b1 cCARD b0 c= b0 b1 * / ! c==> c/\ cFINITE b1 c/\ cSUBSET b0 b1 c<= cCARD b1 cCARD b0 c= b0 b1 * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY * / ! c==> c/\ cFINITE b1 c/\ cSUBSET b0 b1 c<= cCARD b1 cCARD b0 c= b0 b1 * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY
+ |- (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cF
+ |- (T = (FINITE EMPTY))
T c= cT cFINITE part cEMPTY
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))), ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))) /\ (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f2 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f3 f0 f1 f4 f5 c==> c~ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c==> cFAN c, f3 c, f0 f1 c==> cFAN c, f3 c, f0 f2 c==> cfan80 c, f3 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f7 * * part cINSERT f6 part cEMPTY part cEMPTY f2 c==> c= f8 * * part cface chypermap1_of_fanx c, f3 c, f0 f2 c, f3 c, f7 c, f6 csigma_fan f3 f0 f2 f7 f6 c==> c= f9 * * part cface chypermap1_of_fanx c, f3 c, f0 f2 c, f3 c, f6 c, f7 csigma_fan f3 f0 f2 f6 f7 c==> c= * part cd_fan c, f3 c, f0 f1 * part cd1_fan c, f3 c, f0 f1 c==> c= * part cface_map chypermap1_of_fanx c, f3 c, f0 f2 * * part cres * * * part cf1_fan f3 f0 f2 * part cd1_fan c, f3 c, f0 f2 c==> c= c, f3 c, f10 c, f6 f7 f11 c==> c= c, f3 c, f7 c, f10 f6 f12 c==> c= c, f3 c, f6 c, f7 f10 f13 c==> c= cf1_fan f3 f0 f1 f5 f14 c==> c= cf1_fan f3 f0 f1 f14 f4 c==> c= cpr2 f5 f7 c==> c= cpr2 f14 f10 c==> c= cpr2 f4 f6 c==> c= csigma_fan f3 f0 f1 f10 f6 f7 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f3 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f7 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f5 * * part cINSERT f14 * * part cINSERT f4 part cEMPTY f15 c/\ c= * part cd_fan c, f3 c, f0 f1 * part cd1_fan c, f3 c, f0 f1 c= * * part cface chypermap1_of_fanx c, f3 c, f0 f2 c, f3 c, f6 c, f7 csigma_fan f3 f0 f2 f6 f7 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f11 part cEMPTY
- |- ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))
T c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0
+ |- (FINITE (f20 INSERT (f30 INSERT EMPTY)))
T cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) ==> (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 f11 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f10 c==> c= c, f2 c, f5 c, f6 f13 f11 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> cSUBSET * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f11 * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY
+ |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
- |- ((!E1. (!V. (!x. (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))))) = T)
T c= ! ! ! c==> c/\ corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 f0 c/\ corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 cf1_fan b2 b1 b0 f0 corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 cf1_fan b2 b1 b0 cf1_fan b2 b1 b0 f0 ! c==> c\/ c= b3 f0 c\/ c= b3 cf1_fan b2 b1 b0 f0 c= b3 cf1_fan b2 b1 b0 cf1_fan b2 b1 b0 f0 corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 b3 cT
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((\x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f30 = ((((f1_fan x) V) E1) f20)))))))))))))))))) x)
T * / ! ! ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b15 b1 c> cCARD * * * part cset_of_edge b15 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b4 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ c> cCARD b4 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY b4 c/\ c= cf1_fan b0 b1 b2 b5 b6 c/\ c= cf1_fan b0 b1 b2 b6 b7 c/\ c~ c= cf1_fan b0 b1 b2 b7 b5 c/\ c= cpr2 b5 b8 c/\ c= cpr2 b6 b9 c/\ c= cpr2 b7 b10 c/\ cIN * * part cINSERT b8 * * part cINSERT b9 part cEMPTY b2 c/\ cIN * * part cINSERT b9 * * part cINSERT b10 part cEMPTY b2 c/\ c~ cIN * * part cINSERT b10 * * part cINSERT b8 part cEMPTY b2 c/\ c= csigma_fan b0 b1 b2 b9 b10 b8 c/\ c= b11 * * part cface chypermap1_of_fanx c, b0 c, b1 b3 c, b0 c, b8 c, b10 csigma_fan b0 b1 b3 b8 b10 c/\ c= b12 * * part cface chypermap1_of_fanx c, b0 c, b1 b3 c, b0 c, b10 c, b8 csigma_fan b0 b1 b3 b10 b8 c/\ c= b13 c, b0 c, b8 c, b9 b10 c/\ c= b14 c, b0 c, b9 c, b10 b8 c= * * part cUNION b2 * * part cINSERT * * part cINSERT b8 * * part cINSERT b10 part cEMPTY part cEMPTY b3 c= b14 cf1_fan b0 b1 b3 b13 f0
+ |- (((!n. (!x. (((~ (n = (NUMERAL _0))) /\ ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) x) = x)) ==> ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) x)) <= n)))) ==> ((\n. (!x. (((~ (n = (NUMERAL _0))) /\ ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) x) = x)) ==> ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) x)) <= n)))) (NUMERAL (BIT1 (BIT1 _0))))) = ((\n. (!x. (((~ (n = (NUMERAL _0))) /\ ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) x) = x)) ==> ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) x)) <= n)))) (NUMERAL (BIT1 (BIT1 _0)))))
T c= c==> ! ! c==> c/\ c~ c= b0 cNUMERAL c_0 c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b0 b1 b1 c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 b0 * / ! c==> c/\ c~ c= b0 cNUMERAL c_0 c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b0 b1 b1 c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 b0 cNUMERAL cBIT1 cBIT1 c_0 * / ! c==> c/\ c~ c= b0 cNUMERAL c_0 c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b0 b1 b1 c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 b0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)
T * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
+ (~ (((((f1_fan x) V) E1) f10) = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))) |- ((((((f1_fan x) V) E1) f10) = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))) = F)
T c==> c~ c= cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c= c= cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 cF
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
+ |- (((!H. (!x. (((face H) x) = ((orbit_map (face_map H)) x)))) ==> ((\H. (!x. (((face H) x) = ((orbit_map (face_map H)) x)))) H)) = ((\H. (!x. (((face H) x) = ((orbit_map (face_map H)) x)))) H))
T c= c==> ! ! c= * * part cface b0 b1 * * part corbit_map * part cface_map b0 b1 * / ! c= * * part cface b0 b1 * * part corbit_map * part cface_map b0 b1 f0 * / ! c= * * part cface b0 b1 * * part corbit_map * part cface_map b0 b1 f0
+ |- (((!E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))) ==> ((\E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))) E1)) = ((\E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))) E1))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= b0 * * part cUNION f2 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= b0 * * part cUNION f2 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 f5 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= b0 * * part cUNION f2 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 f5
+ (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = f10) |- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) ==> F)
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 f3 c==> corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 cF
+ |- ((\f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f30 = ((((f1_fan x) V) E1) f20))))))))))))) f1)
T * / ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b10 f1 c> cCARD * * * part cset_of_edge b10 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c~ c= cf1_fan f0 f1 f2 b2 b0 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ c= cpr2 b2 b5 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b4 b5 b3 c/\ c= b6 * * part cface chypermap1_of_fanx c, f0 c, f1 f4 c, f0 c, b3 c, b5 csigma_fan f0 f1 f4 b3 b5 c/\ c= b7 * * part cface chypermap1_of_fanx c, f0 c, f1 f4 c, f0 c, b5 c, b3 csigma_fan f0 f1 f4 b5 b3 c/\ c= b8 c, f0 c, b3 c, b4 b5 c/\ c= b9 c, f0 c, b4 c, b5 b3 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b3 * * part cINSERT b5 part cEMPTY part cEMPTY f4 c= b9 cf1_fan f0 f1 f4 b8 f5
+ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))), ((x' = f10) \/ ((x' = ((((f1_fan x) V) E1) f10)) \/ (x' = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- (((x' = f10) \/ ((x' = ((((f1_fan x) V) E1) f10)) \/ (x' = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x'))
T c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c==> c\/ c= f4 f3 c\/ c= f4 cf1_fan f0 f1 f2 f3 c= f4 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c/\ c\/ c= f4 f3 c\/ c= f4 cf1_fan f0 f1 f2 f3 c= f4 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4
+ |- ((\x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (f10 IN (d1_fan (x , (V , E1))))))))))))))))))))) x)
T * / ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b16 b1 c> cCARD * * * part cset_of_edge b16 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b4 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ c> cCARD b4 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY b4 c/\ c= cf1_fan b0 b1 b2 b5 b6 c/\ c= cf1_fan b0 b1 b2 b6 b7 c/\ c~ c= cf1_fan b0 b1 b2 b7 b5 c/\ c= cpr2 b5 b8 c/\ c= cpr2 b6 b9 c/\ c= cpr2 b7 b10 c/\ cIN * * part cINSERT b8 * * part cINSERT b9 part cEMPTY b2 c/\ cIN * * part cINSERT b9 * * part cINSERT b10 part cEMPTY b2 c/\ c~ cIN * * part cINSERT b10 * * part cINSERT b8 part cEMPTY b2 c/\ c= csigma_fan b0 b1 b2 b9 b10 b8 c/\ c= b11 * * part cface chypermap1_of_fanx c, b0 c, b1 b3 c, b0 c, b8 c, b10 csigma_fan b0 b1 b3 b8 b10 c/\ c= b12 * * part cface chypermap1_of_fanx c, b0 c, b1 b3 c, b0 c, b10 c, b8 csigma_fan b0 b1 b3 b10 b8 c/\ c= b13 c, b0 c, b10 c, b8 b9 c/\ c= c, b0 c, b8 c, b9 b10 b14 c/\ c= c, b0 c, b9 c, b10 b8 b15 c= * * part cUNION b2 * * part cINSERT * * part cINSERT b8 * * part cINSERT b10 part cEMPTY part cEMPTY b3 cIN b13 * part cd1_fan c, b0 c, b1 b3 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (f30 INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f7 * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 f11 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f10 c==> c= c, f2 c, f5 c, f6 f13 f11 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c= * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT f12 part cEMPTY
+ |- ((\u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> ((~ (f10 = f20)) /\ ((~ (f20 = f30)) /\ (~ (f30 = f10)))))))))))) u)
T * / ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b7 f1 c> cCARD * * * part cset_of_edge b7 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 b0 c/\ c= cpr2 f6 b1 c/\ cIN * * part cINSERT f7 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b1 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 f7 c/\ c= b2 * * part cface chypermap1_of_fanx c, f0 c, f1 f8 c, f0 c, f7 c, b1 csigma_fan f0 f1 f8 f7 b1 c/\ c= b3 * * part cface chypermap1_of_fanx c, f0 c, f1 f8 c, f0 c, b1 c, f7 csigma_fan f0 f1 f8 b1 f7 c/\ c= b4 c, f0 c, b1 c, f7 b0 c/\ c= b5 c, f0 c, f7 c, b0 b1 c/\ c= b6 c, f0 c, b0 c, b1 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT b1 part cEMPTY part cEMPTY f8 c/\ c~ c= b4 b5 c/\ c~ c= b5 b6 c~ c= b6 b4 f9
+ (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- F
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 cF
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?n. t) = t)
T c= c? / f0 f0
+ |- ((!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b7 f1 c> cCARD * * * part cset_of_edge b7 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 b0 c/\ c= cpr2 f6 b1 c/\ cIN * * part cINSERT f7 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b1 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 f7 c/\ c= b2 * * part cface chypermap1_of_fanx c, f0 c, f1 f8 c, f0 c, f7 c, b1 csigma_fan f0 f1 f8 f7 b1 c/\ c= b3 * * part cface chypermap1_of_fanx c, f0 c, f1 f8 c, f0 c, b1 c, f7 csigma_fan f0 f1 f8 b1 f7 c/\ c= c, f0 c, b1 c, f7 b0 b4 c/\ c= c, f0 c, f7 c, b0 b1 b5 c/\ c= c, f0 c, b0 c, b1 f7 b6 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT b1 part cEMPTY part cEMPTY f8 c= b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cT
+ |- ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))) = T)
T c= c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= c, f0 c, f9 c, f7 f8 f13 c/\ c= c, f0 c, f7 c, f8 f9 f14 c/\ c= c, f0 c, f8 c, f9 f7 f15 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c= f12 * * part cINSERT f13 * * part cINSERT f14 * * part cINSERT f15 part cEMPTY cT
- ((f10 = f20) \/ (f10 = f30)) |- (((f10 = f20) \/ (f10 = f30)) = T)
T c==> c\/ c= f0 f1 c= f0 f2 c= c\/ c= f0 f1 c= f0 f2 cT
+ |- ((\ds2. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f30 = ((((f1_fan x) V) E1) f20)))))) ds2)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= b0 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= b1 c, f0 c, f7 c, f8 f9 c/\ c= b2 c, f0 c, f8 c, f9 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c= b2 cf1_fan f0 f1 f11 b1 f12
+ |- (((!t'. (!e'. (((f10 IN (f20 INSERT (f30 INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (f20 INSERT (f30 INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (f20 INSERT (f30 INSERT EMPTY)))) = e')) ==> ((((COND (f10 IN (f20 INSERT (f30 INSERT EMPTY)))) (CARD (f20 INSERT (f30 INSERT EMPTY)))) (SUC (CARD (f20 INSERT (f30 INSERT EMPTY))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((f10 IN (f20 INSERT (f30 INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (f20 INSERT (f30 INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (f20 INSERT (f30 INSERT EMPTY)))) = e')) ==> ((((COND (f10 IN (f20 INSERT (f30 INSERT EMPTY)))) (CARD (f20 INSERT (f30 INSERT EMPTY)))) (SUC (CARD (f20 INSERT (f30 INSERT EMPTY))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((f10 IN (f20 INSERT (f30 INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (f20 INSERT (f30 INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (f20 INSERT (f30 INSERT EMPTY)))) = e')) ==> ((((COND (f10 IN (f20 INSERT (f30 INSERT EMPTY)))) (CARD (f20 INSERT (f30 INSERT EMPTY)))) (SUC (CARD (f20 INSERT (f30 INSERT EMPTY))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 b0 b1 * / ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 b0 b1 f4 * / ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 b0 b1 f4
+ (FAN (x , (V , E1))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((CARD (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0)))), ((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) |- (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c==> cFAN c, f0 c, f1 f2 c==> c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c= f3 cf1_fan f0 f1 f2 f4 c==> c= f5 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f4 c==> c= cCARD * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f5 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0 c==> cSUBSET * * part cINSERT f4 * * part cINSERT cf1_fan f0 f1 f2 f4 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f4 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f4 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f4 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f4 * * part cINSERT f4 * * part cINSERT cf1_fan f0 f1 f2 f4 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f4 part cEMPTY
+ |- (!y. ((y = (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL _0)) f10)) ==> (y IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10))))
T c==> c= f0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 cNUMERAL c_0 f4 cIN f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4
+ (FINITE (d1_fan (x , (V , E1)))) |- ((FINITE (d1_fan (x , (V , E1)))) = T)
T c==> cFINITE * part cd1_fan c, f0 c, f1 f2 c= cFINITE * part cd1_fan c, f0 c, f1 f2 cT
+ |- (((!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) w) v) = u))))) ==> ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) w) v) = u))))) v)) = ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) w) v) = u))))) v))
T c= c==> ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 b2 b0 b1 * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 b2 b0 b1 f4 * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 b2 b0 b1 f4
+ |- (((((f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) /\ ((((((f1_fan x) V) E1) f10) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) /\ (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)))) ==> ((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10))) ==> (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))) = (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c= c==> c==> c/\ cIN f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 c/\ cIN cf1_fan f1 f2 f3 f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 cIN cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 cSUBSET * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 b1 f0 * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 b1 f0 * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY
+ |- ((\E. (!E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))))) E)
T * / ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 c= b1 * * part cUNION b0 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b1 cNUMERAL cBIT1 c_0 f4
+ |- ((\x. (!V. (!E. (!p. (((FAN (x , (V , E))) /\ (p = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> ((permutes (p f1_fan)) (d_fan (x , (V , E))))))))) x)
T * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c= b3 / * * part cres * * * b4 b0 b1 b2 * part cd1_fan c, b0 c, b1 b2 cpermutes * b3 part cf1_fan * part cd_fan c, b0 c, b1 b2 f0
- |- ((\e'. (((f20 = f30) = g') ==> ((g' ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ g') ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cSUC cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cSUC cNUMERAL c_0 b0 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f2 f3 b0 f4
+ |- ((\E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f30 = ((((f1_fan x) V) E1) f20))))))))))))))) E1)
T * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b12 f1 c> cCARD * * * part cset_of_edge b12 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ c= cf1_fan f0 f1 f2 b2 b3 c/\ c= cf1_fan f0 f1 f2 b3 b4 c/\ c~ c= cf1_fan f0 f1 f2 b4 b2 c/\ c= cpr2 b2 b5 c/\ c= cpr2 b3 b6 c/\ c= cpr2 b4 b7 c/\ cIN * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f2 c/\ cIN * * part cINSERT b6 * * part cINSERT b7 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b7 * * part cINSERT b5 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b6 b7 b5 c/\ c= b8 * * part cface chypermap1_of_fanx c, f0 c, f1 b0 c, f0 c, b5 c, b7 csigma_fan f0 f1 b0 b5 b7 c/\ c= b9 * * part cface chypermap1_of_fanx c, f0 c, f1 b0 c, f0 c, b7 c, b5 csigma_fan f0 f1 b0 b7 b5 c/\ c= b10 c, f0 c, b5 c, b6 b7 c/\ c= b11 c, f0 c, b6 c, b7 b5 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b5 * * part cINSERT b7 part cEMPTY part cEMPTY b0 c= b11 cf1_fan f0 f1 b0 b10 f3
- (~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) |- F
T c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF
+ |- ((\E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f10 = ((((f1_fan x) V) E1) f30))))))))))))))) E1)
T * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b12 f1 c> cCARD * * * part cset_of_edge b12 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ c= cf1_fan f0 f1 f2 b2 b3 c/\ c= cf1_fan f0 f1 f2 b3 b4 c/\ c~ c= cf1_fan f0 f1 f2 b4 b2 c/\ c= cpr2 b2 b5 c/\ c= cpr2 b3 b6 c/\ c= cpr2 b4 b7 c/\ cIN * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f2 c/\ cIN * * part cINSERT b6 * * part cINSERT b7 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b7 * * part cINSERT b5 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b6 b7 b5 c/\ c= b8 * * part cface chypermap1_of_fanx c, f0 c, f1 b0 c, f0 c, b5 c, b7 csigma_fan f0 f1 b0 b5 b7 c/\ c= b9 * * part cface chypermap1_of_fanx c, f0 c, f1 b0 c, f0 c, b7 c, b5 csigma_fan f0 f1 b0 b7 b5 c/\ c= b10 c, f0 c, b7 c, b5 b6 c/\ c= b11 c, f0 c, b6 c, b7 b5 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b5 * * part cINSERT b7 part cEMPTY part cEMPTY b0 c= b10 cf1_fan f0 f1 b0 b11 f3
+ |- ((\v. (!u. (!w. (!ds1. (!ds2. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f30 = ((((f1_fan x) V) E1) f20)))))))))) v)
T * / ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b7 f1 c> cCARD * * * part cset_of_edge b7 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 b0 c/\ c= cpr2 f5 b1 c/\ c= cpr2 f6 b2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ c= b3 * * part cface chypermap1_of_fanx c, f0 c, f1 f7 c, f0 c, b0 c, b2 csigma_fan f0 f1 f7 b0 b2 c/\ c= b4 * * part cface chypermap1_of_fanx c, f0 c, f1 f7 c, f0 c, b2 c, b0 csigma_fan f0 f1 f7 b2 b0 c/\ c= b5 c, f0 c, b0 c, b1 b2 c/\ c= b6 c, f0 c, b1 c, b2 b0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY part cEMPTY f7 c= b6 cf1_fan f0 f1 f7 b5 f8
+ |- ((\ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (f10 IN (d1_fan (x , (V , E1))))))))) ds2)
T * / ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b4 f1 c> cCARD * * * part cset_of_edge b4 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= b0 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= b1 c, f0 c, f9 c, f7 f8 c/\ c= c, f0 c, f7 c, f8 f9 b2 c/\ c= c, f0 c, f8 c, f9 f7 b3 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 cIN b1 * part cd1_fan c, f0 c, f1 f11 f12
+ ((permutes ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (d1_fan (x , (V , E1)))) |- (((permutes ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (d1_fan (x , (V , E1)))) = T)
T c==> cpermutes * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c= cpermutes * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 cT
- |- ((((f10 = f20) \/ (f10 = f30)) = g') ==> ((g' ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND g') t') e')))))
T c==> c= c\/ c= f0 f1 c= f0 f2 f3 c==> c==> f3 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f4 c==> c==> c~ f3 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f5 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f3 f4 f5
+ |- ((\f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (f10 IN (d1_fan (x , (V , E1))))))))))))))) f2)
T * / ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b10 f1 c> cCARD * * * part cset_of_edge b10 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 b0 c/\ c= cf1_fan f0 f1 f2 b0 b1 c/\ c~ c= cf1_fan f0 f1 f2 b1 f4 c/\ c= cpr2 f4 b2 c/\ c= cpr2 b0 b3 c/\ c= cpr2 b1 b4 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b3 b4 b2 c/\ c= b5 * * part cface chypermap1_of_fanx c, f0 c, f1 f5 c, f0 c, b2 c, b4 csigma_fan f0 f1 f5 b2 b4 c/\ c= b6 * * part cface chypermap1_of_fanx c, f0 c, f1 f5 c, f0 c, b4 c, b2 csigma_fan f0 f1 f5 b4 b2 c/\ c= b7 c, f0 c, b4 c, b2 b3 c/\ c= c, f0 c, b2 c, b3 b4 b8 c/\ c= c, f0 c, b3 c, b4 b2 b9 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY part cEMPTY f5 cIN b7 * part cd1_fan c, f0 c, f1 f5 f6
+ |- ((\w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> (f10 IN (d1_fan (x , (V , E1))))))))))) w)
T * / ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b6 f1 c> cCARD * * * part cset_of_edge b6 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 b0 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT b0 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b0 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 b0 f7 c/\ c= b1 * * part cface chypermap1_of_fanx c, f0 c, f1 f9 c, f0 c, f7 c, b0 csigma_fan f0 f1 f9 f7 b0 c/\ c= b2 * * part cface chypermap1_of_fanx c, f0 c, f1 f9 c, f0 c, b0 c, f7 csigma_fan f0 f1 f9 b0 f7 c/\ c= b3 c, f0 c, b0 c, f7 f8 c/\ c= c, f0 c, f7 c, f8 b0 b4 c/\ c= c, f0 c, f8 c, b0 f7 b5 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT b0 part cEMPTY part cEMPTY f9 cIN b3 * part cd1_fan c, f0 c, f1 f9 f10
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f7 * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c= * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
+ |- ((\E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f10 = ((((f1_fan x) V) E1) f30)))))))))))))))) E)
T * / ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b13 f1 c> cCARD * * * part cset_of_edge b13 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 c/\ cIN b2 * part cface_set chypermap1_of_fanx c, f0 c, f1 b0 c/\ c> cCARD b2 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b2 c/\ c= cf1_fan f0 f1 b0 b3 b4 c/\ c= cf1_fan f0 f1 b0 b4 b5 c/\ c~ c= cf1_fan f0 f1 b0 b5 b3 c/\ c= cpr2 b3 b6 c/\ c= cpr2 b4 b7 c/\ c= cpr2 b5 b8 c/\ cIN * * part cINSERT b6 * * part cINSERT b7 part cEMPTY b0 c/\ cIN * * part cINSERT b7 * * part cINSERT b8 part cEMPTY b0 c/\ c~ cIN * * part cINSERT b8 * * part cINSERT b6 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b7 b8 b6 c/\ c= b9 * * part cface chypermap1_of_fanx c, f0 c, f1 b1 c, f0 c, b6 c, b8 csigma_fan f0 f1 b1 b6 b8 c/\ c= b10 * * part cface chypermap1_of_fanx c, f0 c, f1 b1 c, f0 c, b8 c, b6 csigma_fan f0 f1 b1 b8 b6 c/\ c= b11 c, f0 c, b8 c, b6 b7 c/\ c= b12 c, f0 c, b7 c, b8 b6 c= * * part cUNION b0 * * part cINSERT * * part cINSERT b6 * * part cINSERT b8 part cEMPTY part cEMPTY b1 c= b11 cf1_fan f0 f1 b1 b12 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) f10)), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (f10 IN (d1_fan (x , (V , E1)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 cBIT1 c_0 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c/\ ! c==> cIN b0 * part cd1_fan c, f2 c, f0 f7 c= cPOWER * * part cres * * * part cn_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part cn_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 b0 ! c==> cIN b0 * part cd1_fan c, f2 c, f0 f7 c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cIN f10 * part cd1_fan c, f2 c, f0 f7 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
+ |- ((\E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> ((~ (f10 = f20)) /\ ((~ (f20 = f30)) /\ (~ (f30 = f10)))))))))))))))))) E1)
T * / ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b13 f1 c> cCARD * * * part cset_of_edge b13 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ c= cf1_fan f0 f1 f2 b2 b3 c/\ c= cf1_fan f0 f1 f2 b3 b4 c/\ c~ c= cf1_fan f0 f1 f2 b4 b2 c/\ c= cpr2 b2 b5 c/\ c= cpr2 b3 b6 c/\ c= cpr2 b4 b7 c/\ cIN * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f2 c/\ cIN * * part cINSERT b6 * * part cINSERT b7 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b7 * * part cINSERT b5 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b6 b7 b5 c/\ c= b8 * * part cface chypermap1_of_fanx c, f0 c, f1 b0 c, f0 c, b5 c, b7 csigma_fan f0 f1 b0 b5 b7 c/\ c= b9 * * part cface chypermap1_of_fanx c, f0 c, f1 b0 c, f0 c, b7 c, b5 csigma_fan f0 f1 b0 b7 b5 c/\ c= b10 c, f0 c, b7 c, b5 b6 c/\ c= b11 c, f0 c, b5 c, b6 b7 c/\ c= b12 c, f0 c, b6 c, b7 b5 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b5 * * part cINSERT b7 part cEMPTY part cEMPTY b0 c/\ c~ c= b10 b11 c/\ c~ c= b11 b12 c~ c= b12 b10 f3
+ (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))) |- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))) ==> F)
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3 c==> corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), (((((f1_fan x) V) E1) f10) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) /\ (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 f11 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f10 c==> c= c, f2 c, f5 c, f6 f13 f11 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cIN f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> cIN cf1_fan f2 f0 f7 f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> cIN cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c/\ cIN cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f11 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f11 * * part cINSERT f11 * * part cINSERT cf1_fan f2 f0 f7 f11 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f11 part cEMPTY
+ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) f10)) ==> F) = F)
T c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c= c==> corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 f3 cF cF
- |- ((((~ ((f10 = f20) \/ (f10 = f30))) ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))))) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))))) = ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))))))
T c= c==> c==> c~ c\/ c= f0 f1 c= f0 f2 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0
- ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F), (((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F) ==> ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F)) |- (((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F) /\ ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))
T c==> c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c==> c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c/\ c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f7 * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= c, f2 c, f10 c, f5 f6 f11 c==> c= c, f2 c, f6 c, f10 f5 f12 c==> c= c, f2 c, f5 c, f6 f10 f13 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f10 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c= * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f11 part cEMPTY
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= c, f2 c, f10 c, f5 f6 f11 c==> c= c, f2 c, f6 c, f10 f5 f12 c==> c= c, f2 c, f5 c, f6 f10 f13 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f10 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part ce_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cn_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cf1_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f11 part cEMPTY
+ |- (((!t'. (!e'. (((f30 IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (f30 IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((f30 IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (f30 IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((f30 IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (f30 IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY b0 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 b0 b1 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY b0 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 b0 b1 f2 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY b0 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 b0 b1 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ (((x , (w , (v , u))) = f10) /\ (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) |- (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 c/\ c= cf1_fan f2 f0 f1 f3 f4 c/\ c= cf1_fan f2 f0 f1 f4 f5 c/\ c~ c= cf1_fan f2 f0 f1 f5 f3 c/\ c= cpr2 f3 f7 c/\ c= cpr2 f4 f8 c/\ c= cpr2 f5 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f1 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f1 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f2 c, f0 f11 c, f2 c, f7 c, f9 csigma_fan f2 f0 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f2 c, f0 f11 c, f2 c, f9 c, f7 csigma_fan f2 f0 f11 f9 f7 c/\ c= c, f2 c, f9 c, f7 f8 f13 c/\ c= c, f2 c, f7 c, f8 f9 f14 c/\ c= c, f2 c, f8 c, f9 f7 f15 c= * * part cUNION f1 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c==> c> cCARD f6 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f6 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c= f12 * * part cINSERT f13 * * part cINSERT f14 * * part cINSERT f15 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), (((x , (v , (u , w))) = f20) /\ (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f7 * * part cface chypermap1_of_fanx c, f2 c, f0 f8 c, f2 c, f6 c, f5 csigma_fan f2 f0 f8 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f8 c, f2 c, f5 c, f6 csigma_fan f2 f0 f8 f5 f6 c==> c= c, f2 c, f5 c, f6 f10 f11 c==> c= cf1_fan f2 f0 f1 f4 f12 c==> c= cf1_fan f2 f0 f1 f12 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f12 f10 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c/\ c= c, f2 c, f6 c, f10 f5 f13 c/\ c= c, f2 c, f10 c, f5 f6 f14 c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f8 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f12 * * part cINSERT f3 part cEMPTY f15 c= f9 * * part cINSERT f11 * * part cINSERT f13 * * part cINSERT f14 part cEMPTY
+ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) f10)), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (f10 IN (d1_fan (x , (V , E1)))), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f3 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f0 f1 f3 f4 f5 c==> c~ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f3 c==> cFAN c, f0 c, f1 f3 c==> cFAN c, f0 c, f1 f2 c==> cfan80 c, f0 c, f1 f3 c==> c= * * part cUNION f3 * * part cINSERT * * part cINSERT f7 * * part cINSERT f6 part cEMPTY part cEMPTY f2 c==> c= f8 * * part cface chypermap1_of_fanx c, f0 c, f1 f2 c, f0 c, f7 c, f6 csigma_fan f0 f1 f2 f7 f6 c==> c= f9 * * part cface chypermap1_of_fanx c, f0 c, f1 f2 c, f0 c, f6 c, f7 csigma_fan f0 f1 f2 f6 f7 c==> c= * part cd_fan c, f0 c, f1 f2 * part cd1_fan c, f0 c, f1 f2 c==> c= f10 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f10 c==> c= f11 cf1_fan f0 f1 f2 f10 c==> c= f12 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f10 c==> c= c, f0 c, f13 c, f6 f7 f12 c==> c= c, f0 c, f7 c, f13 f6 f11 c==> c= c, f0 c, f6 c, f7 f13 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f10 c==> c= cf1_fan f0 f1 f3 f5 f14 c==> c= cf1_fan f0 f1 f3 f14 f4 c==> c= cpr2 f5 f7 c==> c= cpr2 f14 f13 c==> c= cpr2 f4 f6 c==> c= csigma_fan f0 f1 f3 f13 f6 f7 c==> c= csigma_fan f0 f1 f2 f6 f7 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f0 c, f1 f3 c==> cIN * * part cINSERT f13 * * part cINSERT f6 part cEMPTY f3 c==> cIN * * part cINSERT f7 * * part cINSERT f13 part cEMPTY f3 c==> cIN f10 * part cd1_fan c, f0 c, f1 f2 c==> cSUBSET * * part cINSERT f5 * * part cINSERT f14 * * part cINSERT f4 part cEMPTY f15 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f0 f1 f2 f10 * * part cINSERT cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f10 part cEMPTY
+ |- ((\ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> ((~ (f10 = f20)) /\ ((~ (f20 = f30)) /\ (~ (f30 = f10))))))))))))))))) ds)
T * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b12 f1 c> cCARD * * * part cset_of_edge b12 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD b0 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ c= cf1_fan f0 f1 f2 b1 b2 c/\ c= cf1_fan f0 f1 f2 b2 b3 c/\ c~ c= cf1_fan f0 f1 f2 b3 b1 c/\ c= cpr2 b1 b4 c/\ c= cpr2 b2 b5 c/\ c= cpr2 b3 b6 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2 c/\ cIN * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b6 * * part cINSERT b4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b5 b6 b4 c/\ c= b7 * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, b4 c, b6 csigma_fan f0 f1 f3 b4 b6 c/\ c= b8 * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, b6 c, b4 csigma_fan f0 f1 f3 b6 b4 c/\ c= b9 c, f0 c, b6 c, b4 b5 c/\ c= b10 c, f0 c, b4 c, b5 b6 c/\ c= b11 c, f0 c, b5 c, b6 b4 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b4 * * part cINSERT b6 part cEMPTY part cEMPTY f3 c/\ c~ c= b9 b10 c/\ c~ c= b10 b11 c~ c= b11 b9 f4
+ |- ((\x. (!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (!f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> ((~ (f10 = f20)) /\ ((~ (f20 = f30)) /\ (~ (f30 = f10))))))))))))))))))))) x)
T * / ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b16 b1 c> cCARD * * * part cset_of_edge b16 b1 b2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, b0 c, b1 b2 c/\ cIN b4 * part cface_set chypermap1_of_fanx c, b0 c, b1 b2 c/\ c> cCARD b4 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY b4 c/\ c= cf1_fan b0 b1 b2 b5 b6 c/\ c= cf1_fan b0 b1 b2 b6 b7 c/\ c~ c= cf1_fan b0 b1 b2 b7 b5 c/\ c= cpr2 b5 b8 c/\ c= cpr2 b6 b9 c/\ c= cpr2 b7 b10 c/\ cIN * * part cINSERT b8 * * part cINSERT b9 part cEMPTY b2 c/\ cIN * * part cINSERT b9 * * part cINSERT b10 part cEMPTY b2 c/\ c~ cIN * * part cINSERT b10 * * part cINSERT b8 part cEMPTY b2 c/\ c= csigma_fan b0 b1 b2 b9 b10 b8 c/\ c= b11 * * part cface chypermap1_of_fanx c, b0 c, b1 b3 c, b0 c, b8 c, b10 csigma_fan b0 b1 b3 b8 b10 c/\ c= b12 * * part cface chypermap1_of_fanx c, b0 c, b1 b3 c, b0 c, b10 c, b8 csigma_fan b0 b1 b3 b10 b8 c/\ c= b13 c, b0 c, b10 c, b8 b9 c/\ c= b14 c, b0 c, b8 c, b9 b10 c/\ c= b15 c, b0 c, b9 c, b10 b8 c= * * part cUNION b2 * * part cINSERT * * part cINSERT b8 * * part cINSERT b10 part cEMPTY part cEMPTY b3 c/\ c~ c= b13 b14 c/\ c~ c= b14 b15 c~ c= b15 b13 f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((\E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (!ds1. (!ds2. (!f10. (!f20. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f20 = (x , (v , (u , w)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))))))) ==> (f20 = ((((f1_fan x) V) E1) f10))))))))))))))) E1)
T * / ! ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b12 f1 c> cCARD * * * part cset_of_edge b12 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN b1 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD b1 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ c= cf1_fan f0 f1 f2 b2 b3 c/\ c= cf1_fan f0 f1 f2 b3 b4 c/\ c~ c= cf1_fan f0 f1 f2 b4 b2 c/\ c= cpr2 b2 b5 c/\ c= cpr2 b3 b6 c/\ c= cpr2 b4 b7 c/\ cIN * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f2 c/\ cIN * * part cINSERT b6 * * part cINSERT b7 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b7 * * part cINSERT b5 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b6 b7 b5 c/\ c= b8 * * part cface chypermap1_of_fanx c, f0 c, f1 b0 c, f0 c, b5 c, b7 csigma_fan f0 f1 b0 b5 b7 c/\ c= b9 * * part cface chypermap1_of_fanx c, f0 c, f1 b0 c, f0 c, b7 c, b5 csigma_fan f0 f1 b0 b7 b5 c/\ c= b10 c, f0 c, b7 c, b5 b6 c/\ c= b11 c, f0 c, b5 c, b6 b7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b5 * * part cINSERT b7 part cEMPTY part cEMPTY b0 c= b11 cf1_fan f0 f1 b0 b10 f3
- (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10)))), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10)))) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))))
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c/\ c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3
- |- ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))))
T c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (~ F), (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = ((I (((f1_fan x) V) E1)) f10)), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 cI * * * part cf1_fan f0 f1 f2 f3 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c/\ c~ cF cF
+ (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))), ((x' = f10) \/ ((x' = ((((f1_fan x) V) E1) f10)) \/ (x' = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- F
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c==> c\/ c= f4 f3 c\/ c= f4 cf1_fan f0 f1 f2 f3 c= f4 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 cF
+ |- ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s)
T * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1
+ |- ((\t'. (!e'. (((f10 IN (f20 INSERT (f30 INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (f20 INSERT (f30 INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (f20 INSERT (f30 INSERT EMPTY)))) = e')) ==> ((((COND (f10 IN (f20 INSERT (f30 INSERT EMPTY)))) (CARD (f20 INSERT (f30 INSERT EMPTY)))) (SUC (CARD (f20 INSERT (f30 INSERT EMPTY))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 b0 b1 f4
+ |- ((\E. (!E1. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) w) v) = u))))))) E)
T * / ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cFAN c, f0 c, f1 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b0 c/\ c~ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b3 b4 b2 c/\ cfan80 c, f0 c, f1 b0 c/\ ! c==> cIN b5 f1 c> cCARD * * * part cset_of_edge b5 f1 b0 cNUMERAL cBIT1 c_0 c= * * part cUNION b0 * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY part cEMPTY b1 c= csigma_fan f0 f1 b1 b4 b2 b3 f2
- |- ((\x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F)) x)
T * / c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 f2 c/\ corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 cf1_fan b0 f0 f1 f2 corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 cf1_fan b0 f0 f1 cf1_fan b0 f0 f1 f2 ! c==> c\/ c= b1 f2 c\/ c= b1 cf1_fan b0 f0 f1 f2 c= b1 cf1_fan b0 f0 f1 cf1_fan b0 f0 f1 f2 corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 b1 cF f3
+ |- ((\n. (!p. (((FAN (x , (V , E1))) /\ (p = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p e_fan)) n) y) = (((POWER (((e_fan x) V) E1)) n) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p n_fan)) n) y) = (((POWER (((n_fan x) V) E1)) n) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER (p f1_fan)) n) y) = (((POWER (((f1_fan x) V) E1)) n) y))))))))) (NUMERAL (BIT1 (BIT1 _0))))
T * / ! c==> c/\ cFAN c, f0 c, f1 f2 c= b1 / * * part cres * * * b2 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part ce_fan b0 b2 cPOWER * * * part ce_fan f0 f1 f2 b0 b2 c/\ ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cn_fan b0 b2 cPOWER * * * part cn_fan f0 f1 f2 b0 b2 ! c==> cIN b2 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * b1 part cf1_fan b0 b2 cPOWER * * * part cf1_fan f0 f1 f2 b0 b2 cNUMERAL cBIT1 cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
+ |- (((FAN (x , (V , E1))) /\ ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) = (\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))))) ==> ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) e_fan)) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))) /\ ((!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) n_fan)) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))) /\ (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((\t. ((res (((t x) V) E1)) (d1_fan (x , (V , E1))))) f1_fan)) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c= / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * / * * part cres * * * b1 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part ce_fan cNUMERAL cBIT1 cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 c/\ ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * / * * part cres * * * b1 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cn_fan cNUMERAL cBIT1 cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * / * * part cres * * * b1 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cf1_fan cNUMERAL cBIT1 cBIT1 c_0 b0 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0
+ (~ (f10 = ((((f1_fan x) V) E1) f10))), (~ (((((f1_fan x) V) E1) f10) = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (~ (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) = f10)), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))) |- ((CARD (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))) = (NUMERAL (BIT1 (BIT1 _0))))
T c==> c~ c= f0 cf1_fan f1 f2 f3 f0 c==> c~ c= cf1_fan f1 f2 f3 f0 cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 c==> c~ c= cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 f0 c==> c= f4 cf1_fan f1 f2 f3 f0 c==> c= f5 cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 c= cCARD * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cNUMERAL cBIT1 cBIT1 c_0
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))) |- (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))))
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3 c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3
+ |- (((f10 IN (f20 INSERT (f30 INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (f20 INSERT (f30 INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (f20 INSERT (f30 INSERT EMPTY)))) = e')) ==> ((((COND (f10 IN (f20 INSERT (f30 INSERT EMPTY)))) (CARD (f20 INSERT (f30 INSERT EMPTY)))) (SUC (CARD (f20 INSERT (f30 INSERT EMPTY))))) = (((COND g') t') e')))))
T c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 f4 f5
+ |- ((\e'. (((f10 IN (f20 INSERT (f30 INSERT EMPTY))) = g') ==> ((g' ==> ((CARD (f20 INSERT (f30 INSERT EMPTY))) = t')) ==> (((~ g') ==> ((SUC (CARD (f20 INSERT (f30 INSERT EMPTY)))) = e')) ==> ((((COND (f10 IN (f20 INSERT (f30 INSERT EMPTY)))) (CARD (f20 INSERT (f30 INSERT EMPTY)))) (SUC (CARD (f20 INSERT (f30 INSERT EMPTY))))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c==> f3 c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> c~ f3 c= cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= cCOND cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUC cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cCOND f3 f4 b0 f5
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
+ |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))) |- ((\y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))) y)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 * / c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 f3
+ (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = f10), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((x' = f10) /\ F)
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 f3 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c/\ c= f4 f3 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), (((x , (u , (w , v))) = f30) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (ds2 = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= f7 * * part cface chypermap1_of_fanx c, f2 c, f0 f8 c, f2 c, f6 c, f5 csigma_fan f2 f0 f8 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f8 c, f2 c, f5 c, f6 csigma_fan f2 f0 f8 f5 f6 c==> c= c, f2 c, f6 c, f10 f5 f11 c==> c= c, f2 c, f5 c, f6 f10 f12 c==> c= cf1_fan f2 f0 f1 f4 f13 c==> c= cf1_fan f2 f0 f1 f13 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f13 f10 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c/\ c= c, f2 c, f10 c, f5 f6 f14 c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f8 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f13 * * part cINSERT f3 part cEMPTY f15 c= f9 * * part cINSERT f12 * * part cINSERT f11 * * part cINSERT f14 part cEMPTY
+ |- ((\f30. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))) /\ ((ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))) /\ ((f10 = (x , (w , (v , u)))) /\ ((f20 = (x , (v , (u , w)))) /\ ((f30 = (x , (u , (w , v)))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))))))))))))))))) ==> ((~ (f10 = f20)) /\ ((~ (f20 = f30)) /\ (~ (f30 = f10)))))) f30)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 c/\ c> cCARD f3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= cf1_fan f0 f1 f2 f4 f5 c/\ c= cf1_fan f0 f1 f2 f5 f6 c/\ c~ c= cf1_fan f0 f1 f2 f6 f4 c/\ c= cpr2 f4 f7 c/\ c= cpr2 f5 f8 c/\ c= cpr2 f6 f9 c/\ cIN * * part cINSERT f7 * * part cINSERT f8 part cEMPTY f2 c/\ cIN * * part cINSERT f8 * * part cINSERT f9 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f9 * * part cINSERT f7 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f8 f9 f7 c/\ c= f10 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f7 c, f9 csigma_fan f0 f1 f11 f7 f9 c/\ c= f12 * * part cface chypermap1_of_fanx c, f0 c, f1 f11 c, f0 c, f9 c, f7 csigma_fan f0 f1 f11 f9 f7 c/\ c= f13 c, f0 c, f9 c, f7 f8 c/\ c= f14 c, f0 c, f7 c, f8 f9 c/\ c= b0 c, f0 c, f8 c, f9 f7 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f7 * * part cINSERT f9 part cEMPTY part cEMPTY f11 c/\ c~ c= f13 f14 c/\ c~ c= f14 b0 c~ c= b0 f13 f15
+ (f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), (((((f1_fan x) V) E1) f10) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)), (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) |- ((((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) ==> (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))) = ((((f10 IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) /\ ((((((f1_fan x) V) E1) f10) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) /\ (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) IN ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)))) ==> ((f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))) SUBSET ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10))) ==> (((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (NUMERAL (BIT1 (BIT1 _0)))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))))
T c==> cIN f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 c==> cIN cf1_fan f1 f2 f3 f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 c==> cIN cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 c= c==> cSUBSET * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 b1 f0 * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY c==> c==> c/\ cIN f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 c/\ cIN cf1_fan f1 f2 f3 f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 cIN cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 cSUBSET * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 c==> c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f0 cNUMERAL cBIT1 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 b1 f0 * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY
+ |- (((!V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))))))) ==> ((\V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))))))) V)) = ((\V. (!E. (!E1. (!ds. (!f1. (!f2. (!f3. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((ds IN (face_set (hypermap1_of_fanx (x , (V , E))))) /\ (((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))) /\ (((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) /\ ((((((f1_fan x) V) E) f1) = f2) /\ ((((((f1_fan x) V) E) f2) = f3) /\ ((~ (((((f1_fan x) V) E) f3) = f1)) /\ (((pr2 f1) = v) /\ (((pr2 f2) = u) /\ (((pr2 f3) = w) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))))))))))) ==> (FAN (x , (V , E1)))))))))))))) V))
T c= c==> ! ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b10 b0 c> cCARD * * * part cset_of_edge b10 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c/\ c> cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY b3 c/\ c= cf1_fan f0 b0 b1 b4 b5 c/\ c= cf1_fan f0 b0 b1 b5 b6 c/\ c~ c= cf1_fan f0 b0 b1 b6 b4 c/\ c= cpr2 b4 b7 c/\ c= cpr2 b5 b8 c/\ c= cpr2 b6 b9 c/\ cIN * * part cINSERT b7 * * part cINSERT b8 part cEMPTY b1 c/\ cIN * * part cINSERT b8 * * part cINSERT b9 part cEMPTY b1 c/\ c~ cIN * * part cINSERT b9 * * part cINSERT b7 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b8 b9 b7 c= * * part cUNION b1 * * part cINSERT * * part cINSERT b7 * * part cINSERT b9 part cEMPTY part cEMPTY b2 cFAN c, f0 c, b0 b2 * / ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b10 b0 c> cCARD * * * part cset_of_edge b10 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c/\ c> cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY b3 c/\ c= cf1_fan f0 b0 b1 b4 b5 c/\ c= cf1_fan f0 b0 b1 b5 b6 c/\ c~ c= cf1_fan f0 b0 b1 b6 b4 c/\ c= cpr2 b4 b7 c/\ c= cpr2 b5 b8 c/\ c= cpr2 b6 b9 c/\ cIN * * part cINSERT b7 * * part cINSERT b8 part cEMPTY b1 c/\ cIN * * part cINSERT b8 * * part cINSERT b9 part cEMPTY b1 c/\ c~ cIN * * part cINSERT b9 * * part cINSERT b7 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b8 b9 b7 c= * * part cUNION b1 * * part cINSERT * * part cINSERT b7 * * part cINSERT b9 part cEMPTY part cEMPTY b2 cFAN c, f0 c, b0 b2 f1 * / ! ! ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b10 b0 c> cCARD * * * part cset_of_edge b10 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b3 * part cface_set chypermap1_of_fanx c, f0 c, b0 b1 c/\ c> cCARD b3 cNUMERAL cBIT1 cBIT1 c_0 c/\ cSUBSET * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY b3 c/\ c= cf1_fan f0 b0 b1 b4 b5 c/\ c= cf1_fan f0 b0 b1 b5 b6 c/\ c~ c= cf1_fan f0 b0 b1 b6 b4 c/\ c= cpr2 b4 b7 c/\ c= cpr2 b5 b8 c/\ c= cpr2 b6 b9 c/\ cIN * * part cINSERT b7 * * part cINSERT b8 part cEMPTY b1 c/\ cIN * * part cINSERT b8 * * part cINSERT b9 part cEMPTY b1 c/\ c~ cIN * * part cINSERT b9 * * part cINSERT b7 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b8 b9 b7 c= * * part cUNION b1 * * part cINSERT * * part cINSERT b7 * * part cINSERT b9 part cEMPTY part cEMPTY b2 cFAN c, f0 c, b0 b2 f1
+ (f10 IN (d1_fan (x , (V , E1)))) |- ((((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) f10)) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))) = (((f10 IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) f10))) ==> ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))))
T c==> cIN f0 * part cd1_fan c, f1 c, f2 f3 c= c==> c= cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 f0 cPOWER * * * part cf1_fan f1 f2 f3 cNUMERAL cBIT0 cBIT1 c_0 f0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 b1 f0 * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY c==> c==> cIN f0 * part cd1_fan c, f1 c, f2 f3 c= cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 f0 cPOWER * * * part cf1_fan f1 f2 f3 cNUMERAL cBIT0 cBIT1 c_0 f0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 b1 f0 * * part cINSERT f0 * * part cINSERT cf1_fan f1 f2 f3 f0 * * part cINSERT cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 part cEMPTY
+ (~ F) |- ((~ F) /\ ((SUC (CARD EMPTY)) = (SUC (NUMERAL _0))))
T c==> c~ cF c/\ c~ cF c= cSUC cCARD part cEMPTY cSUC cNUMERAL c_0
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) |- ((\y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) y)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 * / c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 f3
- (~ F), (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c/\ c~ cF cF
- |- ((\t'. (!e'. (((f20 = f30) = g') ==> ((g' ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ g') ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cSUC cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cSUC cNUMERAL c_0 b1 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f2 b0 b1 f3
- (x' = ((I (((f1_fan x) V) E1)) f10)) |- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) = (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10))
T c==> c= f0 cI * * * part cf1_fan f1 f2 f3 f4 c= corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 f4 corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 f4
- |- (((f10 = f20) \/ (f10 = f30)) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))))
T c==> c\/ c= f0 f1 c= f0 f2 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0
- (~ (f20 = f30)) |- (((~ (f30 = f20)) ==> ((f30 = f20) = F)) = ((f30 = f20) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))) |- (((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y))) = T)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 c= c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f3 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f3 cT
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((face_map (hypermap1_of_fanx (x , (V , E1)))) = ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f2 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f3 f0 f1 f4 f5 c==> c~ cIN * * part cINSERT f6 * * part cINSERT f7 part cEMPTY f1 c==> cFAN c, f3 c, f0 f1 c==> cFAN c, f3 c, f0 f2 c==> cfan80 c, f3 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f7 * * part cINSERT f6 part cEMPTY part cEMPTY f2 c==> c= f8 * * part cface chypermap1_of_fanx c, f3 c, f0 f2 c, f3 c, f7 c, f6 csigma_fan f3 f0 f2 f7 f6 c==> c= f9 * * part cface chypermap1_of_fanx c, f3 c, f0 f2 c, f3 c, f6 c, f7 csigma_fan f3 f0 f2 f6 f7 c==> c= * part cface_map chypermap1_of_fanx c, f3 c, f0 f2 * * part cres * * * part cf1_fan f3 f0 f2 * part cd1_fan c, f3 c, f0 f2 c==> c= c, f3 c, f10 c, f6 f7 f11 c==> c= c, f3 c, f7 c, f10 f6 f12 c==> c= c, f3 c, f6 c, f7 f10 f13 c==> c= cf1_fan f3 f0 f1 f5 f14 c==> c= cf1_fan f3 f0 f1 f14 f4 c==> c= cpr2 f5 f7 c==> c= cpr2 f14 f10 c==> c= cpr2 f4 f6 c==> c= csigma_fan f3 f0 f1 f10 f6 f7 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f3 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f7 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f5 * * part cINSERT f14 * * part cINSERT f4 part cEMPTY f15 c==> c= * part cd_fan c, f3 c, f0 f1 * part cd1_fan c, f3 c, f0 f1 c= * * part cface chypermap1_of_fanx c, f3 c, f0 f2 c, f3 c, f6 c, f7 csigma_fan f3 f0 f2 f6 f7 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f11 part cEMPTY
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))) |- (((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y))) = T)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 c= c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f3 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f3 cT
- (~ (f20 = f30)) |- ((f20 = f30) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))) |- ((\y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))) y)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 * / c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 f3
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- (((!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) ==> ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)) = ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n))
T c= c==> ! c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))) /\ (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= c, f2 c, f10 c, f5 f6 f11 c==> c= c, f2 c, f6 c, f10 f5 f12 c==> c= c, f2 c, f5 c, f6 f10 f13 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f10 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f10 f5 f6 c==> c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part ce_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cn_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cf1_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f10 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f10 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c/\ c/\ c= * part cdart chypermap1_of_fanx c, f2 c, f0 f1 * part cd_fan c, f2 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part ce_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cn_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, f2 c, f0 f1 * * part cres * * * part cf1_fan f2 f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 * * part cINSERT f13 * * part cINSERT f12 * * part cINSERT f11 part cEMPTY
- (f1 = ((((f1_fan x) V) E) f3)) |- (((((f1_fan x) V) E) f3) = f1)
T c==> c= f0 cf1_fan f1 f2 f3 f4 c= cf1_fan f1 f2 f3 f4 f0
- (FAN (x , (V , E))) |- (((((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((e_fan x) V) E)) (d1_fan (x , (V , E))))) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((n_fan x) V) E)) (d1_fan (x , (V , E))))) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((res (((f1_fan x) V) E)) (d1_fan (x , (V , E)))))))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))) = ((((FAN (x , (V , E))) /\ ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) f1_fan)))))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))))
T c==> cFAN c, f0 c, f1 f2 c= c==> c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c= * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, f4 c, f5 csigma_fan f0 f1 f3 f4 f5 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c==> c==> c/\ cFAN c, f0 c, f1 f2 c= / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cf1_fan c= * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, f4 c, f5 csigma_fan f0 f1 f3 f4 f5 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY
- (~ (((((f1_fan x) V) E) f3) = f1)) |- (((~ (f1 = ((((f1_fan x) V) E) f3))) ==> ((f1 = ((((f1_fan x) V) E) f3)) = F)) = ((f1 = ((((f1_fan x) V) E) f3)) = F))
T c==> c~ c= cf1_fan f0 f1 f2 f3 f4 c= c==> c~ c= f4 cf1_fan f0 f1 f2 f3 c= c= f4 cf1_fan f0 f1 f2 f3 cF c= c= f4 cf1_fan f0 f1 f2 f3 cF
- |- (((!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F)) ==> ((\x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F)) x)) = ((\x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F)) x))
T c= c==> ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 f2 c/\ corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 cf1_fan b0 f0 f1 f2 corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 cf1_fan b0 f0 f1 cf1_fan b0 f0 f1 f2 ! c==> c\/ c= b1 f2 c\/ c= b1 cf1_fan b0 f0 f1 f2 c= b1 cf1_fan b0 f0 f1 cf1_fan b0 f0 f1 f2 corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 b1 cF * / c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 f2 c/\ corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 cf1_fan b0 f0 f1 f2 corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 cf1_fan b0 f0 f1 cf1_fan b0 f0 f1 f2 ! c==> c\/ c= b1 f2 c\/ c= b1 cf1_fan b0 f0 f1 f2 c= b1 cf1_fan b0 f0 f1 cf1_fan b0 f0 f1 f2 corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 b1 cF f3 * / c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 f2 c/\ corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 cf1_fan b0 f0 f1 f2 corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 cf1_fan b0 f0 f1 cf1_fan b0 f0 f1 f2 ! c==> c\/ c= b1 f2 c\/ c= b1 cf1_fan b0 f0 f1 f2 c= b1 cf1_fan b0 f0 f1 cf1_fan b0 f0 f1 f2 corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 b1 cF f3
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x)))) = T)
T c= c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cT
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
- (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))) |- ((f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))) = T)
T c==> c= f0 cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 c= c= f0 cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 cf1_fan f1 f2 f3 f0 cT
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) |- (((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y))) = T)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 cT
- (((((f1_fan x) V) E1) f10) = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))) |- (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) = ((((f1_fan x) V) E1) f10))
T c==> c= cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c= cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 f3
- |- (((((FAN (x , (V , E))) /\ ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) = (\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))))) ==> (((dart (hypermap1_of_fanx (x , (V , E)))) = (d_fan (x , (V , E)))) /\ (((edge_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) e_fan)) /\ (((node_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) n_fan)) /\ ((face_map (hypermap1_of_fanx (x , (V , E)))) = ((\t. ((res (((t x) V) E)) (d1_fan (x , (V , E))))) f1_fan)))))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))) = (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY)))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c= / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 c/\ c= * part cdart chypermap1_of_fanx c, f0 c, f1 f2 * part cd_fan c, f0 c, f1 f2 c/\ c= * part cedge_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part ce_fan c/\ c= * part cnode_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cn_fan c= * part cface_map chypermap1_of_fanx c, f0 c, f1 f2 * / * * part cres * * * b0 f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 part cf1_fan c= * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, f4 c, f5 csigma_fan f0 f1 f3 f4 f5 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c= * * part cface chypermap1_of_fanx c, f0 c, f1 f3 c, f0 c, f4 c, f5 csigma_fan f0 f1 f3 f4 f5 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY
- (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((~ F) ==> F)
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 cI * * * part cf1_fan f0 f1 f2 cI * * * part cf1_fan f0 f1 f2 f3 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c==> c~ cF cF
- (f20 = f30) |- ((f20 = f30) /\ ((SUC (NUMERAL _0)) = (SUC (NUMERAL _0))))
T c==> c= f0 f1 c/\ c= f0 f1 c= cSUC cNUMERAL c_0 cSUC cNUMERAL c_0
- |- ((((~ (f20 = f30)) ==> ((SUC (SUC (NUMERAL _0))) = (SUC (SUC (NUMERAL _0))))) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))))
T c= c==> c==> c~ c= f0 f1 c= cSUC cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0
- (x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))) |- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))) = (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))))
T c==> c= f0 cI * * * part cf1_fan f1 f2 f3 cI * * * part cf1_fan f1 f2 f3 f4 c= corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 cI * * * part cf1_fan f1 f2 f3 cI * * * part cf1_fan f1 f2 f3 f4 corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 cI * * * part cf1_fan f1 f2 f3 cI * * * part cf1_fan f1 f2 f3 f4
- |- ((!V. (!x. (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x)))))) = T)
T c= ! ! c==> c/\ corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 f1 c/\ corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 cf1_fan b1 b0 f0 f1 corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 cf1_fan b1 b0 f0 cf1_fan b1 b0 f0 f1 ! c==> c\/ c= b2 f1 c\/ c= b2 cf1_fan b1 b0 f0 f1 c= b2 cf1_fan b1 b0 f0 cf1_fan b1 b0 f0 f1 corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 b2 cT
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))) |- ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f3 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f3
- (f30 = f20) |- (f20 = f30)
T c==> c= f0 f1 c= f1 f0
- F |- (F = T)
T c==> cF c= cF cT
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) f10)), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 _0))) f10)), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))) = f10) ==> ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (SUC (NUMERAL (BIT0 (BIT1 _0)))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- (((((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))) = f10) ==> ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (SUC (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 c_0 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c==> c= cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 f10 c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f10 cSUC cNUMERAL cBIT0 cBIT1 c_0 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c/\ c==> c= cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 f10 c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f10 cSUC cNUMERAL cBIT0 cBIT1 c_0 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
- (~ (f10 = ((((f1_fan x) V) E1) f10))) |- (~ (((((f1_fan x) V) E1) f10) = f10))
T c==> c~ c= f0 cf1_fan f1 f2 f3 f0 c~ c= cf1_fan f1 f2 f3 f0 f0
- (((((f1_fan x) V) E) f3) = f1) |- (f1 = ((((f1_fan x) V) E) f3))
T c==> c= cf1_fan f0 f1 f2 f3 f4 c= f4 cf1_fan f0 f1 f2 f3
- |- (((~ (f20 = f30)) ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND (f20 = f30)) (SUC (NUMERAL _0))) e')))
T c==> c==> c~ c= f0 f1 c= cSUC cSUC cNUMERAL c_0 f2 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c= f0 f1 cSUC cNUMERAL c_0 f2
- |- ((~ ((f10 = f20) \/ (f10 = f30))) ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))))
T c==> c~ c\/ c= f0 f1 c= f0 f2 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) |- ((\y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) y)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 * / c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 f3
- (x' = f10) |- (F = F)
T c==> c= f0 f1 c= cF cF
- |- (((!g'. (!t'. (!e'. ((((f10 = f20) \/ (f10 = f30)) = g') ==> ((g' ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((f10 = f20) \/ (f10 = f30)) = g') ==> ((g' ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((f10 = f20) \/ (f10 = f30)) = g') ==> ((g' ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c\/ c= f0 f1 c= f0 f2 b0 c==> c==> b0 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b2 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c\/ c= f0 f1 c= f0 f2 b0 c==> c==> b0 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b2 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND b0 b1 b2 f3 * / ! ! c==> c= c\/ c= f0 f1 c= f0 f2 b0 c==> c==> b0 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b2 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND b0 b1 b2 f3
- (~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) |- ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) /\ F)
T c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 c/\ c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF
- (~ (((((f1_fan x) V) E1) f10) = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))) |- (~ (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) = ((((f1_fan x) V) E1) f10)))
T c==> c~ c= cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c~ c= cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 f3
- ((NUMERAL _0) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- (f10 = ((((f1_fan x) V) E1) f10)) |- (((((f1_fan x) V) E1) f10) = f10)
T c==> c= f0 cf1_fan f1 f2 f3 f0 c= cf1_fan f1 f2 f3 f0 f0
- |- (((~ ((f10 = f20) \/ (f10 = f30))) ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) e')))
T c==> c==> c~ c\/ c= f0 f1 c= f0 f2 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f3 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f3
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((!t'. (!e'. ((((f10 = f20) \/ (f10 = f30)) = g') ==> ((g' ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((f10 = f20) \/ (f10 = f30)) = g') ==> ((g' ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((f10 = f20) \/ (f10 = f30)) = g') ==> ((g' ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c\/ c= f0 f1 c= f0 f2 f3 c==> c==> f3 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b0 c==> c==> c~ f3 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b1 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f3 b0 b1 * / ! c==> c= c\/ c= f0 f1 c= f0 f2 f3 c==> c==> f3 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b0 c==> c==> c~ f3 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b1 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f3 b0 b1 f4 * / ! c==> c= c\/ c= f0 f1 c= f0 f2 f3 c==> c==> f3 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b0 c==> c==> c~ f3 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b1 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f3 b0 b1 f4
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) |- (((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y))) = T)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 cT
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) |- ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 f3 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT1 c_0 f3
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) |- ((\y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) y)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 * / c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 f3
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) |- ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3
- |- (T = ((NUMERAL (BIT1 (BIT1 _0))) = (SUC (NUMERAL (BIT0 (BIT1 _0))))))
T c= cT c= cNUMERAL cBIT1 cBIT1 c_0 cSUC cNUMERAL cBIT0 cBIT1 c_0
- (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) = ((((f1_fan x) V) E1) f10)) |- (((((f1_fan x) V) E1) f10) = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))
T c==> c= cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 f3 c= cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3
- |- (F = (~ T))
T c= cF c~ cT
- |- ((((f10 = f20) \/ (f10 = f30)) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ ((f10 = f20) \/ (f10 = f30))) ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND ((f10 = f20) \/ (f10 = f30))) t') e'))))
T c==> c==> c\/ c= f0 f1 c= f0 f2 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f3 c==> c==> c~ c\/ c= f0 f1 c= f0 f2 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f4 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c\/ c= f0 f1 c= f0 f2 f3 f4
- |- (((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F) = (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x)))))
T c= c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((f20 = f30) ==> ((SUC (NUMERAL _0)) = (SUC (NUMERAL _0))))
T c==> c= f0 f1 c= cSUC cNUMERAL c_0 cSUC cNUMERAL c_0
- |- (((!e'. ((((f10 = f20) \/ (f10 = f30)) = g') ==> ((g' ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND g') t') e')))))) ==> ((\e'. ((((f10 = f20) \/ (f10 = f30)) = g') ==> ((g' ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND g') t') e')))))) e')) = ((\e'. ((((f10 = f20) \/ (f10 = f30)) = g') ==> ((g' ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c\/ c= f0 f1 c= f0 f2 f3 c==> c==> f3 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f4 c==> c==> c~ f3 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b0 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f3 f4 b0 * / c==> c= c\/ c= f0 f1 c= f0 f2 f3 c==> c==> f3 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f4 c==> c==> c~ f3 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b0 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f3 f4 b0 f5 * / c==> c= c\/ c= f0 f1 c= f0 f2 f3 c==> c==> f3 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f4 c==> c==> c~ f3 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b0 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f3 f4 b0 f5
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- |- ((((f20 = f30) ==> ((SUC (NUMERAL _0)) = (SUC (NUMERAL _0)))) ==> (((~ (f20 = f30)) ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND (f20 = f30)) (SUC (NUMERAL _0))) e')))) = (((~ (f20 = f30)) ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND (f20 = f30)) (SUC (NUMERAL _0))) e'))))
T c= c==> c==> c= f0 f1 c= cSUC cNUMERAL c_0 cSUC cNUMERAL c_0 c==> c==> c~ c= f0 f1 c= cSUC cSUC cNUMERAL c_0 f2 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c= f0 f1 cSUC cNUMERAL c_0 f2 c==> c==> c~ c= f0 f1 c= cSUC cSUC cNUMERAL c_0 f2 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c= f0 f1 cSUC cNUMERAL c_0 f2
- |- (~ ((NUMERAL _0) = (NUMERAL (BIT1 (BIT1 _0)))))
T c~ c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((f20 = f30) ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ (f20 = f30)) ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND (f20 = f30)) t') e'))))
T c==> c==> c= f0 f1 c= cSUC cNUMERAL c_0 f2 c==> c==> c~ c= f0 f1 c= cSUC cSUC cNUMERAL c_0 f3 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c= f0 f1 f2 f3
- |- ((\V. (!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))) V)
T * / ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 f1 c/\ corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 cf1_fan b1 b0 f0 f1 corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 cf1_fan b1 b0 f0 cf1_fan b1 b0 f0 f1 ! c==> c\/ c= b2 f1 c\/ c= b2 cf1_fan b1 b0 f0 f1 c= b2 cf1_fan b1 b0 f0 cf1_fan b1 b0 f0 f1 corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 b2 cF f2
- (~ (((((f1_fan x) V) E1) f10) = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))) |- ((((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) = ((((f1_fan x) V) E1) f10)) = F)
T c==> c~ c= cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c= c= cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 f3 cF
- |- (T = ((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))))
T c= cT c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((!f10. (!E1. (!V. (!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))))) ==> ((\f10. (!E1. (!V. (!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))))) f10)) = ((\f10. (!E1. (!V. (!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))))) f10))
T c= c==> ! ! ! ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 b0 c/\ corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 cf1_fan b3 b2 b1 b0 corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 cf1_fan b3 b2 b1 cf1_fan b3 b2 b1 b0 ! c==> c\/ c= b4 b0 c\/ c= b4 cf1_fan b3 b2 b1 b0 c= b4 cf1_fan b3 b2 b1 cf1_fan b3 b2 b1 b0 corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 b4 cF * / ! ! ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 b0 c/\ corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 cf1_fan b3 b2 b1 b0 corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 cf1_fan b3 b2 b1 cf1_fan b3 b2 b1 b0 ! c==> c\/ c= b4 b0 c\/ c= b4 cf1_fan b3 b2 b1 b0 c= b4 cf1_fan b3 b2 b1 cf1_fan b3 b2 b1 b0 corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 b4 cF f0 * / ! ! ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 b0 c/\ corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 cf1_fan b3 b2 b1 b0 corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 cf1_fan b3 b2 b1 cf1_fan b3 b2 b1 b0 ! c==> c\/ c= b4 b0 c\/ c= b4 cf1_fan b3 b2 b1 b0 c= b4 cf1_fan b3 b2 b1 cf1_fan b3 b2 b1 b0 corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 b4 cF f0
- |- (((!E1. (!V. (!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F)))) ==> ((\E1. (!V. (!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F)))) E1)) = ((\E1. (!V. (!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F)))) E1))
T c= c==> ! ! ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 f0 c/\ corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 cf1_fan b2 b1 b0 f0 corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 cf1_fan b2 b1 b0 cf1_fan b2 b1 b0 f0 ! c==> c\/ c= b3 f0 c\/ c= b3 cf1_fan b2 b1 b0 f0 c= b3 cf1_fan b2 b1 b0 cf1_fan b2 b1 b0 f0 corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 b3 cF * / ! ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 f0 c/\ corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 cf1_fan b2 b1 b0 f0 corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 cf1_fan b2 b1 b0 cf1_fan b2 b1 b0 f0 ! c==> c\/ c= b3 f0 c\/ c= b3 cf1_fan b2 b1 b0 f0 c= b3 cf1_fan b2 b1 b0 cf1_fan b2 b1 b0 f0 corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 b3 cF f1 * / ! ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 f0 c/\ corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 cf1_fan b2 b1 b0 f0 corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 cf1_fan b2 b1 b0 cf1_fan b2 b1 b0 f0 ! c==> c\/ c= b3 f0 c\/ c= b3 cf1_fan b2 b1 b0 f0 c= b3 cf1_fan b2 b1 b0 cf1_fan b2 b1 b0 f0 corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 b3 cF f1
- |- (((!t'. (!e'. (((f20 = f30) = g') ==> ((g' ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ g') ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((f20 = f30) = g') ==> ((g' ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ g') ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((f20 = f30) = g') ==> ((g' ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ g') ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cSUC cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cSUC cNUMERAL c_0 b1 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cSUC cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cSUC cNUMERAL c_0 b1 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f2 b0 b1 f3 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cSUC cNUMERAL c_0 b0 c==> c==> c~ f2 c= cSUC cSUC cNUMERAL c_0 b1 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f2 b0 b1 f3
- (~ (f20 = f30)) |- (~ (f30 = f20))
T c==> c~ c= f0 f1 c~ c= f1 f0
- (~ ((f10 = f20) \/ (f10 = f30))) |- (((f10 = f20) \/ (f10 = f30)) = F)
T c==> c~ c\/ c= f0 f1 c= f0 f2 c= c\/ c= f0 f1 c= f0 f2 cF
- (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10)), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10))
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c/\ c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))) |- ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f3 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f3
- (~ (f10 = ((((f1_fan x) V) E1) f10))) |- (((~ (((((f1_fan x) V) E1) f10) = f10)) ==> ((((((f1_fan x) V) E1) f10) = f10) = F)) = ((((((f1_fan x) V) E1) f10) = f10) = F))
T c==> c~ c= f0 cf1_fan f1 f2 f3 f0 c= c==> c~ c= cf1_fan f1 f2 f3 f0 f0 c= c= cf1_fan f1 f2 f3 f0 f0 cF c= c= cf1_fan f1 f2 f3 f0 f0 cF
- ((((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))) = f10) ==> ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (SUC (NUMERAL (BIT0 (BIT1 _0)))))) |- (((((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))) = f10) ==> ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (SUC (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> c==> c= cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 f3 c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cSUC cNUMERAL cBIT0 cBIT1 c_0 c= c==> c= cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 f3 c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cSUC cNUMERAL cBIT0 cBIT1 c_0 cT
- |- ((~ T) = F)
T c= c~ cT cF
- |- ((!f10. (!E1. (!V. (!x. (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x)))))))) = (!f10. (!E1. (!V. (!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))))))
T c= ! ! ! ! c==> c/\ corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 b0 c/\ corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 cf1_fan b3 b2 b1 b0 corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 cf1_fan b3 b2 b1 cf1_fan b3 b2 b1 b0 ! c==> c\/ c= b4 b0 c\/ c= b4 cf1_fan b3 b2 b1 b0 c= b4 cf1_fan b3 b2 b1 cf1_fan b3 b2 b1 b0 corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 b4 ! ! ! ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 b0 c/\ corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 cf1_fan b3 b2 b1 b0 corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 cf1_fan b3 b2 b1 cf1_fan b3 b2 b1 b0 ! c==> c\/ c= b4 b0 c\/ c= b4 cf1_fan b3 b2 b1 b0 c= b4 cf1_fan b3 b2 b1 cf1_fan b3 b2 b1 b0 corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 b4 cF
- (FINITE s) |- ((FINITE s) /\ ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))
T c==> cFINITE f0 c/\ cFINITE f0 c= cCARD * * part cINSERT f1 f0 cCOND cIN f1 f0 cCARD f0 cSUC cCARD f0
- |- ((\f10. (!E1. (!V. (!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))))) f10)
T * / ! ! ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 b0 c/\ corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 cf1_fan b3 b2 b1 b0 corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 cf1_fan b3 b2 b1 cf1_fan b3 b2 b1 b0 ! c==> c\/ c= b4 b0 c\/ c= b4 cf1_fan b3 b2 b1 b0 c= b4 cf1_fan b3 b2 b1 cf1_fan b3 b2 b1 b0 corbit_map * * part cres * * * part cf1_fan b3 b2 b1 * part cd1_fan c, b3 c, b2 b1 b0 b4 cF f0
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) |- (((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 _0))) y))) = T)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 c= c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 f3 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 c_0 f3 cT
- (~ (((((f1_fan x) V) E) f3) = f1)) |- (~ (f1 = ((((f1_fan x) V) E) f3)))
T c==> c~ c= cf1_fan f0 f1 f2 f3 f4 c~ c= f4 cf1_fan f0 f1 f2 f3
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- (x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))) |- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) f10)) = (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) f10)))
T c==> c= f0 cI * * * part cf1_fan f1 f2 f3 cI * * * part cf1_fan f1 f2 f3 f4 c= corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 cI * * * part cf1_fan f1 f2 f3 f4 corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 cI * * * part cf1_fan f1 f2 f3 f4
- (x' = f10) |- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) = (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10))
T c==> c= f0 f1 c= corbit_map * * part cres * * * part cf1_fan f2 f3 f4 * part cd1_fan c, f2 c, f3 f4 f1 f1 corbit_map * * part cres * * * part cf1_fan f2 f3 f4 * part cd1_fan c, f2 c, f3 f4 f1 f1
- |- ((\E1. (!V. (!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F)))) E1)
T * / ! ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 f0 c/\ corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 cf1_fan b2 b1 b0 f0 corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 cf1_fan b2 b1 b0 cf1_fan b2 b1 b0 f0 ! c==> c\/ c= b3 f0 c\/ c= b3 cf1_fan b2 b1 b0 f0 c= b3 cf1_fan b2 b1 b0 cf1_fan b2 b1 b0 f0 corbit_map * * part cres * * * part cf1_fan b2 b1 b0 * part cd1_fan c, b2 c, b1 b0 f0 b3 cF f1
- (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) f10))), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) f10))) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) f10)))
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 f3 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c/\ c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cI * * * part cf1_fan f0 f1 f2 f3
- ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)) |- ((NUMERAL _0) = (NUMERAL (BIT1 (BIT1 _0))))
T c==> c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (((((f1_fan x) V) E) f3) = f1)), (~ ((w INSERT (v INSERT EMPTY)) IN E)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), (ds1 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (v , (w , (((((sigma_fan x) V) E1) v) w)))))), (ds2 = ((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v)))))), ((d_fan (x , (V , E1))) = (d1_fan (x , (V , E1)))), (f10 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))), (f20 = ((((f1_fan x) V) E1) f10)), (f30 = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))), ((x , (u , (w , v))) = f30), ((x , (v , (u , w))) = f20), ((x , (w , (v , u))) = f10), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) f10)), ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) f10) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 _0))) f10)), (((((f1_fan x) V) E) f1) = f2), (((((f1_fan x) V) E) f2) = f3), ((pr2 f1) = v), ((pr2 f2) = u), ((pr2 f3) = w), ((((((sigma_fan x) V) E) u) w) = v), ((((((sigma_fan x) V) E1) w) v) = u), ((((((f1_fan x) V) E1) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))) = f10) ==> ((CARD ((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10)) <= (SUC (NUMERAL (BIT0 (BIT1 _0)))))), ((CARD ds) > (NUMERAL (BIT1 (BIT1 _0)))), (ds IN (face_set (hypermap1_of_fanx (x , (V , E))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((f1 INSERT (f2 INSERT (f3 INSERT EMPTY))) SUBSET ds) |- ((GSPEC (\GEN%PVAR%5470. (?n. (((SETSPEC GEN%PVAR%5470) (n >= (NUMERAL _0))) (((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) n) f10))))) = (f10 INSERT (((((f1_fan x) V) E1) f10) INSERT (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= cf1_fan f2 f0 f1 f3 f4 c==> c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f1 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f7 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f7 c==> c= f8 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f6 c, f5 csigma_fan f2 f0 f7 f6 f5 c==> c= f9 * * part cface chypermap1_of_fanx c, f2 c, f0 f7 c, f2 c, f5 c, f6 csigma_fan f2 f0 f7 f5 f6 c==> c= * part cd_fan c, f2 c, f0 f7 * part cd1_fan c, f2 c, f0 f7 c==> c= f10 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= f11 cf1_fan f2 f0 f7 f10 c==> c= f12 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 c==> c= c, f2 c, f13 c, f5 f6 f12 c==> c= c, f2 c, f6 c, f13 f5 f11 c==> c= c, f2 c, f5 c, f6 f13 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT0 cBIT1 c_0 f10 c==> c= cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 cNUMERAL cBIT1 c_0 f10 cPOWER * * * part cf1_fan f2 f0 f7 cNUMERAL cBIT1 c_0 f10 c==> c= cf1_fan f2 f0 f1 f4 f14 c==> c= cf1_fan f2 f0 f1 f14 f3 c==> c= cpr2 f4 f6 c==> c= cpr2 f14 f13 c==> c= cpr2 f3 f5 c==> c= csigma_fan f2 f0 f1 f13 f5 f6 c==> c= csigma_fan f2 f0 f7 f5 f6 f13 c==> c==> c= cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 f10 c<= cCARD * * part corbit_map * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 f10 cSUC cNUMERAL cBIT0 cBIT1 c_0 c==> c> cCARD f15 cNUMERAL cBIT1 cBIT1 c_0 c==> cIN f15 * part cface_set chypermap1_of_fanx c, f2 c, f0 f1 c==> cIN * * part cINSERT f13 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f13 part cEMPTY f1 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f14 * * part cINSERT f3 part cEMPTY f15 c= * part cGSPEC / c? / cSETSPEC b0 c>= b1 cNUMERAL c_0 cPOWER * * part cres * * * part cf1_fan f2 f0 f7 * part cd1_fan c, f2 c, f0 f7 b1 f10 * * part cINSERT f10 * * part cINSERT cf1_fan f2 f0 f7 f10 * * part cINSERT cf1_fan f2 f0 f7 cf1_fan f2 f0 f7 f10 part cEMPTY
- (~ (f20 = f30)) |- ((f30 = f20) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- |- ((((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F) ==> ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F)) ==> (((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F) ==> ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF
- (~ (((((f1_fan x) V) E1) f10) = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)))) |- (((~ (((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) = ((((f1_fan x) V) E1) f10))) ==> ((((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) = ((((f1_fan x) V) E1) f10)) = F)) = ((((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10)) = ((((f1_fan x) V) E1) f10)) = F))
T c==> c~ c= cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c= c==> c~ c= cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 f3 c= c= cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 f3 cF c= c= cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 cf1_fan f0 f1 f2 f3 cF
- |- (((NUMERAL _0) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) |- (((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y))) = T)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c= c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 cT
- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10)) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10))
T c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) |- ((\y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((e_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT0 (BIT1 _0)))) y) = (((POWER (((e_fan x) V) E1)) (NUMERAL (BIT0 (BIT1 _0)))) y)))) y)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 * / c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part ce_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 cPOWER * * * part ce_fan f0 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 f3
- (x' = ((I (((f1_fan x) V) E1)) f10)) |- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))) = (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))))
T c==> c= f0 cI * * * part cf1_fan f1 f2 f3 f4 c= corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 cI * * * part cf1_fan f1 f2 f3 cI * * * part cf1_fan f1 f2 f3 f4 corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 cI * * * part cf1_fan f1 f2 f3 cI * * * part cf1_fan f1 f2 f3 f4
- (x' = f10) |- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) f10)) = (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) f10)))
T c==> c= f0 f1 c= corbit_map * * part cres * * * part cf1_fan f2 f3 f4 * part cd1_fan c, f2 c, f3 f4 f1 cI * * * part cf1_fan f2 f3 f4 f1 corbit_map * * part cres * * * part cf1_fan f2 f3 f4 * part cd1_fan c, f2 c, f3 f4 f1 cI * * * part cf1_fan f2 f3 f4 f1
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y)))) |- (((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 (BIT1 _0)))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 (BIT1 _0)))) y))) = T)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 b0 c= c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f3 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 cBIT1 c_0 f3 cT
- |- (((((f10 = f20) \/ (f10 = f30)) = ((f10 = f20) \/ (f10 = f30))) ==> ((((f10 = f20) \/ (f10 = f30)) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ ((f10 = f20) \/ (f10 = f30))) ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND ((f10 = f20) \/ (f10 = f30))) t') e'))))) = ((((f10 = f20) \/ (f10 = f30)) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ ((f10 = f20) \/ (f10 = f30))) ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND ((f10 = f20) \/ (f10 = f30))) t') e')))))
T c= c==> c= c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f1 c= f0 f2 c==> c==> c\/ c= f0 f1 c= f0 f2 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f3 c==> c==> c~ c\/ c= f0 f1 c= f0 f2 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f4 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c\/ c= f0 f1 c= f0 f2 f3 f4 c==> c==> c\/ c= f0 f1 c= f0 f2 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f3 c==> c==> c~ c\/ c= f0 f1 c= f0 f2 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f4 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c\/ c= f0 f1 c= f0 f2 f3 f4
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F) ==> ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))
T c==> c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF
- (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = ((I (((f1_fan x) V) E1)) f10)), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((~ F) ==> F)
T c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 cI * * * part cf1_fan f0 f1 f2 f3 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c==> c~ cF cF
- (~ (((((f1_fan x) V) E) f3) = f1)) |- ((f1 = ((((f1_fan x) V) E) f3)) = F)
T c==> c~ c= cf1_fan f0 f1 f2 f3 f4 c= c= f4 cf1_fan f0 f1 f2 f3 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ ((f10 = f20) \/ (f10 = f30))) |- ((~ ((f10 = f20) \/ (f10 = f30))) /\ ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))))
T c==> c~ c\/ c= f0 f1 c= f0 f2 c/\ c~ c\/ c= f0 f1 c= f0 f2 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0
- |- (((((f10 = f20) \/ (f10 = f30)) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) ==> (((~ ((f10 = f20) \/ (f10 = f30))) ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) e')))) = (((~ ((f10 = f20) \/ (f10 = f30))) ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) e'))))
T c= c==> c==> c\/ c= f0 f1 c= f0 f2 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 c==> c==> c~ c\/ c= f0 f1 c= f0 f2 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f3 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f3 c==> c==> c~ c\/ c= f0 f1 c= f0 f2 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f3 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 f3
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) ==> (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)) = F)) = (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)) = F))
T c= c==> c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cF c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cF
- |- ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s)
T * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0
- |- (((!V. (!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))) ==> ((\V. (!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))) V)) = ((\V. (!x. ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))) V))
T c= c==> ! ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 f1 c/\ corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 cf1_fan b1 b0 f0 f1 corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 cf1_fan b1 b0 f0 cf1_fan b1 b0 f0 f1 ! c==> c\/ c= b2 f1 c\/ c= b2 cf1_fan b1 b0 f0 f1 c= b2 cf1_fan b1 b0 f0 cf1_fan b1 b0 f0 f1 corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 b2 cF * / ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 f1 c/\ corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 cf1_fan b1 b0 f0 f1 corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 cf1_fan b1 b0 f0 cf1_fan b1 b0 f0 f1 ! c==> c\/ c= b2 f1 c\/ c= b2 cf1_fan b1 b0 f0 f1 c= b2 cf1_fan b1 b0 f0 cf1_fan b1 b0 f0 f1 corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 b2 cF f2 * / ! c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 f1 c/\ corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 cf1_fan b1 b0 f0 f1 corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 cf1_fan b1 b0 f0 cf1_fan b1 b0 f0 f1 ! c==> c\/ c= b2 f1 c\/ c= b2 cf1_fan b1 b0 f0 f1 c= b2 cf1_fan b1 b0 f0 cf1_fan b1 b0 f0 f1 corbit_map * * part cres * * * part cf1_fan b1 b0 f0 * part cd1_fan c, b1 c, b0 f0 f1 b2 cF f2
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (((((f1_fan x) V) E1) f10) = f10) |- (f10 = ((((f1_fan x) V) E1) f10))
T c==> c= cf1_fan f0 f1 f2 f3 f3 c= f3 cf1_fan f0 f1 f2 f3
- |- (((!g'. (!t'. (!e'. (((f20 = f30) = g') ==> ((g' ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ g') ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((f20 = f30) = g') ==> ((g' ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ g') ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((f20 = f30) = g') ==> ((g' ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ g') ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cSUC cNUMERAL c_0 b2 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cSUC cNUMERAL c_0 b2 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cSUC cNUMERAL c_0 b1 c==> c==> c~ b0 c= cSUC cSUC cNUMERAL c_0 b2 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND b0 b1 b2 f2
- ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F) |- ((((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F) ==> ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F)) ==> ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))
T c==> c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c==> c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) |- (((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((f1_fan x) V) E1)) (NUMERAL (BIT1 _0))) y))) = T)
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 b0 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 c= c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 f3 cPOWER * * * part cf1_fan f0 f1 f2 cNUMERAL cBIT1 c_0 f3 cT
- |- ((!x. (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) = T)
T c= ! c==> c/\ corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 f2 c/\ corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 cf1_fan b0 f0 f1 f2 corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 cf1_fan b0 f0 f1 cf1_fan b0 f0 f1 f2 ! c==> c\/ c= b1 f2 c\/ c= b1 cf1_fan b0 f0 f1 f2 c= b1 cf1_fan b0 f0 f1 cf1_fan b0 f0 f1 f2 corbit_map * * part cres * * * part cf1_fan b0 f0 f1 * part cd1_fan c, b0 c, f0 f1 f2 b1 cT
- ((f10 = f20) \/ (f10 = f30)) |- (((f10 = f20) \/ (f10 = f30)) /\ ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))))
T c==> c\/ c= f0 f1 c= f0 f2 c/\ c\/ c= f0 f1 c= f0 f2 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0
- |- ((((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F) ==> ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F)) = ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))
T c= c==> c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF
- (~ F), (~ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x')), (x' = f10), ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f4 c==> c= f4 f3 c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 c/\ c~ cF cF
- |- (((!e'. (((f20 = f30) = g') ==> ((g' ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ g') ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND g') t') e')))))) ==> ((\e'. (((f20 = f30) = g') ==> ((g' ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ g') ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND g') t') e')))))) e')) = ((\e'. (((f20 = f30) = g') ==> ((g' ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ g') ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cSUC cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cSUC cNUMERAL c_0 b0 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f2 f3 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cSUC cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cSUC cNUMERAL c_0 b0 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f2 f3 b0 f4 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cSUC cNUMERAL c_0 f3 c==> c==> c~ f2 c= cSUC cSUC cNUMERAL c_0 b0 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f2 f3 b0 f4
- (x' = ((I (((f1_fan x) V) E1)) ((I (((f1_fan x) V) E1)) f10))) |- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) = (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10))
T c==> c= f0 cI * * * part cf1_fan f1 f2 f3 cI * * * part cf1_fan f1 f2 f3 f4 c= corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 f4 corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 f4
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))) |- ((((d_fan (x , (V , E))) = (d1_fan (x , (V , E)))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))) = ((((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> ((d_fan (x , (V , E))) = (d1_fan (x , (V , E))))) ==> (((face (hypermap1_of_fanx (x , (V , E1)))) (x , (w , (v , (((((sigma_fan x) V) E1) w) v))))) = (f10 INSERT (f20 INSERT (f30 INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c= c==> c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * * part cface chypermap1_of_fanx c, f2 c, f0 f3 c, f2 c, f4 c, f5 csigma_fan f2 f0 f3 f4 f5 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c==> c==> c/\ cFAN c, f2 c, f0 f1 ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= * part cd_fan c, f2 c, f0 f1 * part cd1_fan c, f2 c, f0 f1 c= * * part cface chypermap1_of_fanx c, f2 c, f0 f3 c, f2 c, f4 c, f5 csigma_fan f2 f0 f3 f4 f5 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY
- (~ (f20 = f30)) |- ((~ (f20 = f30)) /\ ((SUC (SUC (NUMERAL _0))) = (SUC (SUC (NUMERAL _0)))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= cSUC cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0
- (~ (f10 = ((((f1_fan x) V) E1) f10))) |- ((((((f1_fan x) V) E1) f10) = f10) = F)
T c==> c~ c= f0 cf1_fan f1 f2 f3 f0 c= c= cf1_fan f1 f2 f3 f0 f0 cF
- |- ((\t'. (!e'. ((((f10 = f20) \/ (f10 = f30)) = g') ==> ((g' ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) = e')) ==> ((((COND ((f10 = f20) \/ (f10 = f30))) (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0))))) (SUC (((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c\/ c= f0 f1 c= f0 f2 f3 c==> c==> f3 c= cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b0 c==> c==> c~ f3 c= cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 b1 c= cCOND c\/ c= f0 f1 c= f0 f2 cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cSUC cCOND c= f1 f2 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND f3 b0 b1 f4
- |- (~ (~ T))
T c~ c~ cT
- ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F) |- (((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F) /\ ((~ (((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) f10) /\ ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) f10)) /\ (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (!x. (((x = f10) \/ ((x = ((((f1_fan x) V) E1) f10)) \/ (x = ((((f1_fan x) V) E1) ((((f1_fan x) V) E1) f10))))) ==> (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) x))))) ==> F))
T c==> c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c/\ c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF c==> c~ c==> c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 f3 c/\ corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 ! c==> c\/ c= b0 f3 c\/ c= b0 cf1_fan f0 f1 f2 f3 c= b0 cf1_fan f0 f1 f2 cf1_fan f0 f1 f2 f3 corbit_map * * part cres * * * part cf1_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 f3 b0 cF
- |- (((~ ((NUMERAL _0) = (NUMERAL (BIT1 (BIT1 _0))))) ==> (((NUMERAL _0) = (NUMERAL (BIT1 (BIT1 _0)))) = F)) = (((NUMERAL _0) = (NUMERAL (BIT1 (BIT1 _0)))) = F))
T c= c==> c~ c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 cF c= c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- (x' = ((I (((f1_fan x) V) E1)) f10)) |- ((((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) f10)) = (((orbit_map ((res (((f1_fan x) V) E1)) (d1_fan (x , (V , E1))))) f10) ((I (((f1_fan x) V) E1)) f10)))
T c==> c= f0 cI * * * part cf1_fan f1 f2 f3 f4 c= corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 cI * * * part cf1_fan f1 f2 f3 f4 corbit_map * * part cres * * * part cf1_fan f1 f2 f3 * part cd1_fan c, f1 c, f2 f3 f4 cI * * * part cf1_fan f1 f2 f3 f4
- |- ((((f20 = f30) = (f20 = f30)) ==> (((f20 = f30) ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ (f20 = f30)) ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND (f20 = f30)) t') e'))))) = (((f20 = f30) ==> ((SUC (NUMERAL _0)) = t')) ==> (((~ (f20 = f30)) ==> ((SUC (SUC (NUMERAL _0))) = e')) ==> ((((COND (f20 = f30)) (SUC (NUMERAL _0))) (SUC (SUC (NUMERAL _0)))) = (((COND (f20 = f30)) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= cSUC cNUMERAL c_0 f2 c==> c==> c~ c= f0 f1 c= cSUC cSUC cNUMERAL c_0 f3 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c= f0 f1 f2 f3 c==> c==> c= f0 f1 c= cSUC cNUMERAL c_0 f2 c==> c==> c~ c= f0 f1 c= cSUC cSUC cNUMERAL c_0 f3 c= cCOND c= f0 f1 cSUC cNUMERAL c_0 cSUC cSUC cNUMERAL c_0 cCOND c= f0 f1 f2 f3
- (!y. ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))) |- ((y IN (d1_fan (x , (V , E1)))) ==> ((((POWER ((res (((n_fan x) V) E1)) (d1_fan (x , (V , E1))))) (NUMERAL (BIT1 _0))) y) = (((POWER (((n_fan x) V) E1)) (NUMERAL (BIT1 _0))) y)))
T c==> ! c==> cIN b0 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 b0 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 c_0 b0 c==> cIN f3 * part cd1_fan c, f0 c, f1 f2 c= cPOWER * * part cres * * * part cn_fan f0 f1 f2 * part cd1_fan c, f0 c, f1 f2 cNUMERAL cBIT1 c_0 f3 cPOWER * * * part cn_fan f0 f1 f2 cNUMERAL cBIT1 c_0 f3
