N SIGN_INVERSE
C |- (!p. ((permutation p) ==> ((sign (inverse p)) = (sign p))))
T c==> cpermutation f0 c= csign * part cinverse f0 csign f0
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D EVENPERM_INVERSE
A |- (!p. ((permutation p) ==> ((evenperm (inverse p)) = (evenperm p))))
T c==> cpermutation f0 c= cevenperm * part cinverse f0 cevenperm f0
D sign
A |- (!p. ((sign p) = (((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))
T c= csign f0 cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- (~ (evenperm p)) |- ((evenperm p) = F)
T c==> c~ cevenperm f0 c= cevenperm f0 cF
- |- (((!t'. (!e'. (((evenperm p) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((evenperm p) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((evenperm p) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cevenperm f0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 * / ! c==> c= cevenperm f0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f2 * / ! c==> c= cevenperm f0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f2
+ (permutation p) |- ((((COND (evenperm (inverse p))) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> cpermutation f0 c= cCOND cevenperm * part cinverse f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!p. ((permutation p) ==> ((evenperm (inverse p)) = (evenperm p)))) ==> ((\p. ((permutation p) ==> ((evenperm (inverse p)) = (evenperm p)))) p)) = ((\p. ((permutation p) ==> ((evenperm (inverse p)) = (evenperm p)))) p))
T c= c==> ! c==> cpermutation b0 c= cevenperm * part cinverse b0 cevenperm b0 * / c==> cpermutation b0 c= cevenperm * part cinverse b0 cevenperm b0 f0 * / c==> cpermutation b0 c= cevenperm * part cinverse b0 cevenperm b0 f0
+ |- ((\p'. (!q'. (((permutation p) = p') ==> ((p' ==> (((sign (inverse p)) = (sign p)) = q')) ==> (((permutation p) ==> ((sign (inverse p)) = (sign p))) = (p' ==> q')))))) p')
T * / ! c==> c= cpermutation f0 b0 c==> c==> b0 c= c= csign * part cinverse f0 csign f0 b1 c= c==> cpermutation f0 c= csign * part cinverse f0 csign f0 c==> b0 b1 f1
+ |- ((!p. t) = t)
T c= ! f0 f0
- |- ((\e'. (((evenperm p) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e')
T * / c==> c= cevenperm f0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 f2 b0 f3
+ |- (((permutation p) ==> (((sign (inverse p)) = (sign p)) = q')) ==> (((permutation p) ==> ((sign (inverse p)) = (sign p))) = ((permutation p) ==> q')))
T c==> c==> cpermutation f0 c= c= csign * part cinverse f0 csign f0 f1 c= c==> cpermutation f0 c= csign * part cinverse f0 csign f0 c==> cpermutation f0 f1
- |- ((\g'. (!t'. (!e'. (((evenperm p) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cevenperm f0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b2 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f1
- (permutation p) |- ((permutation p) = T)
T c==> cpermutation f0 c= cpermutation f0 cT
- |- (((~ (evenperm p)) ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) e')))
T c==> c==> c~ cevenperm f0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 f1
+ (evenperm p) |- ((evenperm p) /\ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> cevenperm f0 c/\ cevenperm f0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((evenperm (inverse p)) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm (inverse p))) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))
T c==> c= cevenperm * part cinverse f0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 c= cCOND cevenperm * part cinverse f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 f2 f3
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((((~ (evenperm p)) ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((COND (evenperm (inverse p))) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = ((((COND (evenperm (inverse p))) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c==> c~ cevenperm f0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cevenperm * part cinverse f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cevenperm * part cinverse f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- |- (((!g'. (!t'. (!e'. (((evenperm p) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((evenperm p) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((evenperm p) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cevenperm f0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b2 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= cevenperm f0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b2 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f1 * / ! ! c==> c= cevenperm f0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b2 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f1
- |- ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ |- (((permutation p) ==> ((sign (inverse p)) = (sign p))) = ((permutation p) ==> T))
T c= c==> cpermutation f0 c= csign * part cinverse f0 csign f0 c==> cpermutation f0 cT
+ |- ((((evenperm p) ==> ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (((~ (evenperm p)) ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm (inverse p))) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) e')))) = (((~ (evenperm p)) ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm (inverse p))) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) e'))))
T c= c==> c==> cevenperm f0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ cevenperm f0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 c= cCOND cevenperm * part cinverse f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ cevenperm f0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 c= cCOND cevenperm * part cinverse f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 f1
- |- (((!e'. (((evenperm p) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) ==> ((\e'. (((evenperm p) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e')) = ((\e'. (((evenperm p) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cevenperm f0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 f2 b0 * / c==> c= cevenperm f0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 f2 b0 f3 * / c==> c= cevenperm f0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 f2 b0 f3
+ (permutation p) |- ((((evenperm (inverse p)) = (evenperm p)) ==> (((evenperm p) ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ (evenperm p)) ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm (inverse p))) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) t') e'))))) = (((evenperm p) ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ (evenperm p)) ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm (inverse p))) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) t') e')))))
T c==> cpermutation f0 c= c==> c= cevenperm * part cinverse f0 cevenperm f0 c==> c==> cevenperm f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ cevenperm f0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 c= cCOND cevenperm * part cinverse f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 f1 f2 c==> c==> cevenperm f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ cevenperm f0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 c= cCOND cevenperm * part cinverse f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 f1 f2
+ |- ((evenperm p) ==> ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> cevenperm f0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (evenperm p) |- ((evenperm p) = T)
T c==> cevenperm f0 c= cevenperm f0 cT
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (T = (!p. ((permutation p) ==> ((sign (inverse p)) = (sign p)))))
T c= cT ! c==> cpermutation b0 c= csign * part cinverse b0 csign b0
- |- ((((~ (evenperm p)) ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c==> c~ cevenperm f0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- |- ((((evenperm p) ==> ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (((~ (evenperm p)) ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) e')))) = (((~ (evenperm p)) ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) e'))))
T c= c==> c==> cevenperm f0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ cevenperm f0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ cevenperm f0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 f1
+ |- ((\q'. (((permutation p) = p') ==> ((p' ==> (((sign (inverse p)) = (sign p)) = q')) ==> (((permutation p) ==> ((sign (inverse p)) = (sign p))) = (p' ==> q'))))) q')
T * / c==> c= cpermutation f0 f1 c==> c==> f1 c= c= csign * part cinverse f0 csign f0 b0 c= c==> cpermutation f0 c= csign * part cinverse f0 csign f0 c==> f1 b0 f2
+ |- (((!g'. (!t'. (!e'. (((evenperm (inverse p)) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm (inverse p))) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((evenperm (inverse p)) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm (inverse p))) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((evenperm (inverse p)) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm (inverse p))) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cevenperm * part cinverse f0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b2 c= cCOND cevenperm * part cinverse f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= cevenperm * part cinverse f0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b2 c= cCOND cevenperm * part cinverse f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f1 * / ! ! c==> c= cevenperm * part cinverse f0 b0 c==> c==> b0 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b2 c= cCOND cevenperm * part cinverse f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f1
+ (permutation p) |- (((~ (evenperm p)) ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm (inverse p))) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) e')))
T c==> cpermutation f0 c==> c==> c~ cevenperm f0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 c= cCOND cevenperm * part cinverse f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 f1
- (permutation p) |- (T = (permutation p))
T c==> cpermutation f0 c= cT cpermutation f0
- (permutation p) |- ((permutation p) /\ ((evenperm (inverse p)) = (evenperm p)))
T c==> cpermutation f0 c/\ cpermutation f0 c= cevenperm * part cinverse f0 cevenperm f0
- |- (((evenperm p) ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ (evenperm p)) ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) t') e'))))
T c==> c==> cevenperm f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ cevenperm f0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 f1 f2
- |- (((evenperm p) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))
T c==> c= cevenperm f0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 f2 f3
- |- (T = ((sign I) = (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT c= csign part cI creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t'. (!e'. (((evenperm p) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cevenperm f0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f2
- |- ((((evenperm p) = (evenperm p)) ==> (((evenperm p) ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ (evenperm p)) ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) t') e'))))) = (((evenperm p) ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ (evenperm p)) ==> ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (evenperm p)) (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (((COND (evenperm p)) t') e')))))
T c= c==> c= cevenperm f0 cevenperm f0 c==> c==> cevenperm f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ cevenperm f0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 f1 f2 c==> c==> cevenperm f0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ cevenperm f0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 c= cCOND cevenperm f0 creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCOND cevenperm f0 f1 f2
