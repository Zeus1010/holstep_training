N Local_lemmas.THREE_NOT_COLL_DETER_PLANE
C |- (((plane P) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))
T c==> c/\ cplane f0 c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D Sphere.plane
A |- (!x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c= cplane f0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
D Local_lemmas.SUBSET_NOT_COLLINEAR_AFFINE_HULL_EQ
A |- ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))), ((\v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))) v) |- (((\v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))) v) /\ F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> * / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 f5 c/\ * / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 f5 cF
+ ((\v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))) v) |- (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))
T c==> * / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 f5 c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) = ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c= cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- ((((\u. (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))))) u) ==> F) = T)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= c==> * / c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 f4 cF cT
+ ((\v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))) v) |- (((?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))) ==> F) = F)
T c==> * / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 f5 c= c==> c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 cF cF
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (((~ ((_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ ((collinear (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY)))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY))))))) = ((~ ((_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ ((collinear (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY)))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY))))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c= c\/ c~ cSUBSET * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ ccollinear * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c= * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ cSUBSET * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ ccollinear * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c= * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY
+ |- ((!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))) = T)
T c= ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cT
- |- ((~ (_3963694 = _3963696)) \/ ((~ (_3963695 = _3963697)) \/ ((_3963696 SUBSET _3963697) \/ (~ (_3963694 SUBSET _3963695)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- |- ((~ (_3963705 = _3963707)) \/ ((~ (_3963704 = _3963706)) \/ (((hull _3963704) _3963705) = ((hull _3963706) _3963707))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) /\ F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 cF
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))), (~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- F
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 cF
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) /\ (~ (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 c/\ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- ((collinear (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY)))) \/ ((~ ((_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY)))))))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((\w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))) w) |- ((((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> F) = F)
T c==> * / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 f6 c= c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f6 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f6 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 cF cF
+ |- ((!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = T)
T c= ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cT
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (T = (((~ ((_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ ((collinear (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY)))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY))))))) = ((collinear (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY)))) \/ ((~ ((_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY)))))))))
T c= cT c= c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((?w. (P w)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
- |- ((!P. (!c. (!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> (~ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))))))))) = (!P. (!c. (!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)))))))
T c= ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c~ ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c~ ccollinear * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY c= * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY * * part chull part caffine * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c~ ccollinear * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY c= * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY * * part chull part caffine * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY cF
+ |- (((?w. (P w)) /\ Q) = (?w. ((P w) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- |- (((!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F))) ==> ((\a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F))) a)) = ((\a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F))) a))
T c= c==> ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cSUBSET * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF * / c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cSUBSET * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF f3 * / c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cSUBSET * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF f3
+ |- (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) = T)
T c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (!u. (((\u. (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))))) u) ==> F))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY ! c==> * / c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 b0 cF
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (_3963694 = _3963696), (_3963695 = _3963697) |- ((_3963695 = _3963697) /\ ((_3963696 SUBSET _3963697) \/ (~ (_3963694 SUBSET _3963695))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (!v. (((\v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))) v) ==> F))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY ! c==> * / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b1 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 b0 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- ((!z. t) = t)
T c= ! f0 f0
+ |- ((!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cT
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F))) = ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)))
T c= c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF
- (_3963704 = _3963706), (_3963705 = _3963707) |- ((_3963704 = _3963706) /\ (((hull _3963704) _3963705) = ((hull _3963706) _3963707)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part chull f0 f2 * * part chull f1 f3
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?w. t) = t)
T c= c? / f0 f0
- |- (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)))
T c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))), (~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) /\ F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF
- (_3963694 = _3963696) |- ((_3963695 = _3963697) ==> ((_3963696 SUBSET _3963697) \/ (~ (_3963694 SUBSET _3963695))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ |- (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> F) = (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))
T c= c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 cF c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (~ (collinear (u INSERT (v INSERT (w INSERT EMPTY)))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P)
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3
- (_3963705 = _3963707) |- ((_3963704 = _3963706) ==> (((hull _3963704) _3963705) = ((hull _3963706) _3963707)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- ((((\v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))) v) ==> F) = T)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= c==> * / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 f5 cF cT
- |- (!P. (!c. (!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> (~ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))))))))))
T c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (!a. (!b. (!c. (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY ! ! ! c\/ c\/ c~ cSUBSET * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) ==> F) = F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c= c==> ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF cF
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((collinear (a INSERT (b INSERT (c INSERT EMPTY)))) ==> F)
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c==> ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))), ((\w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))) w) |- (((\w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))) w) /\ F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> * / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 f6 c/\ * / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 f6 cF
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (!y. (!z. (!a. (!b. (!c. (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (y INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY ! ! ! ! ! c\/ c\/ c~ cSUBSET * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (!z. (!a. (!b. (!c. (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY ! ! ! ! c\/ c\/ c~ cSUBSET * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
- |- ((\b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)))) b)
T * / ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cSUBSET * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c= * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ ccollinear * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY cF f2
- (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))), (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) /\ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((_3963705 = _3963707) ==> ((~ (_3963704 = _3963706)) \/ (((hull _3963704) _3963705) = ((hull _3963706) _3963707))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ |- (((?u. (?v. (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) = (?u. ((?v. (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))))
T c= c/\ c? / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c? / c/\ c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0
- (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))
T c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c/\ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((~ (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) ==> (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))
T c==> c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (((!x. (((\v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))) x) ==> F)) ==> ((?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))) ==> F)) = ((?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))) ==> F))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= c==> ! c==> * / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 b0 cF c==> c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 cF c==> c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 cF
- (~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))
T c==> c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= f6 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c/\ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))
T c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0
+ ((\w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))) w) |- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))
T c==> * / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 f6 c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f6 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f6 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!c. ((P c) \/ Q)) = ((!c. (P c)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- ((!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))) = T)
T c= ! ! ! c==> c/\ cSUBSET * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) = (~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) = (?v. ((?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))))))
T c= c/\ c? / c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c? / c/\ c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- ((\x. (!y. (!z. (!a. (!b. (!c. (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) _3963676)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * / ! ! ! ! ! c\/ c\/ c~ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f0
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((((((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))) ==> (~ (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = (~ (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c= c==> c/\ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- (_3963694 = _3963696), (_3963695 = _3963697) |- ((((_3963694 SUBSET _3963695) = (_3963696 SUBSET _3963697)) ==> ((_3963696 SUBSET _3963697) \/ (~ (_3963694 SUBSET _3963695)))) = ((_3963696 SUBSET _3963697) \/ (~ (_3963694 SUBSET _3963695))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cSUBSET f0 f2 cSUBSET f1 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- ((((\w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))) w) ==> F) = T)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= c==> * / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 f6 cF cT
+ |- (((!x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) ==> ((\x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) x)) = ((\x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) x))
T c= c==> ! c= cplane b0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / c= cplane b0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / c= cplane b0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- |- ((_3963694 = _3963696) ==> ((~ (_3963695 = _3963697)) \/ ((_3963696 SUBSET _3963697) \/ (~ (_3963694 SUBSET _3963695)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ (~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (?u. (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))))
T c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c? / c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (((!c. (((~ ((_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ (collinear (_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))))))) ==> ((\c. (((~ ((_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ (collinear (_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))))))) _3963681)) = ((\c. (((~ ((_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ (collinear (_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))))))) _3963681))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= c==> ! c\/ c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / c\/ c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f5 * / c\/ c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f5
- |- (((!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)))) ==> ((\b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)))) b)) = ((\b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)))) b))
T c= c==> ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cSUBSET * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c= * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ ccollinear * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY cF * / ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cSUBSET * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c= * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ ccollinear * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY cF f2 * / ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cSUBSET * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c= * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ ccollinear * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY cF f2
- |- ((_3963700 = _3963702) ==> ((~ (_3963701 = _3963703)) \/ ((_3963700 INSERT _3963701) = (_3963702 INSERT _3963703))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_3963701 = _3963703), (_3963700 = _3963702) |- ((_3963701 = _3963703) /\ ((_3963700 INSERT _3963701) = (_3963702 INSERT _3963703)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (~ (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) |- ((~ (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))
T c==> c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ |- (((?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) = (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))))
T c= c/\ c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- ((~ ((_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ ((collinear (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY)))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY)))))))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c\/ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ |- ((\x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) x)
T * / c= cplane b0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- |- ((!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> (~ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))))))) = T)
T c= ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cSUBSET * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c~ ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cT
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (!b. (!c. (((~ ((_3963679 INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ (collinear (_3963679 INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (b INSERT (c INSERT EMPTY))))))))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY ! ! c\/ c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (((!x. (((\u. (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))))) x) ==> F)) ==> ((?u. (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))))) ==> F)) = ((?u. (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))))) ==> F))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= c==> ! c==> * / c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 b0 cF c==> c? / c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 cF c==> c? / c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 cF
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((~ (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))) = (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c= c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 cF
- |- ((~ (_3963700 = _3963702)) \/ ((~ (_3963701 = _3963703)) \/ ((_3963700 INSERT _3963701) = (_3963702 INSERT _3963703))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)) |- (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)) /\ ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)))
T c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF c/\ c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF
- |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
- |- ((p ==> (~ p)) = (~ p))
T c= c==> f0 c~ f0 c~ f0
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (((!y. (!z. (!a. (!b. (!c. (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (y INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))) ==> ((\y. (!z. (!a. (!b. (!c. (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (y INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))) _3963677)) = ((\y. (!z. (!a. (!b. (!c. (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (y INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))) _3963677))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= c==> ! ! ! ! ! c\/ c\/ c~ cSUBSET * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * / ! ! ! ! c\/ c\/ c~ cSUBSET * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f1 * / ! ! ! ! c\/ c\/ c~ cSUBSET * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f1
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c= c==> c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (!c. (((~ ((_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ (collinear (_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY)))))))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY ! c\/ c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
- |- ((!c'. (((~ ((a INSERT (b INSERT (c' INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c' INSERT EMPTY))))) \/ (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))) = ((!c. ((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) \/ (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c= ! c\/ c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY c\/ ! c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (((\u. (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))))) u) ==> F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> * / c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 f4 cF
- |- ((\P. (!c. (!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)))))) P)
T * / ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c~ ccollinear * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY c= * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY * * part chull part caffine * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY cF f0
+ |- (((?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) = (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))))))
T c= c/\ c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))), (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))) |- ((?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))) /\ F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 cF
- |- (((!c. (!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F))))) ==> ((\c. (!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F))))) c)) = ((\c. (!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F))))) c))
T c= c==> ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ ccollinear * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY c= * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY cF * / ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ ccollinear * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY c= * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY cF f1 * / ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ ccollinear * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY c= * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY cF f1
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (((\v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))))) v) ==> F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> * / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 f5 cF
+ |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
- |- (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> (~ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))))) = T)
T c= c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cT
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (collinear (a INSERT (b INSERT (c INSERT EMPTY))))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ (~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) /\ F)
T c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 cF
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (((!z. (!a. (!b. (!c. (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))) ==> ((\z. (!a. (!b. (!c. (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))) _3963678)) = ((\z. (!a. (!b. (!c. (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))) _3963678))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= c==> ! ! ! ! c\/ c\/ c~ cSUBSET * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c\/ c\/ c~ cSUBSET * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 * / ! ! ! c\/ c\/ c~ cSUBSET * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2
- ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)) |- ((((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)))
T c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF c==> c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF
- |- ((?w'. ((~ (collinear (u INSERT (v INSERT (w' INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))) = ((?w. (~ (collinear (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))
T c= c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c? / c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- |- ((~ (_3963698 = _3963699)) \/ ((collinear _3963699) \/ (~ (collinear _3963698))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (~ (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- ((?u. (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))))) ==> F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c? / c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 cF
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- ((((_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY))))) /\ (~ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY))))))) ==> (collinear (_3963679 INSERT (_3963680 INSERT (_3963681 INSERT EMPTY)))))
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (_3963694 = _3963696) |- ((_3963694 = _3963696) /\ ((~ (_3963695 = _3963697)) \/ ((_3963696 SUBSET _3963697) \/ (~ (_3963694 SUBSET _3963695)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- (_3963700 = _3963702) |- ((_3963701 = _3963703) ==> ((_3963700 INSERT _3963701) = (_3963702 INSERT _3963703)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))), (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))) |- ((?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))) /\ F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 cF
+ |- (((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F) = F)
T c= c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF cF
- |- ((((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F))) ==> (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F))))
T c==> c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF
- |- ((!c. (P \/ (Q c))) = (P \/ (!c. (Q c))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- ((\y. (!z. (!a. (!b. (!c. (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (y INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))) _3963677)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * / ! ! ! ! c\/ c\/ c~ cSUBSET * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ |- (((x = z) /\ (~ (y = z))) ==> (~ (x = y)))
T c==> c/\ c= f0 f1 c~ c= f2 f1 c~ c= f0 f2
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- ((\z. (!a. (!b. (!c. (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))) _3963678)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * / ! ! ! c\/ c\/ c~ cSUBSET * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- ((\c. (((~ ((_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ (collinear (_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (_3963680 INSERT (c INSERT EMPTY))))))) _3963681)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * / c\/ c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f5
- |- ((_3963698 = _3963699) ==> ((collinear _3963699) \/ (~ (collinear _3963698))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- (((\w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))) w) ==> F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> * / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cSUBSET * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 f6 cF
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (F = F)
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c= cF cF
- (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((~ F) ==> F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c==> c~ cF cF
+ (~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- (((?u. (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P)))))) ==> F) = F)
T c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c= c==> c? / c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 cF cF
+ |- ((~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) = ((((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c= c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) = (?u. ((?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))))))
T c= c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) |- ((\b. (!c. (((~ ((_3963679 INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))))) \/ (collinear (_3963679 INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (_3963676 INSERT (_3963677 INSERT (_3963678 INSERT EMPTY)))) = ((hull affine) (_3963679 INSERT (b INSERT (c INSERT EMPTY)))))))) _3963680)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * / ! c\/ c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f4
- |- ((\c. (!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F))))) c)
T * / ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ ccollinear * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY c= * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY cF f1
- (_3963698 = _3963699) |- ((((collinear _3963698) = (collinear _3963699)) ==> ((collinear _3963699) \/ (~ (collinear _3963698)))) = ((collinear _3963699) \/ (~ (collinear _3963698))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) ==> (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c==> c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((!z. (P z)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (_3963705 = _3963707) |- ((_3963705 = _3963707) /\ ((~ (_3963704 = _3963706)) \/ (((hull _3963704) _3963705) = ((hull _3963706) _3963707))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- (_3963700 = _3963702) |- ((_3963700 = _3963702) /\ ((~ (_3963701 = _3963703)) \/ ((_3963700 INSERT _3963701) = (_3963702 INSERT _3963703))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((!c'. (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c' INSERT EMPTY))))))) = (((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))))) \/ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) \/ (!c. (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))
T c= ! c\/ c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c\/ c\/ c~ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c= * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
- |- ((!c. (!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> (~ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))))))))) = T)
T c= ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cSUBSET * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f0 c~ ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c~ ccollinear * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY c= * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY cT
- |- (((!P. (!c. (!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)))))) ==> ((\P. (!c. (!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)))))) P)) = ((\P. (!c. (!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F)))))) P))
T c= c==> ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c~ ccollinear * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY c= * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY * * part chull part caffine * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY cF * / ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c~ ccollinear * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY c= * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY * * part chull part caffine * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY cF f0 * / ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c~ ccollinear * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY c= * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY * * part chull part caffine * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY cF f0
- |- ((?w. (P /\ (Q w))) = (P /\ (?w. (Q w))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- |- ((!b. (!a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> (~ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))))))) = T)
T c= ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cSUBSET * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c= * * part chull part caffine * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f0 c~ ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c~ ccollinear * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY cT
- |- ((?w'. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))))) = ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (?w. (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c= c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))) = (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))), (~ F), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((~ F) /\ F)
T c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c==> c~ cF c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c~ cF cF
- (_3963698 = _3963699) |- ((_3963698 = _3963699) /\ ((collinear _3963699) \/ (~ (collinear _3963698))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))) ==> (~ (((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c==> c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) /\ (~ (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((~ ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) ==> ((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ c= * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c==> c~ cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((\a. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) ==> ((!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))))))))))) ==> F))) a)
T * / c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cSUBSET * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF f3
- (~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) |- ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET P) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY))))))) ==> (((hull affine) (a INSERT (b INSERT (c INSERT EMPTY)))) = P))) /\ (~ (!x. (!y. (!z. (!a. (!b. (!c. ((((a INSERT (b INSERT (c INSERT EMPTY))) SUBSET ((hull affine) (x INSERT (y INSERT (z INSERT EMPTY))))) /\ (~ (collinear (a INSERT (b INSERT (c INSERT EMPTY)))))) ==> (((hull affine) (x INSERT (y INSERT (z INSERT EMPTY)))) = ((hull affine) (a INSERT (b INSERT (c INSERT EMPTY))))))))))))))
T c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY
- |- ((?w. ((P w) /\ Q)) = ((?w. (P w)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
