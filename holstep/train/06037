N ROTATE2D_SUB
C |- (!t. (!w. (!z. (((rotate2d t) ((vector_sub w) z)) = ((vector_sub ((rotate2d t) w)) ((rotate2d t) z))))))
T c= crotate2d f0 cvector_sub f1 f2 cvector_sub crotate2d f0 f1 crotate2d f0 f2
D TRUTH
A |- T
T cT
D LINEAR_SUB
A |- (!f. (!x. (!y. ((linear f) ==> ((f ((vector_sub x) y)) = ((vector_sub (f x)) (f y)))))))
T c==> clinear f0 c= * f0 cvector_sub f1 f2 cvector_sub * f0 f1 * f0 f2
D LINEAR_ROTATE2D
A |- (!t. (linear (rotate2d t)))
T clinear * part crotate2d f0
+ |- ((\y. ((linear f) ==> ((f ((vector_sub x) y)) = ((vector_sub (f x)) (f y))))) y)
T * / c==> clinear f0 c= * f0 cvector_sub f1 b0 cvector_sub * f0 f1 * f0 b0 f2
+ |- (((!x. (!y. ((linear f) ==> ((f ((vector_sub x) y)) = ((vector_sub (f x)) (f y)))))) ==> ((\x. (!y. ((linear f) ==> ((f ((vector_sub x) y)) = ((vector_sub (f x)) (f y)))))) x)) = ((\x. (!y. ((linear f) ==> ((f ((vector_sub x) y)) = ((vector_sub (f x)) (f y)))))) x))
T c= c==> ! ! c==> clinear f0 c= * f0 cvector_sub b0 b1 cvector_sub * f0 b0 * f0 b1 * / ! c==> clinear f0 c= * f0 cvector_sub b0 b1 cvector_sub * f0 b0 * f0 b1 f1 * / ! c==> clinear f0 c= * f0 cvector_sub b0 b1 cvector_sub * f0 b0 * f0 b1 f1
+ |- ((!z. t) = t)
T c= ! f0 f0
- (linear f) |- ((linear f) /\ ((f ((vector_sub x) y)) = ((vector_sub (f x)) (f y))))
T c==> clinear f0 c/\ clinear f0 c= * f0 cvector_sub f1 f2 cvector_sub * f0 f1 * f0 f2
- |- ((linear (rotate2d t)) = T)
T c= clinear * part crotate2d f0 cT
- |- (T = (linear (rotate2d t)))
T c= cT clinear * part crotate2d f0
