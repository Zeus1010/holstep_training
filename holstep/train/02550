N Collect_geom.TRUONG_WELL
C |- (!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D SKOLEM_THM
A |- (!P. ((!x. (?y. ((P x) y))) = (?y. (!x. ((P x) (y x))))))
T c= ! c? / * * f0 b0 b1 c? / ! * * f0 b1 * b0 b1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D Collect_geom.PROVE_EXISTS_RADV
A |- (!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2
D Collect_geom.NEVER_USED_AGAIN
A |- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))
T c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c= f4 cdistance c, f0 f3 ! c= c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((_2160423 = y) ==> (p _2160423))
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c==> c= f4 f1 * f3 f4
+ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))) |- (((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (~ ((distance (p , vc)) = (distance (p' , vc)))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p , vc)) = (distance (p' , vc)))) /\ ((distance (p , vc)) = (distance (p' , vc))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c~ c= cdistance c, f0 f1 cdistance c, f2 f1 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c/\ c= f5 cdistance c, f0 f3 c/\ c= f5 cdistance c, f0 f4 c/\ c= f5 cdistance c, f0 f1 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c\/ c~ c= f5 cdistance c, b0 f3 c\/ c~ c= f5 cdistance c, b0 f4 c~ c= f5 cdistance c, b0 f1 c= f0 b0 c/\ c/\ cIN f2 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c/\ c= cdistance c, f2 f4 cdistance c, f2 f3 c= cdistance c, f2 f1 cdistance c, f2 f3 c~ c= f0 f2 c/\ c~ c= cdistance c, f0 f1 cdistance c, f2 f1 c= cdistance c, f0 f1 cdistance c, f2 f1
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ ((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489)))) \/ ((~ ((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489)))) \/ (_2160491 = (distance (_2160493 , _2160489)))))))))) = ((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ ((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489)))) \/ ((~ ((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489)))) \/ (_2160491 = (distance (_2160493 , _2160489)))))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= cdistance c, f11 f8 cdistance c, f11 f7 c\/ c~ c= cdistance c, f11 f9 cdistance c, f11 f7 c= f10 cdistance c, f11 f7 c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= cdistance c, f11 f8 cdistance c, f11 f7 c\/ c~ c= cdistance c, f11 f9 cdistance c, f11 f7 c= f10 cdistance c, f11 f7
- (~ (p y)), ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ ! c\/ c/\ c~ c= b0 f2 c/\ c~ c= b0 f1 c~ c= b0 f3 * f0 b0 c\/ c~ * f0 f2 c\/ c~ * f0 f1 c~ * f0 f3 c==> c~ cF cF
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p' , vc)) = (distance (p' , va)))) ==> ((distance (p' , vc)) = (distance (p' , va))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c~ c= cdistance c, f5 f3 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1
+ (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((c = a) = (cc = a))
T c==> c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c= c= f0 f1 c= f3 f1
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((distance (p , vc)) = (distance (p' , va)))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= cdistance c, f0 f3 cdistance c, f5 f1
+ (~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) |- ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) /\ F)
T c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 c/\ c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF
- ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((~ (p x)) ==> (p x))
T c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c==> c~ * f4 f1 * f4 f1
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- ((((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) ==> F)
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 cF
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (c = (distance (p , va)))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= f4 cdistance c, f0 f1
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ ((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489)))) \/ ((~ ((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489)))) \/ (_2160491 = (distance (_2160493 , _2160490)))))))))) = ((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ ((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489)))) \/ ((~ ((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489)))) \/ (_2160491 = (distance (_2160493 , _2160490)))))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= cdistance c, f11 f8 cdistance c, f11 f7 c\/ c~ c= cdistance c, f11 f9 cdistance c, f11 f7 c= f10 cdistance c, f11 f8 c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= cdistance c, f11 f8 cdistance c, f11 f7 c\/ c~ c= cdistance c, f11 f9 cdistance c, f11 f7 c= f10 cdistance c, f11 f8
+ |- (((?w. ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p')) = (?w. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w)))))) \/ (p = p'))))
T c= c\/ c? / c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f0 b0 c= f5 f0 c? / c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f0 b0 c= f5 f0
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((_2160500 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p , vc)) = (distance (_2160500 , va))) /\ (((distance (p , vc)) = (distance (_2160500 , vb))) /\ ((distance (p , vc)) = (distance (_2160500 , vc)))))) ==> (p = _2160500))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c/\ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f0 f3 cdistance c, f6 f1 c/\ c= cdistance c, f0 f3 cdistance c, f6 f2 c= cdistance c, f0 f3 cdistance c, f6 f3 c= f0 f6
+ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F)
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f4 b1 cF
- (~ (p y)), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((~ (p y)) /\ (p y))
T c==> c~ * f0 f1 c==> c/\ c/\ c\/ c= f2 f3 c\/ c= f2 f1 c= f2 f4 c~ * f0 f2 c/\ * f0 f3 c/\ * f0 f1 * f0 f4 c/\ c~ * f0 f1 * f0 f1
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- (p z)
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 * f3 f2
- |- ((~ (_2160580 = _2160582)) \/ ((~ (_2160579 = _2160581)) \/ (((hull _2160579) _2160580) = ((hull _2160581) _2160582))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- |- ((?p''. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p'')))) = (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (?p'. (~ (p = p')))))
T c= c? / c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f0 f2 cdistance c, f0 f1 c= cdistance c, f0 f3 cdistance c, f0 f1 c~ c= f4 b0 c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f0 f2 cdistance c, f0 f1 c= cdistance c, f0 f3 cdistance c, f0 f1 c? / c~ c= f4 b0
+ |- (((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z)))) = ((!a. ((a IN (x INSERT (y INSERT (z INSERT EMPTY)))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z)))))
T c= c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2
+ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))
T c==> c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (z = z)) ==> (z = z))
T c==> c~ c= f0 f0 c= f0 f0
+ (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))) |- ((\c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))) _2160462)
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 * / c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 f5
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
+ |- ((a ==> (b ==> c)) = ((a /\ b) ==> c))
T c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2
+ ((\a. (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))))) a) |- (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))))
T c==> * / c\/ c/\ ! c\/ c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c~ c= b1 f2 * f3 b1 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 f4 c\/ c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= f4 f0 c\/ c= f4 f1 c= f4 f2 c~ * f3 f4 c/\ * f3 f0 c/\ * f3 f1 * f3 f2
+ |- ((\c. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F)))))) c)
T * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 c==> ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, f3 b1 cF f4
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))) ==> ((\p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))) _2160500)) = ((\p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))) _2160500))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c==> ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 * / c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 f6 * / c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 f6
- |- (((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))) ==> ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))))
T c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF
+ |- ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))) ==> (p = p'))))))
T c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c= f4 cdistance c, f0 f3 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= f0 b0
- |- ((_2160569 = _2160571) ==> ((~ (_2160570 = _2160572)) \/ ((_2160569 , _2160570) = (_2160571 , _2160572))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((((distance (p' , va)) = (distance (p , vc))) /\ ((distance (p' , va)) = (distance (p' , vc)))) ==> ((distance (p , vc)) = (distance (p' , vc)))) = ((distance (p , vc)) = (distance (p' , vc))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c==> c/\ c= cdistance c, f5 f1 cdistance c, f0 f3 c= cdistance c, f5 f1 cdistance c, f5 f3 c= cdistance c, f0 f3 cdistance c, f5 f3 c= cdistance c, f0 f3 cdistance c, f5 f3
+ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f4 b1 cF
+ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- (((p z) ==> F) = F)
T c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c= c==> * f4 f3 cF cF
+ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- (((a = y) \/ (a = z)) ==> F)
T c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c==> c\/ c= f0 f2 c= f0 f3 cF
+ |- ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f4 b1
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
- (a = x), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c==> c~ cF cF
+ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- ((\w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) _2160461)
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 * / c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 f5
- |- ((!vc'. (((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc' INSERT EMPTY)))))) \/ ((~ (c = (distance (p , va)))) \/ ((~ (c = (distance (p , vb)))) \/ (~ (c = (distance (p , vc'))))))) \/ ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) \/ ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ ((distance (p' , vb)) = (distance (p' , va)))) \/ (~ ((distance (p' , vc)) = (distance (p' , va)))))) \/ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))))))) = ((!vc. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p , va)))) \/ ((~ (c = (distance (p , vb)))) \/ (~ (c = (distance (p , vc)))))))) \/ ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) \/ ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ ((distance (p' , vb)) = (distance (p' , va)))) \/ (~ ((distance (p' , vc)) = (distance (p' , va)))))) \/ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))
T c= ! c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= f3 cdistance c, f0 f1 c\/ c~ c= f3 cdistance c, f0 f2 c~ c= f3 cdistance c, f0 b0 c/\ ! c\/ c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c= cdistance c, b1 f2 cdistance c, b1 f1 c= cdistance c, b1 f4 cdistance c, b1 f1 c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ c= f3 cdistance c, b1 f1 c\/ c~ c= f3 cdistance c, b1 f2 c~ c= f3 cdistance c, b1 f4 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ c= cdistance c, b1 f2 cdistance c, b1 f1 c~ c= cdistance c, b1 f4 cdistance c, b1 f1 c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c= f3 cdistance c, b1 f1 c/\ c= f3 cdistance c, b1 f2 c= f3 cdistance c, b1 f4 c\/ ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= f3 cdistance c, f0 f1 c\/ c~ c= f3 cdistance c, f0 f2 c~ c= f3 cdistance c, f0 b0 c/\ ! c\/ c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f4 cdistance c, b0 f1 c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ c= f3 cdistance c, b0 f1 c\/ c~ c= f3 cdistance c, b0 f2 c~ c= f3 cdistance c, b0 f4 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ c= cdistance c, b0 f2 cdistance c, b0 f1 c~ c= cdistance c, b0 f4 cdistance c, b0 f1 c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c= f3 cdistance c, b0 f1 c/\ c= f3 cdistance c, b0 f2 c= f3 cdistance c, b0 f4
+ |- ((!p. (!vc. (!vb. (!va. (!c. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))))))))))) = (!p. (!vc. (!vb. (!va. (!c. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F)))))))))))
T c= ! ! ! ! ! c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b4 cdistance c, b0 b5 c==> ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY ! c==> cIN b6 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b4 cdistance c, b5 b6 c= b0 b5 c? / ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b5 cdistance c, b0 b5 ! ! ! ! ! c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b4 cdistance c, b0 b5 c==> ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY ! c==> cIN b6 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b4 cdistance c, b5 b6 c= b0 b5 c==> c~ c? / ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b5 cdistance c, b0 b5 cF
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) /\ F)
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 cF
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p , vc)) = (distance (p , va))) /\ (((distance (p , vc)) = (distance (p , vb))) /\ (((distance (p , vc)) = (distance (p , vc))) /\ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))))))) ==> ((distance (p , vc)) = (distance (p' , va)))) = ((distance (p , vc)) = (distance (p' , va))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f0 f3 cdistance c, f0 f1 c/\ c= cdistance c, f0 f3 cdistance c, f0 f2 c/\ c= cdistance c, f0 f3 cdistance c, f0 f3 c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c= cdistance c, f0 f3 cdistance c, f5 f1 c= cdistance c, f0 f3 cdistance c, f5 f1
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ ((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489)))) \/ ((~ ((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489)))) \/ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))))))))) = ((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ ((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489)))) \/ ((~ ((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489)))) \/ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= cdistance c, f11 f8 cdistance c, f11 f7 c\/ c~ c= cdistance c, f11 f9 cdistance c, f11 f7 cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= cdistance c, f11 f8 cdistance c, f11 f7 c\/ c~ c= cdistance c, f11 f9 cdistance c, f11 f7 cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY
+ |- ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))) = ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c/\ c= f3 cdistance c, f4 f0 c/\ c= f3 cdistance c, f4 f1 c= f3 cdistance c, f4 f2
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ (((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492)))))))))))) = ((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ (((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492)))))))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ c= cdistance c, f11 f8 cdistance c, f11 f7 c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f11 f7 c\/ c~ c= f10 cdistance c, f11 f8 c~ c= f10 cdistance c, f11 f9 c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ c= cdistance c, f11 f8 cdistance c, f11 f7 c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f11 f7 c\/ c~ c= f10 cdistance c, f11 f8 c~ c= f10 cdistance c, f11 f9
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- (((\p'. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p'))))) p') ==> F)
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> * / c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b1 f1 c\/ c~ c= f4 cdistance c, b1 f2 c~ c= f4 cdistance c, b1 f3 c= f0 b1 c/\ c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c~ c= f0 b0 f5 cF
- ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F), (((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)) |- ((((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)) /\ ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F))
T c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c/\ c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF
+ |- ((!a. ((a ==> (T ==> F)) = ((a /\ T) ==> F))) = (((T ==> (T ==> F)) = ((T /\ T) ==> F)) /\ ((F ==> (T ==> F)) = ((F /\ T) ==> F))))
T c= ! c= c==> b0 c==> cT cF c==> c/\ b0 cT cF c/\ c= c==> cT c==> cT cF c==> c/\ cT cT cF c= c==> cF c==> cT cF c==> c/\ cF cT cF
+ |- ((((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ (?a. ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))))) = (?a. (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))))))
T c= c\/ c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c? / c/\ c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 c? / c\/ c/\ ! c\/ c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c~ c= b1 f2 * f3 b1 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2
+ |- (((?w. (P w)) \/ Q) = (?w. ((P w) \/ Q)))
T c= c\/ c? / * f0 b0 f1 c? / c\/ * f0 b0 f1
- |- (((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> F)) = ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> F))
T c= c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 cF c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 cF
+ |- (((!b. (!a. ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F))) ==> ((\b. (!a. ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F))) b)) = ((\b. (!a. ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F))) b))
T c= c==> ! ! c==> c~ c= c==> b1 c==> b0 f0 c==> c/\ b1 b0 f0 cF * / ! c==> c~ c= c==> b1 c==> b0 f0 c==> c/\ b1 b0 f0 cF f1 * / ! c==> c~ c= c==> b1 c==> b0 f0 c==> c/\ b1 b0 f0 cF f1
- |- ((?c'. ((c = a) /\ ((c' = b) /\ (c' = cc)))) = ((c = a) /\ (?c. ((c = b) /\ (c = cc)))))
T c= c? / c/\ c= f0 f1 c/\ c= b0 f2 c= b0 f3 c/\ c= f0 f1 c? / c/\ c= b0 f2 c= b0 f3
+ (~ (cc = a)), (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- (~ (b = a))
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f2 f1 c/\ c= f2 f3 c= f2 f0 c\/ c~ c= f3 f1 c~ c= f0 f1 c~ c= f3 f1
+ |- (((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) = ((a ==> (b ==> c)) = ((a /\ b) ==> c)))
T c= c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2
- (~ F), (a = x), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c/\ c~ cF cF
+ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((a = x) ==> F)
T c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c==> c= f0 f1 cF
- ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) |- ((((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F))
T c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- ((((\p'. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p'))))) p') ==> F) = T)
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c= c==> * / c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b1 f1 c\/ c~ c= f4 cdistance c, b1 f2 c~ c= f4 cdistance c, b1 f3 c= f0 b1 c/\ c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c~ c= f0 b0 f5 cF cT
- |- (((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a))) = T)
T c= c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cT
+ (~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) |- (((?w. (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c)))))))) ==> F) = F)
T c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 c= c==> c? / ! c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, f3 * b0 b1 cF cF
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ ((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489)))) \/ ((~ ((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489)))) \/ (_2160491 = (distance (_2160493 , _2160492)))))))))) = ((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ ((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489)))) \/ ((~ ((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489)))) \/ (_2160491 = (distance (_2160493 , _2160492)))))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= cdistance c, f11 f8 cdistance c, f11 f7 c\/ c~ c= cdistance c, f11 f9 cdistance c, f11 f7 c= f10 cdistance c, f11 f9 c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= cdistance c, f11 f8 cdistance c, f11 f7 c\/ c~ c= cdistance c, f11 f9 cdistance c, f11 f7 c= f10 cdistance c, f11 f9
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0
- |- (T = (((~ (_2160424 = z)) \/ (p _2160424)) = ((p _2160424) \/ (~ (_2160424 = z)))))
T c= cT c= c\/ c~ c= f0 f1 * f2 f0 c\/ * f2 f0 c~ c= f0 f1
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((((\c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))) c) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))) = T)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> * / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1 f4 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1 cT
- |- ((((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)) = ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))
T c= c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))) |- ((((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , (w c))))) = (c = (distance (p , (w c)))))
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c= c==> cIN * f0 f5 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, f4 * f0 f5 c= f5 cdistance c, f4 * f0 f5
+ (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((~ (cc = a)) = (~ (b = a)))
T c==> c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c= c~ c= f3 f1 c~ c= f2 f1
+ (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))), (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- ((!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))) /\ F)
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, f4 b0 c/\ ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 cF
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p' , va)) = (distance (p' , vc)))) ==> ((distance (p' , va)) = (distance (p' , vc))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c~ c= cdistance c, f5 f1 cdistance c, f5 f3 c= cdistance c, f5 f1 cdistance c, f5 f3
- |- ((?c. (P c)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((distance (p , vc)) = (distance (p' , vb)))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= cdistance c, f0 f3 cdistance c, f5 f2
- |- ((!p''. (((~ (p'' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p'' , w))))))) \/ (p = p'))) = ((!p'. ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w)))))))) \/ (p = p')))
T c= ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f3 cdistance c, b0 b1 c= f4 f5 c\/ ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f3 cdistance c, b0 b1 c= f4 f5
+ |- ((!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))) = T)
T c= ! c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c= f3 cdistance c, f0 f1 c/\ c= f3 cdistance c, f0 f2 c= f3 cdistance c, f0 b0 ! c= c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c= cdistance c, b1 f2 cdistance c, b1 f1 c= cdistance c, b1 b0 cdistance c, b1 f1 c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c= f3 cdistance c, b1 f1 c/\ c= f3 cdistance c, b1 f2 c= f3 cdistance c, b1 b0 cT
- |- (((((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)) ==> (((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))) = (((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)))
T c= c==> c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF
- (_2160552 = _2160554), (_2160551 = _2160553) |- ((((_2160551 IN _2160552) = (_2160553 IN _2160554)) ==> ((_2160553 IN _2160554) \/ (~ (_2160551 IN _2160552)))) = ((_2160553 IN _2160554) \/ (~ (_2160551 IN _2160552))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cIN f2 f0 cIN f3 f1 c\/ cIN f3 f1 c~ cIN f2 f0 c\/ cIN f3 f1 c~ cIN f2 f0
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- ((!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w' p'))))))) \/ (p = p'))) ==> F)
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, f4 b0 c==> ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * f6 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f5 cdistance c, b0 * f6 b0 c= f4 b0 cF
+ |- (((a = a) /\ (a = a)) = ((a = a) /\ ((a = a) /\ (a = a))))
T c= c/\ c= f0 f0 c= f0 f0 c/\ c= f0 f0 c/\ c= f0 f0 c= f0 f0
- |- ((\p. (!y. (!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)))) p)
T * / ! ! c==> c~ c= ! c==> c\/ c= b3 b2 c\/ c= b3 b1 c= b3 f0 * b0 b3 c/\ * b0 b2 c/\ * b0 b1 * b0 f0 cF f1
+ |- (((?a. (P a)) /\ Q) = (?a. ((P a) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
+ |- ((~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) ==> F)
T c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0 cF
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)) |- ((((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)) /\ (((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)))
T c==> c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c/\ c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF
- |- (((!y. (!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))) ==> ((\y. (!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))) y)) = ((\y. (!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))) y))
T c= c==> ! ! c==> c~ c= ! c==> c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 * f1 b2 c/\ * f1 b1 c/\ * f1 b0 * f1 f0 cF * / ! c==> c~ c= ! c==> c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 * f1 b2 c/\ * f1 b1 c/\ * f1 b0 * f1 f0 cF f2 * / ! c==> c~ c= ! c==> c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 * f1 b2 c/\ * f1 b1 c/\ * f1 b0 * f1 f0 cF f2
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- (_2160569 = _2160571), (_2160570 = _2160572) |- ((_2160570 = _2160572) /\ ((_2160569 , _2160570) = (_2160571 , _2160572)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
+ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))) |- (((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) ==> ((\c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) _2160375)) = ((\c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) _2160375))
T c==> c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 c= c==> ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 * / c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 f3 * / c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 f3
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((distance (p , vc)) = (distance (p , vb)))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= cdistance c, f0 f3 cdistance c, f0 f2
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p , vc)) = (distance (p' , vc)))) ==> ((distance (p , vc)) = (distance (p' , vc))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c~ c= cdistance c, f0 f3 cdistance c, f5 f3 c= cdistance c, f0 f3 cdistance c, f5 f3
+ (~ (b = a)), (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- (~ (a = a))
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f2 f1 c/\ c= f2 f0 c= f2 f3 c\/ c~ c= f0 f1 c~ c= f3 f1 c~ c= f1 f1
+ (a = y), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ * f4 f0 c/\ * f4 f2 c/\ * f4 f1 * f4 f3 cF
- (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) /\ F)
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f4 b1 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f4 b1 cF
+ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- ((~ (_2160461 IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , _2160461))))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c\/ c~ cIN f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 f5
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (c = (distance (p , vc)))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= f4 cdistance c, f0 f3
- (a = z), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ * f4 f0 c/\ * f4 f2 c/\ * f4 f3 * f4 f1 c==> c~ cF cF
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- ((?p'. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p'))))) ==> F)
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c? / c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b1 f1 c\/ c~ c= f4 cdistance c, b1 f2 c~ c= f4 cdistance c, b1 f3 c= f0 b1 c/\ c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c~ c= f0 b0 cF
+ (~ (cc = a)), (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- (~ (a = a))
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f2 f1 c/\ c= f2 f3 c= f2 f0 c\/ c~ c= f3 f1 c~ c= f0 f1 c~ c= f1 f1
- |- (((~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> (~ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))))))))))))) = T)
T c= c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0 c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c~ ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 cT
- (a = y), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ * f4 f0 c/\ * f4 f2 c/\ * f4 f1 * f4 f3 c==> c~ cF cF
+ |- ((!vc. (((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))) = T)
T c= ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b1 b3 ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b3 b4 c= b1 b3 c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b1 b3 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b3 cdistance c, b2 b4 c= b1 b2 cT
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F))
T c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ (~ (_2160491 = (distance (_2160488 , _2160492))))))) \/ (((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492)))))))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 c\/ c= cdistance c, f5 f2 cdistance c, f5 f1 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f5 f1 c\/ c~ c= f4 cdistance c, f5 f2 c~ c= f4 cdistance c, f5 f3
+ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))) |- ((~ (_2160375 = a)) \/ ((~ (_2160375 = b)) \/ (~ (_2160375 = a))))
T c==> c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 c\/ c~ c= f3 f0 c\/ c~ c= f3 f1 c~ c= f3 f0
+ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- (!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w)))))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 ! c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0
+ |- ((!vb. (!vc. (((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))))) = T)
T c= ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c/\ ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b3 cdistance c, b2 b4 ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b3 cdistance c, b4 b5 c= b2 b4 c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c? / ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b3 cdistance c, b2 b4 ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / ! c==> cIN b5 * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b4 cdistance c, b3 b5 c= b2 b3 cT
+ (~ (b = a)), (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- F
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f2 f1 c/\ c= f2 f0 c= f2 f3 c\/ c~ c= f0 f1 c~ c= f3 f1 cF
+ ((\w. (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c)))))))) w) |- (((!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))) ==> F) = F)
T c==> * / ! c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, f3 * b0 b1 f4 c= c==> ! c/\ cIN * f4 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, f3 * f4 b0 cF cF
- (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (~ F) |- ((~ F) /\ F)
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, f4 b0 c==> c~ cF c/\ c~ cF cF
- |- (((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z)))) = T)
T c= c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cT
- ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) |- ((((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))
T c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p , vc)) = (distance (p' , va)))) ==> ((distance (p , vc)) = (distance (p' , va))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c~ c= cdistance c, f0 f3 cdistance c, f5 f1 c= cdistance c, f0 f3 cdistance c, f5 f1
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((p _2160424) \/ (~ (_2160424 = z)))
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c\/ * f3 f4 c~ c= f4 f2
+ (~ (b = a)), (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((a = a) ==> F)
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f2 f1 c/\ c= f2 f0 c= f2 f3 c\/ c~ c= f0 f1 c~ c= f3 f1 c==> c= f1 f1 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- ((!w. ((w IN (x INSERT (y INSERT (z INSERT EMPTY)))) ==> (p w))) = ((p x) /\ ((p y) /\ (p z))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2
+ |- (T = ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c= cT c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))))
T c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c= f4 cdistance c, f0 f3 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0
+ |- ((a = a) = ((a = a) /\ (a = a)))
T c= c= f0 f0 c/\ c= f0 f0 c= f0 f0
+ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f4 b1
- (~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) |- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) /\ F)
T c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 c/\ c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (!p. (((\p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))) p) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> * / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b1 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b1 b2 b0 c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b1 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b1 b1
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ (p = p')) = (~ (p = p')))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c~ c= f0 f5 c~ c= f0 f5
- |- ((!p'. t) = t)
T c= ! f0 f0
+ (~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) |- (?w. (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))))
T c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 c? / ! c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, f3 * b0 b1
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ (p z)) ==> F)
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c==> c~ * f3 f2 cF
- (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) |- ((\p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) p')
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 * / c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 f5
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- (((!a. (((~ (a = x)) \/ (p a)) /\ (((~ (a = y)) \/ (p a)) /\ ((~ (a = z)) \/ (p a))))) ==> ((\a. (((~ (a = x)) \/ (p a)) /\ (((~ (a = y)) \/ (p a)) /\ ((~ (a = z)) \/ (p a))))) _2160424)) = ((\a. (((~ (a = x)) \/ (p a)) /\ (((~ (a = y)) \/ (p a)) /\ ((~ (a = z)) \/ (p a))))) _2160424))
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c= c==> ! c/\ c\/ c~ c= b0 f0 * f3 b0 c/\ c\/ c~ c= b0 f1 * f3 b0 c\/ c~ c= b0 f2 * f3 b0 * / c/\ c\/ c~ c= b0 f0 * f3 b0 c/\ c\/ c~ c= b0 f1 * f3 b0 c\/ c~ c= b0 f2 * f3 b0 f4 * / c/\ c\/ c~ c= b0 f0 * f3 b0 c/\ c\/ c~ c= b0 f1 * f3 b0 c\/ c~ c= b0 f2 * f3 b0 f4
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((_2160424 = z) ==> (p _2160424))
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c==> c= f4 f2 * f3 f4
- |- ((?p''. (((p'' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p'' , vb)) = (distance (p'' , va))) /\ ((distance (p'' , vc)) = (distance (p'' , va))))) /\ (~ (p = p')))) = ((?p'. ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va)))))) /\ (~ (p = p'))))
T c= c? / c/\ c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= cdistance c, b0 f1 cdistance c, b0 f0 c= cdistance c, b0 f2 cdistance c, b0 f0 c~ c= f3 f4 c/\ c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= cdistance c, b0 f1 cdistance c, b0 f0 c= cdistance c, b0 f2 cdistance c, b0 f0 c~ c= f3 f4
- (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- ((\w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) w)
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 * / c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 f5
+ |- (((?a. (((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a)))) /\ ((p x) /\ ((p y) /\ (p z)))) = (?a. ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z))))))
T c= c/\ c? / c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 c? / c/\ c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2
+ (~ (b = a)), (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((~ (b = a)) /\ F)
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f2 f1 c/\ c= f2 f0 c= f2 f3 c\/ c~ c= f0 f1 c~ c= f3 f1 c/\ c~ c= f0 f1 cF
+ |- ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))
T c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 cdistance c, f0 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 cdistance c, b0 b1 c= f0 b0 c? / ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, f0 b1
- (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) = T)
T c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
- (a = z) |- ((p z) = (p z))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) /\ (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (T = (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))))
T c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cT cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((distance (p' , va)) = (distance (p , vc))) /\ ((distance (p' , va)) = (distance (p' , vc))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c/\ c= cdistance c, f5 f1 cdistance c, f0 f3 c= cdistance c, f5 f1 cdistance c, f5 f3
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (~ ((distance (p' , va)) = (distance (p , vc)))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p' , va)) = (distance (p , vc)))) /\ ((distance (p' , va)) = (distance (p , vc))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c~ c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c/\ c/\ cIN f2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c= f5 cdistance c, f2 f1 c/\ c= f5 cdistance c, f2 f4 c/\ c= f5 cdistance c, f2 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c\/ c~ c= f5 cdistance c, b0 f1 c\/ c~ c= f5 cdistance c, b0 f4 c~ c= f5 cdistance c, b0 f3 c= f2 b0 c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f0 f4 cdistance c, f0 f1 c= cdistance c, f0 f3 cdistance c, f0 f1 c~ c= f2 f0 c/\ c~ c= cdistance c, f0 f1 cdistance c, f2 f3 c= cdistance c, f0 f1 cdistance c, f2 f3
- |- ((~ (_2160551 = _2160553)) \/ ((~ (_2160552 = _2160554)) \/ ((_2160553 IN _2160554) \/ (~ (_2160551 IN _2160552)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p')))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p')))) = ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p')))))))
T c= c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c= f4 cdistance c, f0 f3 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c= f4 cdistance c, f0 f3 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((_2160422 = x) ==> (p _2160422))
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c==> c= f4 f0 * f3 f4
- |- ((!c. ((~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> (~ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))))))) = T)
T c= ! c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= b0 cdistance c, f0 f1 c/\ c= b0 cdistance c, f0 f2 c/\ c= b0 cdistance c, f0 f3 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= b0 cdistance c, b1 f1 c/\ c= b0 cdistance c, b1 f2 c= b0 cdistance c, b1 f3 c= f0 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b1 f2 cdistance c, b1 f1 c= cdistance c, b1 f3 cdistance c, b1 f1 c= f0 b1 c==> ! ! ! ! ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= b4 cdistance c, b1 b2 c/\ c= b4 cdistance c, b1 b3 c= b4 cdistance c, b1 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b3 cdistance c, b5 b2 c= cdistance c, b5 b4 cdistance c, b5 b2 c/\ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= b4 cdistance c, b5 b2 c/\ c= b4 cdistance c, b5 b3 c= b4 cdistance c, b5 b4 c~ ! ! ! ! ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= b4 cdistance c, b1 b2 c/\ c= b4 cdistance c, b1 b3 c= b4 cdistance c, b1 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b3 cdistance c, b5 b2 c= cdistance c, b5 b4 cdistance c, b5 b2 c/\ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= b4 cdistance c, b5 b2 c/\ c= b4 cdistance c, b5 b3 c= b4 cdistance c, b5 b4 cT
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (~ (p = p')), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ (p = p')) /\ (p = p'))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c~ c= f0 f1 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c= f5 cdistance c, f0 f2 c/\ c= f5 cdistance c, f0 f3 c/\ c= f5 cdistance c, f0 f4 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c\/ c~ c= f5 cdistance c, b0 f2 c\/ c~ c= f5 cdistance c, b0 f3 c~ c= f5 cdistance c, b0 f4 c= f0 b0 c/\ c/\ cIN f1 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c= cdistance c, f1 f3 cdistance c, f1 f2 c= cdistance c, f1 f4 cdistance c, f1 f2 c~ c= f0 f1 c/\ c~ c= f0 f1 c= f0 f1
+ |- ((F = t) = (~ t))
T c= c= cF f0 c~ f0
- (_2160579 = _2160581), (_2160580 = _2160582) |- ((_2160579 = _2160581) /\ (((hull _2160579) _2160580) = ((hull _2160581) _2160582)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part chull f0 f2 * * part chull f1 f3
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((distance (p , vc)) = (distance (p' , vb))) /\ ((distance (p , vc)) = (distance (p' , vc))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c/\ c= cdistance c, f0 f3 cdistance c, f5 f2 c= cdistance c, f0 f3 cdistance c, f5 f3
+ |- (T = (!c. (!b. (!a. ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)))))
T c= cT ! ! ! c==> c~ c= c==> b2 c==> b1 b0 c==> c/\ b2 b1 b0 cF
+ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))
T c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 cdistance c, f0 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 cdistance c, b0 b1 c= f0 b0 c? / ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, f0 b1
- |- ((!p. (!y. (!x. ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))))) = T)
T c= ! ! ! c= ! c==> c\/ c= b3 b2 c\/ c= b3 b1 c= b3 f0 * b0 b3 c/\ * b0 b2 c/\ * b0 b1 * b0 f0 cT
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((c = (distance (p , vb))) = ((distance (p , vc)) = (distance (p , vb))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c= f4 cdistance c, f0 f2 c= cdistance c, f0 f3 cdistance c, f0 f2
- (_2160552 = _2160554), (_2160551 = _2160553) |- ((_2160553 IN _2160554) \/ (~ (_2160551 IN _2160552)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f3 f1 c~ cIN f2 f0
+ |- ((((a = a) /\ ((a = a) /\ (a = a))) ==> F) = F)
T c= c==> c/\ c= f0 f0 c/\ c= f0 f0 c= f0 f0 cF cF
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?p'. t) = t)
T c= c? / f0 f0
- |- ((!p''. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p''))) = (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (!p'. (p = p'))))
T c= ! c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 c= f5 b0 c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 ! c= f5 b0
- (~ F), (~ (p z)), ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ ! c\/ c/\ c~ c= b0 f2 c/\ c~ c= b0 f3 c~ c= b0 f1 * f0 b0 c\/ c~ * f0 f2 c\/ c~ * f0 f3 c~ * f0 f1 c/\ c~ cF cF
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- (!a. (((~ (a = x)) \/ (p a)) /\ (((~ (a = y)) \/ (p a)) /\ ((~ (a = z)) \/ (p a)))))
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 ! c/\ c\/ c~ c= b0 f0 * f3 b0 c/\ c\/ c~ c= b0 f1 * f3 b0 c\/ c~ c= b0 f2 * f3 b0
+ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- (((p x) ==> F) = F)
T c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c= c==> * f4 f1 cF cF
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p , vc)) = (distance (p' , vb)))) ==> ((distance (p , vc)) = (distance (p' , vb))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c~ c= cdistance c, f0 f3 cdistance c, f5 f2 c= cdistance c, f0 f3 cdistance c, f5 f2
+ (~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) |- (((?c. ((((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) \/ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))))) ==> F) = F)
T c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 c= c==> c? / c\/ c/\ c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c\/ c~ c= f1 f0 c~ c= f2 f0 c/\ ! c\/ c~ c= b1 f0 c\/ c~ c= b1 f1 c~ c= b1 f2 c/\ c= f1 f0 c= f2 f0 cF cF
+ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- (((p y) ==> F) = F)
T c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c= c==> * f4 f2 cF cF
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (p = p')
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= f0 f5
- |- ((_2160573 = _2160574) ==> ((distance _2160573) = (distance _2160574)))
T c==> c= f0 f1 c= cdistance f0 cdistance f1
- (~ F), (~ (cc = a)), (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c= f0 f1 c==> c/\ c/\ c= f2 f1 c/\ c= f2 f3 c= f2 f0 c\/ c~ c= f3 f1 c~ c= f0 f1 c/\ c~ cF cF
+ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((a = x) \/ ((a = y) \/ (a = z)))
T c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3
+ (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- (c = (distance (p , (w c))))
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, f4 b0 c= f5 cdistance c, f4 * f0 f5
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) ==> (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((a = a) /\ ((a = a) /\ (a = a)))
T c/\ c= f0 f0 c/\ c= f0 f0 c= f0 f0
- ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) |- ((((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F))
T c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))), ((~ (p x)) ==> F), (((~ (p y)) \/ (~ (p z))) ==> F) |- F
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c==> c==> c~ * f3 f0 cF c==> c==> c\/ c~ * f3 f1 c~ * f3 f2 cF cF
+ |- ((!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))))))))) = T)
T c= ! ! ! ! c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ c= b2 cdistance c, f0 b0 c/\ c= b2 cdistance c, f0 b1 c= b2 cdistance c, f0 b3 ! c= c/\ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ c= cdistance c, b4 b1 cdistance c, b4 b0 c= cdistance c, b4 b3 cdistance c, b4 b0 c/\ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ c= b2 cdistance c, b4 b0 c/\ c= b2 cdistance c, b4 b1 c= b2 cdistance c, b4 b3 cT
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((distance (p' , vc)) = (distance (p' , va)))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= cdistance c, f5 f3 cdistance c, f5 f1
- |- ((~ (_2160569 = _2160571)) \/ ((~ (_2160570 = _2160572)) \/ ((_2160569 , _2160570) = (_2160571 , _2160572))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- |- ((?w'. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , w')))))) = ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (?w. (~ (c = (distance (p , w)))))))
T c= c? / c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f5 b0 c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c~ c= f4 cdistance c, f5 b0
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
+ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
+ |- ((\vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))) vc)
T * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b1 b3 ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b3 b4 c= b1 b3 f2
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- ((!b. (!a. ((a ==> (b ==> T)) = ((a /\ b) ==> T)))) = ((!a. ((a ==> (T ==> T)) = ((a /\ T) ==> T))) /\ (!a. ((a ==> (F ==> T)) = ((a /\ F) ==> T)))))
T c= ! ! c= c==> b1 c==> b0 cT c==> c/\ b1 b0 cT c/\ ! c= c==> b0 c==> cT cT c==> c/\ b0 cT cT ! c= c==> b0 c==> cF cT c==> c/\ b0 cF cT
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1
- (_2160580 = _2160582) |- ((_2160579 = _2160581) ==> (((hull _2160579) _2160580) = ((hull _2160581) _2160582)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p , vc)) = (distance (p , va))) /\ (((distance (p , vc)) = (distance (p , vb))) /\ (((distance (p , vc)) = (distance (p , vc))) /\ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va)))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f0 f3 cdistance c, f0 f1 c/\ c= cdistance c, f0 f3 cdistance c, f0 f2 c/\ c= cdistance c, f0 f3 cdistance c, f0 f3 c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1 c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
+ |- ((\c. (!b. (!a. ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)))) c)
T * / ! ! c==> c~ c= c==> b2 c==> b1 b0 c==> c/\ b2 b1 b0 cF f0
- |- (((!a. (!cc. (!b. ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)))) ==> ((\a. (!cc. (!b. ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)))) a)) = ((\a. (!cc. (!b. ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)))) a))
T c= c==> ! ! ! c==> c~ c= c? / c/\ c= b3 b0 c/\ c= b3 b2 c= b3 b1 c/\ c= b2 b0 c= b1 b0 cF * / ! ! c==> c~ c= c? / c/\ c= b3 b0 c/\ c= b3 b2 c= b3 b1 c/\ c= b2 b0 c= b1 b0 cF f0 * / ! ! c==> c~ c= c? / c/\ c= b3 b0 c/\ c= b3 b2 c= b3 b1 c/\ c= b2 b0 c= b1 b0 cF f0
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- ((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ ((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489)))) \/ ((~ ((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489)))) \/ (_2160491 = (distance (_2160493 , _2160492))))))))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c\/ c~ c= f4 cdistance c, f0 f3 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cdistance c, f5 f2 cdistance c, f5 f1 c\/ c~ c= cdistance c, f5 f3 cdistance c, f5 f1 c= f4 cdistance c, f5 f3
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((((distance (p , vc)) = (distance (p , va))) /\ (((distance (p , vc)) = (distance (p , vb))) /\ (((distance (p , vc)) = (distance (p , vc))) /\ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va)))))))) = ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p , vc)) = (distance (p , va))) /\ (((distance (p , vc)) = (distance (p , vb))) /\ (((distance (p , vc)) = (distance (p , vc))) /\ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c/\ c= cdistance c, f0 f3 cdistance c, f0 f1 c/\ c= cdistance c, f0 f3 cdistance c, f0 f2 c/\ c= cdistance c, f0 f3 cdistance c, f0 f3 c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f0 f3 cdistance c, f0 f1 c/\ c= cdistance c, f0 f3 cdistance c, f0 f2 c/\ c= cdistance c, f0 f3 cdistance c, f0 f3 c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1
- |- ((!p''. (((~ (p'' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ ((distance (p'' , vb)) = (distance (p'' , va)))) \/ (~ ((distance (p'' , vc)) = (distance (p'' , va)))))) \/ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))) = ((!p'. ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ ((distance (p' , vb)) = (distance (p' , va)))) \/ (~ ((distance (p' , vc)) = (distance (p' , va))))))) \/ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))))
T c= ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ c= cdistance c, b0 f1 cdistance c, b0 f0 c~ c= cdistance c, b0 f2 cdistance c, b0 f0 c/\ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= f4 cdistance c, f3 f0 c/\ c= f4 cdistance c, f3 f1 c= f4 cdistance c, f3 f2 c\/ ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ c= cdistance c, b0 f1 cdistance c, b0 f0 c~ c= cdistance c, b0 f2 cdistance c, b0 f0 c/\ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= f4 cdistance c, f3 f0 c/\ c= f4 cdistance c, f3 f1 c= f4 cdistance c, f3 f2
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1
+ (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- (c = cc)
T c==> c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c= f0 f3
+ |- (!a. (((\a. (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))))) a) ==> F))
T c==> * / c\/ c/\ ! c\/ c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c~ c= b1 f2 * f3 b1 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 f4 cF
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((\p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))) p) |- (((\p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))) p) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2 f3 c/\ * / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2 f3 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
+ |- (((~ (_2160494 IN ((hull affine) (_2160495 INSERT (_2160496 INSERT (_2160498 INSERT EMPTY)))))) \/ ((~ (_2160497 = (distance (_2160494 , _2160495)))) \/ ((~ (_2160497 = (distance (_2160494 , _2160496)))) \/ ((~ (_2160497 = (distance (_2160494 , _2160498)))) \/ ((~ (_2160499 IN ((hull affine) (_2160495 INSERT (_2160496 INSERT (_2160498 INSERT EMPTY)))))) \/ ((~ ((distance (_2160499 , _2160496)) = (distance (_2160499 , _2160495)))) \/ ((~ ((distance (_2160499 , _2160498)) = (distance (_2160499 , _2160495)))) \/ (_2160497 = (distance (_2160499 , _2160495)))))))))) = ((_2160497 = (distance (_2160499 , _2160495))) \/ ((~ (_2160494 IN ((hull affine) (_2160495 INSERT (_2160496 INSERT (_2160498 INSERT EMPTY)))))) \/ ((~ (_2160497 = (distance (_2160494 , _2160495)))) \/ ((~ (_2160497 = (distance (_2160494 , _2160496)))) \/ ((~ (_2160497 = (distance (_2160494 , _2160498)))) \/ ((~ (_2160499 IN ((hull affine) (_2160495 INSERT (_2160496 INSERT (_2160498 INSERT EMPTY)))))) \/ ((~ ((distance (_2160499 , _2160496)) = (distance (_2160499 , _2160495)))) \/ (~ ((distance (_2160499 , _2160498)) = (distance (_2160499 , _2160495))))))))))))
T c= c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c\/ c~ c= f4 cdistance c, f0 f3 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cdistance c, f5 f2 cdistance c, f5 f1 c\/ c~ c= cdistance c, f5 f3 cdistance c, f5 f1 c= f4 cdistance c, f5 f1 c\/ c= f4 cdistance c, f5 f1 c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c\/ c~ c= f4 cdistance c, f0 f3 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cdistance c, f5 f2 cdistance c, f5 f1 c~ c= cdistance c, f5 f3 cdistance c, f5 f1
+ |- (((!p. (!vc. (!vb. (!va. (!c. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F)))))))))) ==> ((\p. (!vc. (!vb. (!va. (!c. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F)))))))))) p)) = ((\p. (!vc. (!vb. (!va. (!c. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F)))))))))) p))
T c= c==> ! ! ! ! ! c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b4 cdistance c, b0 b5 c==> ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY ! c==> cIN b6 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b4 cdistance c, b5 b6 c= b0 b5 c==> c~ c? / ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b5 cdistance c, b0 b5 cF * / ! ! ! ! c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b4 cdistance c, b0 b5 c==> ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY ! c==> cIN b6 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b4 cdistance c, b5 b6 c= b0 b5 c==> c~ c? / ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b5 cdistance c, b0 b5 cF f0 * / ! ! ! ! c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> cIN b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b4 cdistance c, b0 b5 c==> ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY ! c==> cIN b6 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b4 cdistance c, b5 b6 c= b0 b5 c==> c~ c? / ! c==> cIN b5 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c= b5 cdistance c, b0 b5 cF f0
- (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- ((~ F) ==> F)
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, f4 b0 c==> c~ cF cF
- |- (((((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)) ==> (((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F))) = (((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)))
T c= c==> c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((((distance (p , vc)) = (distance (p' , va))) /\ ((distance (p , vc)) = (distance (p , vc)))) ==> ((distance (p' , va)) = (distance (p , vc)))) = ((distance (p' , va)) = (distance (p , vc))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c==> c/\ c= cdistance c, f0 f3 cdistance c, f5 f1 c= cdistance c, f0 f3 cdistance c, f0 f3 c= cdistance c, f5 f1 cdistance c, f0 f3 c= cdistance c, f5 f1 cdistance c, f0 f3
+ (~ (p z)) |- ((p z) ==> F)
T c==> c~ * f0 f1 c==> * f0 f1 cF
+ |- ((\va. (!c. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))))) va)
T * / ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ! c==> cIN b2 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= b1 cdistance c, f2 b2 c==> ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> cIN b3 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= b1 cdistance c, b2 b3 c= f2 b2 c==> c~ c? / ! c==> cIN b2 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= b2 cdistance c, f2 b2 cF f3
+ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))) |- (((~ (_2160375 = a)) \/ ((~ (_2160375 = b)) \/ (~ (_2160375 = a)))) = ((~ (_2160375 = a)) \/ ((~ (_2160375 = a)) \/ (~ (_2160375 = a)))))
T c==> c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 c= c\/ c~ c= f3 f0 c\/ c~ c= f3 f1 c~ c= f3 f0 c\/ c~ c= f3 f0 c\/ c~ c= f3 f0 c~ c= f3 f0
- (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((~ (cc = a)) = (~ (cc = a)))
T c==> c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c= c~ c= f3 f1 c~ c= f3 f1
- |- (((!b. ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)) ==> ((\b. ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)) b)) = ((\b. ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)) b))
T c= c==> ! c==> c~ c= c? / c/\ c= b1 f0 c/\ c= b1 b0 c= b1 f1 c/\ c= b0 f0 c= f1 f0 cF * / c==> c~ c= c? / c/\ c= b1 f0 c/\ c= b1 b0 c= b1 f1 c/\ c= b0 f0 c= f1 f0 cF f2 * / c==> c~ c= c? / c/\ c= b1 f0 c/\ c= b1 b0 c= b1 f1 c/\ c= b0 f0 c= f1 f0 cF f2
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((distance (p , vc)) = (distance (p , vc))) /\ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c/\ c= cdistance c, f0 f3 cdistance c, f0 f3 c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1
- |- ((((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)) ==> (((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)))
T c==> c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF
+ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))) |- (((_2160375 = a) /\ ((_2160375 = a) /\ (_2160375 = a))) ==> F)
T c==> c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 c==> c/\ c= f3 f0 c/\ c= f3 f0 c= f3 f0 cF
+ |- (T = (((~ (_2160494 IN ((hull affine) (_2160495 INSERT (_2160496 INSERT (_2160498 INSERT EMPTY)))))) \/ ((~ (_2160497 = (distance (_2160494 , _2160495)))) \/ ((~ (_2160497 = (distance (_2160494 , _2160496)))) \/ ((~ (_2160497 = (distance (_2160494 , _2160498)))) \/ ((~ (_2160499 IN ((hull affine) (_2160495 INSERT (_2160496 INSERT (_2160498 INSERT EMPTY)))))) \/ ((~ ((distance (_2160499 , _2160496)) = (distance (_2160499 , _2160495)))) \/ ((~ ((distance (_2160499 , _2160498)) = (distance (_2160499 , _2160495)))) \/ (_2160497 = (distance (_2160499 , _2160496)))))))))) = ((_2160497 = (distance (_2160499 , _2160496))) \/ ((~ (_2160494 IN ((hull affine) (_2160495 INSERT (_2160496 INSERT (_2160498 INSERT EMPTY)))))) \/ ((~ (_2160497 = (distance (_2160494 , _2160495)))) \/ ((~ (_2160497 = (distance (_2160494 , _2160496)))) \/ ((~ (_2160497 = (distance (_2160494 , _2160498)))) \/ ((~ (_2160499 IN ((hull affine) (_2160495 INSERT (_2160496 INSERT (_2160498 INSERT EMPTY)))))) \/ ((~ ((distance (_2160499 , _2160496)) = (distance (_2160499 , _2160495)))) \/ (~ ((distance (_2160499 , _2160498)) = (distance (_2160499 , _2160495)))))))))))))
T c= cT c= c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c\/ c~ c= f4 cdistance c, f0 f3 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cdistance c, f5 f2 cdistance c, f5 f1 c\/ c~ c= cdistance c, f5 f3 cdistance c, f5 f1 c= f4 cdistance c, f5 f2 c\/ c= f4 cdistance c, f5 f2 c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c\/ c~ c= f4 cdistance c, f0 f3 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cdistance c, f5 f2 cdistance c, f5 f1 c~ c= cdistance c, f5 f3 cdistance c, f5 f1
+ (~ (p z)), ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- F
T c==> c~ * f0 f1 c==> c/\ ! c\/ c/\ c~ c= b0 f2 c/\ c~ c= b0 f3 c~ c= b0 f1 * f0 b0 c\/ c~ * f0 f2 c\/ c~ * f0 f3 c~ * f0 f1 cF
- (~ ((distance (p' , vc)) = (distance (p' , va)))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p' , vc)) = (distance (p' , va)))) /\ ((distance (p' , vc)) = (distance (p' , va))))
T c==> c~ c= cdistance c, f0 f1 cdistance c, f0 f2 c==> c/\ c/\ cIN f3 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c/\ c= f5 cdistance c, f3 f2 c/\ c= f5 cdistance c, f3 f4 c/\ c= f5 cdistance c, f3 f1 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c\/ c~ c= f5 cdistance c, b0 f2 c\/ c~ c= f5 cdistance c, b0 f4 c~ c= f5 cdistance c, b0 f1 c= f3 b0 c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c/\ c= cdistance c, f0 f4 cdistance c, f0 f2 c= cdistance c, f0 f1 cdistance c, f0 f2 c~ c= f3 f0 c/\ c~ c= cdistance c, f0 f1 cdistance c, f0 f2 c= cdistance c, f0 f1 cdistance c, f0 f2
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((p = _2160500) \/ ((~ (_2160500 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ ((distance (p , vc)) = (distance (_2160500 , va)))) \/ ((~ ((distance (p , vc)) = (distance (_2160500 , vb)))) \/ (~ ((distance (p , vc)) = (distance (_2160500 , vc))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c\/ c= f0 f6 c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cdistance c, f0 f3 cdistance c, f6 f1 c\/ c~ c= cdistance c, f0 f3 cdistance c, f6 f2 c~ c= cdistance c, f0 f3 cdistance c, f6 f3
- |- ((?a'. (((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a')))) = (((a = x) \/ ((a = y) \/ (a = z))) /\ (?a. (~ (p a)))))
T c= c? / c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 b0 c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c? / c~ * f4 b0
+ (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((~ (b = a)) ==> F)
T c==> c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c==> c~ c= f2 f1 cF
- (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w' p'))))))) \/ (p = p'))) |- (!p'. ((((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (p = p')) /\ (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (p' , (w' p')))))) \/ (p = p'))))
T c==> ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * f3 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 * f3 b0 c= f5 b0 ! c/\ c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * f3 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f5 b0 c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 * f3 b0 c= f5 b0
- (~ (p x)), ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ ! c\/ c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 * f0 b0 c\/ c~ * f0 f1 c\/ c~ * f0 f2 c~ * f0 f3 c==> c~ cF cF
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (~ ((distance (p , vc)) = (distance (p' , va)))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p , vc)) = (distance (p' , va)))) /\ ((distance (p , vc)) = (distance (p' , va))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c~ c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c/\ c= f5 cdistance c, f0 f3 c/\ c= f5 cdistance c, f0 f4 c/\ c= f5 cdistance c, f0 f1 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c\/ c~ c= f5 cdistance c, b0 f3 c\/ c~ c= f5 cdistance c, b0 f4 c~ c= f5 cdistance c, b0 f1 c= f0 b0 c/\ c/\ cIN f2 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 part cEMPTY c/\ c= cdistance c, f2 f4 cdistance c, f2 f3 c= cdistance c, f2 f1 cdistance c, f2 f3 c~ c= f0 f2 c/\ c~ c= cdistance c, f0 f1 cdistance c, f2 f3 c= cdistance c, f0 f1 cdistance c, f2 f3
+ |- ((!b. ((F ==> b) ==> (F = (F /\ b)))) = (((F ==> T) ==> (F = (F /\ T))) /\ ((F ==> F) ==> (F = (F /\ F)))))
T c= ! c==> c==> cF b0 c= cF c/\ cF b0 c/\ c==> c==> cF cT c= cF c/\ cF cT c==> c==> cF cF c= cF c/\ cF cF
- (~ (p z)), ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ (p z)) /\ (p z))
T c==> c~ * f0 f1 c==> c/\ ! c\/ c/\ c~ c= b0 f2 c/\ c~ c= b0 f3 c~ c= b0 f1 * f0 b0 c\/ c~ * f0 f2 c\/ c~ * f0 f3 c~ * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- ((_2160580 = _2160582) ==> ((~ (_2160579 = _2160581)) \/ (((hull _2160579) _2160580) = ((hull _2160581) _2160582))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w' p'))))))) \/ (p = p'))) |- (((~ (_2160463 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w' _2160463) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (p = _2160463))
T c==> ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * f3 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 * f3 b0 c= f5 b0 c\/ c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * f3 f6 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f5 f6
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (c = (distance (p , vb)))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= f4 cdistance c, f0 f2
- ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))) |- (((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))) /\ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))))
T c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c/\ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF
+ (~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) |- ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) /\ F)
T c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 c/\ c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF
- (~ F), (~ (p y)), ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ ! c\/ c/\ c~ c= b0 f2 c/\ c~ c= b0 f1 c~ c= b0 f3 * f0 b0 c\/ c~ * f0 f2 c\/ c~ * f0 f1 c~ * f0 f3 c/\ c~ cF cF
+ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- ((!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))) ==> F)
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> ! c/\ cIN * f5 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, f4 * f5 b0 cF
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) = (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((_2160459 = _2160460) ==> ((p _2160460) \/ (~ (p _2160459))))
T c==> c= f0 f1 c\/ * f2 f1 c~ * f2 f0
+ |- ((!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))))))) = T)
T c= ! ! c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c/\ c= b0 cdistance c, f0 f1 c/\ c= b0 cdistance c, f0 f2 c= b0 cdistance c, f0 b1 ! c= c/\ cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c/\ c= cdistance c, b2 f2 cdistance c, b2 f1 c= cdistance c, b2 b1 cdistance c, b2 f1 c/\ cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c/\ c= b0 cdistance c, b2 f1 c/\ c= b0 cdistance c, b2 f2 c= b0 cdistance c, b2 b1 cT
+ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c= f4 b0
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p , vc)) = (distance (p' , va))) /\ (((distance (p , vc)) = (distance (p' , vb))) /\ ((distance (p , vc)) = (distance (p' , vc)))))) ==> (p = p')) = (p = p'))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c==> c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f0 f3 cdistance c, f5 f1 c/\ c= cdistance c, f0 f3 cdistance c, f5 f2 c= cdistance c, f0 f3 cdistance c, f5 f3 c= f0 f5 c= f0 f5
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((p = p') ==> F) = F)
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c==> c= f0 f5 cF cF
- (~ F), (~ (p x)), ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ ! c\/ c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 * f0 b0 c\/ c~ * f0 f1 c\/ c~ * f0 f2 c~ * f0 f3 c/\ c~ cF cF
- ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((~ (p y)) ==> (p y))
T c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c==> c~ * f4 f2 * f4 f2
+ (~ (p z)), ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ (p z)) /\ F)
T c==> c~ * f0 f1 c==> c/\ ! c\/ c/\ c~ c= b0 f2 c/\ c~ c= b0 f3 c~ c= b0 f1 * f0 b0 c\/ c~ * f0 f2 c\/ c~ * f0 f3 c~ * f0 f1 c/\ c~ * f0 f1 cF
- (~ (b = a)), (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((~ F) ==> F)
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f2 f1 c/\ c= f2 f0 c= f2 f3 c\/ c~ c= f0 f1 c~ c= f3 f1 c==> c~ cF cF
+ (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((cc = a) = (b = a))
T c==> c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c= c= f3 f1 c= f2 f1
+ |- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))) ==> (p = p')))))) = ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))
T c= c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c= f4 cdistance c, f0 f3 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= f0 b0 c==> cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 cdistance c, f0 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 cdistance c, b0 b1 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= f0 b0
+ (a = z), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ * f4 f0 c/\ * f4 f2 c/\ * f4 f3 * f4 f1 cF
- |- ((?c'. ((c' = a) /\ ((c = b) /\ (c = cc)))) = ((?c. (c = a)) /\ ((c = b) /\ (c = cc))))
T c= c? / c/\ c= b0 f0 c/\ c= f1 f2 c= f1 f3 c/\ c? / c= b0 f0 c/\ c= f1 f2 c= f1 f3
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((distance (p' , vc)) = (distance (p' , va))) = ((distance (p' , vc)) = (distance (p' , va))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c= cdistance c, f5 f3 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((p = p') ==> F)
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c= f0 f5 cF
- |- ((((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)) = ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F))
T c= c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF
+ (~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) |- (((?p'. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p'))))) ==> F) = F)
T c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0 c= c==> c? / c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b1 f1 c\/ c~ c= f4 cdistance c, b1 f2 c~ c= f4 cdistance c, b1 f3 c= f0 b1 c/\ c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c~ c= f0 b0 cF cF
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) |- (?w. (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p'))))
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c? / ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f3 cdistance c, b1 * b0 b1 c= f4 b1
- |- ((!vc. ((P vc) \/ Q)) = ((!vc. (P vc)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))), ((~ (cc = a)) ==> F) |- F
T c==> c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c==> c==> c~ c= f3 f1 cF cF
- (~ ((distance (p' , va)) = (distance (p' , vc)))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p' , va)) = (distance (p' , vc)))) /\ ((distance (p' , va)) = (distance (p' , vc))))
T c==> c~ c= cdistance c, f0 f1 cdistance c, f0 f2 c==> c/\ c/\ cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c/\ c= f5 cdistance c, f3 f1 c/\ c= f5 cdistance c, f3 f4 c/\ c= f5 cdistance c, f3 f2 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c\/ c~ c= f5 cdistance c, b0 f1 c\/ c~ c= f5 cdistance c, b0 f4 c~ c= f5 cdistance c, b0 f2 c= f3 b0 c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c/\ c= cdistance c, f0 f4 cdistance c, f0 f1 c= cdistance c, f0 f2 cdistance c, f0 f1 c~ c= f3 f0 c/\ c~ c= cdistance c, f0 f1 cdistance c, f0 f2 c= cdistance c, f0 f1 cdistance c, f0 f2
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (((!x. (((\c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))) x) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))) ==> ((?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))) = ((?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> ! c==> * / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, f3 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= f3 b2 b0 c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b3 cdistance c, b2 b4 c= b1 b2 c==> c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1 c==> c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
+ |- ((?c. ((((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) \/ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))))) ==> F)
T c==> c? / c\/ c/\ c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c\/ c~ c= f1 f0 c~ c= f2 f0 c/\ ! c\/ c~ c= b1 f0 c\/ c~ c= b1 f1 c~ c= b1 f2 c/\ c= f1 f0 c= f2 f0 cF
- |- ((!p''. (((p'' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p'' , vb)) = (distance (p'' , va))) /\ ((distance (p'' , vc)) = (distance (p'' , va))))) \/ ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))))) = ((!p'. ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va)))))) \/ ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc)))))))))
T c= ! c\/ c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= cdistance c, b0 f1 cdistance c, b0 f0 c= cdistance c, b0 f2 cdistance c, b0 f0 c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ c= f4 cdistance c, f3 f0 c\/ c~ c= f4 cdistance c, f3 f1 c~ c= f4 cdistance c, f3 f2 c\/ ! c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= cdistance c, b0 f1 cdistance c, b0 f0 c= cdistance c, b0 f2 cdistance c, b0 f0 c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ c= f4 cdistance c, f3 f0 c\/ c~ c= f4 cdistance c, f3 f1 c~ c= f4 cdistance c, f3 f2
+ (a = z), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((p z) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ * f4 f0 c/\ * f4 f2 c/\ * f4 f3 * f4 f1 c==> * f4 f1 cF
+ ((\a. (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))))) a) |- (((((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z))))) ==> F) = F)
T c==> * / c\/ c/\ ! c\/ c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c~ c= b1 f2 * f3 b1 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 f4 c= c==> c\/ c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= f4 f0 c\/ c= f4 f1 c= f4 f2 c~ * f3 f4 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF cF
+ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))) |- (((~ (_2160375 = a)) \/ ((~ (_2160375 = b)) \/ (~ (_2160375 = cc)))) = ((~ (_2160375 = a)) \/ ((~ (_2160375 = b)) \/ (~ (_2160375 = a)))))
T c==> c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 c= c\/ c~ c= f3 f0 c\/ c~ c= f3 f1 c~ c= f3 f2 c\/ c~ c= f3 f0 c\/ c~ c= f3 f1 c~ c= f3 f0
- |- ((!vc'. (((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p , va)))) \/ ((~ (c = (distance (p , vb)))) \/ (~ (c = (distance (p , vc))))))) \/ ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc' INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc')) = (distance (p' , va))))) \/ ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc' INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc'))))))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc' INSERT EMPTY)))))) \/ ((~ ((distance (p' , vb)) = (distance (p' , va)))) \/ (~ ((distance (p' , vc')) = (distance (p' , va)))))) \/ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc' INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc'))))))))))) = (((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p , va)))) \/ ((~ (c = (distance (p , vb)))) \/ (~ (c = (distance (p , vc))))))) \/ (!vc. ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) \/ ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ ((distance (p' , vb)) = (distance (p' , va)))) \/ (~ ((distance (p' , vc)) = (distance (p' , va)))))) \/ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))))))))
T c= ! c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 c/\ ! c\/ c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c= cdistance c, b1 f2 cdistance c, b1 f1 c= cdistance c, b1 b0 cdistance c, b1 f1 c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= f4 cdistance c, b1 f1 c\/ c~ c= f4 cdistance c, b1 f2 c~ c= f4 cdistance c, b1 b0 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= cdistance c, b1 f2 cdistance c, b1 f1 c~ c= cdistance c, b1 b0 cdistance c, b1 f1 c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c= f4 cdistance c, b1 f1 c/\ c= f4 cdistance c, b1 f2 c= f4 cdistance c, b1 b0 c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 ! c/\ ! c\/ c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c= cdistance c, b1 f2 cdistance c, b1 f1 c= cdistance c, b1 b0 cdistance c, b1 f1 c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= f4 cdistance c, b1 f1 c\/ c~ c= f4 cdistance c, b1 f2 c~ c= f4 cdistance c, b1 b0 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= cdistance c, b1 f2 cdistance c, b1 f1 c~ c= cdistance c, b1 b0 cdistance c, b1 f1 c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c= f4 cdistance c, b1 f1 c/\ c= f4 cdistance c, b1 f2 c= f4 cdistance c, b1 b0
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F), (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ (~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) |- ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> F)
T c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0 c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 cF
- |- (((!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)) ==> ((\x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)) x)) = ((\x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)) x))
T c= c==> ! c==> c~ c= ! c==> c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 * f2 b1 c/\ * f2 b0 c/\ * f2 f0 * f2 f1 cF * / c==> c~ c= ! c==> c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 * f2 b1 c/\ * f2 b0 c/\ * f2 f0 * f2 f1 cF f3 * / c==> c~ c= ! c==> c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 * f2 b1 c/\ * f2 b0 c/\ * f2 f0 * f2 f1 cF f3
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- ((_2160497 = (distance (_2160499 , _2160496))) \/ ((~ (_2160494 IN ((hull affine) (_2160495 INSERT (_2160496 INSERT (_2160498 INSERT EMPTY)))))) \/ ((~ (_2160497 = (distance (_2160494 , _2160495)))) \/ ((~ (_2160497 = (distance (_2160494 , _2160496)))) \/ ((~ (_2160497 = (distance (_2160494 , _2160498)))) \/ ((~ (_2160499 IN ((hull affine) (_2160495 INSERT (_2160496 INSERT (_2160498 INSERT EMPTY)))))) \/ ((~ ((distance (_2160499 , _2160496)) = (distance (_2160499 , _2160495)))) \/ (~ ((distance (_2160499 , _2160498)) = (distance (_2160499 , _2160495)))))))))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c\/ c= f0 cdistance c, f1 f2 c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c\/ c~ c= f0 cdistance c, f3 f4 c\/ c~ c= f0 cdistance c, f3 f2 c\/ c~ c= f0 cdistance c, f3 f5 c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c\/ c~ c= cdistance c, f1 f2 cdistance c, f1 f4 c~ c= cdistance c, f1 f5 cdistance c, f1 f4
- ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F), (((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)) |- ((((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)) /\ ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F))
T c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c/\ c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p')))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0
+ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- (~ (p a))
T c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c~ * f4 f0
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p' , va)) = (distance (p , vc)))) ==> ((distance (p' , va)) = (distance (p , vc))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c~ c= cdistance c, f5 f1 cdistance c, f0 f3 c= cdistance c, f5 f1 cdistance c, f0 f3
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ (((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492)))))))))))) = ((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ (((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492)))))))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ c= cdistance c, f11 f9 cdistance c, f11 f7 c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f11 f7 c\/ c~ c= f10 cdistance c, f11 f8 c~ c= f10 cdistance c, f11 f9 c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ c= cdistance c, f11 f9 cdistance c, f11 f7 c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f11 f7 c\/ c~ c= f10 cdistance c, f11 f8 c~ c= f10 cdistance c, f11 f9
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- (((p z) ==> F) = F)
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c= c==> * f3 f2 cF cF
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((((distance (p , vc)) = (distance (p , vb))) /\ (((distance (p , vc)) = (distance (p , vc))) /\ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))))) = (((distance (p , vc)) = (distance (p , va))) /\ (((distance (p , vc)) = (distance (p , vb))) /\ (((distance (p , vc)) = (distance (p , vc))) /\ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va)))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c/\ c= cdistance c, f0 f3 cdistance c, f0 f2 c/\ c= cdistance c, f0 f3 cdistance c, f0 f3 c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c/\ c= cdistance c, f0 f3 cdistance c, f0 f1 c/\ c= cdistance c, f0 f3 cdistance c, f0 f2 c/\ c= cdistance c, f0 f3 cdistance c, f0 f3 c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1
+ |- (((a = a) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ (~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) |- (?a. (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z))))))
T c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 c? / c\/ c/\ ! c\/ c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c~ c= b1 f2 * f3 b1 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2
- |- ((!vb. (!c. ((~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> (~ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))))))))))))))) = T)
T c= ! ! c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT f2 part cEMPTY c/\ c= b1 cdistance c, f0 f1 c/\ c= b1 cdistance c, f0 b0 c/\ c= b1 cdistance c, f0 f2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT f2 part cEMPTY c/\ c= b1 cdistance c, b2 f1 c/\ c= b1 cdistance c, b2 b0 c= b1 cdistance c, b2 f2 c= f0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT f2 part cEMPTY c/\ c= cdistance c, b2 b0 cdistance c, b2 f1 c= cdistance c, b2 f2 cdistance c, b2 f1 c= f0 b2 c==> ! ! ! ! ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b2 b3 c/\ c= b5 cdistance c, b2 b4 c= b5 cdistance c, b2 b5 ! c= c/\ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c= cdistance c, b6 b4 cdistance c, b6 b3 c= cdistance c, b6 b5 cdistance c, b6 b3 c/\ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b6 b3 c/\ c= b5 cdistance c, b6 b4 c= b5 cdistance c, b6 b5 c~ ! ! ! ! ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY c/\ c= b4 cdistance c, b2 b3 c/\ c= b4 cdistance c, b2 b4 c= b4 cdistance c, b2 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b4 cdistance c, b5 b3 c= cdistance c, b5 b4 cdistance c, b5 b3 c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY c/\ c= b4 cdistance c, b5 b3 c/\ c= b4 cdistance c, b5 b4 c= b4 cdistance c, b5 b4 cT
+ |- ((((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (?p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p'))))) = (?p'. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p'))))))
T c= c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c? / c/\ c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c~ c= f0 b0 c? / c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b1 f1 c\/ c~ c= f4 cdistance c, b1 f2 c~ c= f4 cdistance c, b1 f3 c= f0 b1 c/\ c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c~ c= f0 b0
+ (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- (!w'. (((\w. (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p')))) w') ==> F))
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, f4 b0 ! c==> * / ! c\/ c\/ c~ cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * b1 b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f5 cdistance c, b2 * b1 b2 c= f4 b2 b0 cF
- (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) |- (p = p')
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> c/\ cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f5 b0 c= f4 f5
- (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w' p'))))))) \/ (p = p'))) |- ((\p'. ((((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (p = p')) /\ (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (p' , (w' p')))))) \/ (p = p')))) _2160463)
T c==> ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * f3 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 * f3 b0 c= f5 b0 * / c/\ c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * f3 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f5 b0 c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 * f3 b0 c= f5 b0 f6
+ ((((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) \/ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a)))) |- (((((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) \/ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a)))) /\ F)
T c==> c\/ c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c/\ ! c\/ c~ c= b0 f1 c\/ c~ c= b0 f2 c~ c= b0 f3 c/\ c= f2 f1 c= f3 f1 c/\ c\/ c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c/\ ! c\/ c~ c= b0 f1 c\/ c~ c= b0 f2 c~ c= b0 f3 c/\ c= f2 f1 c= f3 f1 cF
+ (((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) ==> F), (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z))))) |- F
T c==> c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 cF c==> c\/ c/\ ! c\/ c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 * f4 b0 c\/ c~ * f4 f1 c\/ c~ * f4 f2 c~ * f4 f3 c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 cF
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))) = ((\p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))) p))
T c= c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, f0 b1 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= f0 b0 * / c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1 f0
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- (p y)
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 * f3 f1
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((((\p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))) p) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))) = T)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> * / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2 f3 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1 cT
+ (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((~ (b = a)) = (~ (a = a)))
T c==> c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c= c~ c= f2 f1 c~ c= f1 f1
- |- ((!a'. (((~ (a' = x)) /\ ((~ (a' = y)) /\ (~ (a' = z)))) \/ (p a))) = ((!a. ((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z))))) \/ (p a)))
T c= ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 f4 c\/ ! c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 f4
- |- ((_2160551 = _2160553) ==> ((~ (_2160552 = _2160554)) \/ ((_2160553 IN _2160554) \/ (~ (_2160551 IN _2160552)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ (a = x), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((a = x) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c/\ c= f0 f1 cF
+ |- ((!p'. (?w. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w)))))) \/ (p = p')))) = (?w. (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p')))))
T c= ! c? / c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f3 cdistance c, b0 b1 c= f4 b0 c? / ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f3 cdistance c, b1 * b0 b1 c= f4 b1
- |- ((?a'. (((a' = x) \/ ((a' = y) \/ (a' = z))) /\ (~ (p a)))) = ((?a. ((a = x) \/ ((a = y) \/ (a = z)))) /\ (~ (p a))))
T c= c? / c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 f4 c/\ c? / c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 f4
+ |- ((\b. ((a ==> b) ==> (a = (a /\ b)))) b)
T * / c==> c==> f0 b0 c= f0 c/\ f0 b0 f1
+ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((\p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))) p)
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1 f4
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) = (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f4 b1 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c= f4 b0
- (_2160472 = _2160473) |- ((_2160472 = _2160473) /\ ((w' _2160472) = (w' _2160473)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * f2 f0 * f2 f1
+ |- (((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) ==> F)
T c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 cF
+ (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- (b = a)
T c==> c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c= f2 f1
- |- ((!cc. (!b. ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a))))) = T)
T c= ! ! c= c? / c/\ c= b2 f0 c/\ c= b2 b1 c= b2 b0 c/\ c= b1 f0 c= b0 f0 cT
+ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f4 b1
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) ==> (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) = (?w. ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))))
T c= c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f0 b0 c? / c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f0 b0
- |- ((_2160575 = _2160577) ==> ((~ (_2160576 = _2160578)) \/ ((_2160575 INSERT _2160576) = (_2160577 INSERT _2160578))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- (((!vc. (!vb. (!va. (!c. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))))))) ==> ((\vc. (!vb. (!va. (!c. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))))))) vc)) = ((\vc. (!vb. (!va. (!c. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))))))) vc))
T c= c==> ! ! ! ! c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b4 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b3 cdistance c, f0 b4 c==> ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b3 cdistance c, b4 b5 c= f0 b4 c==> c~ c? / ! c==> cIN b4 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b4 cdistance c, f0 b4 cF * / ! ! ! c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b4 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b3 cdistance c, f0 b4 c==> ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b3 cdistance c, b4 b5 c= f0 b4 c==> c~ c? / ! c==> cIN b4 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b4 cdistance c, f0 b4 cF f1 * / ! ! ! c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> cIN f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! c==> cIN b4 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b3 cdistance c, f0 b4 c==> ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! c==> cIN b5 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b3 cdistance c, b4 b5 c= f0 b4 c==> c~ c? / ! c==> cIN b4 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c= b4 cdistance c, f0 b4 cF f1
- (_2160576 = _2160578), (_2160575 = _2160577) |- ((_2160576 = _2160578) /\ ((_2160575 INSERT _2160576) = (_2160577 INSERT _2160578)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!a. ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)) ==> ((\a. ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)) a)) = ((\a. ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)) a))
T c= c==> ! c==> c~ c= c==> b0 c==> f0 f1 c==> c/\ b0 f0 f1 cF * / c==> c~ c= c==> b0 c==> f0 f1 c==> c/\ b0 f0 f1 cF f2 * / c==> c~ c= c==> b0 c==> f0 f1 c==> c/\ b0 f0 f1 cF f2
+ |- ((a ==> b) ==> (a = (a /\ b)))
T c==> c==> f0 f1 c= f0 c/\ f0 f1
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (!c. (((\c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))) c) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> * / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b1 b2 c= f3 b1 b0 c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b3 cdistance c, b2 b3 c= b1 b2
- (~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) |- ((~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) /\ ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> (~ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))))))
T c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0 c/\ c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0 c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c~ ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((distance (p' , vb)) = (distance (p' , va))) = ((distance (p' , vb)) = (distance (p' , va))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f2 cdistance c, f5 f1
+ ((\a. (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))))) a) |- (((\a. (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))))) a) /\ F)
T c==> * / c\/ c/\ ! c\/ c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c~ c= b1 f2 * f3 b1 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 f4 c/\ * / c\/ c/\ ! c\/ c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c~ c= b1 f2 * f3 b1 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 f4 cF
+ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), ((\w. (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c)))))))) w) |- (((\w. (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c)))))))) w) /\ F)
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> * / ! c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, f4 * b0 b1 f5 c/\ * / ! c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, f4 * b0 b1 f5 cF
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((distance (p' , va)) = (distance (p' , vc)))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= cdistance c, f5 f1 cdistance c, f5 f3
+ |- (((!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))) ==> ((\vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))) vc)) = ((\vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))) vc))
T c= c==> ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b1 b3 ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b3 b4 c= b1 b3 * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b1 b3 ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b3 b4 c= b1 b3 f2 * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b1 b3 ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= b2 cdistance c, b3 b4 c= b1 b3 f2
- (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (~ (c = (distance (p , (w c))))) |- ((~ (c = (distance (p , (w c))))) /\ (c = (distance (p , (w c)))))
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, f4 b0 c==> c~ c= f5 cdistance c, f4 * f0 f5 c/\ c~ c= f5 cdistance c, f4 * f0 f5 c= f5 cdistance c, f4 * f0 f5
+ |- (((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) = ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a))))
T c= c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0
+ |- ((((\a. (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))))) a) ==> F) = T)
T c= c==> * / c\/ c/\ ! c\/ c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c~ c= b1 f2 * f3 b1 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 f4 cF cT
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))) |- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1 c/\ c/\ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
- |- ((!w'. ((~ (w' IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) = ((!w. (~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (c = (distance (p , w)))))
T c= ! c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 f5 c\/ ! c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 f5
+ ((\c. ((((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) \/ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))))) c) |- ((((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) \/ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))))
T c==> * / c\/ c/\ c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c\/ c~ c= f1 f0 c~ c= f2 f0 c/\ ! c\/ c~ c= b1 f0 c\/ c~ c= b1 f1 c~ c= b1 f2 c/\ c= f1 f0 c= f2 f0 f3 c\/ c/\ c/\ c= f3 f0 c/\ c= f3 f1 c= f3 f2 c\/ c~ c= f1 f0 c~ c= f2 f0 c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0
- |- ((?w'. ((w' IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , w)))))) = ((?w. (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (~ (c = (distance (p , w))))))
T c= c? / c/\ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f3 cdistance c, f4 f5 c/\ c? / cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f3 cdistance c, f4 f5
+ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))) = ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c= f4 b0 c/\ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f4 b1 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c= f4 b0
- |- ((!p''. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (p = p''))) = (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , w))))))) \/ (!p'. (p = p'))))
T c= ! c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f0 b1 c= f5 b0 c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 cdistance c, f0 b0 ! c= f5 b0
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
+ (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- (c = a)
T c==> c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c= f0 f1
+ ((\c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))) c) |- ((((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))) = (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))
T c==> * / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1 f4 c= c==> c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((distance (p' , va)) = (distance (p' , vc))) = (((distance (p' , va)) = (distance (p , vc))) /\ ((distance (p' , va)) = (distance (p' , vc)))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c= cdistance c, f5 f1 cdistance c, f5 f3 c/\ c= cdistance c, f5 f1 cdistance c, f0 f3 c= cdistance c, f5 f1 cdistance c, f5 f3
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((distance (p' , vc)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , vc))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c/\ c= cdistance c, f5 f3 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f3
- ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))) |- ((~ F) ==> F)
T c==> c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 c==> c~ cF cF
+ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- (((\w. (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c)))))))) w) ==> F)
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> * / ! c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, f4 * b0 b1 f5 cF
- ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F), (((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)) |- (((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) /\ ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))
T c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c/\ c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF
- |- ((!c'. ((~ (c = a)) \/ ((~ (c' = b)) \/ (~ (c' = cc))))) = ((~ (c = a)) \/ (!c. ((~ (c = b)) \/ (~ (c = cc))))))
T c= ! c\/ c~ c= f0 f1 c\/ c~ c= b0 f2 c~ c= b0 f3 c\/ c~ c= f0 f1 ! c\/ c~ c= b0 f2 c~ c= b0 f3
- |- ((~ (_2160573 = _2160574)) \/ ((distance _2160573) = (distance _2160574)))
T c\/ c~ c= f0 f1 c= cdistance f0 cdistance f1
+ (~ (p y)), ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- F
T c==> c~ * f0 f1 c==> c/\ ! c\/ c/\ c~ c= b0 f2 c/\ c~ c= b0 f1 c~ c= b0 f3 * f0 b0 c\/ c~ * f0 f2 c\/ c~ * f0 f1 c~ * f0 f3 cF
- |- ((~ (_2160575 = _2160577)) \/ ((~ (_2160576 = _2160578)) \/ ((_2160575 INSERT _2160576) = (_2160577 INSERT _2160578))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ (((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))) ==> F), ((((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) \/ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a)))) |- F
T c==> c==> c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c\/ c/\ c/\ c= f3 f0 c/\ c= f3 f1 c= f3 f2 c\/ c~ c= f1 f0 c~ c= f2 f0 c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF
- |- ((!p''. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ ((distance (p' , vb)) = (distance (p' , va)))) \/ (~ ((distance (p' , vc)) = (distance (p' , va)))))) \/ ((p'' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p'' , va))) /\ ((c = (distance (p'' , vb))) /\ (c = (distance (p'' , vc)))))))) = (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ ((distance (p' , vb)) = (distance (p' , va)))) \/ (~ ((distance (p' , vc)) = (distance (p' , va)))))) \/ (!p'. ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))
T c= ! c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cdistance c, f0 f2 cdistance c, f0 f1 c~ c= cdistance c, f0 f3 cdistance c, f0 f1 c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cdistance c, f0 f2 cdistance c, f0 f1 c~ c= cdistance c, f0 f3 cdistance c, f0 f1 ! c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3
+ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f4 b1
- (a = z) |- ((p y) = (p y))
T c==> c= f0 f1 c= * f2 f3 * f2 f3
+ ((\w. (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c)))))))) w) |- (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c)))))))
T c==> * / ! c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, f3 * b0 b1 f4 ! c/\ cIN * f4 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, f3 * f4 b0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ |- (((!a. (!b. ((a ==> b) ==> (a = (a /\ b))))) ==> ((\a. (!b. ((a ==> b) ==> (a = (a /\ b))))) a)) = ((\a. (!b. ((a ==> b) ==> (a = (a /\ b))))) a))
T c= c==> ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 * / ! c==> c==> b0 b1 c= b0 c/\ b0 b1 f0 * / ! c==> c==> b0 b1 c= b0 c/\ b0 b1 f0
- |- ((!z. (!p. (!y. (!x. ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z)))))))) = (!z. (!p. (!y. (!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))))))
T c= ! ! ! ! c= ! c==> c\/ c= b4 b3 c\/ c= b4 b2 c= b4 b0 * b1 b4 c/\ * b1 b3 c/\ * b1 b2 * b1 b0 ! ! ! ! c==> c~ c= ! c==> c\/ c= b4 b3 c\/ c= b4 b2 c= b4 b0 * b1 b4 c/\ * b1 b3 c/\ * b1 b2 * b1 b0 cF
- ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F), (((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)) |- (((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) /\ ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F))
T c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c/\ c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF
- |- ((_2160472 = _2160473) ==> ((w' _2160472) = (w' _2160473)))
T c==> c= f0 f1 c= * f2 f0 * f2 f1
+ |- (((?c. (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a))))) \/ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a)))) = (?c. ((((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) \/ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))))))
T c= c\/ c? / c/\ c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c\/ c~ c= f1 f0 c~ c= f2 f0 c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 c? / c\/ c/\ c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c\/ c~ c= f1 f0 c~ c= f2 f0 c/\ ! c\/ c~ c= b1 f0 c\/ c~ c= b1 f1 c~ c= b1 f2 c/\ c= f1 f0 c= f2 f0
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- (~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) /\ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))))
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c/\ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\c. ((~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> F)))) c)
T * / c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= b0 cdistance c, f0 f1 c/\ c= b0 cdistance c, f0 f2 c/\ c= b0 cdistance c, f0 f3 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= b0 cdistance c, b1 f1 c/\ c= b0 cdistance c, b1 f2 c= b0 cdistance c, b1 f3 c= f0 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b1 f2 cdistance c, b1 f1 c= cdistance c, b1 f3 cdistance c, b1 f1 c= f0 b1 c==> ! ! ! ! ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= b4 cdistance c, b1 b2 c/\ c= b4 cdistance c, b1 b3 c= b4 cdistance c, b1 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b3 cdistance c, b5 b2 c= cdistance c, b5 b4 cdistance c, b5 b2 c/\ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= b4 cdistance c, b5 b2 c/\ c= b4 cdistance c, b5 b3 c= b4 cdistance c, b5 b4 c==> ! ! ! ! ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= b4 cdistance c, b1 b2 c/\ c= b4 cdistance c, b1 b3 c= b4 cdistance c, b1 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b3 cdistance c, b5 b2 c= cdistance c, b5 b4 cdistance c, b5 b2 c/\ cIN b5 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c= b4 cdistance c, b5 b2 c/\ c= b4 cdistance c, b5 b3 c= b4 cdistance c, b5 b4 cF f4
+ |- ((!c. (!b. (!a. ((a ==> (b ==> c)) = ((a /\ b) ==> c))))) = ((!b. (!a. ((a ==> (b ==> T)) = ((a /\ b) ==> T)))) /\ (!b. (!a. ((a ==> (b ==> F)) = ((a /\ b) ==> F))))))
T c= ! ! ! c= c==> b2 c==> b1 b0 c==> c/\ b2 b1 b0 c/\ ! ! c= c==> b1 c==> b0 cT c==> c/\ b1 b0 cT ! ! c= c==> b1 c==> b0 cF c==> c/\ b1 b0 cF
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (((\c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))) c) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1 f4 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
+ (~ (cc = a)), (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((~ (cc = a)) /\ F)
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f2 f1 c/\ c= f2 f3 c= f2 f0 c\/ c~ c= f3 f1 c~ c= f0 f1 c/\ c~ c= f0 f1 cF
+ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))), (((a = y) \/ (a = z)) ==> F) |- F
T c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c==> c==> c\/ c= f0 f2 c= f0 f3 cF cF
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F), (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- ((!p''. (((~ (p'' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p'' , va)))) \/ ((~ (c = (distance (p'' , vb)))) \/ (~ (c = (distance (p'' , vc))))))) \/ (p = p'))) = ((!p'. ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc)))))))) \/ (p = p')))
T c= ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ c= f3 cdistance c, b0 f0 c\/ c~ c= f3 cdistance c, b0 f1 c~ c= f3 cdistance c, b0 f2 c= f4 f5 c\/ ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ c= f3 cdistance c, b0 f0 c\/ c~ c= f3 cdistance c, b0 f1 c~ c= f3 cdistance c, b0 f2 c= f4 f5
+ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f4 b1 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 c= f4 b0
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- (((p y) ==> F) = F)
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c= c==> * f3 f1 cF cF
+ |- ((!va. (!c. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))))) = T)
T c= ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ! c==> cIN b2 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= b1 cdistance c, f2 b2 c==> ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> cIN b3 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= b1 cdistance c, b2 b3 c= f2 b2 c? / ! c==> cIN b2 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= b2 cdistance c, f2 b2 cT
- ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ (p x)) ==> (p x))
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c==> c~ * f3 f0 * f3 f0
+ |- ((!c. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))))))) = T)
T c= ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 c==> ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1 c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, f3 b1 cT
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ (~ (_2160491 = (distance (_2160488 , _2160492))))))) \/ (((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ ((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489)))) \/ (~ ((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489)))))) \/ (_2160491 = (distance (_2160493 , _2160492)))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 c\/ c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cdistance c, f5 f2 cdistance c, f5 f1 c~ c= cdistance c, f5 f3 cdistance c, f5 f1 c= f4 cdistance c, f5 f3
- (_2160459 = _2160460) |- ((_2160459 = _2160460) /\ ((p _2160460) \/ (~ (p _2160459))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
+ ((\p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))) p) |- ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))
T c==> * / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2 f3 c/\ cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, b1 b2 c= f3 b1
+ ((\p'. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p'))))) p') |- (((((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) ==> F) = F)
T c==> * / c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b1 f1 c\/ c~ c= f4 cdistance c, b1 f2 c~ c= f4 cdistance c, b1 f3 c= f0 b1 c/\ c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c~ c= f0 b0 f5 c= c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 cF cF
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- (!p'. (((\p'. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p'))))) p') ==> F))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 ! c==> * / c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b1 f1 c\/ c~ c= f4 cdistance c, b1 f2 c~ c= f4 cdistance c, b1 f3 c= f0 b1 c/\ c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b1 f2 cdistance c, b1 f1 c= cdistance c, b1 f3 cdistance c, b1 f1 c~ c= f0 b1 b0 cF
- (a = z) |- (F = F)
T c==> c= f0 f1 c= cF cF
+ (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))) |- ((_2160462 = (distance (p , (w _2160462)))) ==> F)
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> c= f5 cdistance c, f4 * f0 f5 cF
+ |- ((!va. (!vb. (!vc. (((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))))) = (!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))))))
T c= ! ! ! c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c? / ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b5 cdistance c, b4 b6 c= b3 b4 ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c? / ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b5 cdistance c, b4 b6 c= b3 b4
- |- ((!w'. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w'))))) = ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (!w. (c = (distance (p , w))))))
T c= ! c\/ c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 cdistance c, f5 b0 c\/ c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c= f4 cdistance c, f5 b0
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((distance (p' , vc)) = (distance (p' , va))) = (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va)))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c= cdistance c, f5 f3 cdistance c, f5 f1 c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1
- (~ (p x)), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((~ (p x)) /\ (p x))
T c==> c~ * f0 f1 c==> c/\ c/\ c\/ c= f2 f1 c\/ c= f2 f3 c= f2 f4 c~ * f0 f2 c/\ * f0 f1 c/\ * f0 f3 * f0 f4 c/\ c~ * f0 f1 * f0 f1
+ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))) |- ((~ (_2160375 = a)) \/ ((~ (_2160375 = b)) \/ (~ (_2160375 = cc))))
T c==> c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 c\/ c~ c= f3 f0 c\/ c~ c= f3 f1 c~ c= f3 f2
- (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((~ (b = a)) = (~ (b = a)))
T c==> c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c= c~ c= f2 f1 c~ c= f2 f1
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((distance (p , vc)) = (distance (p' , va))) /\ (((distance (p , vc)) = (distance (p' , vb))) /\ ((distance (p , vc)) = (distance (p' , vc)))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c/\ c= cdistance c, f0 f3 cdistance c, f5 f1 c/\ c= cdistance c, f0 f3 cdistance c, f5 f2 c= cdistance c, f0 f3 cdistance c, f5 f3
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))) |- (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) |- F
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0 cF
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((distance (p , vc)) = (distance (p , vc))) = (((distance (p , vc)) = (distance (p' , va))) /\ ((distance (p , vc)) = (distance (p , vc)))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c= cdistance c, f0 f3 cdistance c, f0 f3 c/\ c= cdistance c, f0 f3 cdistance c, f5 f1 c= cdistance c, f0 f3 cdistance c, f0 f3
- |- ((!vc'. (((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p , va)))) \/ ((~ (c = (distance (p , vb)))) \/ (~ (c = (distance (p , vc))))))) \/ (!p'. ((((p' IN ((hull affine) (va INSERT (vb INSERT (vc' INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc')) = (distance (p' , va))))) \/ ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc' INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc')))))))) /\ (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc' INSERT EMPTY)))))) \/ ((~ ((distance (p' , vb)) = (distance (p' , va)))) \/ (~ ((distance (p' , vc')) = (distance (p' , va)))))) \/ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc' INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc'))))))))))) = (((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p , va)))) \/ ((~ (c = (distance (p , vb)))) \/ (~ (c = (distance (p , vc))))))) \/ (!vc. (!p'. ((((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) \/ ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc)))))))) /\ (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ ((distance (p' , vb)) = (distance (p' , va)))) \/ (~ ((distance (p' , vc)) = (distance (p' , va)))))) \/ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))))))))
T c= ! c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 ! c/\ c\/ c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c= cdistance c, b1 f2 cdistance c, b1 f1 c= cdistance c, b1 b0 cdistance c, b1 f1 c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= f4 cdistance c, b1 f1 c\/ c~ c= f4 cdistance c, b1 f2 c~ c= f4 cdistance c, b1 b0 c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= cdistance c, b1 f2 cdistance c, b1 f1 c~ c= cdistance c, b1 b0 cdistance c, b1 f1 c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c= f4 cdistance c, b1 f1 c/\ c= f4 cdistance c, b1 f2 c= f4 cdistance c, b1 b0 c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 ! ! c/\ c\/ c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c= cdistance c, b1 f2 cdistance c, b1 f1 c= cdistance c, b1 b0 cdistance c, b1 f1 c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= f4 cdistance c, b1 f1 c\/ c~ c= f4 cdistance c, b1 f2 c~ c= f4 cdistance c, b1 b0 c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= cdistance c, b1 f2 cdistance c, b1 f1 c~ c= cdistance c, b1 b0 cdistance c, b1 f1 c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c= f4 cdistance c, b1 f1 c/\ c= f4 cdistance c, b1 f2 c= f4 cdistance c, b1 b0
+ (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))) |- (((w _2160462) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (_2160462 = (distance (p , (w _2160462))))))
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c/\ cIN * f0 f5 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f5 cdistance c, f4 * f0 f5
+ |- ((a = a) /\ (a = a))
T c/\ c= f0 f0 c= f0 f0
- |- ((\vb. (!c. ((~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> F))))) vb)
T * / ! c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT f2 part cEMPTY c/\ c= b1 cdistance c, f0 f1 c/\ c= b1 cdistance c, f0 b0 c/\ c= b1 cdistance c, f0 f2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT f2 part cEMPTY c/\ c= b1 cdistance c, b2 f1 c/\ c= b1 cdistance c, b2 b0 c= b1 cdistance c, b2 f2 c= f0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT f2 part cEMPTY c/\ c= cdistance c, b2 b0 cdistance c, b2 f1 c= cdistance c, b2 f2 cdistance c, b2 f1 c= f0 b2 c==> ! ! ! ! ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b2 b3 c/\ c= b5 cdistance c, b2 b4 c= b5 cdistance c, b2 b5 ! c= c/\ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c= cdistance c, b6 b4 cdistance c, b6 b3 c= cdistance c, b6 b5 cdistance c, b6 b3 c/\ cIN b6 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b6 b3 c/\ c= b5 cdistance c, b6 b4 c= b5 cdistance c, b6 b5 c==> ! ! ! ! ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY c/\ c= b4 cdistance c, b2 b3 c/\ c= b4 cdistance c, b2 b4 c= b4 cdistance c, b2 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b4 cdistance c, b5 b3 c= cdistance c, b5 b4 cdistance c, b5 b3 c/\ cIN b5 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY c/\ c= b4 cdistance c, b5 b3 c/\ c= b4 cdistance c, b5 b4 c= b4 cdistance c, b5 b4 cF f3
+ (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- ((?w. (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p')))) ==> F)
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, f4 b0 c==> c? / ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * b0 b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f5 cdistance c, b1 * b0 b1 c= f4 b1 cF
+ |- ((?a. (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))))) ==> F)
T c==> c? / c\/ c/\ ! c\/ c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c~ c= b1 f2 * f3 b1 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF
+ |- ((!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))) = T)
T c= ! ! ! c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c/\ c= b1 cdistance c, f0 f1 c/\ c= b1 cdistance c, f0 b0 c= b1 cdistance c, f0 b2 ! c= c/\ cIN b3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b3 b0 cdistance c, b3 f1 c= cdistance c, b3 b2 cdistance c, b3 f1 c/\ cIN b3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c/\ c= b1 cdistance c, b3 f1 c/\ c= b1 cdistance c, b3 b0 c= b1 cdistance c, b3 b2 cT
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- (((~ (_2160424 = x)) \/ (p _2160424)) /\ (((~ (_2160424 = y)) \/ (p _2160424)) /\ ((~ (_2160424 = z)) \/ (p _2160424))))
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c\/ c~ c= f4 f0 * f3 f4 c/\ c\/ c~ c= f4 f1 * f3 f4 c\/ c~ c= f4 f2 * f3 f4
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- ((((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ (~ (_2160491 = (distance (_2160488 , _2160492))))))) \/ (((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492))))))))) /\ (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ (~ (_2160491 = (distance (_2160488 , _2160492))))))) \/ (((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492))))))))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c/\ c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 c\/ c= cdistance c, f5 f2 cdistance c, f5 f1 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f5 f1 c\/ c~ c= f4 cdistance c, f5 f2 c~ c= f4 cdistance c, f5 f3 c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 c\/ c= cdistance c, f5 f3 cdistance c, f5 f1 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f5 f1 c\/ c~ c= f4 cdistance c, f5 f2 c~ c= f4 cdistance c, f5 f3
- |- ((\a. (!cc. (!b. ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)))) a)
T * / ! ! c==> c~ c= c? / c/\ c= b3 b0 c/\ c= b3 b2 c= b3 b1 c/\ c= b2 b0 c= b1 b0 cF f0
+ |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
+ |- ((((\c. ((((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) \/ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))))) c) ==> F) = T)
T c= c==> * / c\/ c/\ c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c\/ c~ c= f1 f0 c~ c= f2 f0 c/\ ! c\/ c~ c= b1 f0 c\/ c~ c= b1 f1 c~ c= b1 f2 c/\ c= f1 f0 c= f2 f0 f3 cF cT
+ |- ((((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))))) = T)
T c= c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c= f4 cdistance c, f0 f3 ! c= c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 cT
- |- (!p. (!va. (!vc. (!vb. (!c. ((~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> (~ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))))))))))))))))))
T c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0 c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c~ ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4
- (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))), (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- F
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f4 b1 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ |- (!p. (!vc. (!vb. (!va. (!c. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1
+ |- (((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> F) = F)
T c= c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 cF cF
- (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) |- ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (c = (distance (p , w))))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> cIN f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f5 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 f5
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))), ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))), (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
- (~ (p y)), ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ (p y)) /\ (p y))
T c==> c~ * f0 f1 c==> c/\ ! c\/ c/\ c~ c= b0 f2 c/\ c~ c= b0 f1 c~ c= b0 f3 * f0 b0 c\/ c~ * f0 f2 c\/ c~ * f0 f1 c~ * f0 f3 c/\ c~ * f0 f1 * f0 f1
- |- ((!a. (!cc. (!b. ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))))) = (!a. (!cc. (!b. ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)))))
T c= ! ! ! c= c? / c/\ c= b3 b0 c/\ c= b3 b2 c= b3 b1 c/\ c= b2 b0 c= b1 b0 ! ! ! c==> c~ c= c? / c/\ c= b3 b0 c/\ c= b3 b2 c= b3 b1 c/\ c= b2 b0 c= b1 b0 cF
+ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))), ((a = z) ==> F), ((a = y) \/ (a = z)) |- F
T c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c==> c==> c= f0 f3 cF c==> c\/ c= f0 f2 c= f0 f3 cF
+ ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))), ((~ (p y)) \/ (~ (p z))) |- (((~ (p y)) \/ (~ (p z))) /\ F)
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c==> c\/ c~ * f3 f1 c~ * f3 f2 c/\ c\/ c~ * f3 f1 c~ * f3 f2 cF
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (~ F), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ F) /\ F)
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c~ cF c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c/\ c~ cF cF
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ (~ (_2160491 = (distance (_2160488 , _2160492))))))) \/ ((_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY))))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492)))))))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 c\/ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f5 f1 c\/ c~ c= f4 cdistance c, f5 f2 c~ c= f4 cdistance c, f5 f3
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((\p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))) _2160500)
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 * / c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 f6
+ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- (((!w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) ==> ((\w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) _2160461)) = ((\w. ((~ (w IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , w))))) _2160461))
T c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c= c==> ! c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 * / c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 f5 * / c\/ c~ cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 f5
+ (~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) |- (((?a. (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))))) ==> F) = F)
T c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 c= c==> c? / c\/ c/\ ! c\/ c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c~ c= b1 f2 * f3 b1 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF cF
+ |- (((!p'. (P p')) /\ (!p'. (Q p'))) = (!p'. ((P p') /\ (Q p'))))
T c= c/\ ! * f0 b0 ! * f1 b0 ! c/\ * f0 b0 * f1 b0
+ |- ((!c. (?w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , w))))))) = (?w. (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c)))))))))
T c= ! c? / c/\ cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b0 cdistance c, f3 b1 c? / ! c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, f3 * b0 b1
+ |- (((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) ==> ((\va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) va)) = ((\va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) va))
T c= c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 f0 * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 f0
+ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- ((?w. (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c)))))))) ==> F)
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f4 b0 c==> c? / ! c/\ cIN * b0 b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= b1 cdistance c, f4 * b0 b1 cF
+ |- ((((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z))))) ==> F)
T c==> c\/ c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= f4 f0 c\/ c= f4 f1 c= f4 f2 c~ * f3 f4 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF
+ (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- (((!x. (((\p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))) x) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))) ==> ((?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p')))))))) = ((?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w)))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w))))))) ==> (p = p'))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> ! c==> * / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b3 b4 c= b1 b3 b0 c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b3 cdistance c, b2 b4 c= b1 b2 c==> c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1 c==> c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2 c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b2 cdistance c, b1 b3 c= b0 b1
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), ((\p'. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p'))))) p') |- (((\p'. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p'))))) p') /\ F)
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> * / c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b1 f1 c\/ c~ c= f4 cdistance c, b1 f2 c~ c= f4 cdistance c, b1 f3 c= f0 b1 c/\ c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c~ c= f0 b0 f5 c/\ * / c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b1 f1 c\/ c~ c= f4 cdistance c, b1 f2 c~ c= f4 cdistance c, b1 f3 c= f0 b1 c/\ c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c~ c= f0 b0 f5 cF
- (_2160551 = _2160553) |- ((_2160551 = _2160553) /\ ((~ (_2160552 = _2160554)) \/ ((_2160553 IN _2160554) \/ (~ (_2160551 IN _2160552)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ |- (((z = z) ==> (p z)) = (p z))
T c= c==> c= f0 f0 * f1 f0 * f1 f0
+ |- (((!x. (((\c. ((((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) \/ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))))) x) ==> F)) ==> ((?c. ((((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) \/ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))))) ==> F)) = ((?c. ((((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) \/ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))))) ==> F))
T c= c==> ! c==> * / c\/ c/\ c/\ c= b1 f0 c/\ c= b1 f1 c= b1 f2 c\/ c~ c= f1 f0 c~ c= f2 f0 c/\ ! c\/ c~ c= b2 f0 c\/ c~ c= b2 f1 c~ c= b2 f2 c/\ c= f1 f0 c= f2 f0 b0 cF c==> c? / c\/ c/\ c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c\/ c~ c= f1 f0 c~ c= f2 f0 c/\ ! c\/ c~ c= b1 f0 c\/ c~ c= b1 f1 c~ c= b1 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c? / c\/ c/\ c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c\/ c~ c= f1 f0 c~ c= f2 f0 c/\ ! c\/ c~ c= b1 f0 c\/ c~ c= b1 f1 c~ c= b1 f2 c/\ c= f1 f0 c= f2 f0 cF
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ ((_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY))))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492)))))))))))) = ((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ ((_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY))))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492)))))))))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f11 f7 c\/ c~ c= f10 cdistance c, f11 f8 c~ c= f10 cdistance c, f11 f9 c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f6 f7 c\/ c~ c= f10 cdistance c, f6 f8 c\/ c~ c= f10 cdistance c, f6 f9 c\/ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ cIN f11 * * part chull part caffine * * part cINSERT f7 * * part cINSERT f8 * * part cINSERT f9 part cEMPTY c\/ c~ c= f10 cdistance c, f11 f7 c\/ c~ c= f10 cdistance c, f11 f8 c~ c= f10 cdistance c, f11 f9
+ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) /\ F)
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c/\ c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 cF
+ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))) |- ((~ (_2160375 = a)) \/ ((~ (_2160375 = a)) \/ (~ (_2160375 = a))))
T c==> c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 c\/ c~ c= f3 f0 c\/ c~ c= f3 f0 c~ c= f3 f0
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (((~ (_2160500 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (_2160500 , va)))) \/ ((~ (c = (distance (_2160500 , vb)))) \/ (~ (c = (distance (_2160500 , vc))))))) \/ (p = _2160500))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c\/ c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f6 f1 c\/ c~ c= f4 cdistance c, f6 f2 c~ c= f4 cdistance c, f6 f3 c= f0 f6
+ |- (((!c. (!b. (!a. ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)))) ==> ((\c. (!b. (!a. ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)))) c)) = ((\c. (!b. (!a. ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)))) c))
T c= c==> ! ! ! c==> c~ c= c==> b2 c==> b1 b0 c==> c/\ b2 b1 b0 cF * / ! ! c==> c~ c= c==> b2 c==> b1 b0 c==> c/\ b2 b1 b0 cF f0 * / ! ! c==> c~ c= c==> b2 c==> b1 b0 c==> c/\ b2 b1 b0 cF f0
- |- ((~ (_2160468 = _2160469)) \/ ((collinear _2160469) \/ (~ (collinear _2160468))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va)))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1
- ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((~ (p z)) ==> (p z))
T c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 c==> c~ * f4 f3 * f4 f3
+ ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))) |- (b = a)
T c==> c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 c= f1 f0
+ (((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z))))) |- ((((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) \/ ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z))))) /\ F)
T c==> c\/ c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= f4 f0 c\/ c= f4 f1 c= f4 f2 c~ * f3 f4 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 c/\ c\/ c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c/\ c/\ c\/ c= f4 f0 c\/ c= f4 f1 c= f4 f2 c~ * f3 f4 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF
+ (a = x), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c~ * f4 f0 c/\ * f4 f1 c/\ * f4 f2 * f4 f3 cF
+ (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- ((((\w. (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p')))) w') ==> F) = T)
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, f4 b0 c= c==> * / ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * b0 b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f5 cdistance c, b1 * b0 b1 c= f4 b1 f6 cF cT
+ |- (((~ (_2160500 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ ((distance (p , vc)) = (distance (_2160500 , va)))) \/ ((~ ((distance (p , vc)) = (distance (_2160500 , vb)))) \/ ((~ ((distance (p , vc)) = (distance (_2160500 , vc)))) \/ (p = _2160500))))) = ((p = _2160500) \/ ((~ (_2160500 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ ((distance (p , vc)) = (distance (_2160500 , va)))) \/ ((~ ((distance (p , vc)) = (distance (_2160500 , vb)))) \/ (~ ((distance (p , vc)) = (distance (_2160500 , vc)))))))))
T c= c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cdistance c, f4 f3 cdistance c, f0 f1 c\/ c~ c= cdistance c, f4 f3 cdistance c, f0 f2 c\/ c~ c= cdistance c, f4 f3 cdistance c, f0 f3 c= f4 f0 c\/ c= f4 f0 c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cdistance c, f4 f3 cdistance c, f0 f1 c\/ c~ c= cdistance c, f4 f3 cdistance c, f0 f2 c~ c= cdistance c, f4 f3 cdistance c, f0 f3
+ |- ((!b. ((T ==> b) ==> (T = (T /\ b)))) = (((T ==> T) ==> (T = (T /\ T))) /\ ((T ==> F) ==> (T = (T /\ F)))))
T c= ! c==> c==> cT b0 c= cT c/\ cT b0 c/\ c==> c==> cT cT c= cT c/\ cT cT c==> c==> cT cF c= cT c/\ cT cF
+ (a = z), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((a = z) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ * f4 f0 c/\ * f4 f2 c/\ * f4 f3 * f4 f1 c/\ c= f0 f1 cF
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p , vc)) = (distance (p , va))) /\ (((distance (p , vc)) = (distance (p , vb))) /\ (((distance (p , vc)) = (distance (p , vc))) /\ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))))))) ==> ((distance (p , vc)) = (distance (p' , vb)))) = ((distance (p , vc)) = (distance (p' , vb))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f0 f3 cdistance c, f0 f1 c/\ c= cdistance c, f0 f3 cdistance c, f0 f2 c/\ c= cdistance c, f0 f3 cdistance c, f0 f3 c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c= cdistance c, f0 f3 cdistance c, f5 f2 c= cdistance c, f0 f3 cdistance c, f5 f2
+ (a = y), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((a = y) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ * f4 f0 c/\ * f4 f2 c/\ * f4 f1 * f4 f3 c/\ c= f0 f1 cF
- (~ ((distance (p , vc)) = (distance (p , vb)))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p , vc)) = (distance (p , vb)))) /\ ((distance (p , vc)) = (distance (p , vb))))
T c==> c~ c= cdistance c, f0 f1 cdistance c, f0 f2 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c= f4 cdistance c, f0 f3 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f1 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f3 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f1 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f3 c= cdistance c, f5 f1 cdistance c, f5 f3 c~ c= f0 f5 c/\ c~ c= cdistance c, f0 f1 cdistance c, f0 f2 c= cdistance c, f0 f1 cdistance c, f0 f2
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p , vc)) = (distance (p , vb)))) ==> ((distance (p , vc)) = (distance (p , vb))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c~ c= cdistance c, f0 f3 cdistance c, f0 f2 c= cdistance c, f0 f3 cdistance c, f0 f2
+ |- ((\a. ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)) a)
T * / c==> c~ c= c==> b0 c==> f0 f1 c==> c/\ b0 f0 f1 cF f2
- (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((collinear (va INSERT (vb INSERT (vc INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- (_2160552 = _2160554), (_2160551 = _2160553) |- ((_2160552 = _2160554) /\ ((_2160553 IN _2160554) \/ (~ (_2160551 IN _2160552))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cIN f3 f1 c~ cIN f2 f0
- (_2160575 = _2160577) |- ((_2160576 = _2160578) ==> ((_2160575 INSERT _2160576) = (_2160577 INSERT _2160578)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ (~ (cc = a)), (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- F
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f2 f1 c/\ c= f2 f3 c= f2 f0 c\/ c~ c= f3 f1 c~ c= f0 f1 cF
+ (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), ((\w. (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p')))) w') |- (((\w. (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w p'))))))) \/ (p = p')))) w') /\ F)
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, f4 b0 c==> * / ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * b0 b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f5 cdistance c, b1 * b0 b1 c= f4 b1 f6 c/\ * / ! c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * b0 b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f5 cdistance c, b1 * b0 b1 c= f4 b1 f6 cF
- |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va)))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1
+ (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))), (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w' p'))))))) \/ (p = p'))) |- ((!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w' p'))))))) \/ (p = p'))) /\ F)
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, f4 b0 c==> ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * f6 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f5 cdistance c, b0 * f6 b0 c= f4 b0 c/\ ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN * f6 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f5 cdistance c, b0 * f6 b0 c= f4 b0 cF
- (~ F), (a = z), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ * f4 f0 c/\ * f4 f2 c/\ * f4 f3 * f4 f1 c/\ c~ cF cF
- ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))), (((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))) ==> ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F)))))) |- (((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))) /\ ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))))
T c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c==> c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c/\ c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF
+ |- ((\va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))) va)
T * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / c/\ ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b3 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= b4 cdistance c, b5 b6 c= b3 b5 f0
+ |- ((((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))) ==> ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) = ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p')))))))))) = ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) = ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?p. ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (?c. ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))))))))))
T c= c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c/\ ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b0 b2 ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b1 cdistance c, b2 b3 c= b0 b2
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ (~ (_2160491 = (distance (_2160488 , _2160492))))))) \/ (((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ ((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489)))) \/ (~ ((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489)))))) \/ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 c\/ c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cdistance c, f5 f2 cdistance c, f5 f1 c~ c= cdistance c, f5 f3 cdistance c, f5 f1 cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (p x)), ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ (p x)) /\ F)
T c==> c~ * f0 f1 c==> c/\ ! c\/ c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 * f0 b0 c\/ c~ * f0 f1 c\/ c~ * f0 f2 c~ * f0 f3 c/\ c~ * f0 f1 cF
- |- ((((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))) ==> ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F)))))) = ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))))
T c= c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF
- |- ((!vc. (P \/ (Q vc))) = (P \/ (!vc. (Q vc))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))), ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) |- (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) /\ (p = p'))
T c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, b0 b1 c= f4 b0 c==> c/\ cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f5 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 cdistance c, f5 b0 c= f4 f5
- ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) |- (((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) /\ ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F))
T c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c/\ c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF
- (~ (p z)), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((~ (p z)) /\ (p z))
T c==> c~ * f0 f1 c==> c/\ c/\ c\/ c= f2 f3 c\/ c= f2 f4 c= f2 f1 c~ * f0 f2 c/\ * f0 f3 c/\ * f0 f4 * f0 f1 c/\ c~ * f0 f1 * f0 f1
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- (F = F)
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= cF cF
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p' , vb)) = (distance (p' , va)))) ==> ((distance (p' , vb)) = (distance (p' , va))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c~ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f2 cdistance c, f5 f1
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ (~ (_2160491 = (distance (_2160488 , _2160492))))))) \/ (((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492)))))))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 c\/ c= cdistance c, f5 f3 cdistance c, f5 f1 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f5 f1 c\/ c~ c= f4 cdistance c, f5 f2 c~ c= f4 cdistance c, f5 f3
- |- ((!c'. ((~ (c' = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) = ((!c. (~ (c = a))) \/ ((~ (c = b)) \/ (~ (c = cc)))))
T c= ! c\/ c~ c= b0 f0 c\/ c~ c= f1 f2 c~ c= f1 f3 c\/ ! c~ c= b0 f0 c\/ c~ c= f1 f2 c~ c= f1 f3
- |- ((((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)) ==> (((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)))
T c==> c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\p. (!va. (!vc. (!vb. (!c. ((~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> F)))))))) p)
T * / ! ! ! ! c==> c~ c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c= b4 cdistance c, b0 b1 c/\ c= b4 cdistance c, b0 b3 c/\ c= b4 cdistance c, b0 b2 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c= b4 cdistance c, b5 b1 c/\ c= b4 cdistance c, b5 b3 c= b4 cdistance c, b5 b2 c= b0 b5 ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c= cdistance c, b5 b3 cdistance c, b5 b1 c= cdistance c, b5 b2 cdistance c, b5 b1 c= b0 b5 c==> ! ! ! ! ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ c= b8 cdistance c, b5 b6 c/\ c= b8 cdistance c, b5 b7 c= b8 cdistance c, b5 b8 ! c= c/\ cIN b9 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ c= cdistance c, b9 b7 cdistance c, b9 b6 c= cdistance c, b9 b8 cdistance c, b9 b6 c/\ cIN b9 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ c= b8 cdistance c, b9 b6 c/\ c= b8 cdistance c, b9 b7 c= b8 cdistance c, b9 b8 c==> ! ! ! ! ! c==> c/\ cIN b5 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b5 b5 c/\ c= b5 cdistance c, b5 b5 c= b5 cdistance c, b5 b5 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= cdistance c, b5 b5 cdistance c, b5 b5 c= cdistance c, b5 b5 cdistance c, b5 b5 c/\ cIN b5 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b5 b5 c/\ c= b5 cdistance c, b5 b5 c= b5 cdistance c, b5 b5 cF f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- |- ((((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)) ==> (((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)))
T c==> c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF
- ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))) |- (F = F)
T c==> c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 c= cF cF
- |- ((!b. ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) = T)
T c= ! c= c? / c/\ c= b1 f0 c/\ c= b1 b0 c= b1 f1 c/\ c= b0 f0 c= f1 f0 cT
- |- ((_2160468 = _2160469) ==> ((collinear _2160469) \/ (~ (collinear _2160468))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- |- ((\va. (!vc. (!vb. (!c. ((~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> F))))))) va)
T * / ! ! ! c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c= b3 cdistance c, f0 b0 c/\ c= b3 cdistance c, f0 b2 c/\ c= b3 cdistance c, f0 b1 ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c= b3 cdistance c, b4 b0 c/\ c= b3 cdistance c, b4 b2 c= b3 cdistance c, b4 b1 c= f0 b4 ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c= cdistance c, b4 b2 cdistance c, b4 b0 c= cdistance c, b4 b1 cdistance c, b4 b0 c= f0 b4 c==> ! ! ! ! ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ c= b7 cdistance c, b4 b5 c/\ c= b7 cdistance c, b4 b6 c= b7 cdistance c, b4 b7 ! c= c/\ cIN b8 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ c= cdistance c, b8 b6 cdistance c, b8 b5 c= cdistance c, b8 b7 cdistance c, b8 b5 c/\ cIN b8 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ c= b7 cdistance c, b8 b5 c/\ c= b7 cdistance c, b8 b6 c= b7 cdistance c, b8 b7 c==> ! ! ! ! ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b4 b5 c/\ c= b5 cdistance c, b4 b5 c= b5 cdistance c, b4 b5 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= cdistance c, b5 b5 cdistance c, b5 b5 c= cdistance c, b5 b5 cdistance c, b5 b5 c/\ cIN b5 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b5 b5 c/\ c= b5 cdistance c, b5 b5 c= b5 cdistance c, b5 b5 cF f1
- ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F), (((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)) |- ((((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)) /\ ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))
T c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c/\ c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF
- |- ((~ (_2160472 = _2160473)) \/ ((w' _2160472) = (w' _2160473)))
T c\/ c~ c= f0 f1 c= * f2 f0 * f2 f1
- (_2160569 = _2160571) |- ((_2160569 = _2160571) /\ ((~ (_2160570 = _2160572)) \/ ((_2160569 , _2160570) = (_2160571 , _2160572))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))), (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) |- ((~ (c = (distance (p , (w c))))) ==> (c = (distance (p , (w c)))))
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> ! c==> cIN b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f5 cdistance c, f4 b0 c==> c~ c= f5 cdistance c, f4 * f0 f5 c= f5 cdistance c, f4 * f0 f5
- (~ ((distance (p , vc)) = (distance (p , va)))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p , vc)) = (distance (p , va)))) /\ ((distance (p , vc)) = (distance (p , va))))
T c==> c~ c= cdistance c, f0 f1 cdistance c, f0 f2 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 c/\ c= f4 cdistance c, f0 f1 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f2 c\/ c~ c= f4 cdistance c, b0 f3 c~ c= f4 cdistance c, b0 f1 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ c= cdistance c, f5 f3 cdistance c, f5 f2 c= cdistance c, f5 f1 cdistance c, f5 f2 c~ c= f0 f5 c/\ c~ c= cdistance c, f0 f1 cdistance c, f0 f2 c= cdistance c, f0 f1 cdistance c, f0 f2
- (~ (p z)), ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ ! c\/ c/\ c~ c= b0 f2 c/\ c~ c= b0 f3 c~ c= b0 f1 * f0 b0 c\/ c~ * f0 f2 c\/ c~ * f0 f3 c~ * f0 f1 c==> c~ cF cF
- |- ((s = t) = (!x. ((x IN s) = (x IN t))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
- |- (((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))) = (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c= c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- (((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))
T c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (~ ((distance (p , vc)) = (distance (p' , vb)))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p , vc)) = (distance (p' , vb)))) /\ ((distance (p , vc)) = (distance (p' , vb))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c~ c= cdistance c, f0 f1 cdistance c, f2 f3 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ c= f5 cdistance c, f0 f4 c/\ c= f5 cdistance c, f0 f3 c/\ c= f5 cdistance c, f0 f1 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c\/ c~ c= f5 cdistance c, b0 f4 c\/ c~ c= f5 cdistance c, b0 f3 c~ c= f5 cdistance c, b0 f1 c= f0 b0 c/\ c/\ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ c= cdistance c, f2 f3 cdistance c, f2 f4 c= cdistance c, f2 f1 cdistance c, f2 f4 c~ c= f0 f2 c/\ c~ c= cdistance c, f0 f1 cdistance c, f2 f3 c= cdistance c, f0 f1 cdistance c, f2 f3
- |- ((!x. ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) = T)
T c= ! c= ! c==> c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 * f2 b1 c/\ * f2 b0 c/\ * f2 f0 * f2 f1 cT
- (_2160573 = _2160574) |- ((_2160573 = _2160574) /\ ((distance _2160573) = (distance _2160574)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cdistance f0 cdistance f1
- |- ((\z. (!p. (!y. (!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))))) z)
T * / ! ! ! c==> c~ c= ! c==> c\/ c= b4 b3 c\/ c= b4 b2 c= b4 b0 * b1 b4 c/\ * b1 b3 c/\ * b1 b2 * b1 b0 cF f0
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- ((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ (((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492))))))))))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c\/ c~ c= f4 cdistance c, f0 f3 c\/ c= cdistance c, f5 f2 cdistance c, f5 f1 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f5 f1 c\/ c~ c= f4 cdistance c, f5 f2 c~ c= f4 cdistance c, f5 f3
- |- (((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F) ==> ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F))
T c==> c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF c==> c~ c= c? / c/\ c= b0 f0 c/\ c= b0 f1 c= b0 f2 c/\ c= f1 f0 c= f2 f0 cF
- ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))) |- ((((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))) ==> ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F)))))) ==> ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))))
T c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c==> c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF
- ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ (p y)) ==> (p y))
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c==> c~ * f3 f1 * f3 f1
- ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) |- (((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) /\ ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F))
T c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c/\ c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF
- (~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) |- ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) /\ F)
T c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c/\ c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF
- (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w' p'))))))) \/ (p = p'))) |- (((!p'. ((((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (p = p')) /\ (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (p' , (w' p')))))) \/ (p = p')))) ==> ((\p'. ((((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (p = p')) /\ (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (p' , (w' p')))))) \/ (p = p')))) _2160463)) = ((\p'. ((((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (p = p')) /\ (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (p' , (w' p')))))) \/ (p = p')))) _2160463))
T c==> ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * f3 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 * f3 b0 c= f5 b0 c= c==> ! c/\ c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * f3 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f5 b0 c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 * f3 b0 c= f5 b0 * / c/\ c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * f3 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f5 b0 c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 * f3 b0 c= f5 b0 f6 * / c/\ c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * f3 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f5 b0 c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 * f3 b0 c= f5 b0 f6
- (_2160468 = _2160469) |- ((((collinear _2160468) = (collinear _2160469)) ==> ((collinear _2160469) \/ (~ (collinear _2160468)))) = ((collinear _2160469) \/ (~ (collinear _2160468))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
- ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))) |- ((b = a) = (b = a))
T c==> c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 c= c= f1 f0 c= f1 f0
- (~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) |- (~ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))))
T c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0 c~ ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4
- (((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)) |- ((((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)) /\ (((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) ==> ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)))
T c==> c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c/\ c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF
- |- (((!z. (!p. (!y. (!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))))) ==> ((\z. (!p. (!y. (!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))))) z)) = ((\z. (!p. (!y. (!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))))) z))
T c= c==> ! ! ! ! c==> c~ c= ! c==> c\/ c= b4 b3 c\/ c= b4 b2 c= b4 b0 * b1 b4 c/\ * b1 b3 c/\ * b1 b2 * b1 b0 cF * / ! ! ! c==> c~ c= ! c==> c\/ c= b4 b3 c\/ c= b4 b2 c= b4 b0 * b1 b4 c/\ * b1 b3 c/\ * b1 b2 * b1 b0 cF f0 * / ! ! ! c==> c~ c= ! c==> c\/ c= b4 b3 c\/ c= b4 b2 c= b4 b0 * b1 b4 c/\ * b1 b3 c/\ * b1 b2 * b1 b0 cF f0
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p , vc)) = (distance (p , va)))) ==> ((distance (p , vc)) = (distance (p , va))))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c~ c= cdistance c, f0 f3 cdistance c, f0 f1 c= cdistance c, f0 f3 cdistance c, f0 f1
- |- ((\x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)) x)
T * / c==> c~ c= ! c==> c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 * f2 b1 c/\ * f2 b0 c/\ * f2 f0 * f2 f1 cF f3
- (~ ((distance (p' , vc)) = (distance (p' , vc)))) |- ((~ ((distance (p' , vc)) = (distance (p' , vc)))) /\ ((distance (p' , vc)) = (distance (p' , vc))))
T c==> c~ c= cdistance c, f0 f1 cdistance c, f0 f1 c/\ c~ c= cdistance c, f0 f1 cdistance c, f0 f1 c= cdistance c, f0 f1 cdistance c, f0 f1
- (~ F), (~ (b = a)), (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c= f0 f1 c==> c/\ c/\ c= f2 f1 c/\ c= f2 f0 c= f2 f3 c\/ c~ c= f0 f1 c~ c= f3 f1 c/\ c~ cF cF
- (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))), (~ ((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((~ ((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))))
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> c~ cIN * f0 f5 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ cIN * f0 f5 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN * f0 f5 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- ((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ ((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489)))) \/ ((~ ((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489)))) \/ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY))))))))))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c\/ c~ c= f4 cdistance c, f0 f3 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cdistance c, f5 f2 cdistance c, f5 f1 c\/ c~ c= cdistance c, f5 f3 cdistance c, f5 f1 cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((!p. (!y. (!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)))) ==> ((\p. (!y. (!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)))) p)) = ((\p. (!y. (!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F)))) p))
T c= c==> ! ! ! c==> c~ c= ! c==> c\/ c= b3 b2 c\/ c= b3 b1 c= b3 f0 * b0 b3 c/\ * b0 b2 c/\ * b0 b1 * b0 f0 cF * / ! ! c==> c~ c= ! c==> c\/ c= b3 b2 c\/ c= b3 b1 c= b3 f0 * b0 b3 c/\ * b0 b2 c/\ * b0 b1 * b0 f0 cF f1 * / ! ! c==> c~ c= ! c==> c\/ c= b3 b2 c\/ c= b3 b1 c= b3 f0 * b0 b3 c/\ * b0 b2 c/\ * b0 b1 * b0 f0 cF f1
- (~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) |- ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> F))
T c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0 c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 cF
- |- ((!p''. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) \/ ((~ (p'' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p'' , va)))) \/ ((~ (c = (distance (p'' , vb)))) \/ (~ (c = (distance (p'' , vc))))))))) = (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) \/ (!p'. ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))))))
T c= ! c\/ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f0 f2 cdistance c, f0 f1 c= cdistance c, f0 f3 cdistance c, f0 f1 c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c\/ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f0 f2 cdistance c, f0 f1 c= cdistance c, f0 f3 cdistance c, f0 f1 ! c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3
- (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w' p'))))))) \/ (p = p'))) |- ((~ (_2160463 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' _2160463) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) \/ (p = _2160463)))
T c==> ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * f3 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 * f3 b0 c= f5 b0 c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ cIN * f3 f6 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f5 f6
- (_2160580 = _2160582) |- ((_2160580 = _2160582) /\ ((~ (_2160579 = _2160581)) \/ (((hull _2160579) _2160580) = ((hull _2160581) _2160582))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- (_2160575 = _2160577) |- ((_2160575 = _2160577) /\ ((~ (_2160576 = _2160578)) \/ ((_2160575 INSERT _2160576) = (_2160577 INSERT _2160578))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- ((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ (((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492))))))))))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c\/ c~ c= f4 cdistance c, f0 f3 c\/ c= cdistance c, f5 f3 cdistance c, f5 f1 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f5 f1 c\/ c~ c= f4 cdistance c, f5 f2 c~ c= f4 cdistance c, f5 f3
- ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) |- (((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F) /\ ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))
T c==> c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c/\ c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF c==> c~ c= ! c==> c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * f3 b0 c/\ * f3 f0 c/\ * f3 f1 * f3 f2 cF
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- ((((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ (~ (_2160491 = (distance (_2160488 , _2160492))))))) \/ ((_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY))))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492))))))))) /\ ((((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ (~ (_2160491 = (distance (_2160488 , _2160492))))))) \/ (((distance (_2160493 , _2160490)) = (distance (_2160493 , _2160489))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492))))))))) /\ (((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ (~ (_2160491 = (distance (_2160488 , _2160492))))))) \/ (((distance (_2160493 , _2160492)) = (distance (_2160493 , _2160489))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492)))))))))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c/\ c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 c\/ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f5 f1 c\/ c~ c= f4 cdistance c, f5 f2 c~ c= f4 cdistance c, f5 f3 c/\ c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 c\/ c= cdistance c, f5 f2 cdistance c, f5 f1 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f5 f1 c\/ c~ c= f4 cdistance c, f5 f2 c~ c= f4 cdistance c, f5 f3 c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c~ c= f4 cdistance c, f0 f3 c\/ c= cdistance c, f5 f3 cdistance c, f5 f1 c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f5 f1 c\/ c~ c= f4 cdistance c, f5 f2 c~ c= f4 cdistance c, f5 f3
- (~ (cc = a)), (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- ((~ F) ==> F)
T c==> c~ c= f0 f1 c==> c/\ c/\ c= f2 f1 c/\ c= f2 f3 c= f2 f0 c\/ c~ c= f3 f1 c~ c= f0 f1 c==> c~ cF cF
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) |- ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) /\ (~ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))))))))))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, b0 f1 c/\ c= f4 cdistance c, b0 f2 c= f4 cdistance c, b0 f3 c= f0 b0 ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f3 cdistance c, b0 f1 c= f0 b0 c/\ ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c~ ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4
- |- (T = (((~ (_2160461 IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (c = (distance (p , _2160461)))) = ((c = (distance (p , _2160461))) \/ (~ (_2160461 IN (va INSERT (vb INSERT (vc INSERT EMPTY))))))))
T c= cT c= c\/ c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 cdistance c, f5 f0 c\/ c= f4 cdistance c, f5 f0 c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\cc. (!b. ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F))) cc)
T * / ! c==> c~ c= c? / c/\ c= b2 f0 c/\ c= b2 b1 c= b2 b0 c/\ c= b1 f0 c= b0 f0 cF f1
- (!c. (((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p , (w c))))))) |- ((~ ((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((w c) IN (va INSERT (vb INSERT (vc INSERT EMPTY)))))
T c==> ! c/\ cIN * f0 b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 cdistance c, f4 * f0 b0 c==> c~ cIN * f0 f5 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN * f0 f5 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((?p'. (P /\ (Q p'))) = (P /\ (?p'. (Q p'))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- (((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)) |- ((((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)) /\ (((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)))
T c==> c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c/\ c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF
- |- ((!vc. (!vb. (!c. ((~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> (~ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))))))))) = T)
T c= ! ! ! c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c= b2 cdistance c, f0 f1 c/\ c= b2 cdistance c, f0 b1 c/\ c= b2 cdistance c, f0 b0 ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c= b2 cdistance c, b3 f1 c/\ c= b2 cdistance c, b3 b1 c= b2 cdistance c, b3 b0 c= f0 b3 ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c= cdistance c, b3 b1 cdistance c, b3 f1 c= cdistance c, b3 b0 cdistance c, b3 f1 c= f0 b3 c==> ! ! ! ! ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ c= b6 cdistance c, b3 b4 c/\ c= b6 cdistance c, b3 b5 c= b6 cdistance c, b3 b6 ! c= c/\ cIN b7 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ c= cdistance c, b7 b5 cdistance c, b7 b4 c= cdistance c, b7 b6 cdistance c, b7 b4 c/\ cIN b7 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ c= b6 cdistance c, b7 b4 c/\ c= b6 cdistance c, b7 b5 c= b6 cdistance c, b7 b6 c~ ! ! ! ! ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b3 b4 c/\ c= b5 cdistance c, b3 b5 c= b5 cdistance c, b3 b5 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= cdistance c, b5 b5 cdistance c, b5 b4 c= cdistance c, b5 b5 cdistance c, b5 b4 c/\ cIN b5 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b5 b4 c/\ c= b5 cdistance c, b5 b5 c= b5 cdistance c, b5 b5 cT
- (~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) /\ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))))
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f5 cdistance c, f4 f1 c/\ c= f5 cdistance c, f4 f2 c/\ c= f5 cdistance c, f4 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f5 cdistance c, b0 f1 c\/ c~ c= f5 cdistance c, b0 f2 c~ c= f5 cdistance c, b0 f3 c= f4 b0 c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f0 f2 cdistance c, f0 f1 c= cdistance c, f0 f3 cdistance c, f0 f1 c~ c= f4 f0 c/\ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!y. (!x. ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z)))))) = T)
T c= ! ! c= ! c==> c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 * f1 b2 c/\ * f1 b1 c/\ * f1 b0 * f1 f0 cT
- (~ ((distance (p' , vb)) = (distance (p' , va)))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ ((distance (p' , vb)) = (distance (p' , va)))) /\ ((distance (p' , vb)) = (distance (p' , va))))
T c==> c~ c= cdistance c, f0 f1 cdistance c, f0 f2 c==> c/\ c/\ cIN f3 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ c= f5 cdistance c, f3 f2 c/\ c= f5 cdistance c, f3 f1 c/\ c= f5 cdistance c, f3 f4 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c\/ c~ c= f5 cdistance c, b0 f2 c\/ c~ c= f5 cdistance c, b0 f1 c~ c= f5 cdistance c, b0 f4 c= f3 b0 c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ c= cdistance c, f0 f1 cdistance c, f0 f2 c= cdistance c, f0 f4 cdistance c, f0 f2 c~ c= f3 f0 c/\ c~ c= cdistance c, f0 f1 cdistance c, f0 f2 c= cdistance c, f0 f1 cdistance c, f0 f2
- |- ((~ ((distance (p' , vc)) = (distance (p' , vc)))) ==> ((distance (p' , vc)) = (distance (p' , vc))))
T c==> c~ c= cdistance c, f0 f1 cdistance c, f0 f1 c= cdistance c, f0 f1 cdistance c, f0 f1
- (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((distance (p' , vb)) = (distance (p' , va)))
T c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c= cdistance c, f5 f2 cdistance c, f5 f1
- (_2160459 = _2160460) |- ((((p _2160459) = (p _2160460)) ==> ((p _2160460) \/ (~ (p _2160459)))) = ((p _2160460) \/ (~ (p _2160459))))
T c==> c= f0 f1 c= c==> c= * f2 f0 * f2 f1 c\/ * f2 f1 c~ * f2 f0 c\/ * f2 f1 c~ * f2 f0
- (~ (p x)), ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ (p x)) /\ (p x))
T c==> c~ * f0 f1 c==> c/\ ! c\/ c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 * f0 b0 c\/ c~ * f0 f1 c\/ c~ * f0 f2 c~ * f0 f3 c/\ c~ * f0 f1 * f0 f1
- (~ (z = z)) |- ((~ (z = z)) /\ (z = z))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- |- ((~ (_2160459 = _2160460)) \/ ((p _2160460) \/ (~ (p _2160459))))
T c\/ c~ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ (p = p')) ==> (p = p'))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c~ c= f0 f5 c= f0 f5
- (~ F), ((!c. ((~ (c = a)) \/ ((~ (c = b)) \/ (~ (c = cc))))) /\ ((b = a) /\ (cc = a))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ ! c\/ c~ c= b0 f0 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c= f1 f0 c= f2 f0 c/\ c~ cF cF
- (~ F), (a = y), ((((a = x) \/ ((a = y) \/ (a = z))) /\ (~ (p a))) /\ ((p x) /\ ((p y) /\ (p z)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ * f4 f0 c/\ * f4 f2 c/\ * f4 f1 * f4 f3 c/\ c~ cF cF
- (_2160468 = _2160469) |- ((_2160468 = _2160469) /\ ((collinear _2160469) \/ (~ (collinear _2160468))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w' p'))))))) \/ (p = p'))) |- ((~ (_2160463 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (_2160463 , (w' _2160463))))) \/ (p = _2160463)))
T c==> ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * f3 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 * f3 b0 c= f5 b0 c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ c= f4 cdistance c, f6 * f3 f6 c= f5 f6
- |- ((\y. (!x. ((~ ((!a. (((a = x) \/ ((a = y) \/ (a = z))) ==> (p a))) = ((p x) /\ ((p y) /\ (p z))))) ==> F))) y)
T * / ! c==> c~ c= ! c==> c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 * f1 b2 c/\ * f1 b1 c/\ * f1 b0 * f1 f0 cF f2
- |- ((\vc. (!vb. (!c. ((~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> F)))))) vc)
T * / ! ! c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c= b2 cdistance c, f0 f1 c/\ c= b2 cdistance c, f0 b1 c/\ c= b2 cdistance c, f0 b0 ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c= b2 cdistance c, b3 f1 c/\ c= b2 cdistance c, b3 b1 c= b2 cdistance c, b3 b0 c= f0 b3 ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c= cdistance c, b3 b1 cdistance c, b3 f1 c= cdistance c, b3 b0 cdistance c, b3 f1 c= f0 b3 c==> ! ! ! ! ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ c= b6 cdistance c, b3 b4 c/\ c= b6 cdistance c, b3 b5 c= b6 cdistance c, b3 b6 ! c= c/\ cIN b7 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ c= cdistance c, b7 b5 cdistance c, b7 b4 c= cdistance c, b7 b6 cdistance c, b7 b4 c/\ cIN b7 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ c= b6 cdistance c, b7 b4 c/\ c= b6 cdistance c, b7 b5 c= b6 cdistance c, b7 b6 c==> ! ! ! ! ! c==> c/\ cIN b3 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b3 b4 c/\ c= b5 cdistance c, b3 b5 c= b5 cdistance c, b3 b5 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= cdistance c, b5 b5 cdistance c, b5 b4 c= cdistance c, b5 b5 cdistance c, b5 b4 c/\ cIN b5 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b5 b4 c/\ c= b5 cdistance c, b5 b5 c= b5 cdistance c, b5 b5 cF f2
- (((c = a) /\ ((c = b) /\ (c = cc))) /\ ((~ (b = a)) \/ (~ (cc = a)))) |- (F = F)
T c==> c/\ c/\ c= f0 f1 c/\ c= f0 f2 c= f0 f3 c\/ c~ c= f2 f1 c~ c= f3 f1 c= cF cF
- |- ((((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))) ==> ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F)))))) ==> (((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F))))) ==> ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))) ==> ((!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p' , w)))))) ==> (p = p'))) ==> ((~ (?c. (!w. ((w IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) ==> (c = (distance (p , w))))))) ==> F)))))))
T c==> c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, f3 b0 c==> ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f4 cdistance c, b0 b1 c= f3 b0 c==> c~ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= b0 cdistance c, f3 b1 cF
- |- ((!vc'. (((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc' INSERT EMPTY)))))) \/ ((~ (c = (distance (p , va)))) \/ ((~ (c = (distance (p , vb)))) \/ (~ (c = (distance (p , vc'))))))) \/ (!p'. ((((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) \/ ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc)))))))) /\ (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ ((distance (p' , vb)) = (distance (p' , va)))) \/ (~ ((distance (p' , vc)) = (distance (p' , va)))))) \/ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))))))) = ((!vc. ((~ (p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p , va)))) \/ ((~ (c = (distance (p , vb)))) \/ (~ (c = (distance (p , vc)))))))) \/ (!p'. ((((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) \/ ((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc)))))))) /\ (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ ((distance (p' , vb)) = (distance (p' , va)))) \/ (~ ((distance (p' , vc)) = (distance (p' , va)))))) \/ ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))
T c= ! c\/ c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= f3 cdistance c, f0 f1 c\/ c~ c= f3 cdistance c, f0 f2 c~ c= f3 cdistance c, f0 b0 ! c/\ c\/ c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c= cdistance c, b1 f2 cdistance c, b1 f1 c= cdistance c, b1 f4 cdistance c, b1 f1 c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ c= f3 cdistance c, b1 f1 c\/ c~ c= f3 cdistance c, b1 f2 c~ c= f3 cdistance c, b1 f4 c\/ c\/ c~ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ c= cdistance c, b1 f2 cdistance c, b1 f1 c~ c= cdistance c, b1 f4 cdistance c, b1 f1 c/\ cIN b1 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c= f3 cdistance c, b1 f1 c/\ c= f3 cdistance c, b1 f2 c= f3 cdistance c, b1 f4 c\/ ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= f3 cdistance c, f0 f1 c\/ c~ c= f3 cdistance c, f0 f2 c~ c= f3 cdistance c, f0 b0 ! c/\ c\/ c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c= cdistance c, b0 f2 cdistance c, b0 f1 c= cdistance c, b0 f4 cdistance c, b0 f1 c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ c= f3 cdistance c, b0 f1 c\/ c~ c= f3 cdistance c, b0 f2 c~ c= f3 cdistance c, b0 f4 c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ c= cdistance c, b0 f2 cdistance c, b0 f1 c~ c= cdistance c, b0 f4 cdistance c, b0 f1 c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c= f3 cdistance c, b0 f1 c/\ c= f3 cdistance c, b0 f2 c= f3 cdistance c, b0 f4
- ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F), (((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)) |- (((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) /\ ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F))
T c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c/\ c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF
- |- ((!va. (!vc. (!vb. (!c. ((~ (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))) ==> (p = p'))))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) ==> (p = p'))))) ==> ((!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) ==> (~ (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc))))))))))))))))))))) = T)
T c= ! ! ! ! c==> c~ c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c= b3 cdistance c, f0 b0 c/\ c= b3 cdistance c, f0 b2 c/\ c= b3 cdistance c, f0 b1 ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c= b3 cdistance c, b4 b0 c/\ c= b3 cdistance c, b4 b2 c= b3 cdistance c, b4 b1 c= f0 b4 ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c= cdistance c, b4 b2 cdistance c, b4 b0 c= cdistance c, b4 b1 cdistance c, b4 b0 c= f0 b4 c==> ! ! ! ! ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ c= b7 cdistance c, b4 b5 c/\ c= b7 cdistance c, b4 b6 c= b7 cdistance c, b4 b7 ! c= c/\ cIN b8 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ c= cdistance c, b8 b6 cdistance c, b8 b5 c= cdistance c, b8 b7 cdistance c, b8 b5 c/\ cIN b8 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ c= b7 cdistance c, b8 b5 c/\ c= b7 cdistance c, b8 b6 c= b7 cdistance c, b8 b7 c~ ! ! ! ! ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b4 b5 c/\ c= b5 cdistance c, b4 b5 c= b5 cdistance c, b4 b5 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= cdistance c, b5 b5 cdistance c, b5 b5 c= cdistance c, b5 b5 cdistance c, b5 b5 c/\ cIN b5 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c/\ c= b5 cdistance c, b5 b5 c/\ c= b5 cdistance c, b5 b5 c= b5 cdistance c, b5 b5 cT
- |- ((\b. ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F)) b)
T * / c==> c~ c= c? / c/\ c= b1 f0 c/\ c= b1 b0 c= b1 f1 c/\ c= b0 f0 c= f1 f0 cF f2
- |- (((!cc. (!b. ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F))) ==> ((\cc. (!b. ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F))) cc)) = ((\cc. (!b. ((~ ((?c. ((c = a) /\ ((c = b) /\ (c = cc)))) = ((b = a) /\ (cc = a)))) ==> F))) cc))
T c= c==> ! ! c==> c~ c= c? / c/\ c= b2 f0 c/\ c= b2 b1 c= b2 b0 c/\ c= b1 f0 c= b0 f0 cF * / ! c==> c~ c= c? / c/\ c= b2 f0 c/\ c= b2 b1 c= b2 b0 c/\ c= b1 f0 c= b0 f0 cF f1 * / ! c==> c~ c= c? / c/\ c= b2 f0 c/\ c= b2 b1 c= b2 b0 c/\ c= b1 f0 c= b0 f0 cF f1
- (_2160569 = _2160571) |- ((_2160570 = _2160572) ==> ((_2160569 , _2160570) = (_2160571 , _2160572)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w' p'))))))) \/ (p = p'))) |- ((((~ (_2160463 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((w' _2160463) IN (va INSERT (vb INSERT (vc INSERT EMPTY))))) \/ (p = _2160463)) /\ (((~ (_2160463 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (_2160463 , (w' _2160463)))))) \/ (p = _2160463)))
T c==> ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * f3 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 * f3 b0 c= f5 b0 c/\ c\/ c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN * f3 f6 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f5 f6 c\/ c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, f6 * f3 f6 c= f5 f6
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))) |- ((~ (_2160488 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160488 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160490)))) \/ ((~ (_2160491 = (distance (_2160488 , _2160492)))) \/ ((_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY))))) \/ ((~ (_2160493 IN ((hull affine) (_2160489 INSERT (_2160490 INSERT (_2160492 INSERT EMPTY)))))) \/ ((~ (_2160491 = (distance (_2160493 , _2160489)))) \/ ((~ (_2160491 = (distance (_2160493 , _2160490)))) \/ (~ (_2160491 = (distance (_2160493 , _2160492))))))))))))
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f0 f1 c\/ c~ c= f4 cdistance c, f0 f2 c\/ c~ c= f4 cdistance c, f0 f3 c\/ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, f5 f1 c\/ c~ c= f4 cdistance c, f5 f2 c~ c= f4 cdistance c, f5 f3
- |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) = ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c= c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- (!p. (!va. (!vb. (!c. (!vc. (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ (c = (distance (p , vc)))))) ==> (!p'. (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) = ((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p' , va))) /\ ((c = (distance (p' , vb))) /\ (c = (distance (p' , vc)))))))))))))), (((p IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((c = (distance (p , va))) /\ ((c = (distance (p , vb))) /\ ((c = (distance (p , vc))) /\ (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ ((~ (c = (distance (p' , va)))) \/ ((~ (c = (distance (p' , vb)))) \/ (~ (c = (distance (p' , vc))))))) \/ (p = p'))))))) /\ (((p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ (((distance (p' , vb)) = (distance (p' , va))) /\ ((distance (p' , vc)) = (distance (p' , va))))) /\ (~ (p = p')))) |- ((~ F) ==> F)
T c==> ! ! ! ! ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b0 b1 c/\ c= b3 cdistance c, b0 b2 c= b3 cdistance c, b0 b4 ! c= c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= cdistance c, b5 b2 cdistance c, b5 b1 c= cdistance c, b5 b4 cdistance c, b5 b1 c/\ cIN b5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ c= b3 cdistance c, b5 b1 c/\ c= b3 cdistance c, b5 b2 c= b3 cdistance c, b5 b4 c==> c/\ c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= f4 cdistance c, f0 f1 c/\ c= f4 cdistance c, f0 f2 c/\ c= f4 cdistance c, f0 f3 ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= f4 cdistance c, b0 f1 c\/ c~ c= f4 cdistance c, b0 f2 c~ c= f4 cdistance c, b0 f3 c= f0 b0 c/\ c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= cdistance c, f5 f2 cdistance c, f5 f1 c= cdistance c, f5 f3 cdistance c, f5 f1 c~ c= f0 f5 c==> c~ cF cF
- (!p'. (((~ (p' IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (((w' p') IN (va INSERT (vb INSERT (vc INSERT EMPTY)))) /\ (~ (c = (distance (p' , (w' p'))))))) \/ (p = p'))) |- (((~ (_2160463 IN ((hull affine) (va INSERT (vb INSERT (vc INSERT EMPTY)))))) \/ (~ (c = (distance (_2160463 , (w' _2160463)))))) \/ (p = _2160463))
T c==> ! c\/ c\/ c~ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN * f3 b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, b0 * f3 b0 c= f5 b0 c\/ c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f4 cdistance c, f6 * f3 f6 c= f5 f6
- ((!a. (((~ (a = x)) /\ ((~ (a = y)) /\ (~ (a = z)))) \/ (p a))) /\ ((~ (p x)) \/ ((~ (p y)) \/ (~ (p z))))) |- ((~ (p z)) ==> (p z))
T c==> c/\ ! c\/ c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2 * f3 b0 c\/ c~ * f3 f0 c\/ c~ * f3 f1 c~ * f3 f2 c==> c~ * f3 f2 * f3 f2
- |- ((?p'. ((P p') /\ Q)) = ((?p'. (P p')) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- |- ((((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)) = ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F))
T c= c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF
- |- (((((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)) ==> (((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F))) = (((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F) ==> ((~ ((a ==> (b ==> c)) = ((a /\ b) ==> c))) ==> F)))
T c= c==> c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF c==> c~ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 cF
- (_2160551 = _2160553) |- ((_2160552 = _2160554) ==> ((_2160553 IN _2160554) \/ (~ (_2160551 IN _2160552))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
